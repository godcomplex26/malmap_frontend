import {
  __commonJS,
  __require
} from "./chunk-NEAGQJHQ.js";

// browser-external:path
var require_path = __commonJS({
  "browser-external:path"(exports2, module2) {
    module2.exports = Object.create(new Proxy({}, {
      get(_, key) {
        if (key !== "__esModule" && key !== "__proto__" && key !== "constructor" && key !== "splice") {
          console.warn(`Module "path" has been externalized for browser compatibility. Cannot access "path.${key}" in client code. See https://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`);
        }
      }
    }));
  }
});

// browser-external:module
var require_module = __commonJS({
  "browser-external:module"(exports2, module2) {
    module2.exports = Object.create(new Proxy({}, {
      get(_, key) {
        if (key !== "__esModule" && key !== "__proto__" && key !== "constructor" && key !== "splice") {
          console.warn(`Module "module" has been externalized for browser compatibility. Cannot access "module.${key}" in client code. See https://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`);
        }
      }
    }));
  }
});

// ../../../node_modules/next/dist/server/require-hook.js
var require_require_hook = __commonJS({
  "../../../node_modules/next/dist/server/require-hook.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name2 in all)
        Object.defineProperty(target, name2, {
          enumerable: true,
          get: all[name2]
        });
    }
    _export(exports2, {
      hookPropertyMap: function() {
        return hookPropertyMap;
      },
      defaultOverrides: function() {
        return defaultOverrides;
      },
      addHookAliases: function() {
        return addHookAliases;
      }
    });
    var path2 = require_path();
    var mod = require_module();
    var originalRequire = mod.prototype.require;
    var resolveFilename = mod._resolveFilename;
    var resolve = process.env.NEXT_MINIMAL ? __non_webpack_require__.resolve : __require.resolve;
    var hookPropertyMap = /* @__PURE__ */ new Map();
    var defaultOverrides = {
      "styled-jsx": path2.dirname(resolve("styled-jsx/package.json")),
      "styled-jsx/style": resolve("styled-jsx/style"),
      "styled-jsx/style.js": resolve("styled-jsx/style")
    };
    var toResolveMap = (map) => Object.entries(map).map(([key, value]) => [
      key,
      resolve(value)
    ]);
    function addHookAliases(aliases = []) {
      for (const [key, value] of aliases) {
        hookPropertyMap.set(key, value);
      }
    }
    addHookAliases(toResolveMap(defaultOverrides));
    mod._resolveFilename = (function(originalResolveFilename, requestMap, request, parent, isMain, options) {
      const hookResolved = requestMap.get(request);
      if (hookResolved)
        request = hookResolved;
      return originalResolveFilename.call(mod, request, parent, isMain, options);
    }).bind(null, resolveFilename, hookPropertyMap);
    mod.prototype.require = function(request) {
      if (request.endsWith(".shared-runtime")) {
        return originalRequire.call(this, `next/dist/server/future/route-modules/pages/vendored/contexts/${path2.basename(request, ".shared-runtime")}`);
      }
      return originalRequire.call(this, request);
    };
  }
});

// browser-external:node:crypto
var require_node_crypto = __commonJS({
  "browser-external:node:crypto"(exports2, module2) {
    module2.exports = Object.create(new Proxy({}, {
      get(_, key) {
        if (key !== "__esModule" && key !== "__proto__" && key !== "constructor" && key !== "splice") {
          console.warn(`Module "node:crypto" has been externalized for browser compatibility. Cannot access "node:crypto.${key}" in client code. See https://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`);
        }
      }
    }));
  }
});

// ../../../node_modules/next/dist/server/node-polyfill-crypto.js
var require_node_polyfill_crypto = __commonJS({
  "../../../node_modules/next/dist/server/node-polyfill-crypto.js"() {
    "use strict";
    if (!global.crypto) {
      let webcrypto;
      Object.defineProperty(global, "crypto", {
        enumerable: false,
        configurable: true,
        get() {
          if (!webcrypto) {
            webcrypto = require_node_crypto().webcrypto;
          }
          return webcrypto;
        },
        set(value) {
          webcrypto = value;
        }
      });
    }
  }
});

// browser-external:async_hooks
var require_async_hooks = __commonJS({
  "browser-external:async_hooks"(exports2, module2) {
    module2.exports = Object.create(new Proxy({}, {
      get(_, key) {
        if (key !== "__esModule" && key !== "__proto__" && key !== "constructor" && key !== "splice") {
          console.warn(`Module "async_hooks" has been externalized for browser compatibility. Cannot access "async_hooks.${key}" in client code. See https://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`);
        }
      }
    }));
  }
});

// browser-external:crypto
var require_crypto = __commonJS({
  "browser-external:crypto"(exports2, module2) {
    module2.exports = Object.create(new Proxy({}, {
      get(_, key) {
        if (key !== "__esModule" && key !== "__proto__" && key !== "constructor" && key !== "splice") {
          console.warn(`Module "crypto" has been externalized for browser compatibility. Cannot access "crypto.${key}" in client code. See https://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`);
        }
      }
    }));
  }
});

// browser-external:events
var require_events = __commonJS({
  "browser-external:events"(exports2, module2) {
    module2.exports = Object.create(new Proxy({}, {
      get(_, key) {
        if (key !== "__esModule" && key !== "__proto__" && key !== "constructor" && key !== "splice") {
          console.warn(`Module "events" has been externalized for browser compatibility. Cannot access "events.${key}" in client code. See https://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`);
        }
      }
    }));
  }
});

// browser-external:http
var require_http = __commonJS({
  "browser-external:http"(exports2, module2) {
    module2.exports = Object.create(new Proxy({}, {
      get(_, key) {
        if (key !== "__esModule" && key !== "__proto__" && key !== "constructor" && key !== "splice") {
          console.warn(`Module "http" has been externalized for browser compatibility. Cannot access "http.${key}" in client code. See https://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`);
        }
      }
    }));
  }
});

// browser-external:https
var require_https = __commonJS({
  "browser-external:https"(exports2, module2) {
    module2.exports = Object.create(new Proxy({}, {
      get(_, key) {
        if (key !== "__esModule" && key !== "__proto__" && key !== "constructor" && key !== "splice") {
          console.warn(`Module "https" has been externalized for browser compatibility. Cannot access "https.${key}" in client code. See https://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`);
        }
      }
    }));
  }
});

// browser-external:net
var require_net = __commonJS({
  "browser-external:net"(exports2, module2) {
    module2.exports = Object.create(new Proxy({}, {
      get(_, key) {
        if (key !== "__esModule" && key !== "__proto__" && key !== "constructor" && key !== "splice") {
          console.warn(`Module "net" has been externalized for browser compatibility. Cannot access "net.${key}" in client code. See https://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`);
        }
      }
    }));
  }
});

// browser-external:stream
var require_stream = __commonJS({
  "browser-external:stream"(exports2, module2) {
    module2.exports = Object.create(new Proxy({}, {
      get(_, key) {
        if (key !== "__esModule" && key !== "__proto__" && key !== "constructor" && key !== "splice") {
          console.warn(`Module "stream" has been externalized for browser compatibility. Cannot access "stream.${key}" in client code. See https://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`);
        }
      }
    }));
  }
});

// browser-external:tls
var require_tls = __commonJS({
  "browser-external:tls"(exports2, module2) {
    module2.exports = Object.create(new Proxy({}, {
      get(_, key) {
        if (key !== "__esModule" && key !== "__proto__" && key !== "constructor" && key !== "splice") {
          console.warn(`Module "tls" has been externalized for browser compatibility. Cannot access "tls.${key}" in client code. See https://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`);
        }
      }
    }));
  }
});

// browser-external:url
var require_url = __commonJS({
  "browser-external:url"(exports2, module2) {
    module2.exports = Object.create(new Proxy({}, {
      get(_, key) {
        if (key !== "__esModule" && key !== "__proto__" && key !== "constructor" && key !== "splice") {
          console.warn(`Module "url" has been externalized for browser compatibility. Cannot access "url.${key}" in client code. See https://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`);
        }
      }
    }));
  }
});

// browser-external:zlib
var require_zlib = __commonJS({
  "browser-external:zlib"(exports2, module2) {
    module2.exports = Object.create(new Proxy({}, {
      get(_, key) {
        if (key !== "__esModule" && key !== "__proto__" && key !== "constructor" && key !== "splice") {
          console.warn(`Module "zlib" has been externalized for browser compatibility. Cannot access "zlib.${key}" in client code. See https://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`);
        }
      }
    }));
  }
});

// ../../../node_modules/next/dist/compiled/ws/index.js
var require_ws = __commonJS({
  "../../../node_modules/next/dist/compiled/ws/index.js"(exports, module) {
    (() => {
      var __webpack_modules__ = { 28: (e, t, s) => {
        "use strict";
        const r = s(335);
        r.createWebSocketStream = s(551);
        r.Server = s(597);
        r.Receiver = s(157);
        r.Sender = s(769);
        r.WebSocket = r;
        r.WebSocketServer = r.Server;
        e.exports = r;
      }, 214: (e, t, s) => {
        "use strict";
        const { EMPTY_BUFFER: r } = s(217);
        function concat(e2, t2) {
          if (e2.length === 0)
            return r;
          if (e2.length === 1)
            return e2[0];
          const s2 = Buffer.allocUnsafe(t2);
          let n = 0;
          for (let t3 = 0; t3 < e2.length; t3++) {
            const r2 = e2[t3];
            s2.set(r2, n);
            n += r2.length;
          }
          if (n < t2)
            return s2.slice(0, n);
          return s2;
        }
        function _mask(e2, t2, s2, r2, n) {
          for (let i = 0; i < n; i++) {
            s2[r2 + i] = e2[i] ^ t2[i & 3];
          }
        }
        function _unmask(e2, t2) {
          for (let s2 = 0; s2 < e2.length; s2++) {
            e2[s2] ^= t2[s2 & 3];
          }
        }
        function toArrayBuffer(e2) {
          if (e2.byteLength === e2.buffer.byteLength) {
            return e2.buffer;
          }
          return e2.buffer.slice(e2.byteOffset, e2.byteOffset + e2.byteLength);
        }
        function toBuffer(e2) {
          toBuffer.readOnly = true;
          if (Buffer.isBuffer(e2))
            return e2;
          let t2;
          if (e2 instanceof ArrayBuffer) {
            t2 = Buffer.from(e2);
          } else if (ArrayBuffer.isView(e2)) {
            t2 = Buffer.from(e2.buffer, e2.byteOffset, e2.byteLength);
          } else {
            t2 = Buffer.from(e2);
            toBuffer.readOnly = false;
          }
          return t2;
        }
        try {
          const t2 = s(605);
          e.exports = { concat, mask(e2, s2, r2, n, i) {
            if (i < 48)
              _mask(e2, s2, r2, n, i);
            else
              t2.mask(e2, s2, r2, n, i);
          }, toArrayBuffer, toBuffer, unmask(e2, s2) {
            if (e2.length < 32)
              _unmask(e2, s2);
            else
              t2.unmask(e2, s2);
          } };
        } catch (t2) {
          e.exports = { concat, mask: _mask, toArrayBuffer, toBuffer, unmask: _unmask };
        }
      }, 217: (e) => {
        "use strict";
        e.exports = { BINARY_TYPES: ["nodebuffer", "arraybuffer", "fragments"], EMPTY_BUFFER: Buffer.alloc(0), GUID: "258EAFA5-E914-47DA-95CA-C5AB0DC85B11", kForOnEventAttribute: Symbol("kIsForOnEventAttribute"), kListener: Symbol("kListener"), kStatusCode: Symbol("status-code"), kWebSocket: Symbol("websocket"), NOOP: () => {
        } };
      }, 874: (e, t, s) => {
        "use strict";
        const { kForOnEventAttribute: r, kListener: n } = s(217);
        const i = Symbol("kCode");
        const o = Symbol("kData");
        const a = Symbol("kError");
        const c = Symbol("kMessage");
        const l = Symbol("kReason");
        const f = Symbol("kTarget");
        const h = Symbol("kType");
        const d = Symbol("kWasClean");
        class Event2 {
          constructor(e2) {
            this[f] = null;
            this[h] = e2;
          }
          get target() {
            return this[f];
          }
          get type() {
            return this[h];
          }
        }
        Object.defineProperty(Event2.prototype, "target", { enumerable: true });
        Object.defineProperty(Event2.prototype, "type", { enumerable: true });
        class CloseEvent extends Event2 {
          constructor(e2, t2 = {}) {
            super(e2);
            this[i] = t2.code === void 0 ? 0 : t2.code;
            this[l] = t2.reason === void 0 ? "" : t2.reason;
            this[d] = t2.wasClean === void 0 ? false : t2.wasClean;
          }
          get code() {
            return this[i];
          }
          get reason() {
            return this[l];
          }
          get wasClean() {
            return this[d];
          }
        }
        Object.defineProperty(CloseEvent.prototype, "code", { enumerable: true });
        Object.defineProperty(CloseEvent.prototype, "reason", { enumerable: true });
        Object.defineProperty(CloseEvent.prototype, "wasClean", { enumerable: true });
        class ErrorEvent extends Event2 {
          constructor(e2, t2 = {}) {
            super(e2);
            this[a] = t2.error === void 0 ? null : t2.error;
            this[c] = t2.message === void 0 ? "" : t2.message;
          }
          get error() {
            return this[a];
          }
          get message() {
            return this[c];
          }
        }
        Object.defineProperty(ErrorEvent.prototype, "error", { enumerable: true });
        Object.defineProperty(ErrorEvent.prototype, "message", { enumerable: true });
        class MessageEvent extends Event2 {
          constructor(e2, t2 = {}) {
            super(e2);
            this[o] = t2.data === void 0 ? null : t2.data;
          }
          get data() {
            return this[o];
          }
        }
        Object.defineProperty(MessageEvent.prototype, "data", { enumerable: true });
        const u = { addEventListener(e2, t2, s2 = {}) {
          let i2;
          if (e2 === "message") {
            i2 = function onMessage(e3, s3) {
              const r2 = new MessageEvent("message", { data: s3 ? e3 : e3.toString() });
              r2[f] = this;
              t2.call(this, r2);
            };
          } else if (e2 === "close") {
            i2 = function onClose(e3, s3) {
              const r2 = new CloseEvent("close", { code: e3, reason: s3.toString(), wasClean: this._closeFrameReceived && this._closeFrameSent });
              r2[f] = this;
              t2.call(this, r2);
            };
          } else if (e2 === "error") {
            i2 = function onError(e3) {
              const s3 = new ErrorEvent("error", { error: e3, message: e3.message });
              s3[f] = this;
              t2.call(this, s3);
            };
          } else if (e2 === "open") {
            i2 = function onOpen() {
              const e3 = new Event2("open");
              e3[f] = this;
              t2.call(this, e3);
            };
          } else {
            return;
          }
          i2[r] = !!s2[r];
          i2[n] = t2;
          if (s2.once) {
            this.once(e2, i2);
          } else {
            this.on(e2, i2);
          }
        }, removeEventListener(e2, t2) {
          for (const s2 of this.listeners(e2)) {
            if (s2[n] === t2 && !s2[r]) {
              this.removeListener(e2, s2);
              break;
            }
          }
        } };
        e.exports = { CloseEvent, ErrorEvent, Event: Event2, EventTarget: u, MessageEvent };
      }, 725: (e, t, s) => {
        "use strict";
        const { tokenChars: r } = s(848);
        function push(e2, t2, s2) {
          if (e2[t2] === void 0)
            e2[t2] = [s2];
          else
            e2[t2].push(s2);
        }
        function parse(e2) {
          const t2 = /* @__PURE__ */ Object.create(null);
          let s2 = /* @__PURE__ */ Object.create(null);
          let n = false;
          let i = false;
          let o = false;
          let a;
          let c;
          let l = -1;
          let f = -1;
          let h = -1;
          let d = 0;
          for (; d < e2.length; d++) {
            f = e2.charCodeAt(d);
            if (a === void 0) {
              if (h === -1 && r[f] === 1) {
                if (l === -1)
                  l = d;
              } else if (d !== 0 && (f === 32 || f === 9)) {
                if (h === -1 && l !== -1)
                  h = d;
              } else if (f === 59 || f === 44) {
                if (l === -1) {
                  throw new SyntaxError(`Unexpected character at index ${d}`);
                }
                if (h === -1)
                  h = d;
                const r2 = e2.slice(l, h);
                if (f === 44) {
                  push(t2, r2, s2);
                  s2 = /* @__PURE__ */ Object.create(null);
                } else {
                  a = r2;
                }
                l = h = -1;
              } else {
                throw new SyntaxError(`Unexpected character at index ${d}`);
              }
            } else if (c === void 0) {
              if (h === -1 && r[f] === 1) {
                if (l === -1)
                  l = d;
              } else if (f === 32 || f === 9) {
                if (h === -1 && l !== -1)
                  h = d;
              } else if (f === 59 || f === 44) {
                if (l === -1) {
                  throw new SyntaxError(`Unexpected character at index ${d}`);
                }
                if (h === -1)
                  h = d;
                push(s2, e2.slice(l, h), true);
                if (f === 44) {
                  push(t2, a, s2);
                  s2 = /* @__PURE__ */ Object.create(null);
                  a = void 0;
                }
                l = h = -1;
              } else if (f === 61 && l !== -1 && h === -1) {
                c = e2.slice(l, d);
                l = h = -1;
              } else {
                throw new SyntaxError(`Unexpected character at index ${d}`);
              }
            } else {
              if (i) {
                if (r[f] !== 1) {
                  throw new SyntaxError(`Unexpected character at index ${d}`);
                }
                if (l === -1)
                  l = d;
                else if (!n)
                  n = true;
                i = false;
              } else if (o) {
                if (r[f] === 1) {
                  if (l === -1)
                    l = d;
                } else if (f === 34 && l !== -1) {
                  o = false;
                  h = d;
                } else if (f === 92) {
                  i = true;
                } else {
                  throw new SyntaxError(`Unexpected character at index ${d}`);
                }
              } else if (f === 34 && e2.charCodeAt(d - 1) === 61) {
                o = true;
              } else if (h === -1 && r[f] === 1) {
                if (l === -1)
                  l = d;
              } else if (l !== -1 && (f === 32 || f === 9)) {
                if (h === -1)
                  h = d;
              } else if (f === 59 || f === 44) {
                if (l === -1) {
                  throw new SyntaxError(`Unexpected character at index ${d}`);
                }
                if (h === -1)
                  h = d;
                let r2 = e2.slice(l, h);
                if (n) {
                  r2 = r2.replace(/\\/g, "");
                  n = false;
                }
                push(s2, c, r2);
                if (f === 44) {
                  push(t2, a, s2);
                  s2 = /* @__PURE__ */ Object.create(null);
                  a = void 0;
                }
                c = void 0;
                l = h = -1;
              } else {
                throw new SyntaxError(`Unexpected character at index ${d}`);
              }
            }
          }
          if (l === -1 || o || f === 32 || f === 9) {
            throw new SyntaxError("Unexpected end of input");
          }
          if (h === -1)
            h = d;
          const u = e2.slice(l, h);
          if (a === void 0) {
            push(t2, u, s2);
          } else {
            if (c === void 0) {
              push(s2, u, true);
            } else if (n) {
              push(s2, c, u.replace(/\\/g, ""));
            } else {
              push(s2, c, u);
            }
            push(t2, a, s2);
          }
          return t2;
        }
        function format(e2) {
          return Object.keys(e2).map((t2) => {
            let s2 = e2[t2];
            if (!Array.isArray(s2))
              s2 = [s2];
            return s2.map((e3) => [t2].concat(Object.keys(e3).map((t3) => {
              let s3 = e3[t3];
              if (!Array.isArray(s3))
                s3 = [s3];
              return s3.map((e4) => e4 === true ? t3 : `${t3}=${e4}`).join("; ");
            })).join("; ")).join(", ");
          }).join(", ");
        }
        e.exports = { format, parse };
      }, 462: (e) => {
        "use strict";
        const t = Symbol("kDone");
        const s = Symbol("kRun");
        class Limiter {
          constructor(e2) {
            this[t] = () => {
              this.pending--;
              this[s]();
            };
            this.concurrency = e2 || Infinity;
            this.jobs = [];
            this.pending = 0;
          }
          add(e2) {
            this.jobs.push(e2);
            this[s]();
          }
          [s]() {
            if (this.pending === this.concurrency)
              return;
            if (this.jobs.length) {
              const e2 = this.jobs.shift();
              this.pending++;
              e2(this[t]);
            }
          }
        }
        e.exports = Limiter;
      }, 290: (e, t, s) => {
        "use strict";
        const r = s(796);
        const n = s(214);
        const i = s(462);
        const { kStatusCode: o } = s(217);
        const a = Buffer.from([0, 0, 255, 255]);
        const c = Symbol("permessage-deflate");
        const l = Symbol("total-length");
        const f = Symbol("callback");
        const h = Symbol("buffers");
        const d = Symbol("error");
        let u;
        class PerMessageDeflate {
          constructor(e2, t2, s2) {
            this._maxPayload = s2 | 0;
            this._options = e2 || {};
            this._threshold = this._options.threshold !== void 0 ? this._options.threshold : 1024;
            this._isServer = !!t2;
            this._deflate = null;
            this._inflate = null;
            this.params = null;
            if (!u) {
              const e3 = this._options.concurrencyLimit !== void 0 ? this._options.concurrencyLimit : 10;
              u = new i(e3);
            }
          }
          static get extensionName() {
            return "permessage-deflate";
          }
          offer() {
            const e2 = {};
            if (this._options.serverNoContextTakeover) {
              e2.server_no_context_takeover = true;
            }
            if (this._options.clientNoContextTakeover) {
              e2.client_no_context_takeover = true;
            }
            if (this._options.serverMaxWindowBits) {
              e2.server_max_window_bits = this._options.serverMaxWindowBits;
            }
            if (this._options.clientMaxWindowBits) {
              e2.client_max_window_bits = this._options.clientMaxWindowBits;
            } else if (this._options.clientMaxWindowBits == null) {
              e2.client_max_window_bits = true;
            }
            return e2;
          }
          accept(e2) {
            e2 = this.normalizeParams(e2);
            this.params = this._isServer ? this.acceptAsServer(e2) : this.acceptAsClient(e2);
            return this.params;
          }
          cleanup() {
            if (this._inflate) {
              this._inflate.close();
              this._inflate = null;
            }
            if (this._deflate) {
              const e2 = this._deflate[f];
              this._deflate.close();
              this._deflate = null;
              if (e2) {
                e2(new Error("The deflate stream was closed while data was being processed"));
              }
            }
          }
          acceptAsServer(e2) {
            const t2 = this._options;
            const s2 = e2.find((e3) => {
              if (t2.serverNoContextTakeover === false && e3.server_no_context_takeover || e3.server_max_window_bits && (t2.serverMaxWindowBits === false || typeof t2.serverMaxWindowBits === "number" && t2.serverMaxWindowBits > e3.server_max_window_bits) || typeof t2.clientMaxWindowBits === "number" && !e3.client_max_window_bits) {
                return false;
              }
              return true;
            });
            if (!s2) {
              throw new Error("None of the extension offers can be accepted");
            }
            if (t2.serverNoContextTakeover) {
              s2.server_no_context_takeover = true;
            }
            if (t2.clientNoContextTakeover) {
              s2.client_no_context_takeover = true;
            }
            if (typeof t2.serverMaxWindowBits === "number") {
              s2.server_max_window_bits = t2.serverMaxWindowBits;
            }
            if (typeof t2.clientMaxWindowBits === "number") {
              s2.client_max_window_bits = t2.clientMaxWindowBits;
            } else if (s2.client_max_window_bits === true || t2.clientMaxWindowBits === false) {
              delete s2.client_max_window_bits;
            }
            return s2;
          }
          acceptAsClient(e2) {
            const t2 = e2[0];
            if (this._options.clientNoContextTakeover === false && t2.client_no_context_takeover) {
              throw new Error('Unexpected parameter "client_no_context_takeover"');
            }
            if (!t2.client_max_window_bits) {
              if (typeof this._options.clientMaxWindowBits === "number") {
                t2.client_max_window_bits = this._options.clientMaxWindowBits;
              }
            } else if (this._options.clientMaxWindowBits === false || typeof this._options.clientMaxWindowBits === "number" && t2.client_max_window_bits > this._options.clientMaxWindowBits) {
              throw new Error('Unexpected or invalid parameter "client_max_window_bits"');
            }
            return t2;
          }
          normalizeParams(e2) {
            e2.forEach((e3) => {
              Object.keys(e3).forEach((t2) => {
                let s2 = e3[t2];
                if (s2.length > 1) {
                  throw new Error(`Parameter "${t2}" must have only a single value`);
                }
                s2 = s2[0];
                if (t2 === "client_max_window_bits") {
                  if (s2 !== true) {
                    const e4 = +s2;
                    if (!Number.isInteger(e4) || e4 < 8 || e4 > 15) {
                      throw new TypeError(`Invalid value for parameter "${t2}": ${s2}`);
                    }
                    s2 = e4;
                  } else if (!this._isServer) {
                    throw new TypeError(`Invalid value for parameter "${t2}": ${s2}`);
                  }
                } else if (t2 === "server_max_window_bits") {
                  const e4 = +s2;
                  if (!Number.isInteger(e4) || e4 < 8 || e4 > 15) {
                    throw new TypeError(`Invalid value for parameter "${t2}": ${s2}`);
                  }
                  s2 = e4;
                } else if (t2 === "client_no_context_takeover" || t2 === "server_no_context_takeover") {
                  if (s2 !== true) {
                    throw new TypeError(`Invalid value for parameter "${t2}": ${s2}`);
                  }
                } else {
                  throw new Error(`Unknown parameter "${t2}"`);
                }
                e3[t2] = s2;
              });
            });
            return e2;
          }
          decompress(e2, t2, s2) {
            u.add((r2) => {
              this._decompress(e2, t2, (e3, t3) => {
                r2();
                s2(e3, t3);
              });
            });
          }
          compress(e2, t2, s2) {
            u.add((r2) => {
              this._compress(e2, t2, (e3, t3) => {
                r2();
                s2(e3, t3);
              });
            });
          }
          _decompress(e2, t2, s2) {
            const i2 = this._isServer ? "client" : "server";
            if (!this._inflate) {
              const e3 = `${i2}_max_window_bits`;
              const t3 = typeof this.params[e3] !== "number" ? r.Z_DEFAULT_WINDOWBITS : this.params[e3];
              this._inflate = r.createInflateRaw({ ...this._options.zlibInflateOptions, windowBits: t3 });
              this._inflate[c] = this;
              this._inflate[l] = 0;
              this._inflate[h] = [];
              this._inflate.on("error", inflateOnError);
              this._inflate.on("data", inflateOnData);
            }
            this._inflate[f] = s2;
            this._inflate.write(e2);
            if (t2)
              this._inflate.write(a);
            this._inflate.flush(() => {
              const e3 = this._inflate[d];
              if (e3) {
                this._inflate.close();
                this._inflate = null;
                s2(e3);
                return;
              }
              const r2 = n.concat(this._inflate[h], this._inflate[l]);
              if (this._inflate._readableState.endEmitted) {
                this._inflate.close();
                this._inflate = null;
              } else {
                this._inflate[l] = 0;
                this._inflate[h] = [];
                if (t2 && this.params[`${i2}_no_context_takeover`]) {
                  this._inflate.reset();
                }
              }
              s2(null, r2);
            });
          }
          _compress(e2, t2, s2) {
            const i2 = this._isServer ? "server" : "client";
            if (!this._deflate) {
              const e3 = `${i2}_max_window_bits`;
              const t3 = typeof this.params[e3] !== "number" ? r.Z_DEFAULT_WINDOWBITS : this.params[e3];
              this._deflate = r.createDeflateRaw({ ...this._options.zlibDeflateOptions, windowBits: t3 });
              this._deflate[l] = 0;
              this._deflate[h] = [];
              this._deflate.on("data", deflateOnData);
            }
            this._deflate[f] = s2;
            this._deflate.write(e2);
            this._deflate.flush(r.Z_SYNC_FLUSH, () => {
              if (!this._deflate) {
                return;
              }
              let e3 = n.concat(this._deflate[h], this._deflate[l]);
              if (t2)
                e3 = e3.slice(0, e3.length - 4);
              this._deflate[f] = null;
              this._deflate[l] = 0;
              this._deflate[h] = [];
              if (t2 && this.params[`${i2}_no_context_takeover`]) {
                this._deflate.reset();
              }
              s2(null, e3);
            });
          }
        }
        e.exports = PerMessageDeflate;
        function deflateOnData(e2) {
          this[h].push(e2);
          this[l] += e2.length;
        }
        function inflateOnData(e2) {
          this[l] += e2.length;
          if (this[c]._maxPayload < 1 || this[l] <= this[c]._maxPayload) {
            this[h].push(e2);
            return;
          }
          this[d] = new RangeError("Max payload size exceeded");
          this[d].code = "WS_ERR_UNSUPPORTED_MESSAGE_LENGTH";
          this[d][o] = 1009;
          this.removeListener("data", inflateOnData);
          this.reset();
        }
        function inflateOnError(e2) {
          this[c]._inflate = null;
          e2[o] = 1007;
          this[f](e2);
        }
      }, 157: (e, t, s) => {
        "use strict";
        const { Writable: r } = s(781);
        const n = s(290);
        const { BINARY_TYPES: i, EMPTY_BUFFER: o, kStatusCode: a, kWebSocket: c } = s(217);
        const { concat: l, toArrayBuffer: f, unmask: h } = s(214);
        const { isValidStatusCode: d, isValidUTF8: u } = s(848);
        const _ = 0;
        const p = 1;
        const m = 2;
        const b = 3;
        const y = 4;
        const S = 5;
        class Receiver extends r {
          constructor(e2 = {}) {
            super();
            this._binaryType = e2.binaryType || i[0];
            this._extensions = e2.extensions || {};
            this._isServer = !!e2.isServer;
            this._maxPayload = e2.maxPayload | 0;
            this._skipUTF8Validation = !!e2.skipUTF8Validation;
            this[c] = void 0;
            this._bufferedBytes = 0;
            this._buffers = [];
            this._compressed = false;
            this._payloadLength = 0;
            this._mask = void 0;
            this._fragmented = 0;
            this._masked = false;
            this._fin = false;
            this._opcode = 0;
            this._totalPayloadLength = 0;
            this._messageLength = 0;
            this._fragments = [];
            this._state = _;
            this._loop = false;
          }
          _write(e2, t2, s2) {
            if (this._opcode === 8 && this._state == _)
              return s2();
            this._bufferedBytes += e2.length;
            this._buffers.push(e2);
            this.startLoop(s2);
          }
          consume(e2) {
            this._bufferedBytes -= e2;
            if (e2 === this._buffers[0].length)
              return this._buffers.shift();
            if (e2 < this._buffers[0].length) {
              const t3 = this._buffers[0];
              this._buffers[0] = t3.slice(e2);
              return t3.slice(0, e2);
            }
            const t2 = Buffer.allocUnsafe(e2);
            do {
              const s2 = this._buffers[0];
              const r2 = t2.length - e2;
              if (e2 >= s2.length) {
                t2.set(this._buffers.shift(), r2);
              } else {
                t2.set(new Uint8Array(s2.buffer, s2.byteOffset, e2), r2);
                this._buffers[0] = s2.slice(e2);
              }
              e2 -= s2.length;
            } while (e2 > 0);
            return t2;
          }
          startLoop(e2) {
            let t2;
            this._loop = true;
            do {
              switch (this._state) {
                case _:
                  t2 = this.getInfo();
                  break;
                case p:
                  t2 = this.getPayloadLength16();
                  break;
                case m:
                  t2 = this.getPayloadLength64();
                  break;
                case b:
                  this.getMask();
                  break;
                case y:
                  t2 = this.getData(e2);
                  break;
                default:
                  this._loop = false;
                  return;
              }
            } while (this._loop);
            e2(t2);
          }
          getInfo() {
            if (this._bufferedBytes < 2) {
              this._loop = false;
              return;
            }
            const e2 = this.consume(2);
            if ((e2[0] & 48) !== 0) {
              this._loop = false;
              return error(RangeError, "RSV2 and RSV3 must be clear", true, 1002, "WS_ERR_UNEXPECTED_RSV_2_3");
            }
            const t2 = (e2[0] & 64) === 64;
            if (t2 && !this._extensions[n.extensionName]) {
              this._loop = false;
              return error(RangeError, "RSV1 must be clear", true, 1002, "WS_ERR_UNEXPECTED_RSV_1");
            }
            this._fin = (e2[0] & 128) === 128;
            this._opcode = e2[0] & 15;
            this._payloadLength = e2[1] & 127;
            if (this._opcode === 0) {
              if (t2) {
                this._loop = false;
                return error(RangeError, "RSV1 must be clear", true, 1002, "WS_ERR_UNEXPECTED_RSV_1");
              }
              if (!this._fragmented) {
                this._loop = false;
                return error(RangeError, "invalid opcode 0", true, 1002, "WS_ERR_INVALID_OPCODE");
              }
              this._opcode = this._fragmented;
            } else if (this._opcode === 1 || this._opcode === 2) {
              if (this._fragmented) {
                this._loop = false;
                return error(RangeError, `invalid opcode ${this._opcode}`, true, 1002, "WS_ERR_INVALID_OPCODE");
              }
              this._compressed = t2;
            } else if (this._opcode > 7 && this._opcode < 11) {
              if (!this._fin) {
                this._loop = false;
                return error(RangeError, "FIN must be set", true, 1002, "WS_ERR_EXPECTED_FIN");
              }
              if (t2) {
                this._loop = false;
                return error(RangeError, "RSV1 must be clear", true, 1002, "WS_ERR_UNEXPECTED_RSV_1");
              }
              if (this._payloadLength > 125) {
                this._loop = false;
                return error(RangeError, `invalid payload length ${this._payloadLength}`, true, 1002, "WS_ERR_INVALID_CONTROL_PAYLOAD_LENGTH");
              }
            } else {
              this._loop = false;
              return error(RangeError, `invalid opcode ${this._opcode}`, true, 1002, "WS_ERR_INVALID_OPCODE");
            }
            if (!this._fin && !this._fragmented)
              this._fragmented = this._opcode;
            this._masked = (e2[1] & 128) === 128;
            if (this._isServer) {
              if (!this._masked) {
                this._loop = false;
                return error(RangeError, "MASK must be set", true, 1002, "WS_ERR_EXPECTED_MASK");
              }
            } else if (this._masked) {
              this._loop = false;
              return error(RangeError, "MASK must be clear", true, 1002, "WS_ERR_UNEXPECTED_MASK");
            }
            if (this._payloadLength === 126)
              this._state = p;
            else if (this._payloadLength === 127)
              this._state = m;
            else
              return this.haveLength();
          }
          getPayloadLength16() {
            if (this._bufferedBytes < 2) {
              this._loop = false;
              return;
            }
            this._payloadLength = this.consume(2).readUInt16BE(0);
            return this.haveLength();
          }
          getPayloadLength64() {
            if (this._bufferedBytes < 8) {
              this._loop = false;
              return;
            }
            const e2 = this.consume(8);
            const t2 = e2.readUInt32BE(0);
            if (t2 > Math.pow(2, 53 - 32) - 1) {
              this._loop = false;
              return error(RangeError, "Unsupported WebSocket frame: payload length > 2^53 - 1", false, 1009, "WS_ERR_UNSUPPORTED_DATA_PAYLOAD_LENGTH");
            }
            this._payloadLength = t2 * Math.pow(2, 32) + e2.readUInt32BE(4);
            return this.haveLength();
          }
          haveLength() {
            if (this._payloadLength && this._opcode < 8) {
              this._totalPayloadLength += this._payloadLength;
              if (this._totalPayloadLength > this._maxPayload && this._maxPayload > 0) {
                this._loop = false;
                return error(RangeError, "Max payload size exceeded", false, 1009, "WS_ERR_UNSUPPORTED_MESSAGE_LENGTH");
              }
            }
            if (this._masked)
              this._state = b;
            else
              this._state = y;
          }
          getMask() {
            if (this._bufferedBytes < 4) {
              this._loop = false;
              return;
            }
            this._mask = this.consume(4);
            this._state = y;
          }
          getData(e2) {
            let t2 = o;
            if (this._payloadLength) {
              if (this._bufferedBytes < this._payloadLength) {
                this._loop = false;
                return;
              }
              t2 = this.consume(this._payloadLength);
              if (this._masked)
                h(t2, this._mask);
            }
            if (this._opcode > 7)
              return this.controlMessage(t2);
            if (this._compressed) {
              this._state = S;
              this.decompress(t2, e2);
              return;
            }
            if (t2.length) {
              this._messageLength = this._totalPayloadLength;
              this._fragments.push(t2);
            }
            return this.dataMessage();
          }
          decompress(e2, t2) {
            const s2 = this._extensions[n.extensionName];
            s2.decompress(e2, this._fin, (e3, s3) => {
              if (e3)
                return t2(e3);
              if (s3.length) {
                this._messageLength += s3.length;
                if (this._messageLength > this._maxPayload && this._maxPayload > 0) {
                  return t2(error(RangeError, "Max payload size exceeded", false, 1009, "WS_ERR_UNSUPPORTED_MESSAGE_LENGTH"));
                }
                this._fragments.push(s3);
              }
              const r2 = this.dataMessage();
              if (r2)
                return t2(r2);
              this.startLoop(t2);
            });
          }
          dataMessage() {
            if (this._fin) {
              const e2 = this._messageLength;
              const t2 = this._fragments;
              this._totalPayloadLength = 0;
              this._messageLength = 0;
              this._fragmented = 0;
              this._fragments = [];
              if (this._opcode === 2) {
                let s2;
                if (this._binaryType === "nodebuffer") {
                  s2 = l(t2, e2);
                } else if (this._binaryType === "arraybuffer") {
                  s2 = f(l(t2, e2));
                } else {
                  s2 = t2;
                }
                this.emit("message", s2, true);
              } else {
                const s2 = l(t2, e2);
                if (!this._skipUTF8Validation && !u(s2)) {
                  this._loop = false;
                  return error(Error, "invalid UTF-8 sequence", true, 1007, "WS_ERR_INVALID_UTF8");
                }
                this.emit("message", s2, false);
              }
            }
            this._state = _;
          }
          controlMessage(e2) {
            if (this._opcode === 8) {
              this._loop = false;
              if (e2.length === 0) {
                this.emit("conclude", 1005, o);
                this.end();
              } else if (e2.length === 1) {
                return error(RangeError, "invalid payload length 1", true, 1002, "WS_ERR_INVALID_CONTROL_PAYLOAD_LENGTH");
              } else {
                const t2 = e2.readUInt16BE(0);
                if (!d(t2)) {
                  return error(RangeError, `invalid status code ${t2}`, true, 1002, "WS_ERR_INVALID_CLOSE_CODE");
                }
                const s2 = e2.slice(2);
                if (!this._skipUTF8Validation && !u(s2)) {
                  return error(Error, "invalid UTF-8 sequence", true, 1007, "WS_ERR_INVALID_UTF8");
                }
                this.emit("conclude", t2, s2);
                this.end();
              }
            } else if (this._opcode === 9) {
              this.emit("ping", e2);
            } else {
              this.emit("pong", e2);
            }
            this._state = _;
          }
        }
        e.exports = Receiver;
        function error(e2, t2, s2, r2, n2) {
          const i2 = new e2(s2 ? `Invalid WebSocket frame: ${t2}` : t2);
          Error.captureStackTrace(i2, error);
          i2.code = n2;
          i2[a] = r2;
          return i2;
        }
      }, 769: (e, t, s) => {
        "use strict";
        const r = s(808);
        const n = s(404);
        const { randomFillSync: i } = s(113);
        const o = s(290);
        const { EMPTY_BUFFER: a } = s(217);
        const { isValidStatusCode: c } = s(848);
        const { mask: l, toBuffer: f } = s(214);
        const h = Buffer.alloc(4);
        class Sender {
          constructor(e2, t2) {
            this._extensions = t2 || {};
            this._socket = e2;
            this._firstFragment = true;
            this._compress = false;
            this._bufferedBytes = 0;
            this._deflating = false;
            this._queue = [];
          }
          static frame(e2, t2) {
            const s2 = t2.mask && t2.readOnly;
            let r2 = t2.mask ? 6 : 2;
            let n2 = e2.length;
            if (e2.length >= 65536) {
              r2 += 8;
              n2 = 127;
            } else if (e2.length > 125) {
              r2 += 2;
              n2 = 126;
            }
            const o2 = Buffer.allocUnsafe(s2 ? e2.length + r2 : r2);
            o2[0] = t2.fin ? t2.opcode | 128 : t2.opcode;
            if (t2.rsv1)
              o2[0] |= 64;
            o2[1] = n2;
            if (n2 === 126) {
              o2.writeUInt16BE(e2.length, 2);
            } else if (n2 === 127) {
              o2.writeUInt32BE(0, 2);
              o2.writeUInt32BE(e2.length, 6);
            }
            if (!t2.mask)
              return [o2, e2];
            i(h, 0, 4);
            o2[1] |= 128;
            o2[r2 - 4] = h[0];
            o2[r2 - 3] = h[1];
            o2[r2 - 2] = h[2];
            o2[r2 - 1] = h[3];
            if (s2) {
              l(e2, h, o2, r2, e2.length);
              return [o2];
            }
            l(e2, h, e2, 0, e2.length);
            return [o2, e2];
          }
          close(e2, t2, s2, r2) {
            let n2;
            if (e2 === void 0) {
              n2 = a;
            } else if (typeof e2 !== "number" || !c(e2)) {
              throw new TypeError("First argument must be a valid error code number");
            } else if (t2 === void 0 || !t2.length) {
              n2 = Buffer.allocUnsafe(2);
              n2.writeUInt16BE(e2, 0);
            } else {
              const s3 = Buffer.byteLength(t2);
              if (s3 > 123) {
                throw new RangeError("The message must not be greater than 123 bytes");
              }
              n2 = Buffer.allocUnsafe(2 + s3);
              n2.writeUInt16BE(e2, 0);
              if (typeof t2 === "string") {
                n2.write(t2, 2);
              } else {
                n2.set(t2, 2);
              }
            }
            if (this._deflating) {
              this.enqueue([this.doClose, n2, s2, r2]);
            } else {
              this.doClose(n2, s2, r2);
            }
          }
          doClose(e2, t2, s2) {
            this.sendFrame(Sender.frame(e2, { fin: true, rsv1: false, opcode: 8, mask: t2, readOnly: false }), s2);
          }
          ping(e2, t2, s2) {
            const r2 = f(e2);
            if (r2.length > 125) {
              throw new RangeError("The data size must not be greater than 125 bytes");
            }
            if (this._deflating) {
              this.enqueue([this.doPing, r2, t2, f.readOnly, s2]);
            } else {
              this.doPing(r2, t2, f.readOnly, s2);
            }
          }
          doPing(e2, t2, s2, r2) {
            this.sendFrame(Sender.frame(e2, { fin: true, rsv1: false, opcode: 9, mask: t2, readOnly: s2 }), r2);
          }
          pong(e2, t2, s2) {
            const r2 = f(e2);
            if (r2.length > 125) {
              throw new RangeError("The data size must not be greater than 125 bytes");
            }
            if (this._deflating) {
              this.enqueue([this.doPong, r2, t2, f.readOnly, s2]);
            } else {
              this.doPong(r2, t2, f.readOnly, s2);
            }
          }
          doPong(e2, t2, s2, r2) {
            this.sendFrame(Sender.frame(e2, { fin: true, rsv1: false, opcode: 10, mask: t2, readOnly: s2 }), r2);
          }
          send(e2, t2, s2) {
            const r2 = f(e2);
            const n2 = this._extensions[o.extensionName];
            let i2 = t2.binary ? 2 : 1;
            let a2 = t2.compress;
            if (this._firstFragment) {
              this._firstFragment = false;
              if (a2 && n2 && n2.params[n2._isServer ? "server_no_context_takeover" : "client_no_context_takeover"]) {
                a2 = r2.length >= n2._threshold;
              }
              this._compress = a2;
            } else {
              a2 = false;
              i2 = 0;
            }
            if (t2.fin)
              this._firstFragment = true;
            if (n2) {
              const e3 = { fin: t2.fin, rsv1: a2, opcode: i2, mask: t2.mask, readOnly: f.readOnly };
              if (this._deflating) {
                this.enqueue([this.dispatch, r2, this._compress, e3, s2]);
              } else {
                this.dispatch(r2, this._compress, e3, s2);
              }
            } else {
              this.sendFrame(Sender.frame(r2, { fin: t2.fin, rsv1: false, opcode: i2, mask: t2.mask, readOnly: f.readOnly }), s2);
            }
          }
          dispatch(e2, t2, s2, r2) {
            if (!t2) {
              this.sendFrame(Sender.frame(e2, s2), r2);
              return;
            }
            const n2 = this._extensions[o.extensionName];
            this._bufferedBytes += e2.length;
            this._deflating = true;
            n2.compress(e2, s2.fin, (t3, n3) => {
              if (this._socket.destroyed) {
                const e3 = new Error("The socket was closed while data was being compressed");
                if (typeof r2 === "function")
                  r2(e3);
                for (let t4 = 0; t4 < this._queue.length; t4++) {
                  const s3 = this._queue[t4][4];
                  if (typeof s3 === "function")
                    s3(e3);
                }
                return;
              }
              this._bufferedBytes -= e2.length;
              this._deflating = false;
              s2.readOnly = false;
              this.sendFrame(Sender.frame(n3, s2), r2);
              this.dequeue();
            });
          }
          dequeue() {
            while (!this._deflating && this._queue.length) {
              const e2 = this._queue.shift();
              this._bufferedBytes -= e2[1].length;
              Reflect.apply(e2[0], this, e2.slice(1));
            }
          }
          enqueue(e2) {
            this._bufferedBytes += e2[1].length;
            this._queue.push(e2);
          }
          sendFrame(e2, t2) {
            if (e2.length === 2) {
              this._socket.cork();
              this._socket.write(e2[0]);
              this._socket.write(e2[1], t2);
              this._socket.uncork();
            } else {
              this._socket.write(e2[0], t2);
            }
          }
        }
        e.exports = Sender;
      }, 551: (e, t, s) => {
        "use strict";
        const { Duplex: r } = s(781);
        function emitClose(e2) {
          e2.emit("close");
        }
        function duplexOnEnd() {
          if (!this.destroyed && this._writableState.finished) {
            this.destroy();
          }
        }
        function duplexOnError(e2) {
          this.removeListener("error", duplexOnError);
          this.destroy();
          if (this.listenerCount("error") === 0) {
            this.emit("error", e2);
          }
        }
        function createWebSocketStream(e2, t2) {
          let s2 = true;
          let n = true;
          function receiverOnDrain() {
            if (s2)
              e2._socket.resume();
          }
          if (e2.readyState === e2.CONNECTING) {
            e2.once("open", function open() {
              e2._receiver.removeAllListeners("drain");
              e2._receiver.on("drain", receiverOnDrain);
            });
          } else {
            e2._receiver.removeAllListeners("drain");
            e2._receiver.on("drain", receiverOnDrain);
          }
          const i = new r({ ...t2, autoDestroy: false, emitClose: false, objectMode: false, writableObjectMode: false });
          e2.on("message", function message(t3, r2) {
            const n2 = !r2 && i._readableState.objectMode ? t3.toString() : t3;
            if (!i.push(n2)) {
              s2 = false;
              e2._socket.pause();
            }
          });
          e2.once("error", function error(e3) {
            if (i.destroyed)
              return;
            n = false;
            i.destroy(e3);
          });
          e2.once("close", function close() {
            if (i.destroyed)
              return;
            i.push(null);
          });
          i._destroy = function(t3, s3) {
            if (e2.readyState === e2.CLOSED) {
              s3(t3);
              process.nextTick(emitClose, i);
              return;
            }
            let r2 = false;
            e2.once("error", function error(e3) {
              r2 = true;
              s3(e3);
            });
            e2.once("close", function close() {
              if (!r2)
                s3(t3);
              process.nextTick(emitClose, i);
            });
            if (n)
              e2.terminate();
          };
          i._final = function(t3) {
            if (e2.readyState === e2.CONNECTING) {
              e2.once("open", function open() {
                i._final(t3);
              });
              return;
            }
            if (e2._socket === null)
              return;
            if (e2._socket._writableState.finished) {
              t3();
              if (i._readableState.endEmitted)
                i.destroy();
            } else {
              e2._socket.once("finish", function finish() {
                t3();
              });
              e2.close();
            }
          };
          i._read = function() {
            if (e2.readyState === e2.OPEN && !s2) {
              s2 = true;
              if (!e2._receiver._writableState.needDrain)
                e2._socket.resume();
            }
          };
          i._write = function(t3, s3, r2) {
            if (e2.readyState === e2.CONNECTING) {
              e2.once("open", function open() {
                i._write(t3, s3, r2);
              });
              return;
            }
            e2.send(t3, r2);
          };
          i.on("end", duplexOnEnd);
          i.on("error", duplexOnError);
          return i;
        }
        e.exports = createWebSocketStream;
      }, 955: (e, t, s) => {
        "use strict";
        const { tokenChars: r } = s(848);
        function parse(e2) {
          const t2 = /* @__PURE__ */ new Set();
          let s2 = -1;
          let n = -1;
          let i = 0;
          for (i; i < e2.length; i++) {
            const o2 = e2.charCodeAt(i);
            if (n === -1 && r[o2] === 1) {
              if (s2 === -1)
                s2 = i;
            } else if (i !== 0 && (o2 === 32 || o2 === 9)) {
              if (n === -1 && s2 !== -1)
                n = i;
            } else if (o2 === 44) {
              if (s2 === -1) {
                throw new SyntaxError(`Unexpected character at index ${i}`);
              }
              if (n === -1)
                n = i;
              const r2 = e2.slice(s2, n);
              if (t2.has(r2)) {
                throw new SyntaxError(`The "${r2}" subprotocol is duplicated`);
              }
              t2.add(r2);
              s2 = n = -1;
            } else {
              throw new SyntaxError(`Unexpected character at index ${i}`);
            }
          }
          if (s2 === -1 || n !== -1) {
            throw new SyntaxError("Unexpected end of input");
          }
          const o = e2.slice(s2, i);
          if (t2.has(o)) {
            throw new SyntaxError(`The "${o}" subprotocol is duplicated`);
          }
          t2.add(o);
          return t2;
        }
        e.exports = { parse };
      }, 848: (e, t, s) => {
        "use strict";
        const r = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0];
        function isValidStatusCode(e2) {
          return e2 >= 1e3 && e2 <= 1014 && e2 !== 1004 && e2 !== 1005 && e2 !== 1006 || e2 >= 3e3 && e2 <= 4999;
        }
        function _isValidUTF8(e2) {
          const t2 = e2.length;
          let s2 = 0;
          while (s2 < t2) {
            if ((e2[s2] & 128) === 0) {
              s2++;
            } else if ((e2[s2] & 224) === 192) {
              if (s2 + 1 === t2 || (e2[s2 + 1] & 192) !== 128 || (e2[s2] & 254) === 192) {
                return false;
              }
              s2 += 2;
            } else if ((e2[s2] & 240) === 224) {
              if (s2 + 2 >= t2 || (e2[s2 + 1] & 192) !== 128 || (e2[s2 + 2] & 192) !== 128 || e2[s2] === 224 && (e2[s2 + 1] & 224) === 128 || e2[s2] === 237 && (e2[s2 + 1] & 224) === 160) {
                return false;
              }
              s2 += 3;
            } else if ((e2[s2] & 248) === 240) {
              if (s2 + 3 >= t2 || (e2[s2 + 1] & 192) !== 128 || (e2[s2 + 2] & 192) !== 128 || (e2[s2 + 3] & 192) !== 128 || e2[s2] === 240 && (e2[s2 + 1] & 240) === 128 || e2[s2] === 244 && e2[s2 + 1] > 143 || e2[s2] > 244) {
                return false;
              }
              s2 += 4;
            } else {
              return false;
            }
          }
          return true;
        }
        try {
          const t2 = s(12);
          e.exports = { isValidStatusCode, isValidUTF8(e2) {
            return e2.length < 150 ? _isValidUTF8(e2) : t2(e2);
          }, tokenChars: r };
        } catch (t2) {
          e.exports = { isValidStatusCode, isValidUTF8: _isValidUTF8, tokenChars: r };
        }
      }, 597: (e, t, s) => {
        "use strict";
        const r = s(361);
        const n = s(685);
        const i = s(687);
        const o = s(808);
        const a = s(404);
        const { createHash: c } = s(113);
        const l = s(725);
        const f = s(290);
        const h = s(955);
        const d = s(335);
        const { GUID: u, kWebSocket: _ } = s(217);
        const p = /^[+/0-9A-Za-z]{22}==$/;
        const m = 0;
        const b = 1;
        const y = 2;
        class WebSocketServer extends r {
          constructor(e2, t2) {
            super();
            e2 = { maxPayload: 100 * 1024 * 1024, skipUTF8Validation: false, perMessageDeflate: false, handleProtocols: null, clientTracking: true, verifyClient: null, noServer: false, backlog: null, server: null, host: null, path: null, port: null, ...e2 };
            if (e2.port == null && !e2.server && !e2.noServer || e2.port != null && (e2.server || e2.noServer) || e2.server && e2.noServer) {
              throw new TypeError('One and only one of the "port", "server", or "noServer" options must be specified');
            }
            if (e2.port != null) {
              this._server = n.createServer((e3, t3) => {
                const s2 = n.STATUS_CODES[426];
                t3.writeHead(426, { "Content-Length": s2.length, "Content-Type": "text/plain" });
                t3.end(s2);
              });
              this._server.listen(e2.port, e2.host, e2.backlog, t2);
            } else if (e2.server) {
              this._server = e2.server;
            }
            if (this._server) {
              const e3 = this.emit.bind(this, "connection");
              this._removeListeners = addListeners(this._server, { listening: this.emit.bind(this, "listening"), error: this.emit.bind(this, "error"), upgrade: (t3, s2, r2) => {
                this.handleUpgrade(t3, s2, r2, e3);
              } });
            }
            if (e2.perMessageDeflate === true)
              e2.perMessageDeflate = {};
            if (e2.clientTracking) {
              this.clients = /* @__PURE__ */ new Set();
              this._shouldEmitClose = false;
            }
            this.options = e2;
            this._state = m;
          }
          address() {
            if (this.options.noServer) {
              throw new Error('The server is operating in "noServer" mode');
            }
            if (!this._server)
              return null;
            return this._server.address();
          }
          close(e2) {
            if (this._state === y) {
              if (e2) {
                this.once("close", () => {
                  e2(new Error("The server is not running"));
                });
              }
              process.nextTick(emitClose, this);
              return;
            }
            if (e2)
              this.once("close", e2);
            if (this._state === b)
              return;
            this._state = b;
            if (this.options.noServer || this.options.server) {
              if (this._server) {
                this._removeListeners();
                this._removeListeners = this._server = null;
              }
              if (this.clients) {
                if (!this.clients.size) {
                  process.nextTick(emitClose, this);
                } else {
                  this._shouldEmitClose = true;
                }
              } else {
                process.nextTick(emitClose, this);
              }
            } else {
              const e3 = this._server;
              this._removeListeners();
              this._removeListeners = this._server = null;
              e3.close(() => {
                emitClose(this);
              });
            }
          }
          shouldHandle(e2) {
            if (this.options.path) {
              const t2 = e2.url.indexOf("?");
              const s2 = t2 !== -1 ? e2.url.slice(0, t2) : e2.url;
              if (s2 !== this.options.path)
                return false;
            }
            return true;
          }
          handleUpgrade(e2, t2, s2, r2) {
            t2.on("error", socketOnError);
            const n2 = e2.headers["sec-websocket-key"] !== void 0 ? e2.headers["sec-websocket-key"] : false;
            const i2 = +e2.headers["sec-websocket-version"];
            if (e2.method !== "GET" || e2.headers.upgrade.toLowerCase() !== "websocket" || !n2 || !p.test(n2) || i2 !== 8 && i2 !== 13 || !this.shouldHandle(e2)) {
              return abortHandshake(t2, 400);
            }
            const o2 = e2.headers["sec-websocket-protocol"];
            let a2 = /* @__PURE__ */ new Set();
            if (o2 !== void 0) {
              try {
                a2 = h.parse(o2);
              } catch (e3) {
                return abortHandshake(t2, 400);
              }
            }
            const c2 = e2.headers["sec-websocket-extensions"];
            const d2 = {};
            if (this.options.perMessageDeflate && c2 !== void 0) {
              const e3 = new f(this.options.perMessageDeflate, true, this.options.maxPayload);
              try {
                const t3 = l.parse(c2);
                if (t3[f.extensionName]) {
                  e3.accept(t3[f.extensionName]);
                  d2[f.extensionName] = e3;
                }
              } catch (e4) {
                return abortHandshake(t2, 400);
              }
            }
            if (this.options.verifyClient) {
              const o3 = { origin: e2.headers[`${i2 === 8 ? "sec-websocket-origin" : "origin"}`], secure: !!(e2.socket.authorized || e2.socket.encrypted), req: e2 };
              if (this.options.verifyClient.length === 2) {
                this.options.verifyClient(o3, (i3, o4, c3, l2) => {
                  if (!i3) {
                    return abortHandshake(t2, o4 || 401, c3, l2);
                  }
                  this.completeUpgrade(d2, n2, a2, e2, t2, s2, r2);
                });
                return;
              }
              if (!this.options.verifyClient(o3))
                return abortHandshake(t2, 401);
            }
            this.completeUpgrade(d2, n2, a2, e2, t2, s2, r2);
          }
          completeUpgrade(e2, t2, s2, r2, n2, i2, o2) {
            if (!n2.readable || !n2.writable)
              return n2.destroy();
            if (n2[_]) {
              throw new Error("server.handleUpgrade() was called more than once with the same socket, possibly due to a misconfiguration");
            }
            if (this._state > m)
              return abortHandshake(n2, 503);
            const a2 = c("sha1").update(t2 + u).digest("base64");
            const h2 = ["HTTP/1.1 101 Switching Protocols", "Upgrade: websocket", "Connection: Upgrade", `Sec-WebSocket-Accept: ${a2}`];
            const p2 = new d(null);
            if (s2.size) {
              const e3 = this.options.handleProtocols ? this.options.handleProtocols(s2, r2) : s2.values().next().value;
              if (e3) {
                h2.push(`Sec-WebSocket-Protocol: ${e3}`);
                p2._protocol = e3;
              }
            }
            if (e2[f.extensionName]) {
              const t3 = e2[f.extensionName].params;
              const s3 = l.format({ [f.extensionName]: [t3] });
              h2.push(`Sec-WebSocket-Extensions: ${s3}`);
              p2._extensions = e2;
            }
            this.emit("headers", h2, r2);
            n2.write(h2.concat("\r\n").join("\r\n"));
            n2.removeListener("error", socketOnError);
            p2.setSocket(n2, i2, { maxPayload: this.options.maxPayload, skipUTF8Validation: this.options.skipUTF8Validation });
            if (this.clients) {
              this.clients.add(p2);
              p2.on("close", () => {
                this.clients.delete(p2);
                if (this._shouldEmitClose && !this.clients.size) {
                  process.nextTick(emitClose, this);
                }
              });
            }
            o2(p2, r2);
          }
        }
        e.exports = WebSocketServer;
        function addListeners(e2, t2) {
          for (const s2 of Object.keys(t2))
            e2.on(s2, t2[s2]);
          return function removeListeners() {
            for (const s2 of Object.keys(t2)) {
              e2.removeListener(s2, t2[s2]);
            }
          };
        }
        function emitClose(e2) {
          e2._state = y;
          e2.emit("close");
        }
        function socketOnError() {
          this.destroy();
        }
        function abortHandshake(e2, t2, s2, r2) {
          if (e2.writable) {
            s2 = s2 || n.STATUS_CODES[t2];
            r2 = { Connection: "close", "Content-Type": "text/html", "Content-Length": Buffer.byteLength(s2), ...r2 };
            e2.write(`HTTP/1.1 ${t2} ${n.STATUS_CODES[t2]}\r
` + Object.keys(r2).map((e3) => `${e3}: ${r2[e3]}`).join("\r\n") + "\r\n\r\n" + s2);
          }
          e2.removeListener("error", socketOnError);
          e2.destroy();
        }
      }, 335: (e, t, s) => {
        "use strict";
        const r = s(361);
        const n = s(687);
        const i = s(685);
        const o = s(808);
        const a = s(404);
        const { randomBytes: c, createHash: l } = s(113);
        const { Readable: f } = s(781);
        const { URL: h } = s(310);
        const d = s(290);
        const u = s(157);
        const _ = s(769);
        const { BINARY_TYPES: p, EMPTY_BUFFER: m, GUID: b, kForOnEventAttribute: y, kListener: S, kStatusCode: g, kWebSocket: k, NOOP: v } = s(217);
        const { EventTarget: { addEventListener: E, removeEventListener: w } } = s(874);
        const { format: x, parse: O } = s(725);
        const { toBuffer: C } = s(214);
        const T = ["CONNECTING", "OPEN", "CLOSING", "CLOSED"];
        const N = /^[!#$%&'*+\-.0-9A-Z^_`|a-z~]+$/;
        const L = [8, 13];
        const P = 30 * 1e3;
        class WebSocket extends r {
          constructor(e2, t2, s2) {
            super();
            this._binaryType = p[0];
            this._closeCode = 1006;
            this._closeFrameReceived = false;
            this._closeFrameSent = false;
            this._closeMessage = m;
            this._closeTimer = null;
            this._extensions = {};
            this._protocol = "";
            this._readyState = WebSocket.CONNECTING;
            this._receiver = null;
            this._sender = null;
            this._socket = null;
            if (e2 !== null) {
              this._bufferedAmount = 0;
              this._isServer = false;
              this._redirects = 0;
              if (t2 === void 0) {
                t2 = [];
              } else if (!Array.isArray(t2)) {
                if (typeof t2 === "object" && t2 !== null) {
                  s2 = t2;
                  t2 = [];
                } else {
                  t2 = [t2];
                }
              }
              initAsClient(this, e2, t2, s2);
            } else {
              this._isServer = true;
            }
          }
          get binaryType() {
            return this._binaryType;
          }
          set binaryType(e2) {
            if (!p.includes(e2))
              return;
            this._binaryType = e2;
            if (this._receiver)
              this._receiver._binaryType = e2;
          }
          get bufferedAmount() {
            if (!this._socket)
              return this._bufferedAmount;
            return this._socket._writableState.length + this._sender._bufferedBytes;
          }
          get extensions() {
            return Object.keys(this._extensions).join();
          }
          get onclose() {
            return null;
          }
          get onerror() {
            return null;
          }
          get onopen() {
            return null;
          }
          get onmessage() {
            return null;
          }
          get protocol() {
            return this._protocol;
          }
          get readyState() {
            return this._readyState;
          }
          get url() {
            return this._url;
          }
          setSocket(e2, t2, s2) {
            const r2 = new u({ binaryType: this.binaryType, extensions: this._extensions, isServer: this._isServer, maxPayload: s2.maxPayload, skipUTF8Validation: s2.skipUTF8Validation });
            this._sender = new _(e2, this._extensions);
            this._receiver = r2;
            this._socket = e2;
            r2[k] = this;
            e2[k] = this;
            r2.on("conclude", receiverOnConclude);
            r2.on("drain", receiverOnDrain);
            r2.on("error", receiverOnError);
            r2.on("message", receiverOnMessage);
            r2.on("ping", receiverOnPing);
            r2.on("pong", receiverOnPong);
            e2.setTimeout(0);
            e2.setNoDelay();
            if (t2.length > 0)
              e2.unshift(t2);
            e2.on("close", socketOnClose);
            e2.on("data", socketOnData);
            e2.on("end", socketOnEnd);
            e2.on("error", socketOnError);
            this._readyState = WebSocket.OPEN;
            this.emit("open");
          }
          emitClose() {
            if (!this._socket) {
              this._readyState = WebSocket.CLOSED;
              this.emit("close", this._closeCode, this._closeMessage);
              return;
            }
            if (this._extensions[d.extensionName]) {
              this._extensions[d.extensionName].cleanup();
            }
            this._receiver.removeAllListeners();
            this._readyState = WebSocket.CLOSED;
            this.emit("close", this._closeCode, this._closeMessage);
          }
          close(e2, t2) {
            if (this.readyState === WebSocket.CLOSED)
              return;
            if (this.readyState === WebSocket.CONNECTING) {
              const e3 = "WebSocket was closed before the connection was established";
              return abortHandshake(this, this._req, e3);
            }
            if (this.readyState === WebSocket.CLOSING) {
              if (this._closeFrameSent && (this._closeFrameReceived || this._receiver._writableState.errorEmitted)) {
                this._socket.end();
              }
              return;
            }
            this._readyState = WebSocket.CLOSING;
            this._sender.close(e2, t2, !this._isServer, (e3) => {
              if (e3)
                return;
              this._closeFrameSent = true;
              if (this._closeFrameReceived || this._receiver._writableState.errorEmitted) {
                this._socket.end();
              }
            });
            this._closeTimer = setTimeout(this._socket.destroy.bind(this._socket), P);
          }
          ping(e2, t2, s2) {
            if (this.readyState === WebSocket.CONNECTING) {
              throw new Error("WebSocket is not open: readyState 0 (CONNECTING)");
            }
            if (typeof e2 === "function") {
              s2 = e2;
              e2 = t2 = void 0;
            } else if (typeof t2 === "function") {
              s2 = t2;
              t2 = void 0;
            }
            if (typeof e2 === "number")
              e2 = e2.toString();
            if (this.readyState !== WebSocket.OPEN) {
              sendAfterClose(this, e2, s2);
              return;
            }
            if (t2 === void 0)
              t2 = !this._isServer;
            this._sender.ping(e2 || m, t2, s2);
          }
          pong(e2, t2, s2) {
            if (this.readyState === WebSocket.CONNECTING) {
              throw new Error("WebSocket is not open: readyState 0 (CONNECTING)");
            }
            if (typeof e2 === "function") {
              s2 = e2;
              e2 = t2 = void 0;
            } else if (typeof t2 === "function") {
              s2 = t2;
              t2 = void 0;
            }
            if (typeof e2 === "number")
              e2 = e2.toString();
            if (this.readyState !== WebSocket.OPEN) {
              sendAfterClose(this, e2, s2);
              return;
            }
            if (t2 === void 0)
              t2 = !this._isServer;
            this._sender.pong(e2 || m, t2, s2);
          }
          send(e2, t2, s2) {
            if (this.readyState === WebSocket.CONNECTING) {
              throw new Error("WebSocket is not open: readyState 0 (CONNECTING)");
            }
            if (typeof t2 === "function") {
              s2 = t2;
              t2 = {};
            }
            if (typeof e2 === "number")
              e2 = e2.toString();
            if (this.readyState !== WebSocket.OPEN) {
              sendAfterClose(this, e2, s2);
              return;
            }
            const r2 = { binary: typeof e2 !== "string", mask: !this._isServer, compress: true, fin: true, ...t2 };
            if (!this._extensions[d.extensionName]) {
              r2.compress = false;
            }
            this._sender.send(e2 || m, r2, s2);
          }
          terminate() {
            if (this.readyState === WebSocket.CLOSED)
              return;
            if (this.readyState === WebSocket.CONNECTING) {
              const e2 = "WebSocket was closed before the connection was established";
              return abortHandshake(this, this._req, e2);
            }
            if (this._socket) {
              this._readyState = WebSocket.CLOSING;
              this._socket.destroy();
            }
          }
        }
        Object.defineProperty(WebSocket, "CONNECTING", { enumerable: true, value: T.indexOf("CONNECTING") });
        Object.defineProperty(WebSocket.prototype, "CONNECTING", { enumerable: true, value: T.indexOf("CONNECTING") });
        Object.defineProperty(WebSocket, "OPEN", { enumerable: true, value: T.indexOf("OPEN") });
        Object.defineProperty(WebSocket.prototype, "OPEN", { enumerable: true, value: T.indexOf("OPEN") });
        Object.defineProperty(WebSocket, "CLOSING", { enumerable: true, value: T.indexOf("CLOSING") });
        Object.defineProperty(WebSocket.prototype, "CLOSING", { enumerable: true, value: T.indexOf("CLOSING") });
        Object.defineProperty(WebSocket, "CLOSED", { enumerable: true, value: T.indexOf("CLOSED") });
        Object.defineProperty(WebSocket.prototype, "CLOSED", { enumerable: true, value: T.indexOf("CLOSED") });
        ["binaryType", "bufferedAmount", "extensions", "protocol", "readyState", "url"].forEach((e2) => {
          Object.defineProperty(WebSocket.prototype, e2, { enumerable: true });
        });
        ["open", "error", "close", "message"].forEach((e2) => {
          Object.defineProperty(WebSocket.prototype, `on${e2}`, { enumerable: true, get() {
            for (const t2 of this.listeners(e2)) {
              if (t2[y])
                return t2[S];
            }
            return null;
          }, set(t2) {
            for (const t3 of this.listeners(e2)) {
              if (t3[y]) {
                this.removeListener(e2, t3);
                break;
              }
            }
            if (typeof t2 !== "function")
              return;
            this.addEventListener(e2, t2, { [y]: true });
          } });
        });
        WebSocket.prototype.addEventListener = E;
        WebSocket.prototype.removeEventListener = w;
        e.exports = WebSocket;
        function initAsClient(e2, t2, s2, r2) {
          const o2 = { protocolVersion: L[1], maxPayload: 100 * 1024 * 1024, skipUTF8Validation: false, perMessageDeflate: true, followRedirects: false, maxRedirects: 10, ...r2, createConnection: void 0, socketPath: void 0, hostname: void 0, protocol: void 0, timeout: void 0, method: void 0, host: void 0, path: void 0, port: void 0 };
          if (!L.includes(o2.protocolVersion)) {
            throw new RangeError(`Unsupported protocol version: ${o2.protocolVersion} (supported versions: ${L.join(", ")})`);
          }
          let a2;
          if (t2 instanceof h) {
            a2 = t2;
            e2._url = t2.href;
          } else {
            try {
              a2 = new h(t2);
            } catch (e3) {
              throw new SyntaxError(`Invalid URL: ${t2}`);
            }
            e2._url = t2;
          }
          const f2 = a2.protocol === "wss:";
          const u2 = a2.protocol === "ws+unix:";
          if (a2.protocol !== "ws:" && !f2 && !u2) {
            throw new SyntaxError(`The URL's protocol must be one of "ws:", "wss:", or "ws+unix:"`);
          }
          if (u2 && !a2.pathname) {
            throw new SyntaxError("The URL's pathname is empty");
          }
          if (a2.hash) {
            throw new SyntaxError("The URL contains a fragment identifier");
          }
          const _2 = f2 ? 443 : 80;
          const p2 = c(16).toString("base64");
          const m2 = f2 ? n.get : i.get;
          const y2 = /* @__PURE__ */ new Set();
          let S2;
          o2.createConnection = f2 ? tlsConnect : netConnect;
          o2.defaultPort = o2.defaultPort || _2;
          o2.port = a2.port || _2;
          o2.host = a2.hostname.startsWith("[") ? a2.hostname.slice(1, -1) : a2.hostname;
          o2.headers = { "Sec-WebSocket-Version": o2.protocolVersion, "Sec-WebSocket-Key": p2, Connection: "Upgrade", Upgrade: "websocket", ...o2.headers };
          o2.path = a2.pathname + a2.search;
          o2.timeout = o2.handshakeTimeout;
          if (o2.perMessageDeflate) {
            S2 = new d(o2.perMessageDeflate !== true ? o2.perMessageDeflate : {}, false, o2.maxPayload);
            o2.headers["Sec-WebSocket-Extensions"] = x({ [d.extensionName]: S2.offer() });
          }
          if (s2.length) {
            for (const e3 of s2) {
              if (typeof e3 !== "string" || !N.test(e3) || y2.has(e3)) {
                throw new SyntaxError("An invalid or duplicated subprotocol was specified");
              }
              y2.add(e3);
            }
            o2.headers["Sec-WebSocket-Protocol"] = s2.join(",");
          }
          if (o2.origin) {
            if (o2.protocolVersion < 13) {
              o2.headers["Sec-WebSocket-Origin"] = o2.origin;
            } else {
              o2.headers.Origin = o2.origin;
            }
          }
          if (a2.username || a2.password) {
            o2.auth = `${a2.username}:${a2.password}`;
          }
          if (u2) {
            const e3 = o2.path.split(":");
            o2.socketPath = e3[0];
            o2.path = e3[1];
          }
          let g2 = e2._req = m2(o2);
          if (o2.timeout) {
            g2.on("timeout", () => {
              abortHandshake(e2, g2, "Opening handshake has timed out");
            });
          }
          g2.on("error", (t3) => {
            if (g2 === null || g2.aborted)
              return;
            g2 = e2._req = null;
            e2._readyState = WebSocket.CLOSING;
            e2.emit("error", t3);
            e2.emitClose();
          });
          g2.on("response", (n2) => {
            const i2 = n2.headers.location;
            const a3 = n2.statusCode;
            if (i2 && o2.followRedirects && a3 >= 300 && a3 < 400) {
              if (++e2._redirects > o2.maxRedirects) {
                abortHandshake(e2, g2, "Maximum redirects exceeded");
                return;
              }
              g2.abort();
              const n3 = new h(i2, t2);
              initAsClient(e2, n3, s2, r2);
            } else if (!e2.emit("unexpected-response", g2, n2)) {
              abortHandshake(e2, g2, `Unexpected server response: ${n2.statusCode}`);
            }
          });
          g2.on("upgrade", (t3, s3, r3) => {
            e2.emit("upgrade", t3);
            if (e2.readyState !== WebSocket.CONNECTING)
              return;
            g2 = e2._req = null;
            const n2 = l("sha1").update(p2 + b).digest("base64");
            if (t3.headers["sec-websocket-accept"] !== n2) {
              abortHandshake(e2, s3, "Invalid Sec-WebSocket-Accept header");
              return;
            }
            const i2 = t3.headers["sec-websocket-protocol"];
            let a3;
            if (i2 !== void 0) {
              if (!y2.size) {
                a3 = "Server sent a subprotocol but none was requested";
              } else if (!y2.has(i2)) {
                a3 = "Server sent an invalid subprotocol";
              }
            } else if (y2.size) {
              a3 = "Server sent no subprotocol";
            }
            if (a3) {
              abortHandshake(e2, s3, a3);
              return;
            }
            if (i2)
              e2._protocol = i2;
            const c2 = t3.headers["sec-websocket-extensions"];
            if (c2 !== void 0) {
              if (!S2) {
                const t5 = "Server sent a Sec-WebSocket-Extensions header but no extension was requested";
                abortHandshake(e2, s3, t5);
                return;
              }
              let t4;
              try {
                t4 = O(c2);
              } catch (t5) {
                const r5 = "Invalid Sec-WebSocket-Extensions header";
                abortHandshake(e2, s3, r5);
                return;
              }
              const r4 = Object.keys(t4);
              if (r4.length !== 1 || r4[0] !== d.extensionName) {
                const t5 = "Server indicated an extension that was not requested";
                abortHandshake(e2, s3, t5);
                return;
              }
              try {
                S2.accept(t4[d.extensionName]);
              } catch (t5) {
                const r5 = "Invalid Sec-WebSocket-Extensions header";
                abortHandshake(e2, s3, r5);
                return;
              }
              e2._extensions[d.extensionName] = S2;
            }
            e2.setSocket(s3, r3, { maxPayload: o2.maxPayload, skipUTF8Validation: o2.skipUTF8Validation });
          });
        }
        function netConnect(e2) {
          e2.path = e2.socketPath;
          return o.connect(e2);
        }
        function tlsConnect(e2) {
          e2.path = void 0;
          if (!e2.servername && e2.servername !== "") {
            e2.servername = o.isIP(e2.host) ? "" : e2.host;
          }
          return a.connect(e2);
        }
        function abortHandshake(e2, t2, s2) {
          e2._readyState = WebSocket.CLOSING;
          const r2 = new Error(s2);
          Error.captureStackTrace(r2, abortHandshake);
          if (t2.setHeader) {
            t2.abort();
            if (t2.socket && !t2.socket.destroyed) {
              t2.socket.destroy();
            }
            t2.once("abort", e2.emitClose.bind(e2));
            e2.emit("error", r2);
          } else {
            t2.destroy(r2);
            t2.once("error", e2.emit.bind(e2, "error"));
            t2.once("close", e2.emitClose.bind(e2));
          }
        }
        function sendAfterClose(e2, t2, s2) {
          if (t2) {
            const s3 = C(t2).length;
            if (e2._socket)
              e2._sender._bufferedBytes += s3;
            else
              e2._bufferedAmount += s3;
          }
          if (s2) {
            const t3 = new Error(`WebSocket is not open: readyState ${e2.readyState} (${T[e2.readyState]})`);
            s2(t3);
          }
        }
        function receiverOnConclude(e2, t2) {
          const s2 = this[k];
          s2._closeFrameReceived = true;
          s2._closeMessage = t2;
          s2._closeCode = e2;
          if (s2._socket[k] === void 0)
            return;
          s2._socket.removeListener("data", socketOnData);
          process.nextTick(resume, s2._socket);
          if (e2 === 1005)
            s2.close();
          else
            s2.close(e2, t2);
        }
        function receiverOnDrain() {
          this[k]._socket.resume();
        }
        function receiverOnError(e2) {
          const t2 = this[k];
          if (t2._socket[k] !== void 0) {
            t2._socket.removeListener("data", socketOnData);
            process.nextTick(resume, t2._socket);
            t2.close(e2[g]);
          }
          t2.emit("error", e2);
        }
        function receiverOnFinish() {
          this[k].emitClose();
        }
        function receiverOnMessage(e2, t2) {
          this[k].emit("message", e2, t2);
        }
        function receiverOnPing(e2) {
          const t2 = this[k];
          t2.pong(e2, !t2._isServer, v);
          t2.emit("ping", e2);
        }
        function receiverOnPong(e2) {
          this[k].emit("pong", e2);
        }
        function resume(e2) {
          e2.resume();
        }
        function socketOnClose() {
          const e2 = this[k];
          this.removeListener("close", socketOnClose);
          this.removeListener("data", socketOnData);
          this.removeListener("end", socketOnEnd);
          e2._readyState = WebSocket.CLOSING;
          let t2;
          if (!this._readableState.endEmitted && !e2._closeFrameReceived && !e2._receiver._writableState.errorEmitted && (t2 = e2._socket.read()) !== null) {
            e2._receiver.write(t2);
          }
          e2._receiver.end();
          this[k] = void 0;
          clearTimeout(e2._closeTimer);
          if (e2._receiver._writableState.finished || e2._receiver._writableState.errorEmitted) {
            e2.emitClose();
          } else {
            e2._receiver.on("error", receiverOnFinish);
            e2._receiver.on("finish", receiverOnFinish);
          }
        }
        function socketOnData(e2) {
          if (!this[k]._receiver.write(e2)) {
            this.pause();
          }
        }
        function socketOnEnd() {
          const e2 = this[k];
          e2._readyState = WebSocket.CLOSING;
          e2._receiver.end();
          this.end();
        }
        function socketOnError() {
          const e2 = this[k];
          this.removeListener("error", socketOnError);
          this.on("error", v);
          if (e2) {
            e2._readyState = WebSocket.CLOSING;
            this.destroy();
          }
        }
      }, 605: (module) => {
        module.exports = eval("require")("bufferutil");
      }, 12: (module) => {
        module.exports = eval("require")("utf-8-validate");
      }, 113: (e) => {
        "use strict";
        e.exports = require_crypto();
      }, 361: (e) => {
        "use strict";
        e.exports = require_events();
      }, 685: (e) => {
        "use strict";
        e.exports = require_http();
      }, 687: (e) => {
        "use strict";
        e.exports = require_https();
      }, 808: (e) => {
        "use strict";
        e.exports = require_net();
      }, 781: (e) => {
        "use strict";
        e.exports = require_stream();
      }, 404: (e) => {
        "use strict";
        e.exports = require_tls();
      }, 310: (e) => {
        "use strict";
        e.exports = require_url();
      }, 796: (e) => {
        "use strict";
        e.exports = require_zlib();
      } };
      var __webpack_module_cache__ = {};
      function __nccwpck_require__(e) {
        var t = __webpack_module_cache__[e];
        if (t !== void 0) {
          return t.exports;
        }
        var s = __webpack_module_cache__[e] = { exports: {} };
        var r = true;
        try {
          __webpack_modules__[e](s, s.exports, __nccwpck_require__);
          r = false;
        } finally {
          if (r)
            delete __webpack_module_cache__[e];
        }
        return s.exports;
      }
      if (typeof __nccwpck_require__ !== "undefined")
        __nccwpck_require__.ab = __dirname + "/";
      var __webpack_exports__ = __nccwpck_require__(28);
      module.exports = __webpack_exports__;
    })();
  }
});

// ../../../node_modules/next/dist/server/node-environment.js
var require_node_environment = __commonJS({
  "../../../node_modules/next/dist/server/node-environment.js"() {
    "use strict";
    if (typeof globalThis.AsyncLocalStorage !== "function") {
      const { AsyncLocalStorage } = require_async_hooks();
      globalThis.AsyncLocalStorage = AsyncLocalStorage;
    }
    if (typeof globalThis.WebSocket !== "function") {
      Object.defineProperty(globalThis, "WebSocket", {
        get() {
          return require_ws().WebSocket;
        }
      });
    }
  }
});

// ../../../node_modules/next/dist/lib/picocolors.js
var require_picocolors = __commonJS({
  "../../../node_modules/next/dist/lib/picocolors.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name2 in all)
        Object.defineProperty(target, name2, {
          enumerable: true,
          get: all[name2]
        });
    }
    _export(exports2, {
      reset: function() {
        return reset;
      },
      bold: function() {
        return bold;
      },
      dim: function() {
        return dim;
      },
      italic: function() {
        return italic;
      },
      underline: function() {
        return underline;
      },
      inverse: function() {
        return inverse;
      },
      hidden: function() {
        return hidden;
      },
      strikethrough: function() {
        return strikethrough;
      },
      black: function() {
        return black;
      },
      red: function() {
        return red;
      },
      green: function() {
        return green;
      },
      yellow: function() {
        return yellow;
      },
      blue: function() {
        return blue;
      },
      magenta: function() {
        return magenta;
      },
      purple: function() {
        return purple;
      },
      cyan: function() {
        return cyan;
      },
      white: function() {
        return white;
      },
      gray: function() {
        return gray;
      },
      bgBlack: function() {
        return bgBlack;
      },
      bgRed: function() {
        return bgRed;
      },
      bgGreen: function() {
        return bgGreen;
      },
      bgYellow: function() {
        return bgYellow;
      },
      bgBlue: function() {
        return bgBlue;
      },
      bgMagenta: function() {
        return bgMagenta;
      },
      bgCyan: function() {
        return bgCyan;
      },
      bgWhite: function() {
        return bgWhite;
      }
    });
    var _globalThis;
    var { env, stdout } = ((_globalThis = globalThis) == null ? void 0 : _globalThis.process) ?? {};
    var enabled = env && !env.NO_COLOR && (env.FORCE_COLOR || (stdout == null ? void 0 : stdout.isTTY) && !env.CI && env.TERM !== "dumb");
    var replaceClose = (str, close, replace, index) => {
      const start = str.substring(0, index) + replace;
      const end = str.substring(index + close.length);
      const nextIndex = end.indexOf(close);
      return ~nextIndex ? start + replaceClose(end, close, replace, nextIndex) : start + end;
    };
    var formatter = (open, close, replace = open) => {
      if (!enabled)
        return String;
      return (input) => {
        const string = "" + input;
        const index = string.indexOf(close, open.length);
        return ~index ? open + replaceClose(string, close, replace, index) + close : open + string + close;
      };
    };
    var reset = enabled ? (s) => `\x1B[0m${s}\x1B[0m` : String;
    var bold = formatter("\x1B[1m", "\x1B[22m", "\x1B[22m\x1B[1m");
    var dim = formatter("\x1B[2m", "\x1B[22m", "\x1B[22m\x1B[2m");
    var italic = formatter("\x1B[3m", "\x1B[23m");
    var underline = formatter("\x1B[4m", "\x1B[24m");
    var inverse = formatter("\x1B[7m", "\x1B[27m");
    var hidden = formatter("\x1B[8m", "\x1B[28m");
    var strikethrough = formatter("\x1B[9m", "\x1B[29m");
    var black = formatter("\x1B[30m", "\x1B[39m");
    var red = formatter("\x1B[31m", "\x1B[39m");
    var green = formatter("\x1B[32m", "\x1B[39m");
    var yellow = formatter("\x1B[33m", "\x1B[39m");
    var blue = formatter("\x1B[34m", "\x1B[39m");
    var magenta = formatter("\x1B[35m", "\x1B[39m");
    var purple = formatter("\x1B[38;2;173;127;168m", "\x1B[39m");
    var cyan = formatter("\x1B[36m", "\x1B[39m");
    var white = formatter("\x1B[37m", "\x1B[39m");
    var gray = formatter("\x1B[90m", "\x1B[39m");
    var bgBlack = formatter("\x1B[40m", "\x1B[49m");
    var bgRed = formatter("\x1B[41m", "\x1B[49m");
    var bgGreen = formatter("\x1B[42m", "\x1B[49m");
    var bgYellow = formatter("\x1B[43m", "\x1B[49m");
    var bgBlue = formatter("\x1B[44m", "\x1B[49m");
    var bgMagenta = formatter("\x1B[45m", "\x1B[49m");
    var bgCyan = formatter("\x1B[46m", "\x1B[49m");
    var bgWhite = formatter("\x1B[47m", "\x1B[49m");
  }
});

// browser-external:fs
var require_fs = __commonJS({
  "browser-external:fs"(exports2, module2) {
    module2.exports = Object.create(new Proxy({}, {
      get(_, key) {
        if (key !== "__esModule" && key !== "__proto__" && key !== "constructor" && key !== "splice") {
          console.warn(`Module "fs" has been externalized for browser compatibility. Cannot access "fs.${key}" in client code. See https://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`);
        }
      }
    }));
  }
});

// ../../../node_modules/next/dist/compiled/gzip-size/index.js
var require_gzip_size = __commonJS({
  "../../../node_modules/next/dist/compiled/gzip-size/index.js"(exports2, module2) {
    (() => {
      var e = { 154: (e2, r2, t2) => {
        var n = t2(781);
        var o = ["write", "end", "destroy"];
        var i = ["resume", "pause"];
        var s = ["data", "close"];
        var c = Array.prototype.slice;
        e2.exports = duplex;
        function forEach(e3, r3) {
          if (e3.forEach) {
            return e3.forEach(r3);
          }
          for (var t3 = 0; t3 < e3.length; t3++) {
            r3(e3[t3], t3);
          }
        }
        function duplex(e3, r3) {
          var t3 = new n();
          var a = false;
          forEach(o, proxyWriter);
          forEach(i, proxyReader);
          forEach(s, proxyStream);
          r3.on("end", handleEnd);
          e3.on("drain", function() {
            t3.emit("drain");
          });
          e3.on("error", reemit);
          r3.on("error", reemit);
          t3.writable = e3.writable;
          t3.readable = r3.readable;
          return t3;
          function proxyWriter(r4) {
            t3[r4] = method;
            function method() {
              return e3[r4].apply(e3, arguments);
            }
          }
          function proxyReader(e4) {
            t3[e4] = method;
            function method() {
              t3.emit(e4);
              var n2 = r3[e4];
              if (n2) {
                return n2.apply(r3, arguments);
              }
              r3.emit(e4);
            }
          }
          function proxyStream(e4) {
            r3.on(e4, reemit2);
            function reemit2() {
              var r4 = c.call(arguments);
              r4.unshift(e4);
              t3.emit.apply(t3, r4);
            }
          }
          function handleEnd() {
            if (a) {
              return;
            }
            a = true;
            var e4 = c.call(arguments);
            e4.unshift("end");
            t3.emit.apply(t3, e4);
          }
          function reemit(e4) {
            t3.emit("error", e4);
          }
        }
      }, 349: (e2, r2, t2) => {
        "use strict";
        const n = t2(147);
        const o = t2(781);
        const i = t2(796);
        const s = t2(154);
        const c = t2(530);
        const getOptions = (e3) => Object.assign({ level: 9 }, e3);
        e2.exports = (e3, r3) => {
          if (!e3) {
            return Promise.resolve(0);
          }
          return c(i.gzip)(e3, getOptions(r3)).then((e4) => e4.length).catch((e4) => 0);
        };
        e2.exports.sync = (e3, r3) => i.gzipSync(e3, getOptions(r3)).length;
        e2.exports.stream = (e3) => {
          const r3 = new o.PassThrough();
          const t3 = new o.PassThrough();
          const n2 = s(r3, t3);
          let c2 = 0;
          const a = i.createGzip(getOptions(e3)).on("data", (e4) => {
            c2 += e4.length;
          }).on("error", () => {
            n2.gzipSize = 0;
          }).on("end", () => {
            n2.gzipSize = c2;
            n2.emit("gzip-size", c2);
            t3.end();
          });
          r3.pipe(a);
          r3.pipe(t3, { end: false });
          return n2;
        };
        e2.exports.file = (r3, t3) => new Promise((o2, i2) => {
          const s2 = n.createReadStream(r3);
          s2.on("error", i2);
          const c2 = s2.pipe(e2.exports.stream(t3));
          c2.on("error", i2);
          c2.on("gzip-size", o2);
        });
        e2.exports.fileSync = (r3, t3) => e2.exports.sync(n.readFileSync(r3), t3);
      }, 530: (e2) => {
        "use strict";
        const processFn = (e3, r2) => function(...t2) {
          const n = r2.promiseModule;
          return new n((n2, o) => {
            if (r2.multiArgs) {
              t2.push((...e4) => {
                if (r2.errorFirst) {
                  if (e4[0]) {
                    o(e4);
                  } else {
                    e4.shift();
                    n2(e4);
                  }
                } else {
                  n2(e4);
                }
              });
            } else if (r2.errorFirst) {
              t2.push((e4, r3) => {
                if (e4) {
                  o(e4);
                } else {
                  n2(r3);
                }
              });
            } else {
              t2.push(n2);
            }
            e3.apply(this, t2);
          });
        };
        e2.exports = (e3, r2) => {
          r2 = Object.assign({ exclude: [/.+(Sync|Stream)$/], errorFirst: true, promiseModule: Promise }, r2);
          const t2 = typeof e3;
          if (!(e3 !== null && (t2 === "object" || t2 === "function"))) {
            throw new TypeError(`Expected \`input\` to be a \`Function\` or \`Object\`, got \`${e3 === null ? "null" : t2}\``);
          }
          const filter = (e4) => {
            const match = (r3) => typeof r3 === "string" ? e4 === r3 : r3.test(e4);
            return r2.include ? r2.include.some(match) : !r2.exclude.some(match);
          };
          let n;
          if (t2 === "function") {
            n = function(...t3) {
              return r2.excludeMain ? e3(...t3) : processFn(e3, r2).apply(this, t3);
            };
          } else {
            n = Object.create(Object.getPrototypeOf(e3));
          }
          for (const t3 in e3) {
            const o = e3[t3];
            n[t3] = typeof o === "function" && filter(t3) ? processFn(o, r2) : o;
          }
          return n;
        };
      }, 147: (e2) => {
        "use strict";
        e2.exports = require_fs();
      }, 781: (e2) => {
        "use strict";
        e2.exports = require_stream();
      }, 796: (e2) => {
        "use strict";
        e2.exports = require_zlib();
      } };
      var r = {};
      function __nccwpck_require__2(t2) {
        var n = r[t2];
        if (n !== void 0) {
          return n.exports;
        }
        var o = r[t2] = { exports: {} };
        var i = true;
        try {
          e[t2](o, o.exports, __nccwpck_require__2);
          i = false;
        } finally {
          if (i)
            delete r[t2];
        }
        return o.exports;
      }
      if (typeof __nccwpck_require__2 !== "undefined")
        __nccwpck_require__2.ab = __dirname + "/";
      var t = __nccwpck_require__2(349);
      module2.exports = t;
    })();
  }
});

// ../../../node_modules/next/dist/compiled/text-table/index.js
var require_text_table = __commonJS({
  "../../../node_modules/next/dist/compiled/text-table/index.js"(exports2, module2) {
    (() => {
      var r = { 286: (r2) => {
        r2.exports = function(r3, e2) {
          if (!e2)
            e2 = {};
          var n2 = e2.hsep === void 0 ? "  " : e2.hsep;
          var t = e2.align || [];
          var a = e2.stringLength || function(r4) {
            return String(r4).length;
          };
          var i = reduce(r3, function(r4, e3) {
            forEach(e3, function(e4, n3) {
              var t2 = dotindex(e4);
              if (!r4[n3] || t2 > r4[n3])
                r4[n3] = t2;
            });
            return r4;
          }, []);
          var u = map(r3, function(r4) {
            return map(r4, function(r5, e3) {
              var n3 = String(r5);
              if (t[e3] === ".") {
                var u2 = dotindex(n3);
                var f2 = i[e3] + (/\./.test(n3) ? 1 : 2) - (a(n3) - u2);
                return n3 + Array(f2).join(" ");
              } else
                return n3;
            });
          });
          var f = reduce(u, function(r4, e3) {
            forEach(e3, function(e4, n3) {
              var t2 = a(e4);
              if (!r4[n3] || t2 > r4[n3])
                r4[n3] = t2;
            });
            return r4;
          }, []);
          return map(u, function(r4) {
            return map(r4, function(r5, e3) {
              var n3 = f[e3] - a(r5) || 0;
              var i2 = Array(Math.max(n3 + 1, 1)).join(" ");
              if (t[e3] === "r" || t[e3] === ".") {
                return i2 + r5;
              }
              if (t[e3] === "c") {
                return Array(Math.ceil(n3 / 2 + 1)).join(" ") + r5 + Array(Math.floor(n3 / 2 + 1)).join(" ");
              }
              return r5 + i2;
            }).join(n2).replace(/\s+$/, "");
          }).join("\n");
        };
        function dotindex(r3) {
          var e2 = /\.[^.]*$/.exec(r3);
          return e2 ? e2.index + 1 : r3.length;
        }
        function reduce(r3, e2, n2) {
          if (r3.reduce)
            return r3.reduce(e2, n2);
          var t = 0;
          var a = arguments.length >= 3 ? n2 : r3[t++];
          for (; t < r3.length; t++) {
            e2(a, r3[t], t);
          }
          return a;
        }
        function forEach(r3, e2) {
          if (r3.forEach)
            return r3.forEach(e2);
          for (var n2 = 0; n2 < r3.length; n2++) {
            e2.call(r3, r3[n2], n2);
          }
        }
        function map(r3, e2) {
          if (r3.map)
            return r3.map(e2);
          var n2 = [];
          for (var t = 0; t < r3.length; t++) {
            n2.push(e2.call(r3, r3[t], t));
          }
          return n2;
        }
      } };
      var e = {};
      function __nccwpck_require__2(n2) {
        var t = e[n2];
        if (t !== void 0) {
          return t.exports;
        }
        var a = e[n2] = { exports: {} };
        var i = true;
        try {
          r[n2](a, a.exports, __nccwpck_require__2);
          i = false;
        } finally {
          if (i)
            delete e[n2];
        }
        return a.exports;
      }
      if (typeof __nccwpck_require__2 !== "undefined")
        __nccwpck_require__2.ab = __dirname + "/";
      var n = __nccwpck_require__2(286);
      module2.exports = n;
    })();
  }
});

// ../../../node_modules/next/dist/compiled/react-is/cjs/react-is.development.js
var require_react_is_development = __commonJS({
  "../../../node_modules/next/dist/compiled/react-is/cjs/react-is.development.js"(exports2) {
    "use strict";
    if (true) {
      (function() {
        "use strict";
        var REACT_ELEMENT_TYPE = Symbol.for("react.element");
        var REACT_PORTAL_TYPE = Symbol.for("react.portal");
        var REACT_FRAGMENT_TYPE = Symbol.for("react.fragment");
        var REACT_STRICT_MODE_TYPE = Symbol.for("react.strict_mode");
        var REACT_PROFILER_TYPE = Symbol.for("react.profiler");
        var REACT_PROVIDER_TYPE = Symbol.for("react.provider");
        var REACT_CONTEXT_TYPE = Symbol.for("react.context");
        var REACT_SERVER_CONTEXT_TYPE = Symbol.for("react.server_context");
        var REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref");
        var REACT_SUSPENSE_TYPE = Symbol.for("react.suspense");
        var REACT_SUSPENSE_LIST_TYPE = Symbol.for("react.suspense_list");
        var REACT_MEMO_TYPE = Symbol.for("react.memo");
        var REACT_LAZY_TYPE = Symbol.for("react.lazy");
        var REACT_OFFSCREEN_TYPE = Symbol.for("react.offscreen");
        var enableScopeAPI = false;
        var enableCacheElement = false;
        var enableTransitionTracing = false;
        var enableLegacyHidden = false;
        var enableDebugTracing = false;
        var REACT_MODULE_REFERENCE;
        {
          REACT_MODULE_REFERENCE = Symbol.for("react.module.reference");
        }
        function isValidElementType(type) {
          if (typeof type === "string" || typeof type === "function") {
            return true;
          }
          if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden || type === REACT_OFFSCREEN_TYPE || enableScopeAPI || enableCacheElement || enableTransitionTracing) {
            return true;
          }
          if (typeof type === "object" && type !== null) {
            if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object
            // types supported by any Flight configuration anywhere since
            // we don't know which Flight build this will end up being used
            // with.
            type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== void 0) {
              return true;
            }
          }
          return false;
        }
        function typeOf(object) {
          if (typeof object === "object" && object !== null) {
            var $$typeof = object.$$typeof;
            switch ($$typeof) {
              case REACT_ELEMENT_TYPE:
                var type = object.type;
                switch (type) {
                  case REACT_FRAGMENT_TYPE:
                  case REACT_PROFILER_TYPE:
                  case REACT_STRICT_MODE_TYPE:
                  case REACT_SUSPENSE_TYPE:
                  case REACT_SUSPENSE_LIST_TYPE:
                    return type;
                  default:
                    var $$typeofType = type && type.$$typeof;
                    switch ($$typeofType) {
                      case REACT_SERVER_CONTEXT_TYPE:
                      case REACT_CONTEXT_TYPE:
                      case REACT_FORWARD_REF_TYPE:
                      case REACT_LAZY_TYPE:
                      case REACT_MEMO_TYPE:
                      case REACT_PROVIDER_TYPE:
                        return $$typeofType;
                      default:
                        return $$typeof;
                    }
                }
              case REACT_PORTAL_TYPE:
                return $$typeof;
            }
          }
          return void 0;
        }
        var ContextConsumer = REACT_CONTEXT_TYPE;
        var ContextProvider = REACT_PROVIDER_TYPE;
        var Element = REACT_ELEMENT_TYPE;
        var ForwardRef = REACT_FORWARD_REF_TYPE;
        var Fragment = REACT_FRAGMENT_TYPE;
        var Lazy = REACT_LAZY_TYPE;
        var Memo = REACT_MEMO_TYPE;
        var Portal = REACT_PORTAL_TYPE;
        var Profiler = REACT_PROFILER_TYPE;
        var StrictMode = REACT_STRICT_MODE_TYPE;
        var Suspense = REACT_SUSPENSE_TYPE;
        var SuspenseList = REACT_SUSPENSE_LIST_TYPE;
        var hasWarnedAboutDeprecatedIsAsyncMode = false;
        var hasWarnedAboutDeprecatedIsConcurrentMode = false;
        function isAsyncMode(object) {
          {
            if (!hasWarnedAboutDeprecatedIsAsyncMode) {
              hasWarnedAboutDeprecatedIsAsyncMode = true;
              console["warn"]("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 18+.");
            }
          }
          return false;
        }
        function isConcurrentMode(object) {
          {
            if (!hasWarnedAboutDeprecatedIsConcurrentMode) {
              hasWarnedAboutDeprecatedIsConcurrentMode = true;
              console["warn"]("The ReactIs.isConcurrentMode() alias has been deprecated, and will be removed in React 18+.");
            }
          }
          return false;
        }
        function isContextConsumer(object) {
          return typeOf(object) === REACT_CONTEXT_TYPE;
        }
        function isContextProvider(object) {
          return typeOf(object) === REACT_PROVIDER_TYPE;
        }
        function isElement(object) {
          return typeof object === "object" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
        }
        function isForwardRef(object) {
          return typeOf(object) === REACT_FORWARD_REF_TYPE;
        }
        function isFragment(object) {
          return typeOf(object) === REACT_FRAGMENT_TYPE;
        }
        function isLazy(object) {
          return typeOf(object) === REACT_LAZY_TYPE;
        }
        function isMemo(object) {
          return typeOf(object) === REACT_MEMO_TYPE;
        }
        function isPortal(object) {
          return typeOf(object) === REACT_PORTAL_TYPE;
        }
        function isProfiler(object) {
          return typeOf(object) === REACT_PROFILER_TYPE;
        }
        function isStrictMode(object) {
          return typeOf(object) === REACT_STRICT_MODE_TYPE;
        }
        function isSuspense(object) {
          return typeOf(object) === REACT_SUSPENSE_TYPE;
        }
        function isSuspenseList(object) {
          return typeOf(object) === REACT_SUSPENSE_LIST_TYPE;
        }
        exports2.ContextConsumer = ContextConsumer;
        exports2.ContextProvider = ContextProvider;
        exports2.Element = Element;
        exports2.ForwardRef = ForwardRef;
        exports2.Fragment = Fragment;
        exports2.Lazy = Lazy;
        exports2.Memo = Memo;
        exports2.Portal = Portal;
        exports2.Profiler = Profiler;
        exports2.StrictMode = StrictMode;
        exports2.Suspense = Suspense;
        exports2.SuspenseList = SuspenseList;
        exports2.isAsyncMode = isAsyncMode;
        exports2.isConcurrentMode = isConcurrentMode;
        exports2.isContextConsumer = isContextConsumer;
        exports2.isContextProvider = isContextProvider;
        exports2.isElement = isElement;
        exports2.isForwardRef = isForwardRef;
        exports2.isFragment = isFragment;
        exports2.isLazy = isLazy;
        exports2.isMemo = isMemo;
        exports2.isPortal = isPortal;
        exports2.isProfiler = isProfiler;
        exports2.isStrictMode = isStrictMode;
        exports2.isSuspense = isSuspense;
        exports2.isSuspenseList = isSuspenseList;
        exports2.isValidElementType = isValidElementType;
        exports2.typeOf = typeOf;
      })();
    }
  }
});

// ../../../node_modules/next/dist/compiled/react-is/index.js
var require_react_is = __commonJS({
  "../../../node_modules/next/dist/compiled/react-is/index.js"(exports2, module2) {
    "use strict";
    if (false) {
      module2.exports = null;
    } else {
      module2.exports = require_react_is_development();
    }
  }
});

// ../../../node_modules/next/dist/compiled/strip-ansi/index.js
var require_strip_ansi = __commonJS({
  "../../../node_modules/next/dist/compiled/strip-ansi/index.js"(exports2, module2) {
    (() => {
      "use strict";
      var e = { 511: (e2) => {
        e2.exports = ({ onlyFirst: e3 = false } = {}) => {
          const r2 = ["[\\u001B\\u009B][[\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]+)*|[a-zA-Z\\d]+(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]*)*)?\\u0007)", "(?:(?:\\d{1,4}(?:;\\d{0,4})*)?[\\dA-PR-TZcf-ntqry=><~]))"].join("|");
          return new RegExp(r2, e3 ? void 0 : "g");
        };
      }, 532: (e2, r2, _2) => {
        const t = _2(511);
        e2.exports = (e3) => typeof e3 === "string" ? e3.replace(t(), "") : e3;
      } };
      var r = {};
      function __nccwpck_require__2(_2) {
        var t = r[_2];
        if (t !== void 0) {
          return t.exports;
        }
        var a = r[_2] = { exports: {} };
        var n = true;
        try {
          e[_2](a, a.exports, __nccwpck_require__2);
          n = false;
        } finally {
          if (n)
            delete r[_2];
        }
        return a.exports;
      }
      if (typeof __nccwpck_require__2 !== "undefined")
        __nccwpck_require__2.ab = __dirname + "/";
      var _ = __nccwpck_require__2(532);
      module2.exports = _;
    })();
  }
});

// ../../../node_modules/caniuse-lite/data/browsers.js
var require_browsers = __commonJS({
  "../../../node_modules/caniuse-lite/data/browsers.js"(exports2, module2) {
    module2.exports = { A: "ie", B: "edge", C: "firefox", D: "chrome", E: "safari", F: "opera", G: "ios_saf", H: "op_mini", I: "android", J: "bb", K: "op_mob", L: "and_chr", M: "and_ff", N: "ie_mob", O: "and_uc", P: "samsung", Q: "and_qq", R: "baidu", S: "kaios" };
  }
});

// ../../../node_modules/caniuse-lite/dist/unpacker/browsers.js
var require_browsers2 = __commonJS({
  "../../../node_modules/caniuse-lite/dist/unpacker/browsers.js"(exports2, module2) {
    module2.exports.browsers = require_browsers();
  }
});

// ../../../node_modules/caniuse-lite/data/browserVersions.js
var require_browserVersions = __commonJS({
  "../../../node_modules/caniuse-lite/data/browserVersions.js"(exports2, module2) {
    module2.exports = { "0": "112", "1": "113", "2": "114", "3": "115", "4": "116", "5": "117", "6": "118", "7": "119", "8": "120", "9": "121", A: "10", B: "11", C: "12", D: "7", E: "8", F: "9", G: "15", H: "80", I: "123", J: "4", K: "6", L: "13", M: "14", N: "16", O: "17", P: "18", Q: "79", R: "81", S: "83", T: "84", U: "85", V: "86", W: "87", X: "88", Y: "89", Z: "90", a: "91", b: "92", c: "93", d: "94", e: "95", f: "96", g: "97", h: "98", i: "99", j: "100", k: "101", l: "102", m: "103", n: "104", o: "105", p: "106", q: "107", r: "108", s: "109", t: "20", u: "21", v: "22", w: "23", x: "24", y: "110", z: "111", AB: "122", BB: "5", CB: "19", DB: "25", EB: "26", FB: "27", GB: "28", HB: "29", IB: "30", JB: "31", KB: "32", LB: "33", MB: "34", NB: "35", OB: "36", PB: "37", QB: "38", RB: "39", SB: "40", TB: "41", UB: "42", VB: "43", WB: "44", XB: "45", YB: "46", ZB: "47", aB: "48", bB: "49", cB: "50", dB: "51", eB: "52", fB: "53", gB: "54", hB: "55", iB: "56", jB: "57", kB: "58", lB: "60", mB: "62", nB: "63", oB: "64", pB: "65", qB: "66", rB: "67", sB: "68", tB: "69", uB: "70", vB: "71", wB: "72", xB: "73", yB: "74", zB: "75", "0B": "76", "1B": "77", "2B": "78", "3B": "124", "4B": "11.1", "5B": "12.1", "6B": "15.5", "7B": "16.0", "8B": "17.0", "9B": "3", AC: "59", BC: "61", CC: "82", DC: "125", EC: "126", FC: "3.2", GC: "10.1", HC: "15.2-15.3", IC: "15.4", JC: "16.1", KC: "16.2", LC: "16.3", MC: "16.4", NC: "16.5", OC: "17.1", PC: "17.2", QC: "17.3", RC: "17.4", SC: "17.5", TC: "11.5", UC: "4.2-4.3", VC: "5.5", WC: "2", XC: "127", YC: "3.5", ZC: "3.6", aC: "3.1", bC: "5.1", cC: "6.1", dC: "7.1", eC: "9.1", fC: "13.1", gC: "14.1", hC: "15.1", iC: "15.6", jC: "16.6", kC: "TP", lC: "9.5-9.6", mC: "10.0-10.1", nC: "10.5", oC: "10.6", pC: "11.6", qC: "4.0-4.1", rC: "5.0-5.1", sC: "6.0-6.1", tC: "7.0-7.1", uC: "8.1-8.4", vC: "9.0-9.2", wC: "9.3", xC: "10.0-10.2", yC: "10.3", zC: "11.0-11.2", "0C": "11.3-11.4", "1C": "12.0-12.1", "2C": "12.2-12.5", "3C": "13.0-13.1", "4C": "13.2", "5C": "13.3", "6C": "13.4-13.7", "7C": "14.0-14.4", "8C": "14.5-14.8", "9C": "15.0-15.1", AD: "15.6-15.8", BD: "16.6-16.7", CD: "all", DD: "2.1", ED: "2.2", FD: "2.3", GD: "4.1", HD: "4.4", ID: "4.4.3-4.4.4", JD: "5.0-5.4", KD: "6.2-6.4", LD: "7.2-7.4", MD: "8.2", ND: "9.2", OD: "11.1-11.2", PD: "12.0", QD: "13.0", RD: "14.0", SD: "15.0", TD: "18.0", UD: "19.0", VD: "14.9", WD: "13.52", XD: "2.5", YD: "3.0-3.1" };
  }
});

// ../../../node_modules/caniuse-lite/dist/unpacker/browserVersions.js
var require_browserVersions2 = __commonJS({
  "../../../node_modules/caniuse-lite/dist/unpacker/browserVersions.js"(exports2, module2) {
    module2.exports.browserVersions = require_browserVersions();
  }
});

// ../../../node_modules/caniuse-lite/data/agents.js
var require_agents = __commonJS({
  "../../../node_modules/caniuse-lite/data/agents.js"(exports2, module2) {
    module2.exports = { A: { A: { K: 0, D: 0, E: 0.028588, F: 0.0571761, A: 0, B: 0.500291, VC: 0 }, B: "ms{ VC: 962323200, K: 998870400, D: 1161129600, E: 1237420800, F: 1300060800, A: 1346716800, B: 1381968e3 } }, B: { A: { "0": 7562e-6, "1": 0.011343, "2": 0.015124, "3": 0.011343, "4": 7562e-6, "5": 0.015124, "6": 0.011343, "7": 0.022686, "8": 0.068058, "9": 0.196612, C: 0, L: 0, M: 0, G: 0, N: 0, O: 7562e-6, P: 0.034029, Q: 0, H: 0, R: 0, S: 0, T: 0, U: 0, V: 0, W: 0, X: 0, Y: 0, Z: 3781e-6, a: 0, b: 0.011343, c: 0, d: 0, e: 0, f: 0, g: 0, h: 0, i: 0, j: 0, k: 0, l: 0, m: 0, n: 0, o: 0, p: 0, q: 7562e-6, r: 7562e-6, s: 0.068058, y: 7562e-6, z: 7562e-6, AB: 3.96249, I: 0.313823 }, B: "webkit", C: ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "C", "L", "M", "G", "N", "O", "P", "Q", "H", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "y", "z", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "AB", "I", "", "", ""], E: "Edge", F: { "0": 1680825600, "1": 1683158400, "2": 1685664e3, "3": 1689897600, "4": 1692576e3, "5": 1694649600, "6": 1697155200, "7": 1698969600, "8": 1701993600, "9": 1706227200, C: 1438128e3, L: 1447286400, M: 1470096e3, G: 1491868800, N: 1508198400, O: 1525046400, P: 1542067200, Q: 1579046400, H: 1581033600, R: 1586736e3, S: 1590019200, T: 1594857600, U: 1598486400, V: 1602201600, W: 1605830400, X: 161136e4, Y: 1614816e3, Z: 1618358400, a: 1622073600, b: 1626912e3, c: 1630627200, d: 1632441600, e: 1634774400, f: 1637539200, g: 1641427200, h: 1643932800, i: 1646265600, j: 1649635200, k: 1651190400, l: 1653955200, m: 1655942400, n: 1659657600, o: 1661990400, p: 1664755200, q: 1666915200, r: 1670198400, s: 1673481600, y: 1675900800, z: 1678665600, AB: 1708732800, I: 1711152e3 }, D: { C: "ms", L: "ms", M: "ms", G: "ms", N: "ms", O: "ms", P: "ms" } }, C: { A: { "0": 3781e-6, "1": 0.011343, "2": 0, "3": 0.385662, "4": 0, "5": 0.011343, "6": 0.079401, "7": 7562e-6, "8": 0.015124, "9": 0.018905, WC: 0, "9B": 0, J: 3781e-6, BB: 0, K: 0, D: 0, E: 0, F: 0, A: 0, B: 0.015124, C: 0, L: 0, M: 0, G: 0, N: 0, O: 0, P: 0, CB: 0, t: 0, u: 0, v: 0, w: 0, x: 0, DB: 0, EB: 0, FB: 0, GB: 0, HB: 0, IB: 0, JB: 0, KB: 0, LB: 0, MB: 0, NB: 0, OB: 0, PB: 0, QB: 0, RB: 0, SB: 0, TB: 0, UB: 0, VB: 0.011343, WB: 7562e-6, XB: 7562e-6, YB: 0, ZB: 0, aB: 0, bB: 0, cB: 3781e-6, dB: 0, eB: 0.049153, fB: 7562e-6, gB: 7562e-6, hB: 0, iB: 0.018905, jB: 0, kB: 0, AC: 3781e-6, lB: 0, BC: 0, mB: 0, nB: 0, oB: 0, pB: 0, qB: 0, rB: 0, sB: 0, tB: 0, uB: 0, vB: 0, wB: 7562e-6, xB: 0, yB: 0, zB: 0, "0B": 0, "1B": 0, "2B": 0.015124, Q: 0, H: 0, R: 0, CC: 0, S: 0, T: 0, U: 0, V: 0, W: 0, X: 7562e-6, Y: 0, Z: 0, a: 3781e-6, b: 0, c: 0, d: 3781e-6, e: 0, f: 0, g: 0, h: 0, i: 0, j: 0, k: 0, l: 0.022686, m: 0.03781, n: 7562e-6, o: 3781e-6, p: 0, q: 0, r: 3781e-6, s: 7562e-6, y: 3781e-6, z: 0, AB: 0.060496, I: 1.08515, "3B": 0.446158, DC: 0, EC: 0, XC: 0, YC: 0, ZC: 0 }, B: "moz", C: ["WC", "9B", "YC", "ZC", "J", "BB", "K", "D", "E", "F", "A", "B", "C", "L", "M", "G", "N", "O", "P", "CB", "t", "u", "v", "w", "x", "DB", "EB", "FB", "GB", "HB", "IB", "JB", "KB", "LB", "MB", "NB", "OB", "PB", "QB", "RB", "SB", "TB", "UB", "VB", "WB", "XB", "YB", "ZB", "aB", "bB", "cB", "dB", "eB", "fB", "gB", "hB", "iB", "jB", "kB", "AC", "lB", "BC", "mB", "nB", "oB", "pB", "qB", "rB", "sB", "tB", "uB", "vB", "wB", "xB", "yB", "zB", "0B", "1B", "2B", "Q", "H", "R", "CC", "S", "T", "U", "V", "W", "X", "Y", "Z", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "y", "z", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "AB", "I", "3B", "DC", "EC", "XC"], E: "Firefox", F: { "0": 1681171200, "1": 1683590400, "2": 1686009600, "3": 1688428800, "4": 1690848e3, "5": 1693267200, "6": 1695686400, "7": 1698105600, "8": 1700524800, "9": 1702944e3, WC: 1161648e3, "9B": 1213660800, YC: 124632e4, ZC: 1264032e3, J: 1300752e3, BB: 1308614400, K: 1313452800, D: 1317081600, E: 1317081600, F: 1320710400, A: 1324339200, B: 1327968e3, C: 1331596800, L: 1335225600, M: 1338854400, G: 1342483200, N: 1346112e3, O: 1349740800, P: 1353628800, CB: 1357603200, t: 1361232e3, u: 1364860800, v: 1368489600, w: 1372118400, x: 1375747200, DB: 1379376e3, EB: 1386633600, FB: 1391472e3, GB: 1395100800, HB: 1398729600, IB: 1402358400, JB: 1405987200, KB: 1409616e3, LB: 1413244800, MB: 1417392e3, NB: 1421107200, OB: 1424736e3, PB: 1428278400, QB: 1431475200, RB: 1435881600, SB: 1439251200, TB: 144288e4, UB: 1446508800, VB: 1450137600, WB: 1453852800, XB: 1457395200, YB: 1461628800, ZB: 1465257600, aB: 1470096e3, bB: 1474329600, cB: 1479168e3, dB: 1485216e3, eB: 1488844800, fB: 149256e4, gB: 1497312e3, hB: 1502150400, iB: 1506556800, jB: 1510617600, kB: 1516665600, AC: 1520985600, lB: 1525824e3, BC: 1529971200, mB: 1536105600, nB: 1540252800, oB: 1544486400, pB: 154872e4, qB: 1552953600, rB: 1558396800, sB: 1562630400, tB: 1567468800, uB: 1571788800, vB: 1575331200, wB: 1578355200, xB: 1581379200, yB: 1583798400, zB: 1586304e3, "0B": 1588636800, "1B": 1591056e3, "2B": 1593475200, Q: 1595894400, H: 1598313600, R: 1600732800, CC: 1603152e3, S: 1605571200, T: 1607990400, U: 1611619200, V: 1614038400, W: 1616457600, X: 1618790400, Y: 1622505600, Z: 1626134400, a: 1628553600, b: 1630972800, c: 1633392e3, d: 1635811200, e: 1638835200, f: 1641859200, g: 1644364800, h: 1646697600, i: 1649116800, j: 1651536e3, k: 1653955200, l: 1656374400, m: 1658793600, n: 1661212800, o: 1663632e3, p: 1666051200, q: 1668470400, r: 1670889600, s: 1673913600, y: 1676332800, z: 1678752e3, AB: 1705968e3, I: 1708387200, "3B": 1710806400, DC: null, EC: null, XC: null } }, D: { A: { "0": 0.041591, "1": 0.083182, "2": 0.094525, "3": 0.03781, "4": 0.219298, "5": 0.124773, "6": 0.105868, "7": 0.181488, "8": 0.446158, "9": 1.68633, J: 0, BB: 0, K: 0, D: 0, E: 0, F: 0, A: 0, B: 0, C: 0, L: 0, M: 0, G: 0, N: 0, O: 0, P: 0, CB: 0, t: 0, u: 0, v: 0, w: 0, x: 0, DB: 0, EB: 0, FB: 0, GB: 0, HB: 0, IB: 0, JB: 0, KB: 0, LB: 0, MB: 3781e-6, NB: 3781e-6, OB: 0, PB: 0, QB: 0.015124, RB: 0, SB: 0, TB: 0, UB: 0, VB: 0, WB: 0, XB: 0, YB: 0, ZB: 7562e-6, aB: 0.022686, bB: 0.026467, cB: 0.011343, dB: 0, eB: 0, fB: 7562e-6, gB: 0, hB: 3781e-6, iB: 0.011343, jB: 0, kB: 0, AC: 0, lB: 7562e-6, BC: 3781e-6, mB: 0, nB: 7562e-6, oB: 0, pB: 3781e-6, qB: 0.022686, rB: 3781e-6, sB: 0.011343, tB: 0.03781, uB: 0.056715, vB: 0.011343, wB: 0.011343, xB: 0.011343, yB: 0.015124, zB: 0.011343, "0B": 0.011343, "1B": 0.026467, "2B": 0.022686, Q: 0.132335, H: 0.022686, R: 0.030248, S: 0.045372, T: 0.011343, U: 0.022686, V: 0.105868, W: 0.086963, X: 0.022686, Y: 0.015124, Z: 0.018905, a: 0.045372, b: 0.022686, c: 0.030248, d: 0.03781, e: 0.011343, f: 0.011343, g: 0.018905, h: 0.07562, i: 0.034029, j: 0.090744, k: 0.158802, l: 0.090744, m: 0.215517, n: 0.166364, o: 0.041591, p: 0.041591, q: 0.034029, r: 0.052934, s: 1.56912, y: 0.049153, z: 0.049153, AB: 12.5832, I: 3.50877, "3B": 0.018905, DC: 3781e-6, EC: 0 }, B: "webkit", C: ["", "", "", "", "", "", "J", "BB", "K", "D", "E", "F", "A", "B", "C", "L", "M", "G", "N", "O", "P", "CB", "t", "u", "v", "w", "x", "DB", "EB", "FB", "GB", "HB", "IB", "JB", "KB", "LB", "MB", "NB", "OB", "PB", "QB", "RB", "SB", "TB", "UB", "VB", "WB", "XB", "YB", "ZB", "aB", "bB", "cB", "dB", "eB", "fB", "gB", "hB", "iB", "jB", "kB", "AC", "lB", "BC", "mB", "nB", "oB", "pB", "qB", "rB", "sB", "tB", "uB", "vB", "wB", "xB", "yB", "zB", "0B", "1B", "2B", "Q", "H", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "y", "z", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "AB", "I", "3B", "DC", "EC"], E: "Chrome", F: { "0": 1680566400, "1": 1682985600, "2": 1685404800, "3": 1689724800, "4": 1692057600, "5": 1694476800, "6": 1696896e3, "7": 1698710400, "8": 1701993600, "9": 1705968e3, J: 1264377600, BB: 1274745600, K: 1283385600, D: 1287619200, E: 1291248e3, F: 1296777600, A: 1299542400, B: 1303862400, C: 1307404800, L: 1312243200, M: 1316131200, G: 1316131200, N: 1319500800, O: 1323734400, P: 1328659200, CB: 1332892800, t: 133704e4, u: 1340668800, v: 1343692800, w: 1348531200, x: 1352246400, DB: 1357862400, EB: 1361404800, FB: 1364428800, GB: 1369094400, HB: 1374105600, IB: 1376956800, JB: 1384214400, KB: 1389657600, LB: 1392940800, MB: 1397001600, NB: 1400544e3, OB: 1405468800, PB: 1409011200, QB: 141264e4, RB: 1416268800, SB: 1421798400, TB: 1425513600, UB: 1429401600, VB: 143208e4, WB: 1437523200, XB: 1441152e3, YB: 1444780800, ZB: 1449014400, aB: 1453248e3, bB: 1456963200, cB: 1460592e3, dB: 1464134400, eB: 1469059200, fB: 1472601600, gB: 1476230400, hB: 1480550400, iB: 1485302400, jB: 1489017600, kB: 149256e4, AC: 1496707200, lB: 1500940800, BC: 1504569600, mB: 1508198400, nB: 1512518400, oB: 1516752e3, pB: 1520294400, qB: 1523923200, rB: 1527552e3, sB: 1532390400, tB: 1536019200, uB: 1539648e3, vB: 1543968e3, wB: 154872e4, xB: 1552348800, yB: 1555977600, zB: 1559606400, "0B": 1564444800, "1B": 1568073600, "2B": 1571702400, Q: 1575936e3, H: 1580860800, R: 1586304e3, S: 1589846400, T: 1594684800, U: 1598313600, V: 1601942400, W: 1605571200, X: 1611014400, Y: 1614556800, Z: 1618272e3, a: 1621987200, b: 1626739200, c: 1630368e3, d: 1632268800, e: 1634601600, f: 1637020800, g: 1641340800, h: 1643673600, i: 1646092800, j: 1648512e3, k: 1650931200, l: 1653350400, m: 1655769600, n: 1659398400, o: 1661817600, p: 1664236800, q: 1666656e3, r: 166968e4, s: 1673308800, y: 1675728e3, z: 1678147200, AB: 1708387200, I: 1710806400, "3B": null, DC: null, EC: null } }, E: { A: { J: 0, BB: 0, K: 0, D: 0, E: 3781e-6, F: 3781e-6, A: 0, B: 0, C: 0, L: 7562e-6, M: 0.03781, G: 7562e-6, aC: 0, FC: 0, bC: 3781e-6, cC: 0, dC: 0, eC: 0.03781, GC: 0, "4B": 7562e-6, "5B": 0.015124, fC: 0.068058, gC: 0.102087, hC: 0.030248, HC: 0.011343, IC: 0.026467, "6B": 0.03781, iC: 0.257108, "7B": 0.030248, JC: 0.052934, KC: 0.049153, LC: 0.11343, MC: 0.03781, NC: 0.071839, jC: 0.381881, "8B": 0.045372, OC: 0.124773, PC: 0.279794, QC: 1.11539, RC: 0.219298, SC: 0, kC: 0 }, B: "webkit", C: ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "aC", "FC", "J", "BB", "bC", "K", "cC", "D", "dC", "E", "F", "eC", "A", "GC", "B", "4B", "C", "5B", "L", "fC", "M", "gC", "G", "hC", "HC", "IC", "6B", "iC", "7B", "JC", "KC", "LC", "MC", "NC", "jC", "8B", "OC", "PC", "QC", "RC", "SC", "kC", ""], E: "Safari", F: { aC: 1205798400, FC: 1226534400, J: 1244419200, BB: 1275868800, bC: 131112e4, K: 1343174400, cC: 13824e5, D: 13824e5, dC: 1410998400, E: 1413417600, F: 1443657600, eC: 1458518400, A: 1474329600, GC: 1490572800, B: 1505779200, "4B": 1522281600, C: 1537142400, "5B": 1553472e3, L: 1568851200, fC: 1585008e3, M: 1600214400, gC: 1619395200, G: 1632096e3, hC: 1635292800, HC: 1639353600, IC: 1647216e3, "6B": 1652745600, iC: 1658275200, "7B": 1662940800, JC: 1666569600, KC: 1670889600, LC: 1674432e3, MC: 1679875200, NC: 1684368e3, jC: 1690156800, "8B": 1695686400, OC: 1698192e3, PC: 1702252800, QC: 1705881600, RC: 1709596800, SC: null, kC: null } }, F: { A: { F: 0, B: 0, C: 0, G: 0, N: 0, O: 0, P: 0, CB: 0, t: 0, u: 0, v: 0, w: 0, x: 0, DB: 0, EB: 0, FB: 0, GB: 3781e-6, HB: 0, IB: 0, JB: 0, KB: 0, LB: 0, MB: 0, NB: 0, OB: 3781e-6, PB: 0, QB: 0, RB: 0, SB: 0, TB: 0, UB: 0, VB: 0, WB: 0, XB: 0, YB: 0.015124, ZB: 0, aB: 0, bB: 0, cB: 0, dB: 0, eB: 0, fB: 0, gB: 0, hB: 0, iB: 0, jB: 0, kB: 0, lB: 0, mB: 0, nB: 0, oB: 0, pB: 0, qB: 0, rB: 0, sB: 0, tB: 0, uB: 0, vB: 0, wB: 0, xB: 0, yB: 0, zB: 0, "0B": 0, "1B": 0, "2B": 0, Q: 0, H: 0, R: 0, CC: 0, S: 0, T: 0, U: 0, V: 0, W: 0, X: 0, Y: 0, Z: 0, a: 0, b: 0, c: 0, d: 0, e: 0.045372, f: 0, g: 0, h: 0, i: 0, j: 0, k: 0, l: 0.045372, m: 0, n: 0, o: 0, p: 0.018905, q: 0.782667, r: 0.15124, s: 0, lC: 0, mC: 0, nC: 0, oC: 0, "4B": 0, TC: 0, pC: 0, "5B": 0 }, B: "webkit", C: ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "F", "lC", "mC", "nC", "oC", "B", "4B", "TC", "pC", "C", "5B", "G", "N", "O", "P", "CB", "t", "u", "v", "w", "x", "DB", "EB", "FB", "GB", "HB", "IB", "JB", "KB", "LB", "MB", "NB", "OB", "PB", "QB", "RB", "SB", "TB", "UB", "VB", "WB", "XB", "YB", "ZB", "aB", "bB", "cB", "dB", "eB", "fB", "gB", "hB", "iB", "jB", "kB", "lB", "mB", "nB", "oB", "pB", "qB", "rB", "sB", "tB", "uB", "vB", "wB", "xB", "yB", "zB", "0B", "1B", "2B", "Q", "H", "R", "CC", "S", "T", "U", "V", "W", "X", "Y", "Z", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "", "", ""], E: "Opera", F: { F: 1150761600, lC: 1223424e3, mC: 1251763200, nC: 1267488e3, oC: 1277942400, B: 1292457600, "4B": 1302566400, TC: 1309219200, pC: 1323129600, C: 1323129600, "5B": 1352073600, G: 1372723200, N: 1377561600, O: 1381104e3, P: 1386288e3, CB: 1390867200, t: 1393891200, u: 1399334400, v: 1401753600, w: 1405987200, x: 1409616e3, DB: 1413331200, EB: 1417132800, FB: 1422316800, GB: 1425945600, HB: 1430179200, IB: 1433808e3, JB: 1438646400, KB: 1442448e3, LB: 1445904e3, MB: 1449100800, NB: 1454371200, OB: 1457308800, PB: 146232e4, QB: 1465344e3, RB: 1470096e3, SB: 1474329600, TB: 1477267200, UB: 1481587200, VB: 1486425600, WB: 1490054400, XB: 1494374400, YB: 1498003200, ZB: 1502236800, aB: 1506470400, bB: 1510099200, cB: 1515024e3, dB: 1517961600, eB: 1521676800, fB: 1525910400, gB: 1530144e3, hB: 1534982400, iB: 1537833600, jB: 1543363200, kB: 1548201600, lB: 1554768e3, mB: 1561593600, nB: 1566259200, oB: 1570406400, pB: 1573689600, qB: 1578441600, rB: 1583971200, sB: 1587513600, tB: 1592956800, uB: 1595894400, vB: 1600128e3, wB: 1603238400, xB: 161352e4, yB: 1612224e3, zB: 1616544e3, "0B": 1619568e3, "1B": 1623715200, "2B": 1627948800, Q: 1631577600, H: 1633392e3, R: 1635984e3, CC: 1638403200, S: 1642550400, T: 1644969600, U: 1647993600, V: 1650412800, W: 1652745600, X: 1654646400, Y: 1657152e3, Z: 1660780800, a: 1663113600, b: 1668816e3, c: 1668643200, d: 1671062400, e: 1675209600, f: 1677024e3, g: 1679529600, h: 1681948800, i: 1684195200, j: 1687219200, k: 1690329600, l: 1692748800, m: 1696204800, n: 169992e4, o: 169992e4, p: 1702944e3, q: 1707264e3, r: 1710115200, s: 1711497600 }, D: { F: "o", B: "o", C: "o", lC: "o", mC: "o", nC: "o", oC: "o", "4B": "o", TC: "o", pC: "o", "5B": "o" } }, G: { A: { E: 0, FC: 0, qC: 0, UC: 300253e-8, rC: 150127e-8, sC: 90076e-7, tC: 0.0105089, uC: 300253e-8, vC: 600507e-8, wC: 0.0375317, xC: 600507e-8, yC: 0.0630532, zC: 0.045038, "0C": 0.0165139, "1C": 0.0135114, "2C": 0.259719, "3C": 45038e-7, "4C": 0.045038, "5C": 0.0135114, "6C": 0.0510431, "7C": 0.1186, "8C": 0.153129, "9C": 0.0660557, HC: 0.0780659, IC: 0.0915773, "6B": 0.117099, AD: 0.980327, "7B": 0.2372, JC: 0.493917, KC: 0.238701, LC: 0.423357, MC: 0.090076, NC: 0.190661, BD: 1.44422, "8B": 0.187658, OC: 0.378319, PC: 0.60501, QC: 7.43127, RC: 1.09142, SC: 0 }, B: "webkit", C: ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "FC", "qC", "UC", "rC", "sC", "tC", "E", "uC", "vC", "wC", "xC", "yC", "zC", "0C", "1C", "2C", "3C", "4C", "5C", "6C", "7C", "8C", "9C", "HC", "IC", "6B", "AD", "7B", "JC", "KC", "LC", "MC", "NC", "BD", "8B", "OC", "PC", "QC", "RC", "SC", "", ""], E: "Safari on iOS", F: { FC: 1270252800, qC: 1283904e3, UC: 1299628800, rC: 1331078400, sC: 1359331200, tC: 1394409600, E: 1410912e3, uC: 1413763200, vC: 1442361600, wC: 1458518400, xC: 1473724800, yC: 1490572800, zC: 1505779200, "0C": 1522281600, "1C": 1537142400, "2C": 1553472e3, "3C": 1568851200, "4C": 1572220800, "5C": 1580169600, "6C": 1585008e3, "7C": 1600214400, "8C": 1619395200, "9C": 1632096e3, HC: 1639353600, IC: 1647216e3, "6B": 1652659200, AD: 1658275200, "7B": 1662940800, JC: 1666569600, KC: 1670889600, LC: 1674432e3, MC: 1679875200, NC: 1684368e3, BD: 1690156800, "8B": 1694995200, OC: 1698192e3, PC: 1702252800, QC: 1705881600, RC: 1709596800, SC: null } }, H: { A: { CD: 0.09 }, B: "opera Mini", F: { CD: 1426464e3 } }, I: { A: { "9B": 0, J: 628119e-10, I: 0.625607, DD: 0, ED: 0, FD: 0, GD: 628119e-10, UC: 376871e-9, HD: 0, ID: 150749e-8 }, B: "webkitndroid Browser", F: { DD: 1256515200, ED: 1274313600, FD: 1291593600, "9B": 1298332800, J: 1318896e3, GD: 1341792e3, UC: 1374624e3, HD: 1386547200, ID: 1401667200, I: 1710806400 } }, J: { A: { D: 0, A: 0 }, B: "webkitlackberry Browser", F: { D: 1325376e3, A: 1359504e3 } }, K: { A: { A: 0, B: 0, C: 0, H: 1.25952, "4B": 0, TC: 0, "5B": 0 }, B: "opera Mobile", F: { A: 1287100800, B: 1300752e3, "4B": 1314835200, TC: 1318291200, C: 1330300800, "5B": 1349740800, H: 1709769600 }, D: { H: "webkit" } }, L: { A: { I: 42.2934 }, B: "webkithrome for Android", F: { I: 1710806400 } }, M: { A: { "3B": 0.298512 }, B: "mozirefox for Android", F: { "3B": 1710806400 } }, N: { A: { A: 0, B: 0 }, B: "msobile", F: { A: 1340150400, B: 1353456e3 } }, O: { A: { "6B": 0.889317 }, B: "webkitrowser for Android", F: { "6B": 1710115200 }, D: { "6B": "webkit" } }, P: { A: { J: 0.14052, t: 0.0324276, u: 0.0648553, v: 0.0756645, w: 1.08092, x: 1.15659, JD: 0.0108092, KD: 0, LD: 0.0432369, MD: 0, ND: 0, GC: 0, OD: 0.0108092, PD: 0, QD: 0.0108092, RD: 0, SD: 0, "7B": 0.0108092, "8B": 0.0324276, TD: 0.0216184, UD: 0.0324276 }, B: "webkitt", "u", "v", "w", "x", "", "", ""], E: "Samsung Internet", F: { J: 1461024e3, JD: 1481846400, KD: 1509408e3, LD: 1528329600, MD: 1546128e3, ND: 1554163200, GC: 1567900800, OD: 1582588800, PD: 1593475200, QD: 1605657600, RD: 1618531200, SD: 1629072e3, "7B": 1640736e3, "8B": 1651708800, TD: 1659657600, UD: 1667260800, t: 1677369600, u: 1684454400, v: 1689292800, w: 1697587200, x: 1711497600 } }, Q: { A: { VD: 0.236322 }, B: "webkitrowser", F: { VD: 1710288e3 } }, R: { A: { WD: 0 }, B: "webkitaidu Browser", F: { WD: 1710201600 } }, S: { A: { XD: 0.080847, YD: 0 }, B: "mozaiOS Browser", F: { XD: 1527811200, YD: 1631664e3 } } };
  }
});

// ../../../node_modules/caniuse-lite/dist/unpacker/agents.js
var require_agents2 = __commonJS({
  "../../../node_modules/caniuse-lite/dist/unpacker/agents.js"(exports2, module2) {
    "use strict";
    var browsers = require_browsers2().browsers;
    var versions = require_browserVersions2().browserVersions;
    var agentsData = require_agents();
    function unpackBrowserVersions(versionsData) {
      return Object.keys(versionsData).reduce((usage, version) => {
        usage[versions[version]] = versionsData[version];
        return usage;
      }, {});
    }
    module2.exports.agents = Object.keys(agentsData).reduce((map, key) => {
      let versionsData = agentsData[key];
      map[browsers[key]] = Object.keys(versionsData).reduce((data2, entry) => {
        if (entry === "A") {
          data2.usage_global = unpackBrowserVersions(versionsData[entry]);
        } else if (entry === "C") {
          data2.versions = versionsData[entry].reduce((list, version) => {
            if (version === "") {
              list.push(null);
            } else {
              list.push(versions[version]);
            }
            return list;
          }, []);
        } else if (entry === "D") {
          data2.prefix_exceptions = unpackBrowserVersions(versionsData[entry]);
        } else if (entry === "E") {
          data2.browser = versionsData[entry];
        } else if (entry === "F") {
          data2.release_date = Object.keys(versionsData[entry]).reduce(
            (map2, key2) => {
              map2[versions[key2]] = versionsData[entry][key2];
              return map2;
            },
            {}
          );
        } else {
          data2.prefix = versionsData[entry];
        }
        return data2;
      }, {});
      return map;
    }, {});
  }
});

// ../../../node_modules/caniuse-lite/dist/lib/statuses.js
var require_statuses = __commonJS({
  "../../../node_modules/caniuse-lite/dist/lib/statuses.js"(exports2, module2) {
    module2.exports = {
      1: "ls",
      // WHATWG Living Standard
      2: "rec",
      // W3C Recommendation
      3: "pr",
      // W3C Proposed Recommendation
      4: "cr",
      // W3C Candidate Recommendation
      5: "wd",
      // W3C Working Draft
      6: "other",
      // Non-W3C, but reputable
      7: "unoff"
      // Unofficial, Editor's Draft or W3C "Note"
    };
  }
});

// ../../../node_modules/caniuse-lite/dist/lib/supported.js
var require_supported = __commonJS({
  "../../../node_modules/caniuse-lite/dist/lib/supported.js"(exports2, module2) {
    module2.exports = {
      y: 1 << 0,
      n: 1 << 1,
      a: 1 << 2,
      p: 1 << 3,
      u: 1 << 4,
      x: 1 << 5,
      d: 1 << 6
    };
  }
});

// ../../../node_modules/caniuse-lite/dist/unpacker/feature.js
var require_feature = __commonJS({
  "../../../node_modules/caniuse-lite/dist/unpacker/feature.js"(exports2, module2) {
    "use strict";
    var statuses = require_statuses();
    var supported = require_supported();
    var browsers = require_browsers2().browsers;
    var versions = require_browserVersions2().browserVersions;
    var MATH2LOG = Math.log(2);
    function unpackSupport(cipher) {
      let stats2 = Object.keys(supported).reduce((list, support) => {
        if (cipher & supported[support])
          list.push(support);
        return list;
      }, []);
      let notes = cipher >> 7;
      let notesArray = [];
      while (notes) {
        let note = Math.floor(Math.log(notes) / MATH2LOG) + 1;
        notesArray.unshift(`#${note}`);
        notes -= Math.pow(2, note - 1);
      }
      return stats2.concat(notesArray).join(" ");
    }
    function unpackFeature(packed) {
      let unpacked = {
        status: statuses[packed.B],
        title: packed.C,
        shown: packed.D
      };
      unpacked.stats = Object.keys(packed.A).reduce((browserStats, key) => {
        let browser = packed.A[key];
        browserStats[browsers[key]] = Object.keys(browser).reduce(
          (stats2, support) => {
            let packedVersions = browser[support].split(" ");
            let unpacked2 = unpackSupport(support);
            packedVersions.forEach((v) => stats2[versions[v]] = unpacked2);
            return stats2;
          },
          {}
        );
        return browserStats;
      }, {});
      return unpacked;
    }
    module2.exports = unpackFeature;
    module2.exports.default = unpackFeature;
  }
});

// ../../../node_modules/caniuse-lite/dist/unpacker/region.js
var require_region = __commonJS({
  "../../../node_modules/caniuse-lite/dist/unpacker/region.js"(exports2, module2) {
    "use strict";
    var browsers = require_browsers2().browsers;
    function unpackRegion(packed) {
      return Object.keys(packed).reduce((list, browser) => {
        let data2 = packed[browser];
        list[browsers[browser]] = Object.keys(data2).reduce((memo, key) => {
          let stats2 = data2[key];
          if (key === "_") {
            stats2.split(" ").forEach((version) => memo[version] = null);
          } else {
            memo[key] = stats2;
          }
          return memo;
        }, {});
        return list;
      }, {});
    }
    module2.exports = unpackRegion;
    module2.exports.default = unpackRegion;
  }
});

// ../../../node_modules/next/dist/compiled/browserslist/index.js
var require_browserslist = __commonJS({
  "../../../node_modules/next/dist/compiled/browserslist/index.js"(exports, module) {
    (() => {
      var __webpack_modules__ = { 349: (e) => {
        function BrowserslistError2(e2) {
          this.name = "BrowserslistError";
          this.message = e2;
          this.browserslist = true;
          if (Error.captureStackTrace) {
            Error.captureStackTrace(this, BrowserslistError2);
          }
        }
        BrowserslistError2.prototype = Error.prototype;
        e.exports = BrowserslistError2;
      }, 655: (e, s, r) => {
        var n = r(750);
        var t = r(768).agents;
        var a = r(629);
        var i = r(17);
        var o = r(314);
        var l = r(349);
        var f = r(65);
        var u = r(328);
        var d = 365.259641 * 24 * 60 * 60 * 1e3;
        var c = "37";
        var v = 14;
        function isVersionsMatch(e2, s2) {
          return (e2 + ".").indexOf(s2 + ".") === 0;
        }
        function isEolReleased(e2) {
          var s2 = e2.slice(1);
          return browserslist.nodeVersions.some(function(e3) {
            return isVersionsMatch(e3, s2);
          });
        }
        function normalize(e2) {
          return e2.filter(function(e3) {
            return typeof e3 === "string";
          });
        }
        function normalizeElectron(e2) {
          var s2 = e2;
          if (e2.split(".").length === 3) {
            s2 = e2.split(".").slice(0, -1).join(".");
          }
          return s2;
        }
        function nameMapper(e2) {
          return function mapName(s2) {
            return e2 + " " + s2;
          };
        }
        function getMajor(e2) {
          return parseInt(e2.split(".")[0]);
        }
        function getMajorVersions(e2, s2) {
          if (e2.length === 0)
            return [];
          var r2 = uniq(e2.map(getMajor));
          var n2 = r2[r2.length - s2];
          if (!n2) {
            return e2;
          }
          var t2 = [];
          for (var a2 = e2.length - 1; a2 >= 0; a2--) {
            if (n2 > getMajor(e2[a2]))
              break;
            t2.unshift(e2[a2]);
          }
          return t2;
        }
        function uniq(e2) {
          var s2 = [];
          for (var r2 = 0; r2 < e2.length; r2++) {
            if (s2.indexOf(e2[r2]) === -1)
              s2.push(e2[r2]);
          }
          return s2;
        }
        function fillUsage(e2, s2, r2) {
          for (var n2 in r2) {
            e2[s2 + " " + n2] = r2[n2];
          }
        }
        function generateFilter(e2, s2) {
          s2 = parseFloat(s2);
          if (e2 === ">") {
            return function(e3) {
              return parseFloat(e3) > s2;
            };
          } else if (e2 === ">=") {
            return function(e3) {
              return parseFloat(e3) >= s2;
            };
          } else if (e2 === "<") {
            return function(e3) {
              return parseFloat(e3) < s2;
            };
          } else {
            return function(e3) {
              return parseFloat(e3) <= s2;
            };
          }
        }
        function generateSemverFilter(e2, s2) {
          s2 = s2.split(".").map(parseSimpleInt);
          s2[1] = s2[1] || 0;
          s2[2] = s2[2] || 0;
          if (e2 === ">") {
            return function(e3) {
              e3 = e3.split(".").map(parseSimpleInt);
              return compareSemver(e3, s2) > 0;
            };
          } else if (e2 === ">=") {
            return function(e3) {
              e3 = e3.split(".").map(parseSimpleInt);
              return compareSemver(e3, s2) >= 0;
            };
          } else if (e2 === "<") {
            return function(e3) {
              e3 = e3.split(".").map(parseSimpleInt);
              return compareSemver(s2, e3) > 0;
            };
          } else {
            return function(e3) {
              e3 = e3.split(".").map(parseSimpleInt);
              return compareSemver(s2, e3) >= 0;
            };
          }
        }
        function parseSimpleInt(e2) {
          return parseInt(e2);
        }
        function compare(e2, s2) {
          if (e2 < s2)
            return -1;
          if (e2 > s2)
            return 1;
          return 0;
        }
        function compareSemver(e2, s2) {
          return compare(parseInt(e2[0]), parseInt(s2[0])) || compare(parseInt(e2[1] || "0"), parseInt(s2[1] || "0")) || compare(parseInt(e2[2] || "0"), parseInt(s2[2] || "0"));
        }
        function semverFilterLoose(e2, s2) {
          s2 = s2.split(".").map(parseSimpleInt);
          if (typeof s2[1] === "undefined") {
            s2[1] = "x";
          }
          switch (e2) {
            case "<=":
              return function(e3) {
                e3 = e3.split(".").map(parseSimpleInt);
                return compareSemverLoose(e3, s2) <= 0;
              };
            case ">=":
            default:
              return function(e3) {
                e3 = e3.split(".").map(parseSimpleInt);
                return compareSemverLoose(e3, s2) >= 0;
              };
          }
        }
        function compareSemverLoose(e2, s2) {
          if (e2[0] !== s2[0]) {
            return e2[0] < s2[0] ? -1 : 1;
          }
          if (s2[1] === "x") {
            return 0;
          }
          if (e2[1] !== s2[1]) {
            return e2[1] < s2[1] ? -1 : 1;
          }
          return 0;
        }
        function resolveVersion(e2, s2) {
          if (e2.versions.indexOf(s2) !== -1) {
            return s2;
          } else if (browserslist.versionAliases[e2.name][s2]) {
            return browserslist.versionAliases[e2.name][s2];
          } else {
            return false;
          }
        }
        function normalizeVersion(e2, s2) {
          var r2 = resolveVersion(e2, s2);
          if (r2) {
            return r2;
          } else if (e2.versions.length === 1) {
            return e2.versions[0];
          } else {
            return false;
          }
        }
        function filterByYear(e2, s2) {
          e2 = e2 / 1e3;
          return Object.keys(t).reduce(function(r2, n2) {
            var t2 = byName(n2, s2);
            if (!t2)
              return r2;
            var a2 = Object.keys(t2.releaseDate).filter(function(s3) {
              var r3 = t2.releaseDate[s3];
              return r3 !== null && r3 >= e2;
            });
            return r2.concat(a2.map(nameMapper(t2.name)));
          }, []);
        }
        function cloneData(e2) {
          return { name: e2.name, versions: e2.versions, released: e2.released, releaseDate: e2.releaseDate };
        }
        function byName(e2, s2) {
          e2 = e2.toLowerCase();
          e2 = browserslist.aliases[e2] || e2;
          if (s2.mobileToDesktop && browserslist.desktopNames[e2]) {
            var r2 = browserslist.data[browserslist.desktopNames[e2]];
            if (e2 === "android") {
              return normalizeAndroidData(cloneData(browserslist.data[e2]), r2);
            } else {
              var n2 = cloneData(r2);
              n2.name = e2;
              return n2;
            }
          }
          return browserslist.data[e2];
        }
        function normalizeAndroidVersions(e2, s2) {
          var r2 = s2.indexOf(c);
          return e2.filter(function(e3) {
            return /^(?:[2-4]\.|[34]$)/.test(e3);
          }).concat(s2.slice(r2));
        }
        function copyObject(e2) {
          var s2 = {};
          for (var r2 in e2) {
            s2[r2] = e2[r2];
          }
          return s2;
        }
        function normalizeAndroidData(e2, s2) {
          e2.released = normalizeAndroidVersions(e2.released, s2.released);
          e2.versions = normalizeAndroidVersions(e2.versions, s2.versions);
          e2.releaseDate = copyObject(e2.releaseDate);
          e2.released.forEach(function(r2) {
            if (e2.releaseDate[r2] === void 0) {
              e2.releaseDate[r2] = s2.releaseDate[r2];
            }
          });
          return e2;
        }
        function checkName(e2, s2) {
          var r2 = byName(e2, s2);
          if (!r2)
            throw new l("Unknown browser " + e2);
          return r2;
        }
        function unknownQuery(e2) {
          return new l("Unknown browser query `" + e2 + "`. Maybe you are using old Browserslist or made typo in query.");
        }
        function filterJumps(e2, s2, r2, n2) {
          var t2 = 1;
          switch (s2) {
            case "android":
              if (n2.mobileToDesktop)
                return e2;
              var a2 = browserslist.data.chrome.released;
              t2 = a2.length - a2.indexOf(c);
              break;
            case "op_mob":
              var i2 = browserslist.data.op_mob.released.slice(-1)[0];
              t2 = getMajor(i2) - v + 1;
              break;
            default:
              return e2;
          }
          if (r2 <= t2) {
            return e2.slice(-1);
          }
          return e2.slice(t2 - 1 - r2);
        }
        function isSupported(e2, s2) {
          return typeof e2 === "string" && (e2.indexOf("y") >= 0 || s2 && e2.indexOf("a") >= 0);
        }
        function resolve(e2, s2) {
          return f(p, e2).reduce(function(e3, r2, n2) {
            if (r2.not && n2 === 0) {
              throw new l("Write any browsers query (for instance, `defaults`) before `" + r2.query + "`");
            }
            var t2 = p[r2.type];
            var a2 = t2.select.call(browserslist, s2, r2).map(function(e4) {
              var r3 = e4.split(" ");
              if (r3[1] === "0") {
                return r3[0] + " " + byName(r3[0], s2).versions[0];
              } else {
                return e4;
              }
            });
            if (r2.compose === "and") {
              if (r2.not) {
                return e3.filter(function(e4) {
                  return a2.indexOf(e4) === -1;
                });
              } else {
                return e3.filter(function(e4) {
                  return a2.indexOf(e4) !== -1;
                });
              }
            } else {
              if (r2.not) {
                var i2 = {};
                a2.forEach(function(e4) {
                  i2[e4] = true;
                });
                return e3.filter(function(e4) {
                  return !i2[e4];
                });
              }
              return e3.concat(a2);
            }
          }, []);
        }
        function prepareOpts(e2) {
          if (typeof e2 === "undefined")
            e2 = {};
          if (typeof e2.path === "undefined") {
            e2.path = i.resolve ? i.resolve(".") : ".";
          }
          return e2;
        }
        function prepareQueries(e2, s2) {
          if (typeof e2 === "undefined" || e2 === null) {
            var r2 = browserslist.loadConfig(s2);
            if (r2) {
              e2 = r2;
            } else {
              e2 = browserslist.defaults;
            }
          }
          return e2;
        }
        function checkQueries(e2) {
          if (!(typeof e2 === "string" || Array.isArray(e2))) {
            throw new l("Browser queries must be an array or string. Got " + typeof e2 + ".");
          }
        }
        var m = {};
        function browserslist(e2, s2) {
          s2 = prepareOpts(s2);
          e2 = prepareQueries(e2, s2);
          checkQueries(e2);
          var r2 = { ignoreUnknownVersions: s2.ignoreUnknownVersions, dangerousExtend: s2.dangerousExtend, mobileToDesktop: s2.mobileToDesktop, path: s2.path, env: s2.env };
          u.oldDataWarning(browserslist.data);
          var n2 = u.getStat(s2, browserslist.data);
          if (n2) {
            r2.customUsage = {};
            for (var t2 in n2) {
              fillUsage(r2.customUsage, t2, n2[t2]);
            }
          }
          var a2 = JSON.stringify([e2, r2]);
          if (m[a2])
            return m[a2];
          var i2 = uniq(resolve(e2, r2)).sort(function(e3, s3) {
            e3 = e3.split(" ");
            s3 = s3.split(" ");
            if (e3[0] === s3[0]) {
              var r3 = e3[1].split("-")[0];
              var n3 = s3[1].split("-")[0];
              return compareSemver(n3.split("."), r3.split("."));
            } else {
              return compare(e3[0], s3[0]);
            }
          });
          if (!u.env.BROWSERSLIST_DISABLE_CACHE) {
            m[a2] = i2;
          }
          return i2;
        }
        browserslist.parse = function(e2, s2) {
          s2 = prepareOpts(s2);
          e2 = prepareQueries(e2, s2);
          checkQueries(e2);
          return f(p, e2);
        };
        browserslist.cache = {};
        browserslist.data = {};
        browserslist.usage = { global: {}, custom: null };
        browserslist.defaults = ["> 0.5%", "last 2 versions", "Firefox ESR", "not dead"];
        browserslist.aliases = { fx: "firefox", ff: "firefox", ios: "ios_saf", explorer: "ie", blackberry: "bb", explorermobile: "ie_mob", operamini: "op_mini", operamobile: "op_mob", chromeandroid: "and_chr", firefoxandroid: "and_ff", ucandroid: "and_uc", qqandroid: "and_qq" };
        browserslist.desktopNames = { and_chr: "chrome", and_ff: "firefox", ie_mob: "ie", android: "chrome" };
        browserslist.versionAliases = {};
        browserslist.clearCaches = u.clearCaches;
        browserslist.parseConfig = u.parseConfig;
        browserslist.readConfig = u.readConfig;
        browserslist.findConfig = u.findConfig;
        browserslist.loadConfig = u.loadConfig;
        browserslist.coverage = function(e2, s2) {
          var r2;
          if (typeof s2 === "undefined") {
            r2 = browserslist.usage.global;
          } else if (s2 === "my stats") {
            var n2 = {};
            n2.path = i.resolve ? i.resolve(".") : ".";
            var t2 = u.getStat(n2);
            if (!t2) {
              throw new l("Custom usage statistics was not provided");
            }
            r2 = {};
            for (var a2 in t2) {
              fillUsage(r2, a2, t2[a2]);
            }
          } else if (typeof s2 === "string") {
            if (s2.length > 2) {
              s2 = s2.toLowerCase();
            } else {
              s2 = s2.toUpperCase();
            }
            u.loadCountry(browserslist.usage, s2, browserslist.data);
            r2 = browserslist.usage[s2];
          } else {
            if ("dataByBrowser" in s2) {
              s2 = s2.dataByBrowser;
            }
            r2 = {};
            for (var o2 in s2) {
              for (var f2 in s2[o2]) {
                r2[o2 + " " + f2] = s2[o2][f2];
              }
            }
          }
          return e2.reduce(function(e3, s3) {
            var n3 = r2[s3];
            if (n3 === void 0) {
              n3 = r2[s3.replace(/ \S+$/, " 0")];
            }
            return e3 + (n3 || 0);
          }, 0);
        };
        function nodeQuery(e2, s2) {
          var r2 = browserslist.nodeVersions.filter(function(e3) {
            return isVersionsMatch(e3, s2.version);
          });
          if (r2.length === 0) {
            if (e2.ignoreUnknownVersions) {
              return [];
            } else {
              throw new l("Unknown version " + s2.version + " of Node.js");
            }
          }
          return ["node " + r2[r2.length - 1]];
        }
        function sinceQuery(e2, s2) {
          var r2 = parseInt(s2.year);
          var n2 = parseInt(s2.month || "01") - 1;
          var t2 = parseInt(s2.day || "01");
          return filterByYear(Date.UTC(r2, n2, t2, 0, 0, 0), e2);
        }
        function coverQuery(e2, s2) {
          var r2 = parseFloat(s2.coverage);
          var n2 = browserslist.usage.global;
          if (s2.place) {
            if (s2.place.match(/^my\s+stats$/i)) {
              if (!e2.customUsage) {
                throw new l("Custom usage statistics was not provided");
              }
              n2 = e2.customUsage;
            } else {
              var t2;
              if (s2.place.length === 2) {
                t2 = s2.place.toUpperCase();
              } else {
                t2 = s2.place.toLowerCase();
              }
              u.loadCountry(browserslist.usage, t2, browserslist.data);
              n2 = browserslist.usage[t2];
            }
          }
          var a2 = Object.keys(n2).sort(function(e3, s3) {
            return n2[s3] - n2[e3];
          });
          var i2 = 0;
          var o2 = [];
          var f2;
          for (var d2 = 0; d2 < a2.length; d2++) {
            f2 = a2[d2];
            if (n2[f2] === 0)
              break;
            i2 += n2[f2];
            o2.push(f2);
            if (i2 >= r2)
              break;
          }
          return o2;
        }
        var p = { last_major_versions: { matches: ["versions"], regexp: /^last\s+(\d+)\s+major\s+versions?$/i, select: function(e2, s2) {
          return Object.keys(t).reduce(function(r2, n2) {
            var t2 = byName(n2, e2);
            if (!t2)
              return r2;
            var a2 = getMajorVersions(t2.released, s2.versions);
            a2 = a2.map(nameMapper(t2.name));
            a2 = filterJumps(a2, t2.name, s2.versions, e2);
            return r2.concat(a2);
          }, []);
        } }, last_versions: { matches: ["versions"], regexp: /^last\s+(\d+)\s+versions?$/i, select: function(e2, s2) {
          return Object.keys(t).reduce(function(r2, n2) {
            var t2 = byName(n2, e2);
            if (!t2)
              return r2;
            var a2 = t2.released.slice(-s2.versions);
            a2 = a2.map(nameMapper(t2.name));
            a2 = filterJumps(a2, t2.name, s2.versions, e2);
            return r2.concat(a2);
          }, []);
        } }, last_electron_major_versions: { matches: ["versions"], regexp: /^last\s+(\d+)\s+electron\s+major\s+versions?$/i, select: function(e2, s2) {
          var r2 = getMajorVersions(Object.keys(o), s2.versions);
          return r2.map(function(e3) {
            return "chrome " + o[e3];
          });
        } }, last_node_major_versions: { matches: ["versions"], regexp: /^last\s+(\d+)\s+node\s+major\s+versions?$/i, select: function(e2, s2) {
          return getMajorVersions(browserslist.nodeVersions, s2.versions).map(function(e3) {
            return "node " + e3;
          });
        } }, last_browser_major_versions: { matches: ["versions", "browser"], regexp: /^last\s+(\d+)\s+(\w+)\s+major\s+versions?$/i, select: function(e2, s2) {
          var r2 = checkName(s2.browser, e2);
          var n2 = getMajorVersions(r2.released, s2.versions);
          var t2 = n2.map(nameMapper(r2.name));
          t2 = filterJumps(t2, r2.name, s2.versions, e2);
          return t2;
        } }, last_electron_versions: { matches: ["versions"], regexp: /^last\s+(\d+)\s+electron\s+versions?$/i, select: function(e2, s2) {
          return Object.keys(o).slice(-s2.versions).map(function(e3) {
            return "chrome " + o[e3];
          });
        } }, last_node_versions: { matches: ["versions"], regexp: /^last\s+(\d+)\s+node\s+versions?$/i, select: function(e2, s2) {
          return browserslist.nodeVersions.slice(-s2.versions).map(function(e3) {
            return "node " + e3;
          });
        } }, last_browser_versions: { matches: ["versions", "browser"], regexp: /^last\s+(\d+)\s+(\w+)\s+versions?$/i, select: function(e2, s2) {
          var r2 = checkName(s2.browser, e2);
          var n2 = r2.released.slice(-s2.versions).map(nameMapper(r2.name));
          n2 = filterJumps(n2, r2.name, s2.versions, e2);
          return n2;
        } }, unreleased_versions: { matches: [], regexp: /^unreleased\s+versions$/i, select: function(e2) {
          return Object.keys(t).reduce(function(s2, r2) {
            var n2 = byName(r2, e2);
            if (!n2)
              return s2;
            var t2 = n2.versions.filter(function(e3) {
              return n2.released.indexOf(e3) === -1;
            });
            t2 = t2.map(nameMapper(n2.name));
            return s2.concat(t2);
          }, []);
        } }, unreleased_electron_versions: { matches: [], regexp: /^unreleased\s+electron\s+versions?$/i, select: function() {
          return [];
        } }, unreleased_browser_versions: { matches: ["browser"], regexp: /^unreleased\s+(\w+)\s+versions?$/i, select: function(e2, s2) {
          var r2 = checkName(s2.browser, e2);
          return r2.versions.filter(function(e3) {
            return r2.released.indexOf(e3) === -1;
          }).map(nameMapper(r2.name));
        } }, last_years: { matches: ["years"], regexp: /^last\s+(\d*.?\d+)\s+years?$/i, select: function(e2, s2) {
          return filterByYear(Date.now() - d * s2.years, e2);
        } }, since_y: { matches: ["year"], regexp: /^since (\d+)$/i, select: sinceQuery }, since_y_m: { matches: ["year", "month"], regexp: /^since (\d+)-(\d+)$/i, select: sinceQuery }, since_y_m_d: { matches: ["year", "month", "day"], regexp: /^since (\d+)-(\d+)-(\d+)$/i, select: sinceQuery }, popularity: { matches: ["sign", "popularity"], regexp: /^(>=?|<=?)\s*(\d+|\d+\.\d+|\.\d+)%$/, select: function(e2, s2) {
          var r2 = parseFloat(s2.popularity);
          var n2 = browserslist.usage.global;
          return Object.keys(n2).reduce(function(e3, t2) {
            if (s2.sign === ">") {
              if (n2[t2] > r2) {
                e3.push(t2);
              }
            } else if (s2.sign === "<") {
              if (n2[t2] < r2) {
                e3.push(t2);
              }
            } else if (s2.sign === "<=") {
              if (n2[t2] <= r2) {
                e3.push(t2);
              }
            } else if (n2[t2] >= r2) {
              e3.push(t2);
            }
            return e3;
          }, []);
        } }, popularity_in_my_stats: { matches: ["sign", "popularity"], regexp: /^(>=?|<=?)\s*(\d+|\d+\.\d+|\.\d+)%\s+in\s+my\s+stats$/, select: function(e2, s2) {
          var r2 = parseFloat(s2.popularity);
          if (!e2.customUsage) {
            throw new l("Custom usage statistics was not provided");
          }
          var n2 = e2.customUsage;
          return Object.keys(n2).reduce(function(e3, t2) {
            var a2 = n2[t2];
            if (a2 == null) {
              return e3;
            }
            if (s2.sign === ">") {
              if (a2 > r2) {
                e3.push(t2);
              }
            } else if (s2.sign === "<") {
              if (a2 < r2) {
                e3.push(t2);
              }
            } else if (s2.sign === "<=") {
              if (a2 <= r2) {
                e3.push(t2);
              }
            } else if (a2 >= r2) {
              e3.push(t2);
            }
            return e3;
          }, []);
        } }, popularity_in_config_stats: { matches: ["sign", "popularity", "config"], regexp: /^(>=?|<=?)\s*(\d+|\d+\.\d+|\.\d+)%\s+in\s+(\S+)\s+stats$/, select: function(e2, s2) {
          var r2 = parseFloat(s2.popularity);
          var n2 = u.loadStat(e2, s2.config, browserslist.data);
          if (n2) {
            e2.customUsage = {};
            for (var t2 in n2) {
              fillUsage(e2.customUsage, t2, n2[t2]);
            }
          }
          if (!e2.customUsage) {
            throw new l("Custom usage statistics was not provided");
          }
          var a2 = e2.customUsage;
          return Object.keys(a2).reduce(function(e3, n3) {
            var t3 = a2[n3];
            if (t3 == null) {
              return e3;
            }
            if (s2.sign === ">") {
              if (t3 > r2) {
                e3.push(n3);
              }
            } else if (s2.sign === "<") {
              if (t3 < r2) {
                e3.push(n3);
              }
            } else if (s2.sign === "<=") {
              if (t3 <= r2) {
                e3.push(n3);
              }
            } else if (t3 >= r2) {
              e3.push(n3);
            }
            return e3;
          }, []);
        } }, popularity_in_place: { matches: ["sign", "popularity", "place"], regexp: /^(>=?|<=?)\s*(\d+|\d+\.\d+|\.\d+)%\s+in\s+((alt-)?\w\w)$/, select: function(e2, s2) {
          var r2 = parseFloat(s2.popularity);
          var n2 = s2.place;
          if (n2.length === 2) {
            n2 = n2.toUpperCase();
          } else {
            n2 = n2.toLowerCase();
          }
          u.loadCountry(browserslist.usage, n2, browserslist.data);
          var t2 = browserslist.usage[n2];
          return Object.keys(t2).reduce(function(e3, n3) {
            var a2 = t2[n3];
            if (a2 == null) {
              return e3;
            }
            if (s2.sign === ">") {
              if (a2 > r2) {
                e3.push(n3);
              }
            } else if (s2.sign === "<") {
              if (a2 < r2) {
                e3.push(n3);
              }
            } else if (s2.sign === "<=") {
              if (a2 <= r2) {
                e3.push(n3);
              }
            } else if (a2 >= r2) {
              e3.push(n3);
            }
            return e3;
          }, []);
        } }, cover: { matches: ["coverage"], regexp: /^cover\s+(\d+|\d+\.\d+|\.\d+)%$/i, select: coverQuery }, cover_in: { matches: ["coverage", "place"], regexp: /^cover\s+(\d+|\d+\.\d+|\.\d+)%\s+in\s+(my\s+stats|(alt-)?\w\w)$/i, select: coverQuery }, supports: { matches: ["supportType", "feature"], regexp: /^(?:(fully|partially) )?supports\s+([\w-]+)$/, select: function(e2, s2) {
          u.loadFeature(browserslist.cache, s2.feature);
          var r2 = s2.supportType !== "fully";
          var n2 = browserslist.cache[s2.feature];
          var t2 = [];
          for (var a2 in n2) {
            var i2 = byName(a2, e2);
            var o2 = e2.mobileToDesktop && a2 in browserslist.desktopNames && isSupported(n2[a2][i2.released.slice(-1)[0]], r2);
            i2.versions.forEach(function(e3) {
              var s3 = n2[a2][e3];
              if (s3 === void 0 && o2) {
                s3 = n2[browserslist.desktopNames[a2]][e3];
              }
              if (isSupported(s3, r2)) {
                t2.push(a2 + " " + e3);
              }
            });
          }
          return t2;
        } }, electron_range: { matches: ["from", "to"], regexp: /^electron\s+([\d.]+)\s*-\s*([\d.]+)$/i, select: function(e2, s2) {
          var r2 = normalizeElectron(s2.from);
          var n2 = normalizeElectron(s2.to);
          var t2 = parseFloat(s2.from);
          var a2 = parseFloat(s2.to);
          if (!o[r2]) {
            throw new l("Unknown version " + t2 + " of electron");
          }
          if (!o[n2]) {
            throw new l("Unknown version " + a2 + " of electron");
          }
          return Object.keys(o).filter(function(e3) {
            var s3 = parseFloat(e3);
            return s3 >= t2 && s3 <= a2;
          }).map(function(e3) {
            return "chrome " + o[e3];
          });
        } }, node_range: { matches: ["from", "to"], regexp: /^node\s+([\d.]+)\s*-\s*([\d.]+)$/i, select: function(e2, s2) {
          return browserslist.nodeVersions.filter(semverFilterLoose(">=", s2.from)).filter(semverFilterLoose("<=", s2.to)).map(function(e3) {
            return "node " + e3;
          });
        } }, browser_range: { matches: ["browser", "from", "to"], regexp: /^(\w+)\s+([\d.]+)\s*-\s*([\d.]+)$/i, select: function(e2, s2) {
          var r2 = checkName(s2.browser, e2);
          var n2 = parseFloat(normalizeVersion(r2, s2.from) || s2.from);
          var t2 = parseFloat(normalizeVersion(r2, s2.to) || s2.to);
          function filter(e3) {
            var s3 = parseFloat(e3);
            return s3 >= n2 && s3 <= t2;
          }
          return r2.released.filter(filter).map(nameMapper(r2.name));
        } }, electron_ray: { matches: ["sign", "version"], regexp: /^electron\s*(>=?|<=?)\s*([\d.]+)$/i, select: function(e2, s2) {
          var r2 = normalizeElectron(s2.version);
          return Object.keys(o).filter(generateFilter(s2.sign, r2)).map(function(e3) {
            return "chrome " + o[e3];
          });
        } }, node_ray: { matches: ["sign", "version"], regexp: /^node\s*(>=?|<=?)\s*([\d.]+)$/i, select: function(e2, s2) {
          return browserslist.nodeVersions.filter(generateSemverFilter(s2.sign, s2.version)).map(function(e3) {
            return "node " + e3;
          });
        } }, browser_ray: { matches: ["browser", "sign", "version"], regexp: /^(\w+)\s*(>=?|<=?)\s*([\d.]+)$/, select: function(e2, s2) {
          var r2 = s2.version;
          var n2 = checkName(s2.browser, e2);
          var t2 = browserslist.versionAliases[n2.name][r2];
          if (t2)
            r2 = t2;
          return n2.released.filter(generateFilter(s2.sign, r2)).map(function(e3) {
            return n2.name + " " + e3;
          });
        } }, firefox_esr: { matches: [], regexp: /^(firefox|ff|fx)\s+esr$/i, select: function() {
          return ["firefox 115"];
        } }, opera_mini_all: { matches: [], regexp: /(operamini|op_mini)\s+all/i, select: function() {
          return ["op_mini all"];
        } }, electron_version: { matches: ["version"], regexp: /^electron\s+([\d.]+)$/i, select: function(e2, s2) {
          var r2 = normalizeElectron(s2.version);
          var n2 = o[r2];
          if (!n2) {
            throw new l("Unknown version " + s2.version + " of electron");
          }
          return ["chrome " + n2];
        } }, node_major_version: { matches: ["version"], regexp: /^node\s+(\d+)$/i, select: nodeQuery }, node_minor_version: { matches: ["version"], regexp: /^node\s+(\d+\.\d+)$/i, select: nodeQuery }, node_patch_version: { matches: ["version"], regexp: /^node\s+(\d+\.\d+\.\d+)$/i, select: nodeQuery }, current_node: { matches: [], regexp: /^current\s+node$/i, select: function(e2) {
          return [u.currentNode(resolve, e2)];
        } }, maintained_node: { matches: [], regexp: /^maintained\s+node\s+versions$/i, select: function(e2) {
          var s2 = Date.now();
          var r2 = Object.keys(a).filter(function(e3) {
            return s2 < Date.parse(a[e3].end) && s2 > Date.parse(a[e3].start) && isEolReleased(e3);
          }).map(function(e3) {
            return "node " + e3.slice(1);
          });
          return resolve(r2, e2);
        } }, phantomjs_1_9: { matches: [], regexp: /^phantomjs\s+1.9$/i, select: function() {
          return ["safari 5"];
        } }, phantomjs_2_1: { matches: [], regexp: /^phantomjs\s+2.1$/i, select: function() {
          return ["safari 6"];
        } }, browser_version: { matches: ["browser", "version"], regexp: /^(\w+)\s+(tp|[\d.]+)$/i, select: function(e2, s2) {
          var r2 = s2.version;
          if (/^tp$/i.test(r2))
            r2 = "TP";
          var n2 = checkName(s2.browser, e2);
          var t2 = normalizeVersion(n2, r2);
          if (t2) {
            r2 = t2;
          } else {
            if (r2.indexOf(".") === -1) {
              t2 = r2 + ".0";
            } else {
              t2 = r2.replace(/\.0$/, "");
            }
            t2 = normalizeVersion(n2, t2);
            if (t2) {
              r2 = t2;
            } else if (e2.ignoreUnknownVersions) {
              return [];
            } else {
              throw new l("Unknown version " + r2 + " of " + s2.browser);
            }
          }
          return [n2.name + " " + r2];
        } }, browserslist_config: { matches: [], regexp: /^browserslist config$/i, select: function(e2) {
          return browserslist(void 0, e2);
        } }, extends: { matches: ["config"], regexp: /^extends (.+)$/i, select: function(e2, s2) {
          return resolve(u.loadQueries(e2, s2.config), e2);
        } }, defaults: { matches: [], regexp: /^defaults$/i, select: function(e2) {
          return resolve(browserslist.defaults, e2);
        } }, dead: { matches: [], regexp: /^dead$/i, select: function(e2) {
          var s2 = ["Baidu >= 0", "ie <= 11", "ie_mob <= 11", "bb <= 10", "op_mob <= 12.1", "samsung 4"];
          return resolve(s2, e2);
        } }, unknown: { matches: [], regexp: /^(\w+)$/i, select: function(e2, s2) {
          if (byName(s2.query, e2)) {
            throw new l("Specify versions in Browserslist query for browser " + s2.query);
          } else {
            throw unknownQuery(s2.query);
          }
        } } };
        (function() {
          for (var e2 in t) {
            var s2 = t[e2];
            browserslist.data[e2] = { name: e2, versions: normalize(t[e2].versions), released: normalize(t[e2].versions.slice(0, -3)), releaseDate: t[e2].release_date };
            fillUsage(browserslist.usage.global, e2, s2.usage_global);
            browserslist.versionAliases[e2] = {};
            for (var r2 = 0; r2 < s2.versions.length; r2++) {
              var a2 = s2.versions[r2];
              if (!a2)
                continue;
              if (a2.indexOf("-") !== -1) {
                var i2 = a2.split("-");
                for (var o2 = 0; o2 < i2.length; o2++) {
                  browserslist.versionAliases[e2][i2[o2]] = a2;
                }
              }
            }
          }
          browserslist.nodeVersions = n.map(function(e3) {
            return e3.version;
          });
        })();
        e.exports = browserslist;
      }, 328: (module, __unused_webpack_exports, __nccwpck_require__) => {
        var feature = __nccwpck_require__(711)["default"];
        var region = __nccwpck_require__(225)["default"];
        var path = __nccwpck_require__(17);
        var fs = __nccwpck_require__(147);
        var BrowserslistError = __nccwpck_require__(349);
        var IS_SECTION = /^\s*\[(.+)]\s*$/;
        var CONFIG_PATTERN = /^browserslist-config-/;
        var SCOPED_CONFIG__PATTERN = /@[^/]+\/browserslist-config(-|$|\/)/;
        var TIME_TO_UPDATE_CANIUSE = 6 * 30 * 24 * 60 * 60 * 1e3;
        var FORMAT = "Browserslist config should be a string or an array of strings with browser queries";
        var dataTimeChecked = false;
        var filenessCache = {};
        var configCache = {};
        function checkExtend(e) {
          var s = " Use `dangerousExtend` option to disable.";
          if (!CONFIG_PATTERN.test(e) && !SCOPED_CONFIG__PATTERN.test(e)) {
            throw new BrowserslistError("Browserslist config needs `browserslist-config-` prefix. " + s);
          }
          if (e.replace(/^@[^/]+\//, "").indexOf(".") !== -1) {
            throw new BrowserslistError("`.` not allowed in Browserslist config name. " + s);
          }
          if (e.indexOf("node_modules") !== -1) {
            throw new BrowserslistError("`node_modules` not allowed in Browserslist config." + s);
          }
        }
        function isFile(e) {
          if (e in filenessCache) {
            return filenessCache[e];
          }
          var s = fs.existsSync(e) && fs.statSync(e).isFile();
          if (!process.env.BROWSERSLIST_DISABLE_CACHE) {
            filenessCache[e] = s;
          }
          return s;
        }
        function eachParent(e, s) {
          var r = isFile(e) ? path.dirname(e) : e;
          var n = path.resolve(r);
          do {
            var t = s(n);
            if (typeof t !== "undefined")
              return t;
          } while (n !== (n = path.dirname(n)));
          return void 0;
        }
        function check(e) {
          if (Array.isArray(e)) {
            for (var s = 0; s < e.length; s++) {
              if (typeof e[s] !== "string") {
                throw new BrowserslistError(FORMAT);
              }
            }
          } else if (typeof e !== "string") {
            throw new BrowserslistError(FORMAT);
          }
        }
        function pickEnv(e, s) {
          if (typeof e !== "object")
            return e;
          var r;
          if (typeof s.env === "string") {
            r = s.env;
          } else if (process.env.BROWSERSLIST_ENV) {
            r = process.env.BROWSERSLIST_ENV;
          } else if ("development") {
            r = "development";
          } else {
            r = "production";
          }
          if (s.throwOnMissing) {
            if (r && r !== "defaults" && !e[r]) {
              throw new BrowserslistError("Missing config for Browserslist environment `" + r + "`");
            }
          }
          return e[r] || e.defaults;
        }
        function parsePackage(e) {
          var s = JSON.parse(fs.readFileSync(e).toString().replace(/^\uFEFF/m, ""));
          if (s.browserlist && !s.browserslist) {
            throw new BrowserslistError("`browserlist` key instead of `browserslist` in " + e);
          }
          var r = s.browserslist;
          if (Array.isArray(r) || typeof r === "string") {
            r = { defaults: r };
          }
          for (var n in r) {
            check(r[n]);
          }
          return r;
        }
        function latestReleaseTime(e) {
          var s = 0;
          for (var r in e) {
            var n = e[r].releaseDate || {};
            for (var t in n) {
              if (s < n[t]) {
                s = n[t];
              }
            }
          }
          return s * 1e3;
        }
        function normalizeStats(e, s) {
          if (!e) {
            e = {};
          }
          if (s && "dataByBrowser" in s) {
            s = s.dataByBrowser;
          }
          if (typeof s !== "object")
            return void 0;
          var r = {};
          for (var n in s) {
            var t = Object.keys(s[n]);
            if (t.length === 1 && e[n] && e[n].versions.length === 1) {
              var a = e[n].versions[0];
              r[n] = {};
              r[n][a] = s[n][t[0]];
            } else {
              r[n] = s[n];
            }
          }
          return r;
        }
        function normalizeUsageData(e, s) {
          for (var r in e) {
            var n = e[r];
            if ("0" in n) {
              var t = s[r].versions;
              n[t[t.length - 1]] = n[0];
              delete n[0];
            }
          }
        }
        module.exports = { loadQueries: function loadQueries(ctx, name) {
          if (!ctx.dangerousExtend && !process.env.BROWSERSLIST_DANGEROUS_EXTEND) {
            checkExtend(name);
          }
          var queries = eval("require")(eval("require").resolve(name, { paths: [".", ctx.path] }));
          if (queries) {
            if (Array.isArray(queries)) {
              return queries;
            } else if (typeof queries === "object") {
              if (!queries.defaults)
                queries.defaults = [];
              return pickEnv(queries, ctx, name);
            }
          }
          throw new BrowserslistError("`" + name + "` config exports not an array of queries or an object of envs");
        }, loadStat: function loadStat(ctx, name, data) {
          if (!ctx.dangerousExtend && !process.env.BROWSERSLIST_DANGEROUS_EXTEND) {
            checkExtend(name);
          }
          var stats = eval("require")(eval("require").resolve(path.join(name, "browserslist-stats.json"), { paths: ["."] }));
          return normalizeStats(data, stats);
        }, getStat: function getStat(e, s) {
          var r;
          if (e.stats) {
            r = e.stats;
          } else if (process.env.BROWSERSLIST_STATS) {
            r = process.env.BROWSERSLIST_STATS;
          } else if (e.path && path.resolve && fs.existsSync) {
            r = eachParent(e.path, function(e2) {
              var s2 = path.join(e2, "browserslist-stats.json");
              return isFile(s2) ? s2 : void 0;
            });
          }
          if (typeof r === "string") {
            try {
              r = JSON.parse(fs.readFileSync(r));
            } catch (e2) {
              throw new BrowserslistError("Can't read " + r);
            }
          }
          return normalizeStats(s, r);
        }, loadConfig: function loadConfig(e) {
          if (process.env.BROWSERSLIST) {
            return process.env.BROWSERSLIST;
          } else if (e.config || process.env.BROWSERSLIST_CONFIG) {
            var s = e.config || process.env.BROWSERSLIST_CONFIG;
            if (path.basename(s) === "package.json") {
              return pickEnv(parsePackage(s), e);
            } else {
              return pickEnv(module.exports.readConfig(s), e);
            }
          } else if (e.path) {
            return pickEnv(module.exports.findConfig(e.path), e);
          } else {
            return void 0;
          }
        }, loadCountry: function loadCountry(e, s, r) {
          var n = s.replace(/[^\w-]/g, "");
          if (!e[n]) {
            var t;
            try {
              t = __require("caniuse-lite/data/regions/" + n + ".js");
            } catch (e2) {
              throw new BrowserslistError("Unknown region name `" + n + "`.");
            }
            var a = region(t);
            normalizeUsageData(a, r);
            e[s] = {};
            for (var i in a) {
              for (var o in a[i]) {
                e[s][i + " " + o] = a[i][o];
              }
            }
          }
        }, loadFeature: function loadFeature(e, s) {
          s = s.replace(/[^\w-]/g, "");
          if (e[s])
            return;
          var r;
          try {
            r = __require("caniuse-lite/data/features/" + s + ".js");
          } catch (e2) {
            throw new BrowserslistError("Unknown feature name `" + s + "`.");
          }
          var n = feature(r).stats;
          e[s] = {};
          for (var t in n) {
            e[s][t] = {};
            for (var a in n[t]) {
              e[s][t][a] = n[t][a];
            }
          }
        }, parseConfig: function parseConfig(e) {
          var s = { defaults: [] };
          var r = ["defaults"];
          e.toString().replace(/#[^\n]*/g, "").split(/\n|,/).map(function(e2) {
            return e2.trim();
          }).filter(function(e2) {
            return e2 !== "";
          }).forEach(function(e2) {
            if (IS_SECTION.test(e2)) {
              r = e2.match(IS_SECTION)[1].trim().split(" ");
              r.forEach(function(e3) {
                if (s[e3]) {
                  throw new BrowserslistError("Duplicate section " + e3 + " in Browserslist config");
                }
                s[e3] = [];
              });
            } else {
              r.forEach(function(r2) {
                s[r2].push(e2);
              });
            }
          });
          return s;
        }, readConfig: function readConfig(e) {
          if (!isFile(e)) {
            throw new BrowserslistError("Can't read " + e + " config");
          }
          return module.exports.parseConfig(fs.readFileSync(e));
        }, findConfig: function findConfig(e) {
          e = path.resolve(e);
          var s = [];
          var r = eachParent(e, function(e2) {
            if (e2 in configCache) {
              return configCache[e2];
            }
            s.push(e2);
            var r2 = path.join(e2, "browserslist");
            var n = path.join(e2, "package.json");
            var t = path.join(e2, ".browserslistrc");
            var a;
            if (isFile(n)) {
              try {
                a = parsePackage(n);
              } catch (e3) {
                if (e3.name === "BrowserslistError")
                  throw e3;
                console.warn("[Browserslist] Could not parse " + n + ". Ignoring it.");
              }
            }
            if (isFile(r2) && a) {
              throw new BrowserslistError(e2 + " contains both browserslist and package.json with browsers");
            } else if (isFile(t) && a) {
              throw new BrowserslistError(e2 + " contains both .browserslistrc and package.json with browsers");
            } else if (isFile(r2) && isFile(t)) {
              throw new BrowserslistError(e2 + " contains both .browserslistrc and browserslist");
            } else if (isFile(r2)) {
              return module.exports.readConfig(r2);
            } else if (isFile(t)) {
              return module.exports.readConfig(t);
            } else {
              return a;
            }
          });
          if (!process.env.BROWSERSLIST_DISABLE_CACHE) {
            s.forEach(function(e2) {
              configCache[e2] = r;
            });
          }
          return r;
        }, clearCaches: function clearCaches() {
          dataTimeChecked = false;
          filenessCache = {};
          configCache = {};
          this.cache = {};
        }, oldDataWarning: function oldDataWarning(e) {
          if (dataTimeChecked)
            return;
          dataTimeChecked = true;
          if (process.env.BROWSERSLIST_IGNORE_OLD_DATA)
            return;
          var s = latestReleaseTime(e);
          var r = Date.now() - TIME_TO_UPDATE_CANIUSE;
          if (s !== 0 && s < r) {
            console.warn("Browserslist: caniuse-lite is outdated. Please run:\n  npx update-browserslist-db@latest\n  Why you should do it regularly: https://github.com/browserslist/update-db#readme");
          }
        }, currentNode: function currentNode() {
          return "node " + process.versions.node;
        }, env: process.env };
      }, 65: (e) => {
        var s = /^\s+and\s+(.*)/i;
        var r = /^(?:,\s*|\s+or\s+)(.*)/i;
        function flatten(e2) {
          if (!Array.isArray(e2))
            return [e2];
          return e2.reduce(function(e3, s2) {
            return e3.concat(flatten(s2));
          }, []);
        }
        function find(e2, s2) {
          for (var r2 = 1, n = e2.length; r2 <= n; r2++) {
            var t = e2.substr(-r2, r2);
            if (s2(t, r2, n)) {
              return e2.slice(0, -r2);
            }
          }
          return "";
        }
        function matchQuery(e2, s2) {
          var r2 = { query: s2 };
          if (s2.indexOf("not ") === 0) {
            r2.not = true;
            s2 = s2.slice(4);
          }
          for (var n in e2) {
            var t = e2[n];
            var a = s2.match(t.regexp);
            if (a) {
              r2.type = n;
              for (var i = 0; i < t.matches.length; i++) {
                r2[t.matches[i]] = a[i + 1];
              }
              return r2;
            }
          }
          r2.type = "unknown";
          return r2;
        }
        function matchBlock(e2, n, t) {
          var a;
          return find(n, function(n2, i, o) {
            if (s.test(n2)) {
              a = matchQuery(e2, n2.match(s)[1]);
              a.compose = "and";
              t.unshift(a);
              return true;
            } else if (r.test(n2)) {
              a = matchQuery(e2, n2.match(r)[1]);
              a.compose = "or";
              t.unshift(a);
              return true;
            } else if (i === o) {
              a = matchQuery(e2, n2.trim());
              a.compose = "or";
              t.unshift(a);
              return true;
            }
            return false;
          });
        }
        e.exports = function parse(e2, s2) {
          if (!Array.isArray(s2))
            s2 = [s2];
          return flatten(s2.map(function(s3) {
            var r2 = [];
            do {
              s3 = matchBlock(e2, s3, r2);
            } while (s3);
            return r2;
          }));
        };
      }, 314: (e) => {
        e.exports = { "0.20": "39", 0.21: "41", 0.22: "41", 0.23: "41", 0.24: "41", 0.25: "42", 0.26: "42", 0.27: "43", 0.28: "43", 0.29: "43", "0.30": "44", 0.31: "45", 0.32: "45", 0.33: "45", 0.34: "45", 0.35: "45", 0.36: "47", 0.37: "49", "1.0": "49", 1.1: "50", 1.2: "51", 1.3: "52", 1.4: "53", 1.5: "54", 1.6: "56", 1.7: "58", 1.8: "59", "2.0": "61", 2.1: "61", "3.0": "66", 3.1: "66", "4.0": "69", 4.1: "69", 4.2: "69", "5.0": "73", "6.0": "76", 6.1: "76", "7.0": "78", 7.1: "78", 7.2: "78", 7.3: "78", "8.0": "80", 8.1: "80", 8.2: "80", 8.3: "80", 8.4: "80", 8.5: "80", "9.0": "83", 9.1: "83", 9.2: "83", 9.3: "83", 9.4: "83", "10.0": "85", 10.1: "85", 10.2: "85", 10.3: "85", 10.4: "85", "11.0": "87", 11.1: "87", 11.2: "87", 11.3: "87", 11.4: "87", 11.5: "87", "12.0": "89", 12.1: "89", 12.2: "89", "13.0": "91", 13.1: "91", 13.2: "91", 13.3: "91", 13.4: "91", 13.5: "91", 13.6: "91", "14.0": "93", 14.1: "93", 14.2: "93", "15.0": "94", 15.1: "94", 15.2: "94", 15.3: "94", 15.4: "94", 15.5: "94", "16.0": "96", 16.1: "96", 16.2: "96", "17.0": "98", 17.1: "98", 17.2: "98", 17.3: "98", 17.4: "98", "18.0": "100", 18.1: "100", 18.2: "100", 18.3: "100", "19.0": "102", 19.1: "102", "20.0": "104", 20.1: "104", 20.2: "104", 20.3: "104", "21.0": "106", 21.1: "106", 21.2: "106", 21.3: "106", 21.4: "106", "22.0": "108", 22.1: "108", 22.2: "108", 22.3: "108", "23.0": "110", 23.1: "110", 23.2: "110", 23.3: "110", "24.0": "112", 24.1: "112", 24.2: "112", 24.3: "112", 24.4: "112", 24.5: "112", 24.6: "112", 24.7: "112", 24.8: "112", "25.0": "114", 25.1: "114", 25.2: "114", 25.3: "114", 25.4: "114", 25.5: "114", 25.6: "114", 25.7: "114", 25.8: "114", 25.9: "114", "26.0": "116", 26.1: "116", 26.2: "116", 26.3: "116", 26.4: "116", 26.5: "116", 26.6: "116", "27.0": "118", 27.1: "118", 27.2: "118", "28.0": "120", 28.1: "120", "29.0": "122" };
      }, 768: (e) => {
        "use strict";
        e.exports = require_agents2();
      }, 711: (e) => {
        "use strict";
        e.exports = require_feature();
      }, 225: (e) => {
        "use strict";
        e.exports = require_region();
      }, 147: (e) => {
        "use strict";
        e.exports = require_fs();
      }, 17: (e) => {
        "use strict";
        e.exports = require_path();
      }, 750: (e) => {
        "use strict";
        e.exports = JSON.parse('[{"name":"nodejs","version":"0.2.0","date":"2011-08-26","lts":false,"security":false,"v8":"2.3.8.0"},{"name":"nodejs","version":"0.3.0","date":"2011-08-26","lts":false,"security":false,"v8":"2.5.1.0"},{"name":"nodejs","version":"0.4.0","date":"2011-08-26","lts":false,"security":false,"v8":"3.1.2.0"},{"name":"nodejs","version":"0.5.0","date":"2011-08-26","lts":false,"security":false,"v8":"3.1.8.25"},{"name":"nodejs","version":"0.6.0","date":"2011-11-04","lts":false,"security":false,"v8":"3.6.6.6"},{"name":"nodejs","version":"0.7.0","date":"2012-01-17","lts":false,"security":false,"v8":"3.8.6.0"},{"name":"nodejs","version":"0.8.0","date":"2012-06-22","lts":false,"security":false,"v8":"3.11.10.10"},{"name":"nodejs","version":"0.9.0","date":"2012-07-20","lts":false,"security":false,"v8":"3.11.10.15"},{"name":"nodejs","version":"0.10.0","date":"2013-03-11","lts":false,"security":false,"v8":"3.14.5.8"},{"name":"nodejs","version":"0.11.0","date":"2013-03-28","lts":false,"security":false,"v8":"3.17.13.0"},{"name":"nodejs","version":"0.12.0","date":"2015-02-06","lts":false,"security":false,"v8":"3.28.73.0"},{"name":"nodejs","version":"4.0.0","date":"2015-09-08","lts":false,"security":false,"v8":"4.5.103.30"},{"name":"nodejs","version":"4.1.0","date":"2015-09-17","lts":false,"security":false,"v8":"4.5.103.33"},{"name":"nodejs","version":"4.2.0","date":"2015-10-12","lts":"Argon","security":false,"v8":"4.5.103.35"},{"name":"nodejs","version":"4.3.0","date":"2016-02-09","lts":"Argon","security":false,"v8":"4.5.103.35"},{"name":"nodejs","version":"4.4.0","date":"2016-03-08","lts":"Argon","security":false,"v8":"4.5.103.35"},{"name":"nodejs","version":"4.5.0","date":"2016-08-16","lts":"Argon","security":false,"v8":"4.5.103.37"},{"name":"nodejs","version":"4.6.0","date":"2016-09-27","lts":"Argon","security":true,"v8":"4.5.103.37"},{"name":"nodejs","version":"4.7.0","date":"2016-12-06","lts":"Argon","security":false,"v8":"4.5.103.43"},{"name":"nodejs","version":"4.8.0","date":"2017-02-21","lts":"Argon","security":false,"v8":"4.5.103.45"},{"name":"nodejs","version":"4.9.0","date":"2018-03-28","lts":"Argon","security":true,"v8":"4.5.103.53"},{"name":"nodejs","version":"5.0.0","date":"2015-10-29","lts":false,"security":false,"v8":"4.6.85.28"},{"name":"nodejs","version":"5.1.0","date":"2015-11-17","lts":false,"security":false,"v8":"4.6.85.31"},{"name":"nodejs","version":"5.2.0","date":"2015-12-09","lts":false,"security":false,"v8":"4.6.85.31"},{"name":"nodejs","version":"5.3.0","date":"2015-12-15","lts":false,"security":false,"v8":"4.6.85.31"},{"name":"nodejs","version":"5.4.0","date":"2016-01-06","lts":false,"security":false,"v8":"4.6.85.31"},{"name":"nodejs","version":"5.5.0","date":"2016-01-21","lts":false,"security":false,"v8":"4.6.85.31"},{"name":"nodejs","version":"5.6.0","date":"2016-02-09","lts":false,"security":false,"v8":"4.6.85.31"},{"name":"nodejs","version":"5.7.0","date":"2016-02-23","lts":false,"security":false,"v8":"4.6.85.31"},{"name":"nodejs","version":"5.8.0","date":"2016-03-09","lts":false,"security":false,"v8":"4.6.85.31"},{"name":"nodejs","version":"5.9.0","date":"2016-03-16","lts":false,"security":false,"v8":"4.6.85.31"},{"name":"nodejs","version":"5.10.0","date":"2016-04-01","lts":false,"security":false,"v8":"4.6.85.31"},{"name":"nodejs","version":"5.11.0","date":"2016-04-21","lts":false,"security":false,"v8":"4.6.85.31"},{"name":"nodejs","version":"5.12.0","date":"2016-06-23","lts":false,"security":false,"v8":"4.6.85.32"},{"name":"nodejs","version":"6.0.0","date":"2016-04-26","lts":false,"security":false,"v8":"5.0.71.35"},{"name":"nodejs","version":"6.1.0","date":"2016-05-05","lts":false,"security":false,"v8":"5.0.71.35"},{"name":"nodejs","version":"6.2.0","date":"2016-05-17","lts":false,"security":false,"v8":"5.0.71.47"},{"name":"nodejs","version":"6.3.0","date":"2016-07-06","lts":false,"security":false,"v8":"5.0.71.52"},{"name":"nodejs","version":"6.4.0","date":"2016-08-12","lts":false,"security":false,"v8":"5.0.71.60"},{"name":"nodejs","version":"6.5.0","date":"2016-08-26","lts":false,"security":false,"v8":"5.1.281.81"},{"name":"nodejs","version":"6.6.0","date":"2016-09-14","lts":false,"security":false,"v8":"5.1.281.83"},{"name":"nodejs","version":"6.7.0","date":"2016-09-27","lts":false,"security":true,"v8":"5.1.281.83"},{"name":"nodejs","version":"6.8.0","date":"2016-10-12","lts":false,"security":false,"v8":"5.1.281.84"},{"name":"nodejs","version":"6.9.0","date":"2016-10-18","lts":"Boron","security":false,"v8":"5.1.281.84"},{"name":"nodejs","version":"6.10.0","date":"2017-02-21","lts":"Boron","security":false,"v8":"5.1.281.93"},{"name":"nodejs","version":"6.11.0","date":"2017-06-06","lts":"Boron","security":false,"v8":"5.1.281.102"},{"name":"nodejs","version":"6.12.0","date":"2017-11-06","lts":"Boron","security":false,"v8":"5.1.281.108"},{"name":"nodejs","version":"6.13.0","date":"2018-02-10","lts":"Boron","security":false,"v8":"5.1.281.111"},{"name":"nodejs","version":"6.14.0","date":"2018-03-28","lts":"Boron","security":true,"v8":"5.1.281.111"},{"name":"nodejs","version":"6.15.0","date":"2018-11-27","lts":"Boron","security":true,"v8":"5.1.281.111"},{"name":"nodejs","version":"6.16.0","date":"2018-12-26","lts":"Boron","security":false,"v8":"5.1.281.111"},{"name":"nodejs","version":"6.17.0","date":"2019-02-28","lts":"Boron","security":true,"v8":"5.1.281.111"},{"name":"nodejs","version":"7.0.0","date":"2016-10-25","lts":false,"security":false,"v8":"5.4.500.36"},{"name":"nodejs","version":"7.1.0","date":"2016-11-08","lts":false,"security":false,"v8":"5.4.500.36"},{"name":"nodejs","version":"7.2.0","date":"2016-11-22","lts":false,"security":false,"v8":"5.4.500.43"},{"name":"nodejs","version":"7.3.0","date":"2016-12-20","lts":false,"security":false,"v8":"5.4.500.45"},{"name":"nodejs","version":"7.4.0","date":"2017-01-04","lts":false,"security":false,"v8":"5.4.500.45"},{"name":"nodejs","version":"7.5.0","date":"2017-01-31","lts":false,"security":false,"v8":"5.4.500.48"},{"name":"nodejs","version":"7.6.0","date":"2017-02-21","lts":false,"security":false,"v8":"5.5.372.40"},{"name":"nodejs","version":"7.7.0","date":"2017-02-28","lts":false,"security":false,"v8":"5.5.372.41"},{"name":"nodejs","version":"7.8.0","date":"2017-03-29","lts":false,"security":false,"v8":"5.5.372.43"},{"name":"nodejs","version":"7.9.0","date":"2017-04-11","lts":false,"security":false,"v8":"5.5.372.43"},{"name":"nodejs","version":"7.10.0","date":"2017-05-02","lts":false,"security":false,"v8":"5.5.372.43"},{"name":"nodejs","version":"8.0.0","date":"2017-05-30","lts":false,"security":false,"v8":"5.8.283.41"},{"name":"nodejs","version":"8.1.0","date":"2017-06-08","lts":false,"security":false,"v8":"5.8.283.41"},{"name":"nodejs","version":"8.2.0","date":"2017-07-19","lts":false,"security":false,"v8":"5.8.283.41"},{"name":"nodejs","version":"8.3.0","date":"2017-08-08","lts":false,"security":false,"v8":"6.0.286.52"},{"name":"nodejs","version":"8.4.0","date":"2017-08-15","lts":false,"security":false,"v8":"6.0.286.52"},{"name":"nodejs","version":"8.5.0","date":"2017-09-12","lts":false,"security":false,"v8":"6.0.287.53"},{"name":"nodejs","version":"8.6.0","date":"2017-09-26","lts":false,"security":false,"v8":"6.0.287.53"},{"name":"nodejs","version":"8.7.0","date":"2017-10-11","lts":false,"security":false,"v8":"6.1.534.42"},{"name":"nodejs","version":"8.8.0","date":"2017-10-24","lts":false,"security":false,"v8":"6.1.534.42"},{"name":"nodejs","version":"8.9.0","date":"2017-10-31","lts":"Carbon","security":false,"v8":"6.1.534.46"},{"name":"nodejs","version":"8.10.0","date":"2018-03-06","lts":"Carbon","security":false,"v8":"6.2.414.50"},{"name":"nodejs","version":"8.11.0","date":"2018-03-28","lts":"Carbon","security":true,"v8":"6.2.414.50"},{"name":"nodejs","version":"8.12.0","date":"2018-09-10","lts":"Carbon","security":false,"v8":"6.2.414.66"},{"name":"nodejs","version":"8.13.0","date":"2018-11-20","lts":"Carbon","security":false,"v8":"6.2.414.72"},{"name":"nodejs","version":"8.14.0","date":"2018-11-27","lts":"Carbon","security":true,"v8":"6.2.414.72"},{"name":"nodejs","version":"8.15.0","date":"2018-12-26","lts":"Carbon","security":false,"v8":"6.2.414.75"},{"name":"nodejs","version":"8.16.0","date":"2019-04-16","lts":"Carbon","security":false,"v8":"6.2.414.77"},{"name":"nodejs","version":"8.17.0","date":"2019-12-17","lts":"Carbon","security":true,"v8":"6.2.414.78"},{"name":"nodejs","version":"9.0.0","date":"2017-10-31","lts":false,"security":false,"v8":"6.2.414.32"},{"name":"nodejs","version":"9.1.0","date":"2017-11-07","lts":false,"security":false,"v8":"6.2.414.32"},{"name":"nodejs","version":"9.2.0","date":"2017-11-14","lts":false,"security":false,"v8":"6.2.414.44"},{"name":"nodejs","version":"9.3.0","date":"2017-12-12","lts":false,"security":false,"v8":"6.2.414.46"},{"name":"nodejs","version":"9.4.0","date":"2018-01-10","lts":false,"security":false,"v8":"6.2.414.46"},{"name":"nodejs","version":"9.5.0","date":"2018-01-31","lts":false,"security":false,"v8":"6.2.414.46"},{"name":"nodejs","version":"9.6.0","date":"2018-02-21","lts":false,"security":false,"v8":"6.2.414.46"},{"name":"nodejs","version":"9.7.0","date":"2018-03-01","lts":false,"security":false,"v8":"6.2.414.46"},{"name":"nodejs","version":"9.8.0","date":"2018-03-07","lts":false,"security":false,"v8":"6.2.414.46"},{"name":"nodejs","version":"9.9.0","date":"2018-03-21","lts":false,"security":false,"v8":"6.2.414.46"},{"name":"nodejs","version":"9.10.0","date":"2018-03-28","lts":false,"security":true,"v8":"6.2.414.46"},{"name":"nodejs","version":"9.11.0","date":"2018-04-04","lts":false,"security":false,"v8":"6.2.414.46"},{"name":"nodejs","version":"10.0.0","date":"2018-04-24","lts":false,"security":false,"v8":"6.6.346.24"},{"name":"nodejs","version":"10.1.0","date":"2018-05-08","lts":false,"security":false,"v8":"6.6.346.27"},{"name":"nodejs","version":"10.2.0","date":"2018-05-23","lts":false,"security":false,"v8":"6.6.346.32"},{"name":"nodejs","version":"10.3.0","date":"2018-05-29","lts":false,"security":false,"v8":"6.6.346.32"},{"name":"nodejs","version":"10.4.0","date":"2018-06-06","lts":false,"security":false,"v8":"6.7.288.43"},{"name":"nodejs","version":"10.5.0","date":"2018-06-20","lts":false,"security":false,"v8":"6.7.288.46"},{"name":"nodejs","version":"10.6.0","date":"2018-07-04","lts":false,"security":false,"v8":"6.7.288.46"},{"name":"nodejs","version":"10.7.0","date":"2018-07-18","lts":false,"security":false,"v8":"6.7.288.49"},{"name":"nodejs","version":"10.8.0","date":"2018-08-01","lts":false,"security":false,"v8":"6.7.288.49"},{"name":"nodejs","version":"10.9.0","date":"2018-08-15","lts":false,"security":false,"v8":"6.8.275.24"},{"name":"nodejs","version":"10.10.0","date":"2018-09-06","lts":false,"security":false,"v8":"6.8.275.30"},{"name":"nodejs","version":"10.11.0","date":"2018-09-19","lts":false,"security":false,"v8":"6.8.275.32"},{"name":"nodejs","version":"10.12.0","date":"2018-10-10","lts":false,"security":false,"v8":"6.8.275.32"},{"name":"nodejs","version":"10.13.0","date":"2018-10-30","lts":"Dubnium","security":false,"v8":"6.8.275.32"},{"name":"nodejs","version":"10.14.0","date":"2018-11-27","lts":"Dubnium","security":true,"v8":"6.8.275.32"},{"name":"nodejs","version":"10.15.0","date":"2018-12-26","lts":"Dubnium","security":false,"v8":"6.8.275.32"},{"name":"nodejs","version":"10.16.0","date":"2019-05-28","lts":"Dubnium","security":false,"v8":"6.8.275.32"},{"name":"nodejs","version":"10.17.0","date":"2019-10-22","lts":"Dubnium","security":false,"v8":"6.8.275.32"},{"name":"nodejs","version":"10.18.0","date":"2019-12-17","lts":"Dubnium","security":true,"v8":"6.8.275.32"},{"name":"nodejs","version":"10.19.0","date":"2020-02-05","lts":"Dubnium","security":true,"v8":"6.8.275.32"},{"name":"nodejs","version":"10.20.0","date":"2020-03-26","lts":"Dubnium","security":false,"v8":"6.8.275.32"},{"name":"nodejs","version":"10.21.0","date":"2020-06-02","lts":"Dubnium","security":true,"v8":"6.8.275.32"},{"name":"nodejs","version":"10.22.0","date":"2020-07-21","lts":"Dubnium","security":false,"v8":"6.8.275.32"},{"name":"nodejs","version":"10.23.0","date":"2020-10-27","lts":"Dubnium","security":false,"v8":"6.8.275.32"},{"name":"nodejs","version":"10.24.0","date":"2021-02-23","lts":"Dubnium","security":true,"v8":"6.8.275.32"},{"name":"nodejs","version":"11.0.0","date":"2018-10-23","lts":false,"security":false,"v8":"7.0.276.28"},{"name":"nodejs","version":"11.1.0","date":"2018-10-30","lts":false,"security":false,"v8":"7.0.276.32"},{"name":"nodejs","version":"11.2.0","date":"2018-11-15","lts":false,"security":false,"v8":"7.0.276.38"},{"name":"nodejs","version":"11.3.0","date":"2018-11-27","lts":false,"security":true,"v8":"7.0.276.38"},{"name":"nodejs","version":"11.4.0","date":"2018-12-07","lts":false,"security":false,"v8":"7.0.276.38"},{"name":"nodejs","version":"11.5.0","date":"2018-12-18","lts":false,"security":false,"v8":"7.0.276.38"},{"name":"nodejs","version":"11.6.0","date":"2018-12-26","lts":false,"security":false,"v8":"7.0.276.38"},{"name":"nodejs","version":"11.7.0","date":"2019-01-17","lts":false,"security":false,"v8":"7.0.276.38"},{"name":"nodejs","version":"11.8.0","date":"2019-01-24","lts":false,"security":false,"v8":"7.0.276.38"},{"name":"nodejs","version":"11.9.0","date":"2019-01-30","lts":false,"security":false,"v8":"7.0.276.38"},{"name":"nodejs","version":"11.10.0","date":"2019-02-14","lts":false,"security":false,"v8":"7.0.276.38"},{"name":"nodejs","version":"11.11.0","date":"2019-03-05","lts":false,"security":false,"v8":"7.0.276.38"},{"name":"nodejs","version":"11.12.0","date":"2019-03-14","lts":false,"security":false,"v8":"7.0.276.38"},{"name":"nodejs","version":"11.13.0","date":"2019-03-28","lts":false,"security":false,"v8":"7.0.276.38"},{"name":"nodejs","version":"11.14.0","date":"2019-04-10","lts":false,"security":false,"v8":"7.0.276.38"},{"name":"nodejs","version":"11.15.0","date":"2019-04-30","lts":false,"security":false,"v8":"7.0.276.38"},{"name":"nodejs","version":"12.0.0","date":"2019-04-23","lts":false,"security":false,"v8":"7.4.288.21"},{"name":"nodejs","version":"12.1.0","date":"2019-04-29","lts":false,"security":false,"v8":"7.4.288.21"},{"name":"nodejs","version":"12.2.0","date":"2019-05-07","lts":false,"security":false,"v8":"7.4.288.21"},{"name":"nodejs","version":"12.3.0","date":"2019-05-21","lts":false,"security":false,"v8":"7.4.288.27"},{"name":"nodejs","version":"12.4.0","date":"2019-06-04","lts":false,"security":false,"v8":"7.4.288.27"},{"name":"nodejs","version":"12.5.0","date":"2019-06-26","lts":false,"security":false,"v8":"7.5.288.22"},{"name":"nodejs","version":"12.6.0","date":"2019-07-03","lts":false,"security":false,"v8":"7.5.288.22"},{"name":"nodejs","version":"12.7.0","date":"2019-07-23","lts":false,"security":false,"v8":"7.5.288.22"},{"name":"nodejs","version":"12.8.0","date":"2019-08-06","lts":false,"security":false,"v8":"7.5.288.22"},{"name":"nodejs","version":"12.9.0","date":"2019-08-20","lts":false,"security":false,"v8":"7.6.303.29"},{"name":"nodejs","version":"12.10.0","date":"2019-09-04","lts":false,"security":false,"v8":"7.6.303.29"},{"name":"nodejs","version":"12.11.0","date":"2019-09-25","lts":false,"security":false,"v8":"7.7.299.11"},{"name":"nodejs","version":"12.12.0","date":"2019-10-11","lts":false,"security":false,"v8":"7.7.299.13"},{"name":"nodejs","version":"12.13.0","date":"2019-10-21","lts":"Erbium","security":false,"v8":"7.7.299.13"},{"name":"nodejs","version":"12.14.0","date":"2019-12-17","lts":"Erbium","security":true,"v8":"7.7.299.13"},{"name":"nodejs","version":"12.15.0","date":"2020-02-05","lts":"Erbium","security":true,"v8":"7.7.299.13"},{"name":"nodejs","version":"12.16.0","date":"2020-02-11","lts":"Erbium","security":false,"v8":"7.8.279.23"},{"name":"nodejs","version":"12.17.0","date":"2020-05-26","lts":"Erbium","security":false,"v8":"7.8.279.23"},{"name":"nodejs","version":"12.18.0","date":"2020-06-02","lts":"Erbium","security":true,"v8":"7.8.279.23"},{"name":"nodejs","version":"12.19.0","date":"2020-10-06","lts":"Erbium","security":false,"v8":"7.8.279.23"},{"name":"nodejs","version":"12.20.0","date":"2020-11-24","lts":"Erbium","security":false,"v8":"7.8.279.23"},{"name":"nodejs","version":"12.21.0","date":"2021-02-23","lts":"Erbium","security":true,"v8":"7.8.279.23"},{"name":"nodejs","version":"12.22.0","date":"2021-03-30","lts":"Erbium","security":false,"v8":"7.8.279.23"},{"name":"nodejs","version":"13.0.0","date":"2019-10-22","lts":false,"security":false,"v8":"7.8.279.17"},{"name":"nodejs","version":"13.1.0","date":"2019-11-05","lts":false,"security":false,"v8":"7.8.279.17"},{"name":"nodejs","version":"13.2.0","date":"2019-11-21","lts":false,"security":false,"v8":"7.9.317.23"},{"name":"nodejs","version":"13.3.0","date":"2019-12-03","lts":false,"security":false,"v8":"7.9.317.25"},{"name":"nodejs","version":"13.4.0","date":"2019-12-17","lts":false,"security":true,"v8":"7.9.317.25"},{"name":"nodejs","version":"13.5.0","date":"2019-12-18","lts":false,"security":false,"v8":"7.9.317.25"},{"name":"nodejs","version":"13.6.0","date":"2020-01-07","lts":false,"security":false,"v8":"7.9.317.25"},{"name":"nodejs","version":"13.7.0","date":"2020-01-21","lts":false,"security":false,"v8":"7.9.317.25"},{"name":"nodejs","version":"13.8.0","date":"2020-02-05","lts":false,"security":true,"v8":"7.9.317.25"},{"name":"nodejs","version":"13.9.0","date":"2020-02-18","lts":false,"security":false,"v8":"7.9.317.25"},{"name":"nodejs","version":"13.10.0","date":"2020-03-04","lts":false,"security":false,"v8":"7.9.317.25"},{"name":"nodejs","version":"13.11.0","date":"2020-03-12","lts":false,"security":false,"v8":"7.9.317.25"},{"name":"nodejs","version":"13.12.0","date":"2020-03-26","lts":false,"security":false,"v8":"7.9.317.25"},{"name":"nodejs","version":"13.13.0","date":"2020-04-14","lts":false,"security":false,"v8":"7.9.317.25"},{"name":"nodejs","version":"13.14.0","date":"2020-04-29","lts":false,"security":false,"v8":"7.9.317.25"},{"name":"nodejs","version":"14.0.0","date":"2020-04-21","lts":false,"security":false,"v8":"8.1.307.30"},{"name":"nodejs","version":"14.1.0","date":"2020-04-29","lts":false,"security":false,"v8":"8.1.307.31"},{"name":"nodejs","version":"14.2.0","date":"2020-05-05","lts":false,"security":false,"v8":"8.1.307.31"},{"name":"nodejs","version":"14.3.0","date":"2020-05-19","lts":false,"security":false,"v8":"8.1.307.31"},{"name":"nodejs","version":"14.4.0","date":"2020-06-02","lts":false,"security":true,"v8":"8.1.307.31"},{"name":"nodejs","version":"14.5.0","date":"2020-06-30","lts":false,"security":false,"v8":"8.3.110.9"},{"name":"nodejs","version":"14.6.0","date":"2020-07-20","lts":false,"security":false,"v8":"8.4.371.19"},{"name":"nodejs","version":"14.7.0","date":"2020-07-29","lts":false,"security":false,"v8":"8.4.371.19"},{"name":"nodejs","version":"14.8.0","date":"2020-08-11","lts":false,"security":false,"v8":"8.4.371.19"},{"name":"nodejs","version":"14.9.0","date":"2020-08-27","lts":false,"security":false,"v8":"8.4.371.19"},{"name":"nodejs","version":"14.10.0","date":"2020-09-08","lts":false,"security":false,"v8":"8.4.371.19"},{"name":"nodejs","version":"14.11.0","date":"2020-09-15","lts":false,"security":true,"v8":"8.4.371.19"},{"name":"nodejs","version":"14.12.0","date":"2020-09-22","lts":false,"security":false,"v8":"8.4.371.19"},{"name":"nodejs","version":"14.13.0","date":"2020-09-29","lts":false,"security":false,"v8":"8.4.371.19"},{"name":"nodejs","version":"14.14.0","date":"2020-10-15","lts":false,"security":false,"v8":"8.4.371.19"},{"name":"nodejs","version":"14.15.0","date":"2020-10-27","lts":"Fermium","security":false,"v8":"8.4.371.19"},{"name":"nodejs","version":"14.16.0","date":"2021-02-23","lts":"Fermium","security":true,"v8":"8.4.371.19"},{"name":"nodejs","version":"14.17.0","date":"2021-05-11","lts":"Fermium","security":false,"v8":"8.4.371.23"},{"name":"nodejs","version":"14.18.0","date":"2021-09-28","lts":"Fermium","security":false,"v8":"8.4.371.23"},{"name":"nodejs","version":"14.19.0","date":"2022-02-01","lts":"Fermium","security":false,"v8":"8.4.371.23"},{"name":"nodejs","version":"14.20.0","date":"2022-07-07","lts":"Fermium","security":true,"v8":"8.4.371.23"},{"name":"nodejs","version":"14.21.0","date":"2022-11-01","lts":"Fermium","security":false,"v8":"8.4.371.23"},{"name":"nodejs","version":"15.0.0","date":"2020-10-20","lts":false,"security":false,"v8":"8.6.395.16"},{"name":"nodejs","version":"15.1.0","date":"2020-11-04","lts":false,"security":false,"v8":"8.6.395.17"},{"name":"nodejs","version":"15.2.0","date":"2020-11-10","lts":false,"security":false,"v8":"8.6.395.17"},{"name":"nodejs","version":"15.3.0","date":"2020-11-24","lts":false,"security":false,"v8":"8.6.395.17"},{"name":"nodejs","version":"15.4.0","date":"2020-12-09","lts":false,"security":false,"v8":"8.6.395.17"},{"name":"nodejs","version":"15.5.0","date":"2020-12-22","lts":false,"security":false,"v8":"8.6.395.17"},{"name":"nodejs","version":"15.6.0","date":"2021-01-14","lts":false,"security":false,"v8":"8.6.395.17"},{"name":"nodejs","version":"15.7.0","date":"2021-01-25","lts":false,"security":false,"v8":"8.6.395.17"},{"name":"nodejs","version":"15.8.0","date":"2021-02-02","lts":false,"security":false,"v8":"8.6.395.17"},{"name":"nodejs","version":"15.9.0","date":"2021-02-18","lts":false,"security":false,"v8":"8.6.395.17"},{"name":"nodejs","version":"15.10.0","date":"2021-02-23","lts":false,"security":true,"v8":"8.6.395.17"},{"name":"nodejs","version":"15.11.0","date":"2021-03-03","lts":false,"security":false,"v8":"8.6.395.17"},{"name":"nodejs","version":"15.12.0","date":"2021-03-17","lts":false,"security":false,"v8":"8.6.395.17"},{"name":"nodejs","version":"15.13.0","date":"2021-03-31","lts":false,"security":false,"v8":"8.6.395.17"},{"name":"nodejs","version":"15.14.0","date":"2021-04-06","lts":false,"security":false,"v8":"8.6.395.17"},{"name":"nodejs","version":"16.0.0","date":"2021-04-20","lts":false,"security":false,"v8":"9.0.257.17"},{"name":"nodejs","version":"16.1.0","date":"2021-05-04","lts":false,"security":false,"v8":"9.0.257.24"},{"name":"nodejs","version":"16.2.0","date":"2021-05-19","lts":false,"security":false,"v8":"9.0.257.25"},{"name":"nodejs","version":"16.3.0","date":"2021-06-03","lts":false,"security":false,"v8":"9.0.257.25"},{"name":"nodejs","version":"16.4.0","date":"2021-06-23","lts":false,"security":false,"v8":"9.1.269.36"},{"name":"nodejs","version":"16.5.0","date":"2021-07-14","lts":false,"security":false,"v8":"9.1.269.38"},{"name":"nodejs","version":"16.6.0","date":"2021-07-29","lts":false,"security":true,"v8":"9.2.230.21"},{"name":"nodejs","version":"16.7.0","date":"2021-08-18","lts":false,"security":false,"v8":"9.2.230.21"},{"name":"nodejs","version":"16.8.0","date":"2021-08-25","lts":false,"security":false,"v8":"9.2.230.21"},{"name":"nodejs","version":"16.9.0","date":"2021-09-07","lts":false,"security":false,"v8":"9.3.345.16"},{"name":"nodejs","version":"16.10.0","date":"2021-09-22","lts":false,"security":false,"v8":"9.3.345.19"},{"name":"nodejs","version":"16.11.0","date":"2021-10-08","lts":false,"security":false,"v8":"9.4.146.19"},{"name":"nodejs","version":"16.12.0","date":"2021-10-20","lts":false,"security":false,"v8":"9.4.146.19"},{"name":"nodejs","version":"16.13.0","date":"2021-10-26","lts":"Gallium","security":false,"v8":"9.4.146.19"},{"name":"nodejs","version":"16.14.0","date":"2022-02-08","lts":"Gallium","security":false,"v8":"9.4.146.24"},{"name":"nodejs","version":"16.15.0","date":"2022-04-26","lts":"Gallium","security":false,"v8":"9.4.146.24"},{"name":"nodejs","version":"16.16.0","date":"2022-07-07","lts":"Gallium","security":true,"v8":"9.4.146.24"},{"name":"nodejs","version":"16.17.0","date":"2022-08-16","lts":"Gallium","security":false,"v8":"9.4.146.26"},{"name":"nodejs","version":"16.18.0","date":"2022-10-12","lts":"Gallium","security":false,"v8":"9.4.146.26"},{"name":"nodejs","version":"16.19.0","date":"2022-12-13","lts":"Gallium","security":false,"v8":"9.4.146.26"},{"name":"nodejs","version":"16.20.0","date":"2023-03-28","lts":"Gallium","security":false,"v8":"9.4.146.26"},{"name":"nodejs","version":"17.0.0","date":"2021-10-19","lts":false,"security":false,"v8":"9.5.172.21"},{"name":"nodejs","version":"17.1.0","date":"2021-11-09","lts":false,"security":false,"v8":"9.5.172.25"},{"name":"nodejs","version":"17.2.0","date":"2021-11-30","lts":false,"security":false,"v8":"9.6.180.14"},{"name":"nodejs","version":"17.3.0","date":"2021-12-17","lts":false,"security":false,"v8":"9.6.180.15"},{"name":"nodejs","version":"17.4.0","date":"2022-01-18","lts":false,"security":false,"v8":"9.6.180.15"},{"name":"nodejs","version":"17.5.0","date":"2022-02-10","lts":false,"security":false,"v8":"9.6.180.15"},{"name":"nodejs","version":"17.6.0","date":"2022-02-22","lts":false,"security":false,"v8":"9.6.180.15"},{"name":"nodejs","version":"17.7.0","date":"2022-03-09","lts":false,"security":false,"v8":"9.6.180.15"},{"name":"nodejs","version":"17.8.0","date":"2022-03-22","lts":false,"security":false,"v8":"9.6.180.15"},{"name":"nodejs","version":"17.9.0","date":"2022-04-07","lts":false,"security":false,"v8":"9.6.180.15"},{"name":"nodejs","version":"18.0.0","date":"2022-04-18","lts":false,"security":false,"v8":"10.1.124.8"},{"name":"nodejs","version":"18.1.0","date":"2022-05-03","lts":false,"security":false,"v8":"10.1.124.8"},{"name":"nodejs","version":"18.2.0","date":"2022-05-17","lts":false,"security":false,"v8":"10.1.124.8"},{"name":"nodejs","version":"18.3.0","date":"2022-06-02","lts":false,"security":false,"v8":"10.2.154.4"},{"name":"nodejs","version":"18.4.0","date":"2022-06-16","lts":false,"security":false,"v8":"10.2.154.4"},{"name":"nodejs","version":"18.5.0","date":"2022-07-06","lts":false,"security":true,"v8":"10.2.154.4"},{"name":"nodejs","version":"18.6.0","date":"2022-07-13","lts":false,"security":false,"v8":"10.2.154.13"},{"name":"nodejs","version":"18.7.0","date":"2022-07-26","lts":false,"security":false,"v8":"10.2.154.13"},{"name":"nodejs","version":"18.8.0","date":"2022-08-24","lts":false,"security":false,"v8":"10.2.154.13"},{"name":"nodejs","version":"18.9.0","date":"2022-09-07","lts":false,"security":false,"v8":"10.2.154.15"},{"name":"nodejs","version":"18.10.0","date":"2022-09-28","lts":false,"security":false,"v8":"10.2.154.15"},{"name":"nodejs","version":"18.11.0","date":"2022-10-13","lts":false,"security":false,"v8":"10.2.154.15"},{"name":"nodejs","version":"18.12.0","date":"2022-10-25","lts":"Hydrogen","security":false,"v8":"10.2.154.15"},{"name":"nodejs","version":"18.13.0","date":"2023-01-05","lts":"Hydrogen","security":false,"v8":"10.2.154.23"},{"name":"nodejs","version":"18.14.0","date":"2023-02-01","lts":"Hydrogen","security":false,"v8":"10.2.154.23"},{"name":"nodejs","version":"18.15.0","date":"2023-03-05","lts":"Hydrogen","security":false,"v8":"10.2.154.26"},{"name":"nodejs","version":"18.16.0","date":"2023-04-12","lts":"Hydrogen","security":false,"v8":"10.2.154.26"},{"name":"nodejs","version":"18.17.0","date":"2023-07-18","lts":"Hydrogen","security":false,"v8":"10.2.154.26"},{"name":"nodejs","version":"18.18.0","date":"2023-09-18","lts":"Hydrogen","security":false,"v8":"10.2.154.26"},{"name":"nodejs","version":"18.19.0","date":"2023-11-29","lts":"Hydrogen","security":false,"v8":"10.2.154.26"},{"name":"nodejs","version":"19.0.0","date":"2022-10-17","lts":false,"security":false,"v8":"10.7.193.13"},{"name":"nodejs","version":"19.1.0","date":"2022-11-14","lts":false,"security":false,"v8":"10.7.193.20"},{"name":"nodejs","version":"19.2.0","date":"2022-11-29","lts":false,"security":false,"v8":"10.8.168.20"},{"name":"nodejs","version":"19.3.0","date":"2022-12-14","lts":false,"security":false,"v8":"10.8.168.21"},{"name":"nodejs","version":"19.4.0","date":"2023-01-05","lts":false,"security":false,"v8":"10.8.168.25"},{"name":"nodejs","version":"19.5.0","date":"2023-01-24","lts":false,"security":false,"v8":"10.8.168.25"},{"name":"nodejs","version":"19.6.0","date":"2023-02-01","lts":false,"security":false,"v8":"10.8.168.25"},{"name":"nodejs","version":"19.7.0","date":"2023-02-21","lts":false,"security":false,"v8":"10.8.168.25"},{"name":"nodejs","version":"19.8.0","date":"2023-03-14","lts":false,"security":false,"v8":"10.8.168.25"},{"name":"nodejs","version":"19.9.0","date":"2023-04-10","lts":false,"security":false,"v8":"10.8.168.25"},{"name":"nodejs","version":"20.0.0","date":"2023-04-17","lts":false,"security":false,"v8":"11.3.244.4"},{"name":"nodejs","version":"20.1.0","date":"2023-05-03","lts":false,"security":false,"v8":"11.3.244.8"},{"name":"nodejs","version":"20.2.0","date":"2023-05-16","lts":false,"security":false,"v8":"11.3.244.8"},{"name":"nodejs","version":"20.3.0","date":"2023-06-08","lts":false,"security":false,"v8":"11.3.244.8"},{"name":"nodejs","version":"20.4.0","date":"2023-07-04","lts":false,"security":false,"v8":"11.3.244.8"},{"name":"nodejs","version":"20.5.0","date":"2023-07-19","lts":false,"security":false,"v8":"11.3.244.8"},{"name":"nodejs","version":"20.6.0","date":"2023-08-23","lts":false,"security":false,"v8":"11.3.244.8"},{"name":"nodejs","version":"20.7.0","date":"2023-09-18","lts":false,"security":false,"v8":"11.3.244.8"},{"name":"nodejs","version":"20.8.0","date":"2023-09-28","lts":false,"security":false,"v8":"11.3.244.8"},{"name":"nodejs","version":"20.9.0","date":"2023-10-24","lts":"Iron","security":false,"v8":"11.3.244.8"},{"name":"nodejs","version":"20.10.0","date":"2023-11-22","lts":"Iron","security":false,"v8":"11.3.244.8"},{"name":"nodejs","version":"21.0.0","date":"2023-10-17","lts":false,"security":false,"v8":"11.8.172.13"},{"name":"nodejs","version":"21.1.0","date":"2023-10-24","lts":false,"security":false,"v8":"11.8.172.15"},{"name":"nodejs","version":"21.2.0","date":"2023-11-14","lts":false,"security":false,"v8":"11.8.172.17"},{"name":"nodejs","version":"21.3.0","date":"2023-11-30","lts":false,"security":false,"v8":"11.8.172.17"}]');
      }, 629: (e) => {
        "use strict";
        e.exports = JSON.parse('{"v0.8":{"start":"2012-06-25","end":"2014-07-31"},"v0.10":{"start":"2013-03-11","end":"2016-10-31"},"v0.12":{"start":"2015-02-06","end":"2016-12-31"},"v4":{"start":"2015-09-08","lts":"2015-10-12","maintenance":"2017-04-01","end":"2018-04-30","codename":"Argon"},"v5":{"start":"2015-10-29","maintenance":"2016-04-30","end":"2016-06-30"},"v6":{"start":"2016-04-26","lts":"2016-10-18","maintenance":"2018-04-30","end":"2019-04-30","codename":"Boron"},"v7":{"start":"2016-10-25","maintenance":"2017-04-30","end":"2017-06-30"},"v8":{"start":"2017-05-30","lts":"2017-10-31","maintenance":"2019-01-01","end":"2019-12-31","codename":"Carbon"},"v9":{"start":"2017-10-01","maintenance":"2018-04-01","end":"2018-06-30"},"v10":{"start":"2018-04-24","lts":"2018-10-30","maintenance":"2020-05-19","end":"2021-04-30","codename":"Dubnium"},"v11":{"start":"2018-10-23","maintenance":"2019-04-22","end":"2019-06-01"},"v12":{"start":"2019-04-23","lts":"2019-10-21","maintenance":"2020-11-30","end":"2022-04-30","codename":"Erbium"},"v13":{"start":"2019-10-22","maintenance":"2020-04-01","end":"2020-06-01"},"v14":{"start":"2020-04-21","lts":"2020-10-27","maintenance":"2021-10-19","end":"2023-04-30","codename":"Fermium"},"v15":{"start":"2020-10-20","maintenance":"2021-04-01","end":"2021-06-01"},"v16":{"start":"2021-04-20","lts":"2021-10-26","maintenance":"2022-10-18","end":"2023-09-11","codename":"Gallium"},"v17":{"start":"2021-10-19","maintenance":"2022-04-01","end":"2022-06-01"},"v18":{"start":"2022-04-19","lts":"2022-10-25","maintenance":"2023-10-18","end":"2025-04-30","codename":"Hydrogen"},"v19":{"start":"2022-10-18","maintenance":"2023-04-01","end":"2023-06-01"},"v20":{"start":"2023-04-18","lts":"2023-10-24","maintenance":"2024-10-22","end":"2026-04-30","codename":"Iron"},"v21":{"start":"2023-10-17","maintenance":"2024-04-01","end":"2024-06-01"},"v22":{"start":"2024-04-23","lts":"2024-10-29","maintenance":"2025-10-21","end":"2027-04-30","codename":""},"v23":{"start":"2024-10-15","maintenance":"2025-04-01","end":"2025-06-01"},"v24":{"start":"2025-04-22","lts":"2025-10-28","maintenance":"2026-10-20","end":"2028-04-30","codename":""}}');
      } };
      var __webpack_module_cache__ = {};
      function __nccwpck_require__(e) {
        var s = __webpack_module_cache__[e];
        if (s !== void 0) {
          return s.exports;
        }
        var r = __webpack_module_cache__[e] = { exports: {} };
        var n = true;
        try {
          __webpack_modules__[e](r, r.exports, __nccwpck_require__);
          n = false;
        } finally {
          if (n)
            delete __webpack_module_cache__[e];
        }
        return r.exports;
      }
      if (typeof __nccwpck_require__ !== "undefined")
        __nccwpck_require__.ab = __dirname + "/";
      var __webpack_exports__ = __nccwpck_require__(655);
      module.exports = __webpack_exports__;
    })();
  }
});

// ../../../node_modules/next/dist/lib/constants.js
var require_constants = __commonJS({
  "../../../node_modules/next/dist/lib/constants.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name2 in all)
        Object.defineProperty(target, name2, {
          enumerable: true,
          get: all[name2]
        });
    }
    _export(exports2, {
      NEXT_QUERY_PARAM_PREFIX: function() {
        return NEXT_QUERY_PARAM_PREFIX;
      },
      PRERENDER_REVALIDATE_HEADER: function() {
        return PRERENDER_REVALIDATE_HEADER;
      },
      PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER: function() {
        return PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER;
      },
      RSC_PREFETCH_SUFFIX: function() {
        return RSC_PREFETCH_SUFFIX;
      },
      RSC_SUFFIX: function() {
        return RSC_SUFFIX;
      },
      NEXT_DATA_SUFFIX: function() {
        return NEXT_DATA_SUFFIX;
      },
      NEXT_META_SUFFIX: function() {
        return NEXT_META_SUFFIX;
      },
      NEXT_BODY_SUFFIX: function() {
        return NEXT_BODY_SUFFIX;
      },
      NEXT_CACHE_TAGS_HEADER: function() {
        return NEXT_CACHE_TAGS_HEADER;
      },
      NEXT_CACHE_SOFT_TAGS_HEADER: function() {
        return NEXT_CACHE_SOFT_TAGS_HEADER;
      },
      NEXT_CACHE_REVALIDATED_TAGS_HEADER: function() {
        return NEXT_CACHE_REVALIDATED_TAGS_HEADER;
      },
      NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER: function() {
        return NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER;
      },
      NEXT_CACHE_TAG_MAX_LENGTH: function() {
        return NEXT_CACHE_TAG_MAX_LENGTH;
      },
      NEXT_CACHE_SOFT_TAG_MAX_LENGTH: function() {
        return NEXT_CACHE_SOFT_TAG_MAX_LENGTH;
      },
      NEXT_CACHE_IMPLICIT_TAG_ID: function() {
        return NEXT_CACHE_IMPLICIT_TAG_ID;
      },
      CACHE_ONE_YEAR: function() {
        return CACHE_ONE_YEAR;
      },
      MIDDLEWARE_FILENAME: function() {
        return MIDDLEWARE_FILENAME;
      },
      MIDDLEWARE_LOCATION_REGEXP: function() {
        return MIDDLEWARE_LOCATION_REGEXP;
      },
      INSTRUMENTATION_HOOK_FILENAME: function() {
        return INSTRUMENTATION_HOOK_FILENAME;
      },
      PAGES_DIR_ALIAS: function() {
        return PAGES_DIR_ALIAS;
      },
      DOT_NEXT_ALIAS: function() {
        return DOT_NEXT_ALIAS;
      },
      ROOT_DIR_ALIAS: function() {
        return ROOT_DIR_ALIAS;
      },
      APP_DIR_ALIAS: function() {
        return APP_DIR_ALIAS;
      },
      RSC_MOD_REF_PROXY_ALIAS: function() {
        return RSC_MOD_REF_PROXY_ALIAS;
      },
      RSC_ACTION_VALIDATE_ALIAS: function() {
        return RSC_ACTION_VALIDATE_ALIAS;
      },
      RSC_ACTION_PROXY_ALIAS: function() {
        return RSC_ACTION_PROXY_ALIAS;
      },
      RSC_ACTION_ENCRYPTION_ALIAS: function() {
        return RSC_ACTION_ENCRYPTION_ALIAS;
      },
      RSC_ACTION_CLIENT_WRAPPER_ALIAS: function() {
        return RSC_ACTION_CLIENT_WRAPPER_ALIAS;
      },
      PUBLIC_DIR_MIDDLEWARE_CONFLICT: function() {
        return PUBLIC_DIR_MIDDLEWARE_CONFLICT;
      },
      SSG_GET_INITIAL_PROPS_CONFLICT: function() {
        return SSG_GET_INITIAL_PROPS_CONFLICT;
      },
      SERVER_PROPS_GET_INIT_PROPS_CONFLICT: function() {
        return SERVER_PROPS_GET_INIT_PROPS_CONFLICT;
      },
      SERVER_PROPS_SSG_CONFLICT: function() {
        return SERVER_PROPS_SSG_CONFLICT;
      },
      STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR: function() {
        return STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR;
      },
      SERVER_PROPS_EXPORT_ERROR: function() {
        return SERVER_PROPS_EXPORT_ERROR;
      },
      GSP_NO_RETURNED_VALUE: function() {
        return GSP_NO_RETURNED_VALUE;
      },
      GSSP_NO_RETURNED_VALUE: function() {
        return GSSP_NO_RETURNED_VALUE;
      },
      UNSTABLE_REVALIDATE_RENAME_ERROR: function() {
        return UNSTABLE_REVALIDATE_RENAME_ERROR;
      },
      GSSP_COMPONENT_MEMBER_ERROR: function() {
        return GSSP_COMPONENT_MEMBER_ERROR;
      },
      NON_STANDARD_NODE_ENV: function() {
        return NON_STANDARD_NODE_ENV;
      },
      SSG_FALLBACK_EXPORT_ERROR: function() {
        return SSG_FALLBACK_EXPORT_ERROR;
      },
      ESLINT_DEFAULT_DIRS: function() {
        return ESLINT_DEFAULT_DIRS;
      },
      ESLINT_PROMPT_VALUES: function() {
        return ESLINT_PROMPT_VALUES;
      },
      SERVER_RUNTIME: function() {
        return SERVER_RUNTIME;
      },
      WEBPACK_LAYERS: function() {
        return WEBPACK_LAYERS;
      },
      WEBPACK_RESOURCE_QUERIES: function() {
        return WEBPACK_RESOURCE_QUERIES;
      }
    });
    var NEXT_QUERY_PARAM_PREFIX = "nxtP";
    var PRERENDER_REVALIDATE_HEADER = "x-prerender-revalidate";
    var PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER = "x-prerender-revalidate-if-generated";
    var RSC_PREFETCH_SUFFIX = ".prefetch.rsc";
    var RSC_SUFFIX = ".rsc";
    var NEXT_DATA_SUFFIX = ".json";
    var NEXT_META_SUFFIX = ".meta";
    var NEXT_BODY_SUFFIX = ".body";
    var NEXT_CACHE_TAGS_HEADER = "x-next-cache-tags";
    var NEXT_CACHE_SOFT_TAGS_HEADER = "x-next-cache-soft-tags";
    var NEXT_CACHE_REVALIDATED_TAGS_HEADER = "x-next-revalidated-tags";
    var NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER = "x-next-revalidate-tag-token";
    var NEXT_CACHE_TAG_MAX_LENGTH = 256;
    var NEXT_CACHE_SOFT_TAG_MAX_LENGTH = 1024;
    var NEXT_CACHE_IMPLICIT_TAG_ID = "_N_T_";
    var CACHE_ONE_YEAR = 31536e3;
    var MIDDLEWARE_FILENAME = "middleware";
    var MIDDLEWARE_LOCATION_REGEXP = `(?:src/)?${MIDDLEWARE_FILENAME}`;
    var INSTRUMENTATION_HOOK_FILENAME = "instrumentation";
    var PAGES_DIR_ALIAS = "private-next-pages";
    var DOT_NEXT_ALIAS = "private-dot-next";
    var ROOT_DIR_ALIAS = "private-next-root-dir";
    var APP_DIR_ALIAS = "private-next-app-dir";
    var RSC_MOD_REF_PROXY_ALIAS = "private-next-rsc-mod-ref-proxy";
    var RSC_ACTION_VALIDATE_ALIAS = "private-next-rsc-action-validate";
    var RSC_ACTION_PROXY_ALIAS = "private-next-rsc-server-reference";
    var RSC_ACTION_ENCRYPTION_ALIAS = "private-next-rsc-action-encryption";
    var RSC_ACTION_CLIENT_WRAPPER_ALIAS = "private-next-rsc-action-client-wrapper";
    var PUBLIC_DIR_MIDDLEWARE_CONFLICT = `You can not have a '_next' folder inside of your public folder. This conflicts with the internal '/_next' route. https://nextjs.org/docs/messages/public-next-folder-conflict`;
    var SSG_GET_INITIAL_PROPS_CONFLICT = `You can not use getInitialProps with getStaticProps. To use SSG, please remove your getInitialProps`;
    var SERVER_PROPS_GET_INIT_PROPS_CONFLICT = `You can not use getInitialProps with getServerSideProps. Please remove getInitialProps.`;
    var SERVER_PROPS_SSG_CONFLICT = `You can not use getStaticProps or getStaticPaths with getServerSideProps. To use SSG, please remove getServerSideProps`;
    var STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR = `can not have getInitialProps/getServerSideProps, https://nextjs.org/docs/messages/404-get-initial-props`;
    var SERVER_PROPS_EXPORT_ERROR = `pages with \`getServerSideProps\` can not be exported. See more info here: https://nextjs.org/docs/messages/gssp-export`;
    var GSP_NO_RETURNED_VALUE = "Your `getStaticProps` function did not return an object. Did you forget to add a `return`?";
    var GSSP_NO_RETURNED_VALUE = "Your `getServerSideProps` function did not return an object. Did you forget to add a `return`?";
    var UNSTABLE_REVALIDATE_RENAME_ERROR = "The `unstable_revalidate` property is available for general use.\nPlease use `revalidate` instead.";
    var GSSP_COMPONENT_MEMBER_ERROR = `can not be attached to a page's component and must be exported from the page. See more info here: https://nextjs.org/docs/messages/gssp-component-member`;
    var NON_STANDARD_NODE_ENV = `You are using a non-standard "NODE_ENV" value in your environment. This creates inconsistencies in the project and is strongly advised against. Read more: https://nextjs.org/docs/messages/non-standard-node-env`;
    var SSG_FALLBACK_EXPORT_ERROR = `Pages with \`fallback\` enabled in \`getStaticPaths\` can not be exported. See more info here: https://nextjs.org/docs/messages/ssg-fallback-true-export`;
    var ESLINT_DEFAULT_DIRS = [
      "app",
      "pages",
      "components",
      "lib",
      "src"
    ];
    var ESLINT_PROMPT_VALUES = [
      {
        title: "Strict",
        recommended: true,
        config: {
          extends: "next/core-web-vitals"
        }
      },
      {
        title: "Base",
        config: {
          extends: "next"
        }
      },
      {
        title: "Cancel",
        config: null
      }
    ];
    var SERVER_RUNTIME = {
      edge: "edge",
      experimentalEdge: "experimental-edge",
      nodejs: "nodejs"
    };
    var WEBPACK_LAYERS_NAMES = {
      /**
      * The layer for the shared code between the client and server bundles.
      */
      shared: "shared",
      /**
      * React Server Components layer (rsc).
      */
      reactServerComponents: "rsc",
      /**
      * Server Side Rendering layer for app (ssr).
      */
      serverSideRendering: "ssr",
      /**
      * The browser client bundle layer for actions.
      */
      actionBrowser: "action-browser",
      /**
      * The layer for the API routes.
      */
      api: "api",
      /**
      * The layer for the middleware code.
      */
      middleware: "middleware",
      /**
      * The layer for assets on the edge.
      */
      edgeAsset: "edge-asset",
      /**
      * The browser client bundle layer for App directory.
      */
      appPagesBrowser: "app-pages-browser",
      /**
      * The server bundle layer for metadata routes.
      */
      appMetadataRoute: "app-metadata-route",
      /**
      * The layer for the server bundle for App Route handlers.
      */
      appRouteHandler: "app-route-handler"
    };
    var WEBPACK_LAYERS = {
      ...WEBPACK_LAYERS_NAMES,
      GROUP: {
        server: [
          WEBPACK_LAYERS_NAMES.reactServerComponents,
          WEBPACK_LAYERS_NAMES.actionBrowser,
          WEBPACK_LAYERS_NAMES.appMetadataRoute,
          WEBPACK_LAYERS_NAMES.appRouteHandler
        ],
        nonClientServerTarget: [
          // plus middleware and pages api
          WEBPACK_LAYERS_NAMES.middleware,
          WEBPACK_LAYERS_NAMES.api
        ],
        app: [
          WEBPACK_LAYERS_NAMES.reactServerComponents,
          WEBPACK_LAYERS_NAMES.actionBrowser,
          WEBPACK_LAYERS_NAMES.appMetadataRoute,
          WEBPACK_LAYERS_NAMES.appRouteHandler,
          WEBPACK_LAYERS_NAMES.serverSideRendering,
          WEBPACK_LAYERS_NAMES.appPagesBrowser,
          WEBPACK_LAYERS_NAMES.shared
        ]
      }
    };
    var WEBPACK_RESOURCE_QUERIES = {
      edgeSSREntry: "__next_edge_ssr_entry__",
      metadata: "__next_metadata__",
      metadataRoute: "__next_metadata_route__",
      metadataImageMeta: "__next_metadata_image_meta__"
    };
  }
});

// ../../../node_modules/@swc/helpers/cjs/_interop_require_default.cjs
var require_interop_require_default = __commonJS({
  "../../../node_modules/@swc/helpers/cjs/_interop_require_default.cjs"(exports2) {
    "use strict";
    exports2._ = exports2._interop_require_default = _interop_require_default;
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
  }
});

// ../../../node_modules/next/dist/shared/lib/modern-browserslist-target.js
var require_modern_browserslist_target = __commonJS({
  "../../../node_modules/next/dist/shared/lib/modern-browserslist-target.js"(exports2, module2) {
    "use strict";
    var MODERN_BROWSERSLIST_TARGET = [
      "chrome 64",
      "edge 79",
      "firefox 67",
      "opera 51",
      "safari 12"
    ];
    module2.exports = MODERN_BROWSERSLIST_TARGET;
  }
});

// ../../../node_modules/next/dist/shared/lib/constants.js
var require_constants2 = __commonJS({
  "../../../node_modules/next/dist/shared/lib/constants.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name2 in all)
        Object.defineProperty(target, name2, {
          enumerable: true,
          get: all[name2]
        });
    }
    _export(exports2, {
      MODERN_BROWSERSLIST_TARGET: function() {
        return _modernbrowserslisttarget.default;
      },
      COMPILER_NAMES: function() {
        return COMPILER_NAMES;
      },
      INTERNAL_HEADERS: function() {
        return INTERNAL_HEADERS;
      },
      COMPILER_INDEXES: function() {
        return COMPILER_INDEXES;
      },
      PHASE_EXPORT: function() {
        return PHASE_EXPORT;
      },
      PHASE_PRODUCTION_BUILD: function() {
        return PHASE_PRODUCTION_BUILD;
      },
      PHASE_PRODUCTION_SERVER: function() {
        return PHASE_PRODUCTION_SERVER;
      },
      PHASE_DEVELOPMENT_SERVER: function() {
        return PHASE_DEVELOPMENT_SERVER;
      },
      PHASE_TEST: function() {
        return PHASE_TEST;
      },
      PHASE_INFO: function() {
        return PHASE_INFO;
      },
      PAGES_MANIFEST: function() {
        return PAGES_MANIFEST;
      },
      APP_PATHS_MANIFEST: function() {
        return APP_PATHS_MANIFEST;
      },
      APP_PATH_ROUTES_MANIFEST: function() {
        return APP_PATH_ROUTES_MANIFEST;
      },
      BUILD_MANIFEST: function() {
        return BUILD_MANIFEST;
      },
      APP_BUILD_MANIFEST: function() {
        return APP_BUILD_MANIFEST;
      },
      FUNCTIONS_CONFIG_MANIFEST: function() {
        return FUNCTIONS_CONFIG_MANIFEST;
      },
      SUBRESOURCE_INTEGRITY_MANIFEST: function() {
        return SUBRESOURCE_INTEGRITY_MANIFEST;
      },
      NEXT_FONT_MANIFEST: function() {
        return NEXT_FONT_MANIFEST;
      },
      EXPORT_MARKER: function() {
        return EXPORT_MARKER;
      },
      EXPORT_DETAIL: function() {
        return EXPORT_DETAIL;
      },
      PRERENDER_MANIFEST: function() {
        return PRERENDER_MANIFEST;
      },
      ROUTES_MANIFEST: function() {
        return ROUTES_MANIFEST;
      },
      IMAGES_MANIFEST: function() {
        return IMAGES_MANIFEST;
      },
      SERVER_FILES_MANIFEST: function() {
        return SERVER_FILES_MANIFEST;
      },
      DEV_CLIENT_PAGES_MANIFEST: function() {
        return DEV_CLIENT_PAGES_MANIFEST;
      },
      MIDDLEWARE_MANIFEST: function() {
        return MIDDLEWARE_MANIFEST;
      },
      DEV_MIDDLEWARE_MANIFEST: function() {
        return DEV_MIDDLEWARE_MANIFEST;
      },
      REACT_LOADABLE_MANIFEST: function() {
        return REACT_LOADABLE_MANIFEST;
      },
      FONT_MANIFEST: function() {
        return FONT_MANIFEST;
      },
      SERVER_DIRECTORY: function() {
        return SERVER_DIRECTORY;
      },
      CONFIG_FILES: function() {
        return CONFIG_FILES;
      },
      BUILD_ID_FILE: function() {
        return BUILD_ID_FILE;
      },
      BLOCKED_PAGES: function() {
        return BLOCKED_PAGES;
      },
      CLIENT_PUBLIC_FILES_PATH: function() {
        return CLIENT_PUBLIC_FILES_PATH;
      },
      CLIENT_STATIC_FILES_PATH: function() {
        return CLIENT_STATIC_FILES_PATH;
      },
      STRING_LITERAL_DROP_BUNDLE: function() {
        return STRING_LITERAL_DROP_BUNDLE;
      },
      NEXT_BUILTIN_DOCUMENT: function() {
        return NEXT_BUILTIN_DOCUMENT;
      },
      BARREL_OPTIMIZATION_PREFIX: function() {
        return BARREL_OPTIMIZATION_PREFIX;
      },
      CLIENT_REFERENCE_MANIFEST: function() {
        return CLIENT_REFERENCE_MANIFEST;
      },
      SERVER_REFERENCE_MANIFEST: function() {
        return SERVER_REFERENCE_MANIFEST;
      },
      MIDDLEWARE_BUILD_MANIFEST: function() {
        return MIDDLEWARE_BUILD_MANIFEST;
      },
      MIDDLEWARE_REACT_LOADABLE_MANIFEST: function() {
        return MIDDLEWARE_REACT_LOADABLE_MANIFEST;
      },
      CLIENT_STATIC_FILES_RUNTIME_MAIN: function() {
        return CLIENT_STATIC_FILES_RUNTIME_MAIN;
      },
      CLIENT_STATIC_FILES_RUNTIME_MAIN_APP: function() {
        return CLIENT_STATIC_FILES_RUNTIME_MAIN_APP;
      },
      APP_CLIENT_INTERNALS: function() {
        return APP_CLIENT_INTERNALS;
      },
      CLIENT_STATIC_FILES_RUNTIME_REACT_REFRESH: function() {
        return CLIENT_STATIC_FILES_RUNTIME_REACT_REFRESH;
      },
      CLIENT_STATIC_FILES_RUNTIME_AMP: function() {
        return CLIENT_STATIC_FILES_RUNTIME_AMP;
      },
      CLIENT_STATIC_FILES_RUNTIME_WEBPACK: function() {
        return CLIENT_STATIC_FILES_RUNTIME_WEBPACK;
      },
      CLIENT_STATIC_FILES_RUNTIME_POLYFILLS: function() {
        return CLIENT_STATIC_FILES_RUNTIME_POLYFILLS;
      },
      CLIENT_STATIC_FILES_RUNTIME_POLYFILLS_SYMBOL: function() {
        return CLIENT_STATIC_FILES_RUNTIME_POLYFILLS_SYMBOL;
      },
      EDGE_RUNTIME_WEBPACK: function() {
        return EDGE_RUNTIME_WEBPACK;
      },
      STATIC_PROPS_ID: function() {
        return STATIC_PROPS_ID;
      },
      SERVER_PROPS_ID: function() {
        return SERVER_PROPS_ID;
      },
      GOOGLE_FONT_PROVIDER: function() {
        return GOOGLE_FONT_PROVIDER;
      },
      OPTIMIZED_FONT_PROVIDERS: function() {
        return OPTIMIZED_FONT_PROVIDERS;
      },
      DEFAULT_SERIF_FONT: function() {
        return DEFAULT_SERIF_FONT;
      },
      DEFAULT_SANS_SERIF_FONT: function() {
        return DEFAULT_SANS_SERIF_FONT;
      },
      STATIC_STATUS_PAGES: function() {
        return STATIC_STATUS_PAGES;
      },
      TRACE_OUTPUT_VERSION: function() {
        return TRACE_OUTPUT_VERSION;
      },
      TURBO_TRACE_DEFAULT_MEMORY_LIMIT: function() {
        return TURBO_TRACE_DEFAULT_MEMORY_LIMIT;
      },
      RSC_MODULE_TYPES: function() {
        return RSC_MODULE_TYPES;
      },
      EDGE_UNSUPPORTED_NODE_APIS: function() {
        return EDGE_UNSUPPORTED_NODE_APIS;
      },
      SYSTEM_ENTRYPOINTS: function() {
        return SYSTEM_ENTRYPOINTS;
      }
    });
    var _interop_require_default = require_interop_require_default();
    var _modernbrowserslisttarget = _interop_require_default._(require_modern_browserslist_target());
    var COMPILER_NAMES = {
      client: "client",
      server: "server",
      edgeServer: "edge-server"
    };
    var INTERNAL_HEADERS = [
      "x-invoke-error",
      "x-invoke-output",
      "x-invoke-path",
      "x-invoke-query",
      "x-invoke-status",
      "x-middleware-invoke"
    ];
    var COMPILER_INDEXES = {
      [COMPILER_NAMES.client]: 0,
      [COMPILER_NAMES.server]: 1,
      [COMPILER_NAMES.edgeServer]: 2
    };
    var PHASE_EXPORT = "phase-export";
    var PHASE_PRODUCTION_BUILD = "phase-production-build";
    var PHASE_PRODUCTION_SERVER = "phase-production-server";
    var PHASE_DEVELOPMENT_SERVER = "phase-development-server";
    var PHASE_TEST = "phase-test";
    var PHASE_INFO = "phase-info";
    var PAGES_MANIFEST = "pages-manifest.json";
    var APP_PATHS_MANIFEST = "app-paths-manifest.json";
    var APP_PATH_ROUTES_MANIFEST = "app-path-routes-manifest.json";
    var BUILD_MANIFEST = "build-manifest.json";
    var APP_BUILD_MANIFEST = "app-build-manifest.json";
    var FUNCTIONS_CONFIG_MANIFEST = "functions-config-manifest.json";
    var SUBRESOURCE_INTEGRITY_MANIFEST = "subresource-integrity-manifest";
    var NEXT_FONT_MANIFEST = "next-font-manifest";
    var EXPORT_MARKER = "export-marker.json";
    var EXPORT_DETAIL = "export-detail.json";
    var PRERENDER_MANIFEST = "prerender-manifest.json";
    var ROUTES_MANIFEST = "routes-manifest.json";
    var IMAGES_MANIFEST = "images-manifest.json";
    var SERVER_FILES_MANIFEST = "required-server-files.json";
    var DEV_CLIENT_PAGES_MANIFEST = "_devPagesManifest.json";
    var MIDDLEWARE_MANIFEST = "middleware-manifest.json";
    var DEV_MIDDLEWARE_MANIFEST = "_devMiddlewareManifest.json";
    var REACT_LOADABLE_MANIFEST = "react-loadable-manifest.json";
    var FONT_MANIFEST = "font-manifest.json";
    var SERVER_DIRECTORY = "server";
    var CONFIG_FILES = [
      "next.config.js",
      "next.config.mjs"
    ];
    var BUILD_ID_FILE = "BUILD_ID";
    var BLOCKED_PAGES = [
      "/_document",
      "/_app",
      "/_error"
    ];
    var CLIENT_PUBLIC_FILES_PATH = "public";
    var CLIENT_STATIC_FILES_PATH = "static";
    var STRING_LITERAL_DROP_BUNDLE = "__NEXT_DROP_CLIENT_FILE__";
    var NEXT_BUILTIN_DOCUMENT = "__NEXT_BUILTIN_DOCUMENT__";
    var BARREL_OPTIMIZATION_PREFIX = "__barrel_optimize__";
    var CLIENT_REFERENCE_MANIFEST = "client-reference-manifest";
    var SERVER_REFERENCE_MANIFEST = "server-reference-manifest";
    var MIDDLEWARE_BUILD_MANIFEST = "middleware-build-manifest";
    var MIDDLEWARE_REACT_LOADABLE_MANIFEST = "middleware-react-loadable-manifest";
    var CLIENT_STATIC_FILES_RUNTIME_MAIN = "main";
    var CLIENT_STATIC_FILES_RUNTIME_MAIN_APP = "" + CLIENT_STATIC_FILES_RUNTIME_MAIN + "-app";
    var APP_CLIENT_INTERNALS = "app-pages-internals";
    var CLIENT_STATIC_FILES_RUNTIME_REACT_REFRESH = "react-refresh";
    var CLIENT_STATIC_FILES_RUNTIME_AMP = "amp";
    var CLIENT_STATIC_FILES_RUNTIME_WEBPACK = "webpack";
    var CLIENT_STATIC_FILES_RUNTIME_POLYFILLS = "polyfills";
    var CLIENT_STATIC_FILES_RUNTIME_POLYFILLS_SYMBOL = Symbol(CLIENT_STATIC_FILES_RUNTIME_POLYFILLS);
    var EDGE_RUNTIME_WEBPACK = "edge-runtime-webpack";
    var STATIC_PROPS_ID = "__N_SSG";
    var SERVER_PROPS_ID = "__N_SSP";
    var GOOGLE_FONT_PROVIDER = "https://fonts.googleapis.com/";
    var OPTIMIZED_FONT_PROVIDERS = [
      {
        url: GOOGLE_FONT_PROVIDER,
        preconnect: "https://fonts.gstatic.com"
      },
      {
        url: "https://use.typekit.net",
        preconnect: "https://use.typekit.net"
      }
    ];
    var DEFAULT_SERIF_FONT = {
      name: "Times New Roman",
      xAvgCharWidth: 821,
      azAvgWidth: 854.3953488372093,
      unitsPerEm: 2048
    };
    var DEFAULT_SANS_SERIF_FONT = {
      name: "Arial",
      xAvgCharWidth: 904,
      azAvgWidth: 934.5116279069767,
      unitsPerEm: 2048
    };
    var STATIC_STATUS_PAGES = [
      "/500"
    ];
    var TRACE_OUTPUT_VERSION = 1;
    var TURBO_TRACE_DEFAULT_MEMORY_LIMIT = 6e3;
    var RSC_MODULE_TYPES = {
      client: "client",
      server: "server"
    };
    var EDGE_UNSUPPORTED_NODE_APIS = [
      "clearImmediate",
      "setImmediate",
      "BroadcastChannel",
      "ByteLengthQueuingStrategy",
      "CompressionStream",
      "CountQueuingStrategy",
      "DecompressionStream",
      "DomException",
      "MessageChannel",
      "MessageEvent",
      "MessagePort",
      "ReadableByteStreamController",
      "ReadableStreamBYOBRequest",
      "ReadableStreamDefaultController",
      "TransformStreamDefaultController",
      "WritableStreamDefaultController"
    ];
    var SYSTEM_ENTRYPOINTS = /* @__PURE__ */ new Set([
      CLIENT_STATIC_FILES_RUNTIME_MAIN,
      CLIENT_STATIC_FILES_RUNTIME_REACT_REFRESH,
      CLIENT_STATIC_FILES_RUNTIME_AMP,
      CLIENT_STATIC_FILES_RUNTIME_MAIN_APP
    ]);
    if ((typeof exports2.default === "function" || typeof exports2.default === "object" && exports2.default !== null) && typeof exports2.default.__esModule === "undefined") {
      Object.defineProperty(exports2.default, "__esModule", { value: true });
      Object.assign(exports2.default, exports2);
      module2.exports = exports2.default;
    }
  }
});

// ../../../node_modules/next/dist/lib/pretty-bytes.js
var require_pretty_bytes = __commonJS({
  "../../../node_modules/next/dist/lib/pretty-bytes.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    Object.defineProperty(exports2, "default", {
      enumerable: true,
      get: function() {
        return prettyBytes;
      }
    });
    var UNITS = [
      "B",
      "kB",
      "MB",
      "GB",
      "TB",
      "PB",
      "EB",
      "ZB",
      "YB"
    ];
    var toLocaleString = (number, locale) => {
      let result = number;
      if (typeof locale === "string") {
        result = number.toLocaleString(locale);
      } else if (locale === true) {
        result = number.toLocaleString();
      }
      return result;
    };
    function prettyBytes(number, options) {
      if (!Number.isFinite(number)) {
        throw new TypeError(`Expected a finite number, got ${typeof number}: ${number}`);
      }
      options = Object.assign({}, options);
      if (options.signed && number === 0) {
        return " 0 B";
      }
      const isNegative = number < 0;
      const prefix = isNegative ? "-" : options.signed ? "+" : "";
      if (isNegative) {
        number = -number;
      }
      if (number < 1) {
        const numberString2 = toLocaleString(number, options.locale);
        return prefix + numberString2 + " B";
      }
      const exponent = Math.min(Math.floor(Math.log10(number) / 3), UNITS.length - 1);
      number = Number((number / Math.pow(1e3, exponent)).toPrecision(3));
      const numberString = toLocaleString(number, options.locale);
      const unit = UNITS[exponent];
      return prefix + numberString + " " + unit;
    }
  }
});

// ../../../node_modules/next/dist/shared/lib/page-path/ensure-leading-slash.js
var require_ensure_leading_slash = __commonJS({
  "../../../node_modules/next/dist/shared/lib/page-path/ensure-leading-slash.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    Object.defineProperty(exports2, "ensureLeadingSlash", {
      enumerable: true,
      get: function() {
        return ensureLeadingSlash;
      }
    });
    function ensureLeadingSlash(path2) {
      return path2.startsWith("/") ? path2 : "/" + path2;
    }
  }
});

// ../../../node_modules/next/dist/shared/lib/segment.js
var require_segment = __commonJS({
  "../../../node_modules/next/dist/shared/lib/segment.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name2 in all)
        Object.defineProperty(target, name2, {
          enumerable: true,
          get: all[name2]
        });
    }
    _export(exports2, {
      isGroupSegment: function() {
        return isGroupSegment;
      },
      PAGE_SEGMENT_KEY: function() {
        return PAGE_SEGMENT_KEY;
      },
      DEFAULT_SEGMENT_KEY: function() {
        return DEFAULT_SEGMENT_KEY;
      }
    });
    function isGroupSegment(segment) {
      return segment[0] === "(" && segment.endsWith(")");
    }
    var PAGE_SEGMENT_KEY = "__PAGE__";
    var DEFAULT_SEGMENT_KEY = "__DEFAULT__";
  }
});

// ../../../node_modules/next/dist/shared/lib/router/utils/app-paths.js
var require_app_paths = __commonJS({
  "../../../node_modules/next/dist/shared/lib/router/utils/app-paths.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name2 in all)
        Object.defineProperty(target, name2, {
          enumerable: true,
          get: all[name2]
        });
    }
    _export(exports2, {
      normalizeAppPath: function() {
        return normalizeAppPath;
      },
      normalizeRscURL: function() {
        return normalizeRscURL;
      }
    });
    var _ensureleadingslash = require_ensure_leading_slash();
    var _segment = require_segment();
    function normalizeAppPath(route) {
      return (0, _ensureleadingslash.ensureLeadingSlash)(route.split("/").reduce((pathname, segment, index, segments) => {
        if (!segment) {
          return pathname;
        }
        if ((0, _segment.isGroupSegment)(segment)) {
          return pathname;
        }
        if (segment[0] === "@") {
          return pathname;
        }
        if ((segment === "page" || segment === "route") && index === segments.length - 1) {
          return pathname;
        }
        return pathname + "/" + segment;
      }, ""));
    }
    function normalizeRscURL(url) {
      return url.replace(
        /\.rsc($|\?)/,
        // $1 ensures `?` is preserved
        "$1"
      );
    }
  }
});

// ../../../node_modules/next/dist/server/future/helpers/interception-routes.js
var require_interception_routes = __commonJS({
  "../../../node_modules/next/dist/server/future/helpers/interception-routes.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name2 in all)
        Object.defineProperty(target, name2, {
          enumerable: true,
          get: all[name2]
        });
    }
    _export(exports2, {
      INTERCEPTION_ROUTE_MARKERS: function() {
        return INTERCEPTION_ROUTE_MARKERS;
      },
      isInterceptionRouteAppPath: function() {
        return isInterceptionRouteAppPath;
      },
      extractInterceptionRouteInformation: function() {
        return extractInterceptionRouteInformation;
      }
    });
    var _apppaths = require_app_paths();
    var INTERCEPTION_ROUTE_MARKERS = [
      "(..)(..)",
      "(.)",
      "(..)",
      "(...)"
    ];
    function isInterceptionRouteAppPath(path2) {
      return path2.split("/").find((segment) => INTERCEPTION_ROUTE_MARKERS.find((m) => segment.startsWith(m))) !== void 0;
    }
    function extractInterceptionRouteInformation(path2) {
      let interceptingRoute, marker, interceptedRoute;
      for (const segment of path2.split("/")) {
        marker = INTERCEPTION_ROUTE_MARKERS.find((m) => segment.startsWith(m));
        if (marker) {
          [interceptingRoute, interceptedRoute] = path2.split(marker, 2);
          break;
        }
      }
      if (!interceptingRoute || !marker || !interceptedRoute) {
        throw new Error(`Invalid interception route: ${path2}. Must be in the format /<intercepting route>/(..|...|..)(..)/<intercepted route>`);
      }
      interceptingRoute = (0, _apppaths.normalizeAppPath)(interceptingRoute);
      switch (marker) {
        case "(.)":
          if (interceptingRoute === "/") {
            interceptedRoute = `/${interceptedRoute}`;
          } else {
            interceptedRoute = interceptingRoute + "/" + interceptedRoute;
          }
          break;
        case "(..)":
          if (interceptingRoute === "/") {
            throw new Error(`Invalid interception route: ${path2}. Cannot use (..) marker at the root level, use (.) instead.`);
          }
          interceptedRoute = interceptingRoute.split("/").slice(0, -1).concat(interceptedRoute).join("/");
          break;
        case "(...)":
          interceptedRoute = "/" + interceptedRoute;
          break;
        case "(..)(..)":
          const splitInterceptingRoute = interceptingRoute.split("/");
          if (splitInterceptingRoute.length <= 2) {
            throw new Error(`Invalid interception route: ${path2}. Cannot use (..)(..) marker at the root level or one level up.`);
          }
          interceptedRoute = splitInterceptingRoute.slice(0, -2).concat(interceptedRoute).join("/");
          break;
        default:
          throw new Error("Invariant: unexpected marker");
      }
      return {
        interceptingRoute,
        interceptedRoute
      };
    }
  }
});

// ../../../node_modules/next/dist/shared/lib/escape-regexp.js
var require_escape_regexp = __commonJS({
  "../../../node_modules/next/dist/shared/lib/escape-regexp.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    Object.defineProperty(exports2, "escapeStringRegexp", {
      enumerable: true,
      get: function() {
        return escapeStringRegexp;
      }
    });
    var reHasRegExp = /[|\\{}()[\]^$+*?.-]/;
    var reReplaceRegExp = /[|\\{}()[\]^$+*?.-]/g;
    function escapeStringRegexp(str) {
      if (reHasRegExp.test(str)) {
        return str.replace(reReplaceRegExp, "\\$&");
      }
      return str;
    }
  }
});

// ../../../node_modules/next/dist/shared/lib/router/utils/remove-trailing-slash.js
var require_remove_trailing_slash = __commonJS({
  "../../../node_modules/next/dist/shared/lib/router/utils/remove-trailing-slash.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    Object.defineProperty(exports2, "removeTrailingSlash", {
      enumerable: true,
      get: function() {
        return removeTrailingSlash;
      }
    });
    function removeTrailingSlash(route) {
      return route.replace(/\/$/, "") || "/";
    }
  }
});

// ../../../node_modules/next/dist/shared/lib/router/utils/route-regex.js
var require_route_regex = __commonJS({
  "../../../node_modules/next/dist/shared/lib/router/utils/route-regex.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name2 in all)
        Object.defineProperty(target, name2, {
          enumerable: true,
          get: all[name2]
        });
    }
    _export(exports2, {
      getRouteRegex: function() {
        return getRouteRegex;
      },
      getNamedRouteRegex: function() {
        return getNamedRouteRegex;
      },
      getNamedMiddlewareRegex: function() {
        return getNamedMiddlewareRegex;
      }
    });
    var _interceptionroutes = require_interception_routes();
    var _escaperegexp = require_escape_regexp();
    var _removetrailingslash = require_remove_trailing_slash();
    var NEXT_QUERY_PARAM_PREFIX = "nxtP";
    var NEXT_INTERCEPTION_MARKER_PREFIX = "nxtI";
    function parseParameter(param) {
      const optional = param.startsWith("[") && param.endsWith("]");
      if (optional) {
        param = param.slice(1, -1);
      }
      const repeat = param.startsWith("...");
      if (repeat) {
        param = param.slice(3);
      }
      return {
        key: param,
        repeat,
        optional
      };
    }
    function getParametrizedRoute(route) {
      const segments = (0, _removetrailingslash.removeTrailingSlash)(route).slice(1).split("/");
      const groups = {};
      let groupIndex = 1;
      return {
        parameterizedRoute: segments.map((segment) => {
          const markerMatch = _interceptionroutes.INTERCEPTION_ROUTE_MARKERS.find((m) => segment.startsWith(m));
          const paramMatches = segment.match(/\[((?:\[.*\])|.+)\]/);
          if (markerMatch && paramMatches) {
            const { key, optional, repeat } = parseParameter(paramMatches[1]);
            groups[key] = {
              pos: groupIndex++,
              repeat,
              optional
            };
            return "/" + (0, _escaperegexp.escapeStringRegexp)(markerMatch) + "([^/]+?)";
          } else if (paramMatches) {
            const { key, repeat, optional } = parseParameter(paramMatches[1]);
            groups[key] = {
              pos: groupIndex++,
              repeat,
              optional
            };
            return repeat ? optional ? "(?:/(.+?))?" : "/(.+?)" : "/([^/]+?)";
          } else {
            return "/" + (0, _escaperegexp.escapeStringRegexp)(segment);
          }
        }).join(""),
        groups
      };
    }
    function getRouteRegex(normalizedRoute) {
      const { parameterizedRoute, groups } = getParametrizedRoute(normalizedRoute);
      return {
        re: new RegExp("^" + parameterizedRoute + "(?:/)?$"),
        groups
      };
    }
    function buildGetSafeRouteKey() {
      let i = 0;
      return () => {
        let routeKey = "";
        let j = ++i;
        while (j > 0) {
          routeKey += String.fromCharCode(97 + (j - 1) % 26);
          j = Math.floor((j - 1) / 26);
        }
        return routeKey;
      };
    }
    function getSafeKeyFromSegment(param) {
      let { interceptionMarker, getSafeRouteKey, segment, routeKeys, keyPrefix } = param;
      const { key, optional, repeat } = parseParameter(segment);
      let cleanedKey = key.replace(/\W/g, "");
      if (keyPrefix) {
        cleanedKey = "" + keyPrefix + cleanedKey;
      }
      let invalidKey = false;
      if (cleanedKey.length === 0 || cleanedKey.length > 30) {
        invalidKey = true;
      }
      if (!isNaN(parseInt(cleanedKey.slice(0, 1)))) {
        invalidKey = true;
      }
      if (invalidKey) {
        cleanedKey = getSafeRouteKey();
      }
      if (keyPrefix) {
        routeKeys[cleanedKey] = "" + keyPrefix + key;
      } else {
        routeKeys[cleanedKey] = key;
      }
      const interceptionPrefix = interceptionMarker ? (0, _escaperegexp.escapeStringRegexp)(interceptionMarker) : "";
      return repeat ? optional ? "(?:/" + interceptionPrefix + "(?<" + cleanedKey + ">.+?))?" : "/" + interceptionPrefix + "(?<" + cleanedKey + ">.+?)" : "/" + interceptionPrefix + "(?<" + cleanedKey + ">[^/]+?)";
    }
    function getNamedParametrizedRoute(route, prefixRouteKeys) {
      const segments = (0, _removetrailingslash.removeTrailingSlash)(route).slice(1).split("/");
      const getSafeRouteKey = buildGetSafeRouteKey();
      const routeKeys = {};
      return {
        namedParameterizedRoute: segments.map((segment) => {
          const hasInterceptionMarker = _interceptionroutes.INTERCEPTION_ROUTE_MARKERS.some((m) => segment.startsWith(m));
          const paramMatches = segment.match(/\[((?:\[.*\])|.+)\]/);
          if (hasInterceptionMarker && paramMatches) {
            const [usedMarker] = segment.split(paramMatches[0]);
            return getSafeKeyFromSegment({
              getSafeRouteKey,
              interceptionMarker: usedMarker,
              segment: paramMatches[1],
              routeKeys,
              keyPrefix: prefixRouteKeys ? NEXT_INTERCEPTION_MARKER_PREFIX : void 0
            });
          } else if (paramMatches) {
            return getSafeKeyFromSegment({
              getSafeRouteKey,
              segment: paramMatches[1],
              routeKeys,
              keyPrefix: prefixRouteKeys ? NEXT_QUERY_PARAM_PREFIX : void 0
            });
          } else {
            return "/" + (0, _escaperegexp.escapeStringRegexp)(segment);
          }
        }).join(""),
        routeKeys
      };
    }
    function getNamedRouteRegex(normalizedRoute, prefixRouteKey) {
      const result = getNamedParametrizedRoute(normalizedRoute, prefixRouteKey);
      return {
        ...getRouteRegex(normalizedRoute),
        namedRegex: "^" + result.namedParameterizedRoute + "(?:/)?$",
        routeKeys: result.routeKeys
      };
    }
    function getNamedMiddlewareRegex(normalizedRoute, options) {
      const { parameterizedRoute } = getParametrizedRoute(normalizedRoute);
      const { catchAll = true } = options;
      if (parameterizedRoute === "/") {
        let catchAllRegex = catchAll ? ".*" : "";
        return {
          namedRegex: "^/" + catchAllRegex + "$"
        };
      }
      const { namedParameterizedRoute } = getNamedParametrizedRoute(normalizedRoute, false);
      let catchAllGroupedRegex = catchAll ? "(?:(/.*)?)" : "";
      return {
        namedRegex: "^" + namedParameterizedRoute + catchAllGroupedRegex + "$"
      };
    }
  }
});

// ../../../node_modules/next/dist/shared/lib/utils.js
var require_utils = __commonJS({
  "../../../node_modules/next/dist/shared/lib/utils.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name2 in all)
        Object.defineProperty(target, name2, {
          enumerable: true,
          get: all[name2]
        });
    }
    _export(exports2, {
      WEB_VITALS: function() {
        return WEB_VITALS;
      },
      execOnce: function() {
        return execOnce;
      },
      isAbsoluteUrl: function() {
        return isAbsoluteUrl;
      },
      getLocationOrigin: function() {
        return getLocationOrigin;
      },
      getURL: function() {
        return getURL;
      },
      getDisplayName: function() {
        return getDisplayName;
      },
      isResSent: function() {
        return isResSent;
      },
      normalizeRepeatedSlashes: function() {
        return normalizeRepeatedSlashes;
      },
      loadGetInitialProps: function() {
        return loadGetInitialProps;
      },
      SP: function() {
        return SP;
      },
      ST: function() {
        return ST;
      },
      DecodeError: function() {
        return DecodeError;
      },
      NormalizeError: function() {
        return NormalizeError;
      },
      PageNotFoundError: function() {
        return PageNotFoundError;
      },
      MissingStaticPage: function() {
        return MissingStaticPage;
      },
      MiddlewareNotFoundError: function() {
        return MiddlewareNotFoundError;
      },
      stringifyError: function() {
        return stringifyError;
      }
    });
    var WEB_VITALS = [
      "CLS",
      "FCP",
      "FID",
      "INP",
      "LCP",
      "TTFB"
    ];
    function execOnce(fn) {
      let used = false;
      let result;
      return function() {
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        if (!used) {
          used = true;
          result = fn(...args);
        }
        return result;
      };
    }
    var ABSOLUTE_URL_REGEX = /^[a-zA-Z][a-zA-Z\d+\-.]*?:/;
    var isAbsoluteUrl = (url) => ABSOLUTE_URL_REGEX.test(url);
    function getLocationOrigin() {
      const { protocol, hostname, port } = window.location;
      return protocol + "//" + hostname + (port ? ":" + port : "");
    }
    function getURL() {
      const { href } = window.location;
      const origin = getLocationOrigin();
      return href.substring(origin.length);
    }
    function getDisplayName(Component) {
      return typeof Component === "string" ? Component : Component.displayName || Component.name || "Unknown";
    }
    function isResSent(res) {
      return res.finished || res.headersSent;
    }
    function normalizeRepeatedSlashes(url) {
      const urlParts = url.split("?");
      const urlNoQuery = urlParts[0];
      return urlNoQuery.replace(/\\/g, "/").replace(/\/\/+/g, "/") + (urlParts[1] ? "?" + urlParts.slice(1).join("?") : "");
    }
    async function loadGetInitialProps(App, ctx2) {
      if (true) {
        var _App_prototype;
        if ((_App_prototype = App.prototype) == null ? void 0 : _App_prototype.getInitialProps) {
          const message = '"' + getDisplayName(App) + '.getInitialProps()" is defined as an instance method - visit https://nextjs.org/docs/messages/get-initial-props-as-an-instance-method for more information.';
          throw new Error(message);
        }
      }
      const res = ctx2.res || ctx2.ctx && ctx2.ctx.res;
      if (!App.getInitialProps) {
        if (ctx2.ctx && ctx2.Component) {
          return {
            pageProps: await loadGetInitialProps(ctx2.Component, ctx2.ctx)
          };
        }
        return {};
      }
      const props = await App.getInitialProps(ctx2);
      if (res && isResSent(res)) {
        return props;
      }
      if (!props) {
        const message = '"' + getDisplayName(App) + '.getInitialProps()" should resolve to an object. But found "' + props + '" instead.';
        throw new Error(message);
      }
      if (true) {
        if (Object.keys(props).length === 0 && !ctx2.ctx) {
          console.warn("" + getDisplayName(App) + " returned an empty object from `getInitialProps`. This de-optimizes and prevents automatic static optimization. https://nextjs.org/docs/messages/empty-object-getInitialProps");
        }
      }
      return props;
    }
    var SP = typeof performance !== "undefined";
    var ST = SP && [
      "mark",
      "measure",
      "getEntriesByName"
    ].every((method) => typeof performance[method] === "function");
    var DecodeError = class extends Error {
    };
    var NormalizeError = class extends Error {
    };
    var PageNotFoundError = class extends Error {
      constructor(page) {
        super();
        this.code = "ENOENT";
        this.name = "PageNotFoundError";
        this.message = "Cannot find module for page: " + page;
      }
    };
    var MissingStaticPage = class extends Error {
      constructor(page, message) {
        super();
        this.message = "Failed to load static file for page: " + page + " " + message;
      }
    };
    var MiddlewareNotFoundError = class extends Error {
      constructor() {
        super();
        this.code = "ENOENT";
        this.message = "Cannot find the middleware module";
      }
    };
    function stringifyError(error) {
      return JSON.stringify({
        message: error.message,
        stack: error.stack
      });
    }
  }
});

// ../../../node_modules/next/dist/shared/lib/router/utils/route-matcher.js
var require_route_matcher = __commonJS({
  "../../../node_modules/next/dist/shared/lib/router/utils/route-matcher.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    Object.defineProperty(exports2, "getRouteMatcher", {
      enumerable: true,
      get: function() {
        return getRouteMatcher;
      }
    });
    var _utils = require_utils();
    function getRouteMatcher(param) {
      let { re, groups } = param;
      return (pathname) => {
        const routeMatch = re.exec(pathname);
        if (!routeMatch) {
          return false;
        }
        const decode = (param2) => {
          try {
            return decodeURIComponent(param2);
          } catch (_) {
            throw new _utils.DecodeError("failed to decode param");
          }
        };
        const params2 = {};
        Object.keys(groups).forEach((slugName) => {
          const g = groups[slugName];
          const m = routeMatch[g.pos];
          if (m !== void 0) {
            params2[slugName] = ~m.indexOf("/") ? m.split("/").map((entry) => decode(entry)) : g.repeat ? [
              decode(m)
            ] : decode(m);
          }
        });
        return params2;
      };
    }
  }
});

// ../../../node_modules/next/dist/shared/lib/router/utils/is-dynamic.js
var require_is_dynamic = __commonJS({
  "../../../node_modules/next/dist/shared/lib/router/utils/is-dynamic.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    Object.defineProperty(exports2, "isDynamicRoute", {
      enumerable: true,
      get: function() {
        return isDynamicRoute;
      }
    });
    var _interceptionroutes = require_interception_routes();
    var TEST_ROUTE = /\/\[[^/]+?\](?=\/|$)/;
    function isDynamicRoute(route) {
      if ((0, _interceptionroutes.isInterceptionRouteAppPath)(route)) {
        route = (0, _interceptionroutes.extractInterceptionRouteInformation)(route).interceptedRoute;
      }
      return TEST_ROUTE.test(route);
    }
  }
});

// ../../../node_modules/next/dist/shared/lib/router/utils/escape-path-delimiters.js
var require_escape_path_delimiters = __commonJS({
  "../../../node_modules/next/dist/shared/lib/router/utils/escape-path-delimiters.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    Object.defineProperty(exports2, "default", {
      enumerable: true,
      get: function() {
        return escapePathDelimiters;
      }
    });
    function escapePathDelimiters(segment, escapeEncoded) {
      return segment.replace(new RegExp("([/#?]" + (escapeEncoded ? "|%(2f|23|3f)" : "") + ")", "gi"), (char) => encodeURIComponent(char));
    }
  }
});

// ../../../node_modules/next/dist/shared/lib/is-plain-object.js
var require_is_plain_object = __commonJS({
  "../../../node_modules/next/dist/shared/lib/is-plain-object.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name2 in all)
        Object.defineProperty(target, name2, {
          enumerable: true,
          get: all[name2]
        });
    }
    _export(exports2, {
      getObjectClassLabel: function() {
        return getObjectClassLabel;
      },
      isPlainObject: function() {
        return isPlainObject;
      }
    });
    function getObjectClassLabel(value) {
      return Object.prototype.toString.call(value);
    }
    function isPlainObject(value) {
      if (getObjectClassLabel(value) !== "[object Object]") {
        return false;
      }
      const prototype = Object.getPrototypeOf(value);
      return prototype === null || prototype.hasOwnProperty("isPrototypeOf");
    }
  }
});

// ../../../node_modules/next/dist/lib/is-error.js
var require_is_error = __commonJS({
  "../../../node_modules/next/dist/lib/is-error.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name2 in all)
        Object.defineProperty(target, name2, {
          enumerable: true,
          get: all[name2]
        });
    }
    _export(exports2, {
      default: function() {
        return isError;
      },
      getProperError: function() {
        return getProperError;
      }
    });
    var _isplainobject = require_is_plain_object();
    function isError(err) {
      return typeof err === "object" && err !== null && "name" in err && "message" in err;
    }
    function getProperError(err) {
      if (isError(err)) {
        return err;
      }
      if (true) {
        if (typeof err === "undefined") {
          return new Error("An undefined error was thrown, see here for more info: https://nextjs.org/docs/messages/threw-undefined");
        }
        if (err === null) {
          return new Error("A null error was thrown, see here for more info: https://nextjs.org/docs/messages/threw-undefined");
        }
      }
      return new Error((0, _isplainobject.isPlainObject)(err) ? JSON.stringify(err) : err + "");
    }
  }
});

// ../../../node_modules/next/dist/lib/file-exists.js
var require_file_exists = __commonJS({
  "../../../node_modules/next/dist/lib/file-exists.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name2 in all)
        Object.defineProperty(target, name2, {
          enumerable: true,
          get: all[name2]
        });
    }
    _export(exports2, {
      FileType: function() {
        return FileType;
      },
      fileExists: function() {
        return fileExists;
      }
    });
    var _fs = require_fs();
    var _iserror = _interop_require_default(require_is_error());
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    var FileType;
    (function(FileType2) {
      FileType2["File"] = "file";
      FileType2["Directory"] = "directory";
    })(FileType || (FileType = {}));
    async function fileExists(fileName, type) {
      try {
        if (type === "file") {
          const stats2 = await _fs.promises.stat(fileName);
          return stats2.isFile();
        } else if (type === "directory") {
          const stats2 = await _fs.promises.stat(fileName);
          return stats2.isDirectory();
        }
        return (0, _fs.existsSync)(fileName);
      } catch (err) {
        if ((0, _iserror.default)(err) && (err.code === "ENOENT" || err.code === "ENAMETOOLONG")) {
          return false;
        }
        throw err;
      }
    }
  }
});

// ../../../node_modules/next/dist/shared/lib/router/utils/sorted-routes.js
var require_sorted_routes = __commonJS({
  "../../../node_modules/next/dist/shared/lib/router/utils/sorted-routes.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    Object.defineProperty(exports2, "getSortedRoutes", {
      enumerable: true,
      get: function() {
        return getSortedRoutes;
      }
    });
    var UrlNode = class _UrlNode {
      insert(urlPath) {
        this._insert(urlPath.split("/").filter(Boolean), [], false);
      }
      smoosh() {
        return this._smoosh();
      }
      _smoosh(prefix) {
        if (prefix === void 0)
          prefix = "/";
        const childrenPaths = [
          ...this.children.keys()
        ].sort();
        if (this.slugName !== null) {
          childrenPaths.splice(childrenPaths.indexOf("[]"), 1);
        }
        if (this.restSlugName !== null) {
          childrenPaths.splice(childrenPaths.indexOf("[...]"), 1);
        }
        if (this.optionalRestSlugName !== null) {
          childrenPaths.splice(childrenPaths.indexOf("[[...]]"), 1);
        }
        const routes = childrenPaths.map((c) => this.children.get(c)._smoosh("" + prefix + c + "/")).reduce((prev, curr) => [
          ...prev,
          ...curr
        ], []);
        if (this.slugName !== null) {
          routes.push(...this.children.get("[]")._smoosh(prefix + "[" + this.slugName + "]/"));
        }
        if (!this.placeholder) {
          const r = prefix === "/" ? "/" : prefix.slice(0, -1);
          if (this.optionalRestSlugName != null) {
            throw new Error('You cannot define a route with the same specificity as a optional catch-all route ("' + r + '" and "' + r + "[[..." + this.optionalRestSlugName + ']]").');
          }
          routes.unshift(r);
        }
        if (this.restSlugName !== null) {
          routes.push(...this.children.get("[...]")._smoosh(prefix + "[..." + this.restSlugName + "]/"));
        }
        if (this.optionalRestSlugName !== null) {
          routes.push(...this.children.get("[[...]]")._smoosh(prefix + "[[..." + this.optionalRestSlugName + "]]/"));
        }
        return routes;
      }
      _insert(urlPaths, slugNames, isCatchAll) {
        if (urlPaths.length === 0) {
          this.placeholder = false;
          return;
        }
        if (isCatchAll) {
          throw new Error("Catch-all must be the last part of the URL.");
        }
        let nextSegment = urlPaths[0];
        if (nextSegment.startsWith("[") && nextSegment.endsWith("]")) {
          let handleSlug = function(previousSlug, nextSlug) {
            if (previousSlug !== null) {
              if (previousSlug !== nextSlug) {
                throw new Error("You cannot use different slug names for the same dynamic path ('" + previousSlug + "' !== '" + nextSlug + "').");
              }
            }
            slugNames.forEach((slug) => {
              if (slug === nextSlug) {
                throw new Error('You cannot have the same slug name "' + nextSlug + '" repeat within a single dynamic path');
              }
              if (slug.replace(/\W/g, "") === nextSegment.replace(/\W/g, "")) {
                throw new Error('You cannot have the slug names "' + slug + '" and "' + nextSlug + '" differ only by non-word symbols within a single dynamic path');
              }
            });
            slugNames.push(nextSlug);
          };
          let segmentName = nextSegment.slice(1, -1);
          let isOptional = false;
          if (segmentName.startsWith("[") && segmentName.endsWith("]")) {
            segmentName = segmentName.slice(1, -1);
            isOptional = true;
          }
          if (segmentName.startsWith("...")) {
            segmentName = segmentName.substring(3);
            isCatchAll = true;
          }
          if (segmentName.startsWith("[") || segmentName.endsWith("]")) {
            throw new Error("Segment names may not start or end with extra brackets ('" + segmentName + "').");
          }
          if (segmentName.startsWith(".")) {
            throw new Error("Segment names may not start with erroneous periods ('" + segmentName + "').");
          }
          if (isCatchAll) {
            if (isOptional) {
              if (this.restSlugName != null) {
                throw new Error('You cannot use both an required and optional catch-all route at the same level ("[...' + this.restSlugName + ']" and "' + urlPaths[0] + '" ).');
              }
              handleSlug(this.optionalRestSlugName, segmentName);
              this.optionalRestSlugName = segmentName;
              nextSegment = "[[...]]";
            } else {
              if (this.optionalRestSlugName != null) {
                throw new Error('You cannot use both an optional and required catch-all route at the same level ("[[...' + this.optionalRestSlugName + ']]" and "' + urlPaths[0] + '").');
              }
              handleSlug(this.restSlugName, segmentName);
              this.restSlugName = segmentName;
              nextSegment = "[...]";
            }
          } else {
            if (isOptional) {
              throw new Error('Optional route parameters are not yet supported ("' + urlPaths[0] + '").');
            }
            handleSlug(this.slugName, segmentName);
            this.slugName = segmentName;
            nextSegment = "[]";
          }
        }
        if (!this.children.has(nextSegment)) {
          this.children.set(nextSegment, new _UrlNode());
        }
        this.children.get(nextSegment)._insert(urlPaths.slice(1), slugNames, isCatchAll);
      }
      constructor() {
        this.placeholder = true;
        this.children = /* @__PURE__ */ new Map();
        this.slugName = null;
        this.restSlugName = null;
        this.optionalRestSlugName = null;
      }
    };
    function getSortedRoutes(normalizedPages) {
      const root = new UrlNode();
      normalizedPages.forEach((pagePath) => root.insert(pagePath));
      return root.smoosh();
    }
  }
});

// ../../../node_modules/next/dist/shared/lib/router/utils/index.js
var require_utils2 = __commonJS({
  "../../../node_modules/next/dist/shared/lib/router/utils/index.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name2 in all)
        Object.defineProperty(target, name2, {
          enumerable: true,
          get: all[name2]
        });
    }
    _export(exports2, {
      getSortedRoutes: function() {
        return _sortedroutes.getSortedRoutes;
      },
      isDynamicRoute: function() {
        return _isdynamic.isDynamicRoute;
      }
    });
    var _sortedroutes = require_sorted_routes();
    var _isdynamic = require_is_dynamic();
  }
});

// ../../../node_modules/next/dist/shared/lib/page-path/normalize-path-sep.js
var require_normalize_path_sep = __commonJS({
  "../../../node_modules/next/dist/shared/lib/page-path/normalize-path-sep.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    Object.defineProperty(exports2, "normalizePathSep", {
      enumerable: true,
      get: function() {
        return normalizePathSep;
      }
    });
    function normalizePathSep(path2) {
      return path2.replace(/\\/g, "/");
    }
  }
});

// ../../../node_modules/next/dist/shared/lib/page-path/denormalize-page-path.js
var require_denormalize_page_path = __commonJS({
  "../../../node_modules/next/dist/shared/lib/page-path/denormalize-page-path.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    Object.defineProperty(exports2, "denormalizePagePath", {
      enumerable: true,
      get: function() {
        return denormalizePagePath;
      }
    });
    var _utils = require_utils2();
    var _normalizepathsep = require_normalize_path_sep();
    function denormalizePagePath(page) {
      let _page = (0, _normalizepathsep.normalizePathSep)(page);
      return _page.startsWith("/index/") && !(0, _utils.isDynamicRoute)(_page) ? _page.slice(6) : _page !== "/index" ? _page : "/";
    }
  }
});

// ../../../node_modules/next/dist/compiled/path-browserify/index.js
var require_path_browserify = __commonJS({
  "../../../node_modules/next/dist/compiled/path-browserify/index.js"(exports2, module2) {
    (function() {
      "use strict";
      var e = { 114: function(e2) {
        function assertPath(e3) {
          if (typeof e3 !== "string") {
            throw new TypeError("Path must be a string. Received " + JSON.stringify(e3));
          }
        }
        function normalizeStringPosix(e3, r3) {
          var t2 = "";
          var i = 0;
          var n = -1;
          var a = 0;
          var f;
          for (var l = 0; l <= e3.length; ++l) {
            if (l < e3.length)
              f = e3.charCodeAt(l);
            else if (f === 47)
              break;
            else
              f = 47;
            if (f === 47) {
              if (n === l - 1 || a === 1) {
              } else if (n !== l - 1 && a === 2) {
                if (t2.length < 2 || i !== 2 || t2.charCodeAt(t2.length - 1) !== 46 || t2.charCodeAt(t2.length - 2) !== 46) {
                  if (t2.length > 2) {
                    var s = t2.lastIndexOf("/");
                    if (s !== t2.length - 1) {
                      if (s === -1) {
                        t2 = "";
                        i = 0;
                      } else {
                        t2 = t2.slice(0, s);
                        i = t2.length - 1 - t2.lastIndexOf("/");
                      }
                      n = l;
                      a = 0;
                      continue;
                    }
                  } else if (t2.length === 2 || t2.length === 1) {
                    t2 = "";
                    i = 0;
                    n = l;
                    a = 0;
                    continue;
                  }
                }
                if (r3) {
                  if (t2.length > 0)
                    t2 += "/..";
                  else
                    t2 = "..";
                  i = 2;
                }
              } else {
                if (t2.length > 0)
                  t2 += "/" + e3.slice(n + 1, l);
                else
                  t2 = e3.slice(n + 1, l);
                i = l - n - 1;
              }
              n = l;
              a = 0;
            } else if (f === 46 && a !== -1) {
              ++a;
            } else {
              a = -1;
            }
          }
          return t2;
        }
        function _format(e3, r3) {
          var t2 = r3.dir || r3.root;
          var i = r3.base || (r3.name || "") + (r3.ext || "");
          if (!t2) {
            return i;
          }
          if (t2 === r3.root) {
            return t2 + i;
          }
          return t2 + e3 + i;
        }
        var r2 = { resolve: function resolve() {
          var e3 = "";
          var r3 = false;
          var t2;
          for (var i = arguments.length - 1; i >= -1 && !r3; i--) {
            var n;
            if (i >= 0)
              n = arguments[i];
            else {
              if (t2 === void 0)
                t2 = "";
              n = t2;
            }
            assertPath(n);
            if (n.length === 0) {
              continue;
            }
            e3 = n + "/" + e3;
            r3 = n.charCodeAt(0) === 47;
          }
          e3 = normalizeStringPosix(e3, !r3);
          if (r3) {
            if (e3.length > 0)
              return "/" + e3;
            else
              return "/";
          } else if (e3.length > 0) {
            return e3;
          } else {
            return ".";
          }
        }, normalize: function normalize(e3) {
          assertPath(e3);
          if (e3.length === 0)
            return ".";
          var r3 = e3.charCodeAt(0) === 47;
          var t2 = e3.charCodeAt(e3.length - 1) === 47;
          e3 = normalizeStringPosix(e3, !r3);
          if (e3.length === 0 && !r3)
            e3 = ".";
          if (e3.length > 0 && t2)
            e3 += "/";
          if (r3)
            return "/" + e3;
          return e3;
        }, isAbsolute: function isAbsolute(e3) {
          assertPath(e3);
          return e3.length > 0 && e3.charCodeAt(0) === 47;
        }, join: function join() {
          if (arguments.length === 0)
            return ".";
          var e3;
          for (var t2 = 0; t2 < arguments.length; ++t2) {
            var i = arguments[t2];
            assertPath(i);
            if (i.length > 0) {
              if (e3 === void 0)
                e3 = i;
              else
                e3 += "/" + i;
            }
          }
          if (e3 === void 0)
            return ".";
          return r2.normalize(e3);
        }, relative: function relative(e3, t2) {
          assertPath(e3);
          assertPath(t2);
          if (e3 === t2)
            return "";
          e3 = r2.resolve(e3);
          t2 = r2.resolve(t2);
          if (e3 === t2)
            return "";
          var i = 1;
          for (; i < e3.length; ++i) {
            if (e3.charCodeAt(i) !== 47)
              break;
          }
          var n = e3.length;
          var a = n - i;
          var f = 1;
          for (; f < t2.length; ++f) {
            if (t2.charCodeAt(f) !== 47)
              break;
          }
          var l = t2.length;
          var s = l - f;
          var o = a < s ? a : s;
          var u = -1;
          var h = 0;
          for (; h <= o; ++h) {
            if (h === o) {
              if (s > o) {
                if (t2.charCodeAt(f + h) === 47) {
                  return t2.slice(f + h + 1);
                } else if (h === 0) {
                  return t2.slice(f + h);
                }
              } else if (a > o) {
                if (e3.charCodeAt(i + h) === 47) {
                  u = h;
                } else if (h === 0) {
                  u = 0;
                }
              }
              break;
            }
            var c = e3.charCodeAt(i + h);
            var v = t2.charCodeAt(f + h);
            if (c !== v)
              break;
            else if (c === 47)
              u = h;
          }
          var g = "";
          for (h = i + u + 1; h <= n; ++h) {
            if (h === n || e3.charCodeAt(h) === 47) {
              if (g.length === 0)
                g += "..";
              else
                g += "/..";
            }
          }
          if (g.length > 0)
            return g + t2.slice(f + u);
          else {
            f += u;
            if (t2.charCodeAt(f) === 47)
              ++f;
            return t2.slice(f);
          }
        }, _makeLong: function _makeLong(e3) {
          return e3;
        }, dirname: function dirname(e3) {
          assertPath(e3);
          if (e3.length === 0)
            return ".";
          var r3 = e3.charCodeAt(0);
          var t2 = r3 === 47;
          var i = -1;
          var n = true;
          for (var a = e3.length - 1; a >= 1; --a) {
            r3 = e3.charCodeAt(a);
            if (r3 === 47) {
              if (!n) {
                i = a;
                break;
              }
            } else {
              n = false;
            }
          }
          if (i === -1)
            return t2 ? "/" : ".";
          if (t2 && i === 1)
            return "//";
          return e3.slice(0, i);
        }, basename: function basename(e3, r3) {
          if (r3 !== void 0 && typeof r3 !== "string")
            throw new TypeError('"ext" argument must be a string');
          assertPath(e3);
          var t2 = 0;
          var i = -1;
          var n = true;
          var a;
          if (r3 !== void 0 && r3.length > 0 && r3.length <= e3.length) {
            if (r3.length === e3.length && r3 === e3)
              return "";
            var f = r3.length - 1;
            var l = -1;
            for (a = e3.length - 1; a >= 0; --a) {
              var s = e3.charCodeAt(a);
              if (s === 47) {
                if (!n) {
                  t2 = a + 1;
                  break;
                }
              } else {
                if (l === -1) {
                  n = false;
                  l = a + 1;
                }
                if (f >= 0) {
                  if (s === r3.charCodeAt(f)) {
                    if (--f === -1) {
                      i = a;
                    }
                  } else {
                    f = -1;
                    i = l;
                  }
                }
              }
            }
            if (t2 === i)
              i = l;
            else if (i === -1)
              i = e3.length;
            return e3.slice(t2, i);
          } else {
            for (a = e3.length - 1; a >= 0; --a) {
              if (e3.charCodeAt(a) === 47) {
                if (!n) {
                  t2 = a + 1;
                  break;
                }
              } else if (i === -1) {
                n = false;
                i = a + 1;
              }
            }
            if (i === -1)
              return "";
            return e3.slice(t2, i);
          }
        }, extname: function extname(e3) {
          assertPath(e3);
          var r3 = -1;
          var t2 = 0;
          var i = -1;
          var n = true;
          var a = 0;
          for (var f = e3.length - 1; f >= 0; --f) {
            var l = e3.charCodeAt(f);
            if (l === 47) {
              if (!n) {
                t2 = f + 1;
                break;
              }
              continue;
            }
            if (i === -1) {
              n = false;
              i = f + 1;
            }
            if (l === 46) {
              if (r3 === -1)
                r3 = f;
              else if (a !== 1)
                a = 1;
            } else if (r3 !== -1) {
              a = -1;
            }
          }
          if (r3 === -1 || i === -1 || a === 0 || a === 1 && r3 === i - 1 && r3 === t2 + 1) {
            return "";
          }
          return e3.slice(r3, i);
        }, format: function format(e3) {
          if (e3 === null || typeof e3 !== "object") {
            throw new TypeError('The "pathObject" argument must be of type Object. Received type ' + typeof e3);
          }
          return _format("/", e3);
        }, parse: function parse(e3) {
          assertPath(e3);
          var r3 = { root: "", dir: "", base: "", ext: "", name: "" };
          if (e3.length === 0)
            return r3;
          var t2 = e3.charCodeAt(0);
          var i = t2 === 47;
          var n;
          if (i) {
            r3.root = "/";
            n = 1;
          } else {
            n = 0;
          }
          var a = -1;
          var f = 0;
          var l = -1;
          var s = true;
          var o = e3.length - 1;
          var u = 0;
          for (; o >= n; --o) {
            t2 = e3.charCodeAt(o);
            if (t2 === 47) {
              if (!s) {
                f = o + 1;
                break;
              }
              continue;
            }
            if (l === -1) {
              s = false;
              l = o + 1;
            }
            if (t2 === 46) {
              if (a === -1)
                a = o;
              else if (u !== 1)
                u = 1;
            } else if (a !== -1) {
              u = -1;
            }
          }
          if (a === -1 || l === -1 || u === 0 || u === 1 && a === l - 1 && a === f + 1) {
            if (l !== -1) {
              if (f === 0 && i)
                r3.base = r3.name = e3.slice(1, l);
              else
                r3.base = r3.name = e3.slice(f, l);
            }
          } else {
            if (f === 0 && i) {
              r3.name = e3.slice(1, a);
              r3.base = e3.slice(1, l);
            } else {
              r3.name = e3.slice(f, a);
              r3.base = e3.slice(f, l);
            }
            r3.ext = e3.slice(a, l);
          }
          if (f > 0)
            r3.dir = e3.slice(0, f - 1);
          else if (i)
            r3.dir = "/";
          return r3;
        }, sep: "/", delimiter: ":", win32: null, posix: null };
        r2.posix = r2;
        e2.exports = r2;
      } };
      var r = {};
      function __nccwpck_require__2(t2) {
        var i = r[t2];
        if (i !== void 0) {
          return i.exports;
        }
        var n = r[t2] = { exports: {} };
        var a = true;
        try {
          e[t2](n, n.exports, __nccwpck_require__2);
          a = false;
        } finally {
          if (a)
            delete r[t2];
        }
        return n.exports;
      }
      if (typeof __nccwpck_require__2 !== "undefined")
        __nccwpck_require__2.ab = __dirname + "/";
      var t = __nccwpck_require__2(114);
      module2.exports = t;
    })();
  }
});

// ../../../node_modules/next/dist/shared/lib/isomorphic/path.js
var require_path2 = __commonJS({
  "../../../node_modules/next/dist/shared/lib/isomorphic/path.js"(exports2, module2) {
    "use strict";
    var path2;
    if (process.env.NEXT_RUNTIME === "edge") {
      path2 = require_path_browserify();
    } else {
      path2 = require_path();
    }
    module2.exports = path2;
  }
});

// ../../../node_modules/next/dist/shared/lib/page-path/get-page-paths.js
var require_get_page_paths = __commonJS({
  "../../../node_modules/next/dist/shared/lib/page-path/get-page-paths.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    Object.defineProperty(exports2, "getPagePaths", {
      enumerable: true,
      get: function() {
        return getPagePaths;
      }
    });
    var _interop_require_default = require_interop_require_default();
    var _denormalizepagepath = require_denormalize_page_path();
    var _path = _interop_require_default._(require_path2());
    function getPagePaths(normalizedPagePath, extensions, isAppDir) {
      const page = (0, _denormalizepagepath.denormalizePagePath)(normalizedPagePath);
      let prefixes;
      if (isAppDir) {
        prefixes = [
          page
        ];
      } else if (normalizedPagePath.endsWith("/index")) {
        prefixes = [
          _path.default.join(page, "index")
        ];
      } else {
        prefixes = [
          page,
          _path.default.join(page, "index")
        ];
      }
      const paths = [];
      for (const extension of extensions) {
        for (const prefix of prefixes) {
          paths.push(prefix + "." + extension);
        }
      }
      return paths;
    }
  }
});

// ../../../node_modules/next/dist/lib/non-nullable.js
var require_non_nullable = __commonJS({
  "../../../node_modules/next/dist/lib/non-nullable.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    Object.defineProperty(exports2, "nonNullable", {
      enumerable: true,
      get: function() {
        return nonNullable;
      }
    });
    function nonNullable(value) {
      return value !== null && value !== void 0;
    }
  }
});

// ../../../node_modules/next/dist/build/output/log.js
var require_log = __commonJS({
  "../../../node_modules/next/dist/build/output/log.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name2 in all)
        Object.defineProperty(target, name2, {
          enumerable: true,
          get: all[name2]
        });
    }
    _export(exports2, {
      prefixes: function() {
        return prefixes;
      },
      bootstrap: function() {
        return bootstrap;
      },
      wait: function() {
        return wait;
      },
      error: function() {
        return error;
      },
      warn: function() {
        return warn;
      },
      ready: function() {
        return ready;
      },
      info: function() {
        return info;
      },
      event: function() {
        return event;
      },
      trace: function() {
        return trace;
      },
      warnOnce: function() {
        return warnOnce;
      }
    });
    var _picocolors = require_picocolors();
    var prefixes = {
      wait: (0, _picocolors.white)((0, _picocolors.bold)("○")),
      error: (0, _picocolors.red)((0, _picocolors.bold)("⨯")),
      warn: (0, _picocolors.yellow)((0, _picocolors.bold)("⚠")),
      ready: "▲",
      info: (0, _picocolors.white)((0, _picocolors.bold)(" ")),
      event: (0, _picocolors.green)((0, _picocolors.bold)("✓")),
      trace: (0, _picocolors.magenta)((0, _picocolors.bold)("»"))
    };
    var LOGGING_METHOD = {
      log: "log",
      warn: "warn",
      error: "error"
    };
    function prefixedLog(prefixType, ...message) {
      if ((message[0] === "" || message[0] === void 0) && message.length === 1) {
        message.shift();
      }
      const consoleMethod = prefixType in LOGGING_METHOD ? LOGGING_METHOD[prefixType] : "log";
      const prefix = prefixes[prefixType];
      if (message.length === 0) {
        console[consoleMethod]("");
      } else {
        console[consoleMethod](" " + prefix, ...message);
      }
    }
    function bootstrap(...message) {
      console.log(" ", ...message);
    }
    function wait(...message) {
      prefixedLog("wait", ...message);
    }
    function error(...message) {
      prefixedLog("error", ...message);
    }
    function warn(...message) {
      prefixedLog("warn", ...message);
    }
    function ready(...message) {
      prefixedLog("ready", ...message);
    }
    function info(...message) {
      prefixedLog("info", ...message);
    }
    function event(...message) {
      prefixedLog("event", ...message);
    }
    function trace(...message) {
      prefixedLog("trace", ...message);
    }
    var warnOnceMessages = /* @__PURE__ */ new Set();
    function warnOnce(...message) {
      if (!warnOnceMessages.has(message[0])) {
        warnOnceMessages.add(message.join(" "));
        warn(...message);
      }
    }
  }
});

// ../../../node_modules/next/dist/lib/metadata/is-metadata-route.js
var require_is_metadata_route = __commonJS({
  "../../../node_modules/next/dist/lib/metadata/is-metadata-route.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name2 in all)
        Object.defineProperty(target, name2, {
          enumerable: true,
          get: all[name2]
        });
    }
    _export(exports2, {
      STATIC_METADATA_IMAGES: function() {
        return STATIC_METADATA_IMAGES;
      },
      isMetadataRouteFile: function() {
        return isMetadataRouteFile;
      },
      isStaticMetadataRouteFile: function() {
        return isStaticMetadataRouteFile;
      },
      isStaticMetadataRoute: function() {
        return isStaticMetadataRoute;
      },
      isMetadataRoute: function() {
        return isMetadataRoute;
      }
    });
    var _normalizepathsep = require_normalize_path_sep();
    var STATIC_METADATA_IMAGES = {
      icon: {
        filename: "icon",
        extensions: [
          "ico",
          "jpg",
          "jpeg",
          "png",
          "svg"
        ]
      },
      apple: {
        filename: "apple-icon",
        extensions: [
          "jpg",
          "jpeg",
          "png"
        ]
      },
      favicon: {
        filename: "favicon",
        extensions: [
          "ico"
        ]
      },
      openGraph: {
        filename: "opengraph-image",
        extensions: [
          "jpg",
          "jpeg",
          "png",
          "gif"
        ]
      },
      twitter: {
        filename: "twitter-image",
        extensions: [
          "jpg",
          "jpeg",
          "png",
          "gif"
        ]
      }
    };
    var defaultExtensions = [
      "js",
      "jsx",
      "ts",
      "tsx"
    ];
    var getExtensionRegexString = (extensions) => `(?:${extensions.join("|")})`;
    function isMetadataRouteFile(appDirRelativePath, pageExtensions, withExtension) {
      const metadataRouteFilesRegex = [
        new RegExp(`^[\\\\/]robots${withExtension ? `\\.${getExtensionRegexString(pageExtensions.concat("txt"))}$` : ""}`),
        new RegExp(`^[\\\\/]manifest${withExtension ? `\\.${getExtensionRegexString(pageExtensions.concat("webmanifest", "json"))}$` : ""}`),
        new RegExp(`^[\\\\/]favicon\\.ico$`),
        new RegExp(`[\\\\/]sitemap${withExtension ? `\\.${getExtensionRegexString(pageExtensions.concat("xml"))}$` : ""}`),
        new RegExp(`[\\\\/]${STATIC_METADATA_IMAGES.icon.filename}\\d?${withExtension ? `\\.${getExtensionRegexString(pageExtensions.concat(STATIC_METADATA_IMAGES.icon.extensions))}$` : ""}`),
        new RegExp(`[\\\\/]${STATIC_METADATA_IMAGES.apple.filename}\\d?${withExtension ? `\\.${getExtensionRegexString(pageExtensions.concat(STATIC_METADATA_IMAGES.apple.extensions))}$` : ""}`),
        new RegExp(`[\\\\/]${STATIC_METADATA_IMAGES.openGraph.filename}\\d?${withExtension ? `\\.${getExtensionRegexString(pageExtensions.concat(STATIC_METADATA_IMAGES.openGraph.extensions))}$` : ""}`),
        new RegExp(`[\\\\/]${STATIC_METADATA_IMAGES.twitter.filename}\\d?${withExtension ? `\\.${getExtensionRegexString(pageExtensions.concat(STATIC_METADATA_IMAGES.twitter.extensions))}$` : ""}`)
      ];
      const normalizedAppDirRelativePath = (0, _normalizepathsep.normalizePathSep)(appDirRelativePath);
      return metadataRouteFilesRegex.some((r) => r.test(normalizedAppDirRelativePath));
    }
    function isStaticMetadataRouteFile(appDirRelativePath) {
      return isMetadataRouteFile(appDirRelativePath, [], true);
    }
    function isStaticMetadataRoute(page) {
      return page === "/robots" || page === "/manifest" || isStaticMetadataRouteFile(page);
    }
    function isMetadataRoute(route) {
      let page = route.replace(/^\/?app\//, "").replace(/\/route$/, "");
      if (page[0] !== "/")
        page = "/" + page;
      return !page.endsWith("/page") && isMetadataRouteFile(page, defaultExtensions, false);
    }
  }
});

// ../../../node_modules/next/dist/server/lib/find-page-file.js
var require_find_page_file = __commonJS({
  "../../../node_modules/next/dist/server/lib/find-page-file.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name2 in all)
        Object.defineProperty(target, name2, {
          enumerable: true,
          get: all[name2]
        });
    }
    _export(exports2, {
      findPageFile: function() {
        return findPageFile;
      },
      createValidFileMatcher: function() {
        return createValidFileMatcher;
      }
    });
    var _fileexists = require_file_exists();
    var _getpagepaths = require_get_page_paths();
    var _nonnullable = require_non_nullable();
    var _path = require_path();
    var _fs = require_fs();
    var _log = require_log();
    var _picocolors = require_picocolors();
    var _ismetadataroute = require_is_metadata_route();
    async function isTrueCasePagePath(pagePath, pagesDir) {
      const pageSegments = (0, _path.normalize)(pagePath).split(_path.sep).filter(Boolean);
      const segmentExistsPromises = pageSegments.map(async (segment, i) => {
        const segmentParentDir = (0, _path.join)(pagesDir, ...pageSegments.slice(0, i));
        const parentDirEntries = await _fs.promises.readdir(segmentParentDir);
        return parentDirEntries.includes(segment);
      });
      return (await Promise.all(segmentExistsPromises)).every(Boolean);
    }
    async function findPageFile(pagesDir, normalizedPagePath, pageExtensions, isAppDir) {
      const pagePaths = (0, _getpagepaths.getPagePaths)(normalizedPagePath, pageExtensions, isAppDir);
      const [existingPath, ...others] = (await Promise.all(pagePaths.map(async (path2) => {
        const filePath = (0, _path.join)(pagesDir, path2);
        try {
          return await (0, _fileexists.fileExists)(filePath) ? path2 : null;
        } catch (err) {
          var _err_code;
          if (!(err == null ? void 0 : (_err_code = err.code) == null ? void 0 : _err_code.includes("ENOTDIR")))
            throw err;
        }
        return null;
      }))).filter(_nonnullable.nonNullable);
      if (!existingPath) {
        return null;
      }
      if (!await isTrueCasePagePath(existingPath, pagesDir)) {
        return null;
      }
      if (others.length > 0) {
        (0, _log.warn)(`Duplicate page detected. ${(0, _picocolors.cyan)((0, _path.join)("pages", existingPath))} and ${(0, _picocolors.cyan)((0, _path.join)("pages", others[0]))} both resolve to ${(0, _picocolors.cyan)(normalizedPagePath)}.`);
      }
      return existingPath;
    }
    function createValidFileMatcher(pageExtensions, appDirPath) {
      const getExtensionRegexString = (extensions) => `(?:${extensions.join("|")})`;
      const validExtensionFileRegex = new RegExp("\\." + getExtensionRegexString(pageExtensions) + "$");
      const leafOnlyPageFileRegex = new RegExp(`(^(page|route)|[\\\\/](page|route))\\.${getExtensionRegexString(pageExtensions)}$`);
      const rootNotFoundFileRegex = new RegExp(`^not-found\\.${getExtensionRegexString(pageExtensions)}$`);
      function isMetadataFile(filePath) {
        const appDirRelativePath = appDirPath ? filePath.replace(appDirPath, "") : filePath;
        return (0, _ismetadataroute.isMetadataRouteFile)(appDirRelativePath, pageExtensions, true);
      }
      function isAppRouterPage(filePath) {
        return leafOnlyPageFileRegex.test(filePath) || isMetadataFile(filePath);
      }
      function isPageFile(filePath) {
        return validExtensionFileRegex.test(filePath) || isMetadataFile(filePath);
      }
      function isRootNotFound(filePath) {
        if (!appDirPath) {
          return false;
        }
        if (!filePath.startsWith(appDirPath + _path.sep)) {
          return false;
        }
        const rest = filePath.slice(appDirPath.length + 1);
        return rootNotFoundFileRegex.test(rest);
      }
      return {
        isPageFile,
        isAppRouterPage,
        isMetadataFile,
        isRootNotFound
      };
    }
  }
});

// ../../../node_modules/next/dist/lib/is-edge-runtime.js
var require_is_edge_runtime = __commonJS({
  "../../../node_modules/next/dist/lib/is-edge-runtime.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    Object.defineProperty(exports2, "isEdgeRuntime", {
      enumerable: true,
      get: function() {
        return isEdgeRuntime;
      }
    });
    var _constants = require_constants();
    function isEdgeRuntime(value) {
      return value === _constants.SERVER_RUNTIME.experimentalEdge || value === _constants.SERVER_RUNTIME.edge;
    }
  }
});

// ../../../node_modules/next/dist/shared/lib/i18n/normalize-locale-path.js
var require_normalize_locale_path = __commonJS({
  "../../../node_modules/next/dist/shared/lib/i18n/normalize-locale-path.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    Object.defineProperty(exports2, "normalizeLocalePath", {
      enumerable: true,
      get: function() {
        return normalizeLocalePath;
      }
    });
    function normalizeLocalePath(pathname, locales) {
      let detectedLocale;
      const pathnameParts = pathname.split("/");
      (locales || []).some((locale) => {
        if (pathnameParts[1] && pathnameParts[1].toLowerCase() === locale.toLowerCase()) {
          detectedLocale = locale;
          pathnameParts.splice(1, 1);
          pathname = pathnameParts.join("/") || "/";
          return true;
        }
        return false;
      });
      return {
        pathname,
        detectedLocale
      };
    }
  }
});

// ../../../node_modules/next/dist/shared/lib/page-path/normalize-page-path.js
var require_normalize_page_path = __commonJS({
  "../../../node_modules/next/dist/shared/lib/page-path/normalize-page-path.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    Object.defineProperty(exports2, "normalizePagePath", {
      enumerable: true,
      get: function() {
        return normalizePagePath;
      }
    });
    var _ensureleadingslash = require_ensure_leading_slash();
    var _utils = require_utils2();
    var _utils1 = require_utils();
    function normalizePagePath(page) {
      const normalized = /^\/index(\/|$)/.test(page) && !(0, _utils.isDynamicRoute)(page) ? "/index" + page : page === "/" ? "/index" : (0, _ensureleadingslash.ensureLeadingSlash)(page);
      if (process.env.NEXT_RUNTIME !== "edge") {
        const { posix } = require_path();
        const resolvedPage = posix.normalize(normalized);
        if (resolvedPage !== normalized) {
          throw new _utils1.NormalizeError("Requested and resolved page mismatch: " + normalized + " " + resolvedPage);
        }
      }
      return normalized;
    }
  }
});

// ../../../node_modules/next/dist/compiled/lru-cache/index.js
var require_lru_cache = __commonJS({
  "../../../node_modules/next/dist/compiled/lru-cache/index.js"(exports2, module2) {
    (() => {
      "use strict";
      var t = { 806: (t2, e2, i2) => {
        const s = i2(190);
        const n = Symbol("max");
        const l = Symbol("length");
        const r = Symbol("lengthCalculator");
        const h = Symbol("allowStale");
        const a = Symbol("maxAge");
        const o = Symbol("dispose");
        const u = Symbol("noDisposeOnSet");
        const f = Symbol("lruList");
        const p = Symbol("cache");
        const v = Symbol("updateAgeOnGet");
        const naiveLength = () => 1;
        class LRUCache {
          constructor(t3) {
            if (typeof t3 === "number")
              t3 = { max: t3 };
            if (!t3)
              t3 = {};
            if (t3.max && (typeof t3.max !== "number" || t3.max < 0))
              throw new TypeError("max must be a non-negative number");
            const e3 = this[n] = t3.max || Infinity;
            const i3 = t3.length || naiveLength;
            this[r] = typeof i3 !== "function" ? naiveLength : i3;
            this[h] = t3.stale || false;
            if (t3.maxAge && typeof t3.maxAge !== "number")
              throw new TypeError("maxAge must be a number");
            this[a] = t3.maxAge || 0;
            this[o] = t3.dispose;
            this[u] = t3.noDisposeOnSet || false;
            this[v] = t3.updateAgeOnGet || false;
            this.reset();
          }
          set max(t3) {
            if (typeof t3 !== "number" || t3 < 0)
              throw new TypeError("max must be a non-negative number");
            this[n] = t3 || Infinity;
            trim(this);
          }
          get max() {
            return this[n];
          }
          set allowStale(t3) {
            this[h] = !!t3;
          }
          get allowStale() {
            return this[h];
          }
          set maxAge(t3) {
            if (typeof t3 !== "number")
              throw new TypeError("maxAge must be a non-negative number");
            this[a] = t3;
            trim(this);
          }
          get maxAge() {
            return this[a];
          }
          set lengthCalculator(t3) {
            if (typeof t3 !== "function")
              t3 = naiveLength;
            if (t3 !== this[r]) {
              this[r] = t3;
              this[l] = 0;
              this[f].forEach((t4) => {
                t4.length = this[r](t4.value, t4.key);
                this[l] += t4.length;
              });
            }
            trim(this);
          }
          get lengthCalculator() {
            return this[r];
          }
          get length() {
            return this[l];
          }
          get itemCount() {
            return this[f].length;
          }
          rforEach(t3, e3) {
            e3 = e3 || this;
            for (let i3 = this[f].tail; i3 !== null; ) {
              const s2 = i3.prev;
              forEachStep(this, t3, i3, e3);
              i3 = s2;
            }
          }
          forEach(t3, e3) {
            e3 = e3 || this;
            for (let i3 = this[f].head; i3 !== null; ) {
              const s2 = i3.next;
              forEachStep(this, t3, i3, e3);
              i3 = s2;
            }
          }
          keys() {
            return this[f].toArray().map((t3) => t3.key);
          }
          values() {
            return this[f].toArray().map((t3) => t3.value);
          }
          reset() {
            if (this[o] && this[f] && this[f].length) {
              this[f].forEach((t3) => this[o](t3.key, t3.value));
            }
            this[p] = /* @__PURE__ */ new Map();
            this[f] = new s();
            this[l] = 0;
          }
          dump() {
            return this[f].map((t3) => isStale(this, t3) ? false : { k: t3.key, v: t3.value, e: t3.now + (t3.maxAge || 0) }).toArray().filter((t3) => t3);
          }
          dumpLru() {
            return this[f];
          }
          set(t3, e3, i3) {
            i3 = i3 || this[a];
            if (i3 && typeof i3 !== "number")
              throw new TypeError("maxAge must be a number");
            const s2 = i3 ? Date.now() : 0;
            const h2 = this[r](e3, t3);
            if (this[p].has(t3)) {
              if (h2 > this[n]) {
                del(this, this[p].get(t3));
                return false;
              }
              const r2 = this[p].get(t3);
              const a2 = r2.value;
              if (this[o]) {
                if (!this[u])
                  this[o](t3, a2.value);
              }
              a2.now = s2;
              a2.maxAge = i3;
              a2.value = e3;
              this[l] += h2 - a2.length;
              a2.length = h2;
              this.get(t3);
              trim(this);
              return true;
            }
            const v2 = new Entry(t3, e3, h2, s2, i3);
            if (v2.length > this[n]) {
              if (this[o])
                this[o](t3, e3);
              return false;
            }
            this[l] += v2.length;
            this[f].unshift(v2);
            this[p].set(t3, this[f].head);
            trim(this);
            return true;
          }
          has(t3) {
            if (!this[p].has(t3))
              return false;
            const e3 = this[p].get(t3).value;
            return !isStale(this, e3);
          }
          get(t3) {
            return get(this, t3, true);
          }
          peek(t3) {
            return get(this, t3, false);
          }
          pop() {
            const t3 = this[f].tail;
            if (!t3)
              return null;
            del(this, t3);
            return t3.value;
          }
          del(t3) {
            del(this, this[p].get(t3));
          }
          load(t3) {
            this.reset();
            const e3 = Date.now();
            for (let i3 = t3.length - 1; i3 >= 0; i3--) {
              const s2 = t3[i3];
              const n2 = s2.e || 0;
              if (n2 === 0)
                this.set(s2.k, s2.v);
              else {
                const t4 = n2 - e3;
                if (t4 > 0) {
                  this.set(s2.k, s2.v, t4);
                }
              }
            }
          }
          prune() {
            this[p].forEach((t3, e3) => get(this, e3, false));
          }
        }
        const get = (t3, e3, i3) => {
          const s2 = t3[p].get(e3);
          if (s2) {
            const e4 = s2.value;
            if (isStale(t3, e4)) {
              del(t3, s2);
              if (!t3[h])
                return void 0;
            } else {
              if (i3) {
                if (t3[v])
                  s2.value.now = Date.now();
                t3[f].unshiftNode(s2);
              }
            }
            return e4.value;
          }
        };
        const isStale = (t3, e3) => {
          if (!e3 || !e3.maxAge && !t3[a])
            return false;
          const i3 = Date.now() - e3.now;
          return e3.maxAge ? i3 > e3.maxAge : t3[a] && i3 > t3[a];
        };
        const trim = (t3) => {
          if (t3[l] > t3[n]) {
            for (let e3 = t3[f].tail; t3[l] > t3[n] && e3 !== null; ) {
              const i3 = e3.prev;
              del(t3, e3);
              e3 = i3;
            }
          }
        };
        const del = (t3, e3) => {
          if (e3) {
            const i3 = e3.value;
            if (t3[o])
              t3[o](i3.key, i3.value);
            t3[l] -= i3.length;
            t3[p].delete(i3.key);
            t3[f].removeNode(e3);
          }
        };
        class Entry {
          constructor(t3, e3, i3, s2, n2) {
            this.key = t3;
            this.value = e3;
            this.length = i3;
            this.now = s2;
            this.maxAge = n2 || 0;
          }
        }
        const forEachStep = (t3, e3, i3, s2) => {
          let n2 = i3.value;
          if (isStale(t3, n2)) {
            del(t3, i3);
            if (!t3[h])
              n2 = void 0;
          }
          if (n2)
            e3.call(s2, n2.value, n2.key, t3);
        };
        t2.exports = LRUCache;
      }, 76: (t2) => {
        t2.exports = function(t3) {
          t3.prototype[Symbol.iterator] = function* () {
            for (let t4 = this.head; t4; t4 = t4.next) {
              yield t4.value;
            }
          };
        };
      }, 190: (t2, e2, i2) => {
        t2.exports = Yallist;
        Yallist.Node = Node;
        Yallist.create = Yallist;
        function Yallist(t3) {
          var e3 = this;
          if (!(e3 instanceof Yallist)) {
            e3 = new Yallist();
          }
          e3.tail = null;
          e3.head = null;
          e3.length = 0;
          if (t3 && typeof t3.forEach === "function") {
            t3.forEach(function(t4) {
              e3.push(t4);
            });
          } else if (arguments.length > 0) {
            for (var i3 = 0, s = arguments.length; i3 < s; i3++) {
              e3.push(arguments[i3]);
            }
          }
          return e3;
        }
        Yallist.prototype.removeNode = function(t3) {
          if (t3.list !== this) {
            throw new Error("removing node which does not belong to this list");
          }
          var e3 = t3.next;
          var i3 = t3.prev;
          if (e3) {
            e3.prev = i3;
          }
          if (i3) {
            i3.next = e3;
          }
          if (t3 === this.head) {
            this.head = e3;
          }
          if (t3 === this.tail) {
            this.tail = i3;
          }
          t3.list.length--;
          t3.next = null;
          t3.prev = null;
          t3.list = null;
          return e3;
        };
        Yallist.prototype.unshiftNode = function(t3) {
          if (t3 === this.head) {
            return;
          }
          if (t3.list) {
            t3.list.removeNode(t3);
          }
          var e3 = this.head;
          t3.list = this;
          t3.next = e3;
          if (e3) {
            e3.prev = t3;
          }
          this.head = t3;
          if (!this.tail) {
            this.tail = t3;
          }
          this.length++;
        };
        Yallist.prototype.pushNode = function(t3) {
          if (t3 === this.tail) {
            return;
          }
          if (t3.list) {
            t3.list.removeNode(t3);
          }
          var e3 = this.tail;
          t3.list = this;
          t3.prev = e3;
          if (e3) {
            e3.next = t3;
          }
          this.tail = t3;
          if (!this.head) {
            this.head = t3;
          }
          this.length++;
        };
        Yallist.prototype.push = function() {
          for (var t3 = 0, e3 = arguments.length; t3 < e3; t3++) {
            push(this, arguments[t3]);
          }
          return this.length;
        };
        Yallist.prototype.unshift = function() {
          for (var t3 = 0, e3 = arguments.length; t3 < e3; t3++) {
            unshift(this, arguments[t3]);
          }
          return this.length;
        };
        Yallist.prototype.pop = function() {
          if (!this.tail) {
            return void 0;
          }
          var t3 = this.tail.value;
          this.tail = this.tail.prev;
          if (this.tail) {
            this.tail.next = null;
          } else {
            this.head = null;
          }
          this.length--;
          return t3;
        };
        Yallist.prototype.shift = function() {
          if (!this.head) {
            return void 0;
          }
          var t3 = this.head.value;
          this.head = this.head.next;
          if (this.head) {
            this.head.prev = null;
          } else {
            this.tail = null;
          }
          this.length--;
          return t3;
        };
        Yallist.prototype.forEach = function(t3, e3) {
          e3 = e3 || this;
          for (var i3 = this.head, s = 0; i3 !== null; s++) {
            t3.call(e3, i3.value, s, this);
            i3 = i3.next;
          }
        };
        Yallist.prototype.forEachReverse = function(t3, e3) {
          e3 = e3 || this;
          for (var i3 = this.tail, s = this.length - 1; i3 !== null; s--) {
            t3.call(e3, i3.value, s, this);
            i3 = i3.prev;
          }
        };
        Yallist.prototype.get = function(t3) {
          for (var e3 = 0, i3 = this.head; i3 !== null && e3 < t3; e3++) {
            i3 = i3.next;
          }
          if (e3 === t3 && i3 !== null) {
            return i3.value;
          }
        };
        Yallist.prototype.getReverse = function(t3) {
          for (var e3 = 0, i3 = this.tail; i3 !== null && e3 < t3; e3++) {
            i3 = i3.prev;
          }
          if (e3 === t3 && i3 !== null) {
            return i3.value;
          }
        };
        Yallist.prototype.map = function(t3, e3) {
          e3 = e3 || this;
          var i3 = new Yallist();
          for (var s = this.head; s !== null; ) {
            i3.push(t3.call(e3, s.value, this));
            s = s.next;
          }
          return i3;
        };
        Yallist.prototype.mapReverse = function(t3, e3) {
          e3 = e3 || this;
          var i3 = new Yallist();
          for (var s = this.tail; s !== null; ) {
            i3.push(t3.call(e3, s.value, this));
            s = s.prev;
          }
          return i3;
        };
        Yallist.prototype.reduce = function(t3, e3) {
          var i3;
          var s = this.head;
          if (arguments.length > 1) {
            i3 = e3;
          } else if (this.head) {
            s = this.head.next;
            i3 = this.head.value;
          } else {
            throw new TypeError("Reduce of empty list with no initial value");
          }
          for (var n = 0; s !== null; n++) {
            i3 = t3(i3, s.value, n);
            s = s.next;
          }
          return i3;
        };
        Yallist.prototype.reduceReverse = function(t3, e3) {
          var i3;
          var s = this.tail;
          if (arguments.length > 1) {
            i3 = e3;
          } else if (this.tail) {
            s = this.tail.prev;
            i3 = this.tail.value;
          } else {
            throw new TypeError("Reduce of empty list with no initial value");
          }
          for (var n = this.length - 1; s !== null; n--) {
            i3 = t3(i3, s.value, n);
            s = s.prev;
          }
          return i3;
        };
        Yallist.prototype.toArray = function() {
          var t3 = new Array(this.length);
          for (var e3 = 0, i3 = this.head; i3 !== null; e3++) {
            t3[e3] = i3.value;
            i3 = i3.next;
          }
          return t3;
        };
        Yallist.prototype.toArrayReverse = function() {
          var t3 = new Array(this.length);
          for (var e3 = 0, i3 = this.tail; i3 !== null; e3++) {
            t3[e3] = i3.value;
            i3 = i3.prev;
          }
          return t3;
        };
        Yallist.prototype.slice = function(t3, e3) {
          e3 = e3 || this.length;
          if (e3 < 0) {
            e3 += this.length;
          }
          t3 = t3 || 0;
          if (t3 < 0) {
            t3 += this.length;
          }
          var i3 = new Yallist();
          if (e3 < t3 || e3 < 0) {
            return i3;
          }
          if (t3 < 0) {
            t3 = 0;
          }
          if (e3 > this.length) {
            e3 = this.length;
          }
          for (var s = 0, n = this.head; n !== null && s < t3; s++) {
            n = n.next;
          }
          for (; n !== null && s < e3; s++, n = n.next) {
            i3.push(n.value);
          }
          return i3;
        };
        Yallist.prototype.sliceReverse = function(t3, e3) {
          e3 = e3 || this.length;
          if (e3 < 0) {
            e3 += this.length;
          }
          t3 = t3 || 0;
          if (t3 < 0) {
            t3 += this.length;
          }
          var i3 = new Yallist();
          if (e3 < t3 || e3 < 0) {
            return i3;
          }
          if (t3 < 0) {
            t3 = 0;
          }
          if (e3 > this.length) {
            e3 = this.length;
          }
          for (var s = this.length, n = this.tail; n !== null && s > e3; s--) {
            n = n.prev;
          }
          for (; n !== null && s > t3; s--, n = n.prev) {
            i3.push(n.value);
          }
          return i3;
        };
        Yallist.prototype.splice = function(t3, e3) {
          if (t3 > this.length) {
            t3 = this.length - 1;
          }
          if (t3 < 0) {
            t3 = this.length + t3;
          }
          for (var i3 = 0, s = this.head; s !== null && i3 < t3; i3++) {
            s = s.next;
          }
          var n = [];
          for (var i3 = 0; s && i3 < e3; i3++) {
            n.push(s.value);
            s = this.removeNode(s);
          }
          if (s === null) {
            s = this.tail;
          }
          if (s !== this.head && s !== this.tail) {
            s = s.prev;
          }
          for (var i3 = 2; i3 < arguments.length; i3++) {
            s = insert(this, s, arguments[i3]);
          }
          return n;
        };
        Yallist.prototype.reverse = function() {
          var t3 = this.head;
          var e3 = this.tail;
          for (var i3 = t3; i3 !== null; i3 = i3.prev) {
            var s = i3.prev;
            i3.prev = i3.next;
            i3.next = s;
          }
          this.head = e3;
          this.tail = t3;
          return this;
        };
        function insert(t3, e3, i3) {
          var s = e3 === t3.head ? new Node(i3, null, e3, t3) : new Node(i3, e3, e3.next, t3);
          if (s.next === null) {
            t3.tail = s;
          }
          if (s.prev === null) {
            t3.head = s;
          }
          t3.length++;
          return s;
        }
        function push(t3, e3) {
          t3.tail = new Node(e3, t3.tail, null, t3);
          if (!t3.head) {
            t3.head = t3.tail;
          }
          t3.length++;
        }
        function unshift(t3, e3) {
          t3.head = new Node(e3, null, t3.head, t3);
          if (!t3.tail) {
            t3.tail = t3.head;
          }
          t3.length++;
        }
        function Node(t3, e3, i3, s) {
          if (!(this instanceof Node)) {
            return new Node(t3, e3, i3, s);
          }
          this.list = s;
          this.value = t3;
          if (e3) {
            e3.next = this;
            this.prev = e3;
          } else {
            this.prev = null;
          }
          if (i3) {
            i3.prev = this;
            this.next = i3;
          } else {
            this.next = null;
          }
        }
        try {
          i2(76)(Yallist);
        } catch (t3) {
        }
      } };
      var e = {};
      function __nccwpck_require__2(i2) {
        var s = e[i2];
        if (s !== void 0) {
          return s.exports;
        }
        var n = e[i2] = { exports: {} };
        var l = true;
        try {
          t[i2](n, n.exports, __nccwpck_require__2);
          l = false;
        } finally {
          if (l)
            delete e[i2];
        }
        return n.exports;
      }
      if (typeof __nccwpck_require__2 !== "undefined")
        __nccwpck_require__2.ab = __dirname + "/";
      var i = __nccwpck_require__2(806);
      module2.exports = i;
    })();
  }
});

// browser-external:vm
var require_vm = __commonJS({
  "browser-external:vm"(exports2, module2) {
    module2.exports = Object.create(new Proxy({}, {
      get(_, key) {
        if (key !== "__esModule" && key !== "__proto__" && key !== "constructor" && key !== "splice") {
          console.warn(`Module "vm" has been externalized for browser compatibility. Cannot access "vm.${key}" in client code. See https://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`);
        }
      }
    }));
  }
});

// ../../../node_modules/next/dist/server/load-manifest.js
var require_load_manifest = __commonJS({
  "../../../node_modules/next/dist/server/load-manifest.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name2 in all)
        Object.defineProperty(target, name2, {
          enumerable: true,
          get: all[name2]
        });
    }
    _export(exports2, {
      loadManifest: function() {
        return loadManifest;
      },
      evalManifest: function() {
        return evalManifest;
      },
      clearManifestCache: function() {
        return clearManifestCache;
      }
    });
    var _fs = require_fs();
    var _vm = require_vm();
    var cache = /* @__PURE__ */ new Map();
    function loadManifest(path2, shouldCache = true) {
      const cached = shouldCache && cache.get(path2);
      if (cached) {
        return cached;
      }
      const manifest = JSON.parse((0, _fs.readFileSync)(path2, "utf8"));
      if (shouldCache) {
        cache.set(path2, manifest);
      }
      return manifest;
    }
    function evalManifest(path2, shouldCache = true) {
      const cached = shouldCache && cache.get(path2);
      if (cached) {
        return cached;
      }
      const content = (0, _fs.readFileSync)(path2, "utf8");
      if (content.length === 0) {
        throw new Error("Manifest file is empty");
      }
      const contextObject = {};
      (0, _vm.runInNewContext)(content, contextObject);
      if (shouldCache) {
        cache.set(path2, contextObject);
      }
      return contextObject;
    }
    function clearManifestCache(path2) {
      return cache.delete(path2);
    }
  }
});

// ../../../node_modules/next/dist/server/require.js
var require_require = __commonJS({
  "../../../node_modules/next/dist/server/require.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name2 in all)
        Object.defineProperty(target, name2, {
          enumerable: true,
          get: all[name2]
        });
    }
    _export(exports2, {
      getMaybePagePath: function() {
        return getMaybePagePath;
      },
      getPagePath: function() {
        return getPagePath;
      },
      requirePage: function() {
        return requirePage;
      },
      requireFontManifest: function() {
        return requireFontManifest;
      }
    });
    var _path = _interop_require_default(require_path());
    var _constants = require_constants2();
    var _normalizelocalepath = require_normalize_locale_path();
    var _normalizepagepath = require_normalize_page_path();
    var _denormalizepagepath = require_denormalize_page_path();
    var _utils = require_utils();
    var _lrucache = _interop_require_default(require_lru_cache());
    var _loadmanifest = require_load_manifest();
    var _fs = require_fs();
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    var isDev = true;
    var pagePathCache = !isDev ? new _lrucache.default({
      max: 1e3
    }) : null;
    function getMaybePagePath(page, distDir, locales, isAppPath) {
      const cacheKey = `${page}:${distDir}:${locales}:${isAppPath}`;
      let pagePath = pagePathCache == null ? void 0 : pagePathCache.get(cacheKey);
      if (pagePath)
        return pagePath;
      const serverBuildPath = _path.default.join(distDir, _constants.SERVER_DIRECTORY);
      let appPathsManifest;
      if (isAppPath) {
        appPathsManifest = (0, _loadmanifest.loadManifest)(_path.default.join(serverBuildPath, _constants.APP_PATHS_MANIFEST), !isDev);
      }
      const pagesManifest = (0, _loadmanifest.loadManifest)(_path.default.join(serverBuildPath, _constants.PAGES_MANIFEST), !isDev);
      try {
        page = (0, _denormalizepagepath.denormalizePagePath)((0, _normalizepagepath.normalizePagePath)(page));
      } catch (err) {
        console.error(err);
        throw new _utils.PageNotFoundError(page);
      }
      const checkManifest = (manifest) => {
        let curPath = manifest[page];
        if (!manifest[curPath] && locales) {
          const manifestNoLocales = {};
          for (const key of Object.keys(manifest)) {
            manifestNoLocales[(0, _normalizelocalepath.normalizeLocalePath)(key, locales).pathname] = pagesManifest[key];
          }
          curPath = manifestNoLocales[page];
        }
        return curPath;
      };
      if (appPathsManifest) {
        pagePath = checkManifest(appPathsManifest);
      }
      if (!pagePath) {
        pagePath = checkManifest(pagesManifest);
      }
      if (!pagePath) {
        pagePathCache == null ? void 0 : pagePathCache.set(cacheKey, null);
        return null;
      }
      pagePath = _path.default.join(serverBuildPath, pagePath);
      pagePathCache == null ? void 0 : pagePathCache.set(cacheKey, pagePath);
      return pagePath;
    }
    function getPagePath(page, distDir, locales, isAppPath) {
      const pagePath = getMaybePagePath(page, distDir, locales, isAppPath);
      if (!pagePath) {
        throw new _utils.PageNotFoundError(page);
      }
      return pagePath;
    }
    function requirePage(page, distDir, isAppPath) {
      const pagePath = getPagePath(page, distDir, void 0, isAppPath);
      if (pagePath.endsWith(".html")) {
        return _fs.promises.readFile(pagePath, "utf8").catch((err) => {
          throw new _utils.MissingStaticPage(page, err.message);
        });
      }
      try {
        process.env.__NEXT_PRIVATE_RUNTIME_TYPE = isAppPath ? "app" : "pages";
        const mod = process.env.NEXT_MINIMAL ? __non_webpack_require__(pagePath) : __require(pagePath);
        return mod;
      } finally {
        process.env.__NEXT_PRIVATE_RUNTIME_TYPE = "";
      }
    }
    function requireFontManifest(distDir) {
      const serverBuildPath = _path.default.join(distDir, _constants.SERVER_DIRECTORY);
      const fontManifest = (0, _loadmanifest.loadManifest)(_path.default.join(serverBuildPath, _constants.FONT_MANIFEST));
      return fontManifest;
    }
  }
});

// ../../../node_modules/next/dist/lib/interop-default.js
var require_interop_default = __commonJS({
  "../../../node_modules/next/dist/lib/interop-default.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    Object.defineProperty(exports2, "interopDefault", {
      enumerable: true,
      get: function() {
        return interopDefault;
      }
    });
    function interopDefault(mod) {
      return mod.default || mod;
    }
  }
});

// ../../../node_modules/next/dist/server/lib/trace/constants.js
var require_constants3 = __commonJS({
  "../../../node_modules/next/dist/server/lib/trace/constants.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name2 in all)
        Object.defineProperty(target, name2, {
          enumerable: true,
          get: all[name2]
        });
    }
    _export(exports2, {
      NextVanillaSpanAllowlist: function() {
        return NextVanillaSpanAllowlist;
      },
      BaseServerSpan: function() {
        return BaseServerSpan;
      },
      LoadComponentsSpan: function() {
        return LoadComponentsSpan;
      },
      NextServerSpan: function() {
        return NextServerSpan;
      },
      NextNodeServerSpan: function() {
        return NextNodeServerSpan;
      },
      StartServerSpan: function() {
        return StartServerSpan;
      },
      RenderSpan: function() {
        return RenderSpan;
      },
      RouterSpan: function() {
        return RouterSpan;
      },
      AppRenderSpan: function() {
        return AppRenderSpan;
      },
      NodeSpan: function() {
        return NodeSpan;
      },
      AppRouteRouteHandlersSpan: function() {
        return AppRouteRouteHandlersSpan;
      },
      ResolveMetadataSpan: function() {
        return ResolveMetadataSpan;
      }
    });
    var BaseServerSpan;
    (function(BaseServerSpan2) {
      BaseServerSpan2["handleRequest"] = "BaseServer.handleRequest";
      BaseServerSpan2["run"] = "BaseServer.run";
      BaseServerSpan2["pipe"] = "BaseServer.pipe";
      BaseServerSpan2["getStaticHTML"] = "BaseServer.getStaticHTML";
      BaseServerSpan2["render"] = "BaseServer.render";
      BaseServerSpan2["renderToResponseWithComponents"] = "BaseServer.renderToResponseWithComponents";
      BaseServerSpan2["renderToResponse"] = "BaseServer.renderToResponse";
      BaseServerSpan2["renderToHTML"] = "BaseServer.renderToHTML";
      BaseServerSpan2["renderError"] = "BaseServer.renderError";
      BaseServerSpan2["renderErrorToResponse"] = "BaseServer.renderErrorToResponse";
      BaseServerSpan2["renderErrorToHTML"] = "BaseServer.renderErrorToHTML";
      BaseServerSpan2["render404"] = "BaseServer.render404";
    })(BaseServerSpan || (BaseServerSpan = {}));
    var LoadComponentsSpan;
    (function(LoadComponentsSpan2) {
      LoadComponentsSpan2["loadDefaultErrorComponents"] = "LoadComponents.loadDefaultErrorComponents";
      LoadComponentsSpan2["loadComponents"] = "LoadComponents.loadComponents";
    })(LoadComponentsSpan || (LoadComponentsSpan = {}));
    var NextServerSpan;
    (function(NextServerSpan2) {
      NextServerSpan2["getRequestHandler"] = "NextServer.getRequestHandler";
      NextServerSpan2["getServer"] = "NextServer.getServer";
      NextServerSpan2["getServerRequestHandler"] = "NextServer.getServerRequestHandler";
      NextServerSpan2["createServer"] = "createServer.createServer";
    })(NextServerSpan || (NextServerSpan = {}));
    var NextNodeServerSpan;
    (function(NextNodeServerSpan2) {
      NextNodeServerSpan2["compression"] = "NextNodeServer.compression";
      NextNodeServerSpan2["getBuildId"] = "NextNodeServer.getBuildId";
      NextNodeServerSpan2["getLayoutOrPageModule"] = "NextNodeServer.getLayoutOrPageModule";
      NextNodeServerSpan2["generateStaticRoutes"] = "NextNodeServer.generateStaticRoutes";
      NextNodeServerSpan2["generateFsStaticRoutes"] = "NextNodeServer.generateFsStaticRoutes";
      NextNodeServerSpan2["generatePublicRoutes"] = "NextNodeServer.generatePublicRoutes";
      NextNodeServerSpan2["generateImageRoutes"] = "NextNodeServer.generateImageRoutes.route";
      NextNodeServerSpan2["sendRenderResult"] = "NextNodeServer.sendRenderResult";
      NextNodeServerSpan2["proxyRequest"] = "NextNodeServer.proxyRequest";
      NextNodeServerSpan2["runApi"] = "NextNodeServer.runApi";
      NextNodeServerSpan2["render"] = "NextNodeServer.render";
      NextNodeServerSpan2["renderHTML"] = "NextNodeServer.renderHTML";
      NextNodeServerSpan2["imageOptimizer"] = "NextNodeServer.imageOptimizer";
      NextNodeServerSpan2["getPagePath"] = "NextNodeServer.getPagePath";
      NextNodeServerSpan2["getRoutesManifest"] = "NextNodeServer.getRoutesManifest";
      NextNodeServerSpan2["findPageComponents"] = "NextNodeServer.findPageComponents";
      NextNodeServerSpan2["getFontManifest"] = "NextNodeServer.getFontManifest";
      NextNodeServerSpan2["getServerComponentManifest"] = "NextNodeServer.getServerComponentManifest";
      NextNodeServerSpan2["getRequestHandler"] = "NextNodeServer.getRequestHandler";
      NextNodeServerSpan2["renderToHTML"] = "NextNodeServer.renderToHTML";
      NextNodeServerSpan2["renderError"] = "NextNodeServer.renderError";
      NextNodeServerSpan2["renderErrorToHTML"] = "NextNodeServer.renderErrorToHTML";
      NextNodeServerSpan2["render404"] = "NextNodeServer.render404";
      NextNodeServerSpan2[
        // nested inner span, does not require parent scope name
        "route"
      ] = "route";
      NextNodeServerSpan2["onProxyReq"] = "onProxyReq";
      NextNodeServerSpan2["apiResolver"] = "apiResolver";
      NextNodeServerSpan2["internalFetch"] = "internalFetch";
    })(NextNodeServerSpan || (NextNodeServerSpan = {}));
    var StartServerSpan;
    (function(StartServerSpan2) {
      StartServerSpan2["startServer"] = "startServer.startServer";
    })(StartServerSpan || (StartServerSpan = {}));
    var RenderSpan;
    (function(RenderSpan2) {
      RenderSpan2["getServerSideProps"] = "Render.getServerSideProps";
      RenderSpan2["getStaticProps"] = "Render.getStaticProps";
      RenderSpan2["renderToString"] = "Render.renderToString";
      RenderSpan2["renderDocument"] = "Render.renderDocument";
      RenderSpan2["createBodyResult"] = "Render.createBodyResult";
    })(RenderSpan || (RenderSpan = {}));
    var AppRenderSpan;
    (function(AppRenderSpan2) {
      AppRenderSpan2["renderToString"] = "AppRender.renderToString";
      AppRenderSpan2["renderToReadableStream"] = "AppRender.renderToReadableStream";
      AppRenderSpan2["getBodyResult"] = "AppRender.getBodyResult";
      AppRenderSpan2["fetch"] = "AppRender.fetch";
    })(AppRenderSpan || (AppRenderSpan = {}));
    var RouterSpan;
    (function(RouterSpan2) {
      RouterSpan2["executeRoute"] = "Router.executeRoute";
    })(RouterSpan || (RouterSpan = {}));
    var NodeSpan;
    (function(NodeSpan2) {
      NodeSpan2["runHandler"] = "Node.runHandler";
    })(NodeSpan || (NodeSpan = {}));
    var AppRouteRouteHandlersSpan;
    (function(AppRouteRouteHandlersSpan2) {
      AppRouteRouteHandlersSpan2["runHandler"] = "AppRouteRouteHandlers.runHandler";
    })(AppRouteRouteHandlersSpan || (AppRouteRouteHandlersSpan = {}));
    var ResolveMetadataSpan;
    (function(ResolveMetadataSpan2) {
      ResolveMetadataSpan2["generateMetadata"] = "ResolveMetadata.generateMetadata";
      ResolveMetadataSpan2["generateViewport"] = "ResolveMetadata.generateViewport";
    })(ResolveMetadataSpan || (ResolveMetadataSpan = {}));
    var NextVanillaSpanAllowlist = [
      "BaseServer.handleRequest",
      "Render.getServerSideProps",
      "Render.getStaticProps",
      "AppRender.fetch",
      "AppRender.getBodyResult",
      "Render.renderDocument",
      "Node.runHandler",
      "AppRouteRouteHandlers.runHandler",
      "ResolveMetadata.generateMetadata",
      "ResolveMetadata.generateViewport",
      "NextNodeServer.findPageComponents",
      "NextNodeServer.getLayoutOrPageModule"
    ];
  }
});

// optional-peer-dep:__vite-optional-peer-dep:@opentelemetry/api:next
var require_api_next = __commonJS({
  "optional-peer-dep:__vite-optional-peer-dep:@opentelemetry/api:next"() {
    throw new Error(`Could not resolve "@opentelemetry/api" imported by "next". Is it installed?`);
  }
});

// ../../../node_modules/next/dist/compiled/@opentelemetry/api/index.js
var require_api = __commonJS({
  "../../../node_modules/next/dist/compiled/@opentelemetry/api/index.js"(exports2, module2) {
    (() => {
      "use strict";
      var e = { 491: (e2, t2, r2) => {
        Object.defineProperty(t2, "__esModule", { value: true });
        t2.ContextAPI = void 0;
        const n = r2(223);
        const a = r2(172);
        const o = r2(930);
        const i = "context";
        const c = new n.NoopContextManager();
        class ContextAPI {
          constructor() {
          }
          static getInstance() {
            if (!this._instance) {
              this._instance = new ContextAPI();
            }
            return this._instance;
          }
          setGlobalContextManager(e3) {
            return (0, a.registerGlobal)(i, e3, o.DiagAPI.instance());
          }
          active() {
            return this._getContextManager().active();
          }
          with(e3, t3, r3, ...n2) {
            return this._getContextManager().with(e3, t3, r3, ...n2);
          }
          bind(e3, t3) {
            return this._getContextManager().bind(e3, t3);
          }
          _getContextManager() {
            return (0, a.getGlobal)(i) || c;
          }
          disable() {
            this._getContextManager().disable();
            (0, a.unregisterGlobal)(i, o.DiagAPI.instance());
          }
        }
        t2.ContextAPI = ContextAPI;
      }, 930: (e2, t2, r2) => {
        Object.defineProperty(t2, "__esModule", { value: true });
        t2.DiagAPI = void 0;
        const n = r2(56);
        const a = r2(912);
        const o = r2(957);
        const i = r2(172);
        const c = "diag";
        class DiagAPI {
          constructor() {
            function _logProxy(e4) {
              return function(...t3) {
                const r3 = (0, i.getGlobal)("diag");
                if (!r3)
                  return;
                return r3[e4](...t3);
              };
            }
            const e3 = this;
            const setLogger = (t3, r3 = { logLevel: o.DiagLogLevel.INFO }) => {
              var n2, c2, s;
              if (t3 === e3) {
                const t4 = new Error("Cannot use diag as the logger for itself. Please use a DiagLogger implementation like ConsoleDiagLogger or a custom implementation");
                e3.error((n2 = t4.stack) !== null && n2 !== void 0 ? n2 : t4.message);
                return false;
              }
              if (typeof r3 === "number") {
                r3 = { logLevel: r3 };
              }
              const u = (0, i.getGlobal)("diag");
              const l = (0, a.createLogLevelDiagLogger)((c2 = r3.logLevel) !== null && c2 !== void 0 ? c2 : o.DiagLogLevel.INFO, t3);
              if (u && !r3.suppressOverrideMessage) {
                const e4 = (s = new Error().stack) !== null && s !== void 0 ? s : "<failed to generate stacktrace>";
                u.warn(`Current logger will be overwritten from ${e4}`);
                l.warn(`Current logger will overwrite one already registered from ${e4}`);
              }
              return (0, i.registerGlobal)("diag", l, e3, true);
            };
            e3.setLogger = setLogger;
            e3.disable = () => {
              (0, i.unregisterGlobal)(c, e3);
            };
            e3.createComponentLogger = (e4) => new n.DiagComponentLogger(e4);
            e3.verbose = _logProxy("verbose");
            e3.debug = _logProxy("debug");
            e3.info = _logProxy("info");
            e3.warn = _logProxy("warn");
            e3.error = _logProxy("error");
          }
          static instance() {
            if (!this._instance) {
              this._instance = new DiagAPI();
            }
            return this._instance;
          }
        }
        t2.DiagAPI = DiagAPI;
      }, 653: (e2, t2, r2) => {
        Object.defineProperty(t2, "__esModule", { value: true });
        t2.MetricsAPI = void 0;
        const n = r2(660);
        const a = r2(172);
        const o = r2(930);
        const i = "metrics";
        class MetricsAPI {
          constructor() {
          }
          static getInstance() {
            if (!this._instance) {
              this._instance = new MetricsAPI();
            }
            return this._instance;
          }
          setGlobalMeterProvider(e3) {
            return (0, a.registerGlobal)(i, e3, o.DiagAPI.instance());
          }
          getMeterProvider() {
            return (0, a.getGlobal)(i) || n.NOOP_METER_PROVIDER;
          }
          getMeter(e3, t3, r3) {
            return this.getMeterProvider().getMeter(e3, t3, r3);
          }
          disable() {
            (0, a.unregisterGlobal)(i, o.DiagAPI.instance());
          }
        }
        t2.MetricsAPI = MetricsAPI;
      }, 181: (e2, t2, r2) => {
        Object.defineProperty(t2, "__esModule", { value: true });
        t2.PropagationAPI = void 0;
        const n = r2(172);
        const a = r2(874);
        const o = r2(194);
        const i = r2(277);
        const c = r2(369);
        const s = r2(930);
        const u = "propagation";
        const l = new a.NoopTextMapPropagator();
        class PropagationAPI {
          constructor() {
            this.createBaggage = c.createBaggage;
            this.getBaggage = i.getBaggage;
            this.getActiveBaggage = i.getActiveBaggage;
            this.setBaggage = i.setBaggage;
            this.deleteBaggage = i.deleteBaggage;
          }
          static getInstance() {
            if (!this._instance) {
              this._instance = new PropagationAPI();
            }
            return this._instance;
          }
          setGlobalPropagator(e3) {
            return (0, n.registerGlobal)(u, e3, s.DiagAPI.instance());
          }
          inject(e3, t3, r3 = o.defaultTextMapSetter) {
            return this._getGlobalPropagator().inject(e3, t3, r3);
          }
          extract(e3, t3, r3 = o.defaultTextMapGetter) {
            return this._getGlobalPropagator().extract(e3, t3, r3);
          }
          fields() {
            return this._getGlobalPropagator().fields();
          }
          disable() {
            (0, n.unregisterGlobal)(u, s.DiagAPI.instance());
          }
          _getGlobalPropagator() {
            return (0, n.getGlobal)(u) || l;
          }
        }
        t2.PropagationAPI = PropagationAPI;
      }, 997: (e2, t2, r2) => {
        Object.defineProperty(t2, "__esModule", { value: true });
        t2.TraceAPI = void 0;
        const n = r2(172);
        const a = r2(846);
        const o = r2(139);
        const i = r2(607);
        const c = r2(930);
        const s = "trace";
        class TraceAPI {
          constructor() {
            this._proxyTracerProvider = new a.ProxyTracerProvider();
            this.wrapSpanContext = o.wrapSpanContext;
            this.isSpanContextValid = o.isSpanContextValid;
            this.deleteSpan = i.deleteSpan;
            this.getSpan = i.getSpan;
            this.getActiveSpan = i.getActiveSpan;
            this.getSpanContext = i.getSpanContext;
            this.setSpan = i.setSpan;
            this.setSpanContext = i.setSpanContext;
          }
          static getInstance() {
            if (!this._instance) {
              this._instance = new TraceAPI();
            }
            return this._instance;
          }
          setGlobalTracerProvider(e3) {
            const t3 = (0, n.registerGlobal)(s, this._proxyTracerProvider, c.DiagAPI.instance());
            if (t3) {
              this._proxyTracerProvider.setDelegate(e3);
            }
            return t3;
          }
          getTracerProvider() {
            return (0, n.getGlobal)(s) || this._proxyTracerProvider;
          }
          getTracer(e3, t3) {
            return this.getTracerProvider().getTracer(e3, t3);
          }
          disable() {
            (0, n.unregisterGlobal)(s, c.DiagAPI.instance());
            this._proxyTracerProvider = new a.ProxyTracerProvider();
          }
        }
        t2.TraceAPI = TraceAPI;
      }, 277: (e2, t2, r2) => {
        Object.defineProperty(t2, "__esModule", { value: true });
        t2.deleteBaggage = t2.setBaggage = t2.getActiveBaggage = t2.getBaggage = void 0;
        const n = r2(491);
        const a = r2(780);
        const o = (0, a.createContextKey)("OpenTelemetry Baggage Key");
        function getBaggage(e3) {
          return e3.getValue(o) || void 0;
        }
        t2.getBaggage = getBaggage;
        function getActiveBaggage() {
          return getBaggage(n.ContextAPI.getInstance().active());
        }
        t2.getActiveBaggage = getActiveBaggage;
        function setBaggage(e3, t3) {
          return e3.setValue(o, t3);
        }
        t2.setBaggage = setBaggage;
        function deleteBaggage(e3) {
          return e3.deleteValue(o);
        }
        t2.deleteBaggage = deleteBaggage;
      }, 993: (e2, t2) => {
        Object.defineProperty(t2, "__esModule", { value: true });
        t2.BaggageImpl = void 0;
        class BaggageImpl {
          constructor(e3) {
            this._entries = e3 ? new Map(e3) : /* @__PURE__ */ new Map();
          }
          getEntry(e3) {
            const t3 = this._entries.get(e3);
            if (!t3) {
              return void 0;
            }
            return Object.assign({}, t3);
          }
          getAllEntries() {
            return Array.from(this._entries.entries()).map(([e3, t3]) => [e3, t3]);
          }
          setEntry(e3, t3) {
            const r2 = new BaggageImpl(this._entries);
            r2._entries.set(e3, t3);
            return r2;
          }
          removeEntry(e3) {
            const t3 = new BaggageImpl(this._entries);
            t3._entries.delete(e3);
            return t3;
          }
          removeEntries(...e3) {
            const t3 = new BaggageImpl(this._entries);
            for (const r2 of e3) {
              t3._entries.delete(r2);
            }
            return t3;
          }
          clear() {
            return new BaggageImpl();
          }
        }
        t2.BaggageImpl = BaggageImpl;
      }, 830: (e2, t2) => {
        Object.defineProperty(t2, "__esModule", { value: true });
        t2.baggageEntryMetadataSymbol = void 0;
        t2.baggageEntryMetadataSymbol = Symbol("BaggageEntryMetadata");
      }, 369: (e2, t2, r2) => {
        Object.defineProperty(t2, "__esModule", { value: true });
        t2.baggageEntryMetadataFromString = t2.createBaggage = void 0;
        const n = r2(930);
        const a = r2(993);
        const o = r2(830);
        const i = n.DiagAPI.instance();
        function createBaggage(e3 = {}) {
          return new a.BaggageImpl(new Map(Object.entries(e3)));
        }
        t2.createBaggage = createBaggage;
        function baggageEntryMetadataFromString(e3) {
          if (typeof e3 !== "string") {
            i.error(`Cannot create baggage metadata from unknown type: ${typeof e3}`);
            e3 = "";
          }
          return { __TYPE__: o.baggageEntryMetadataSymbol, toString() {
            return e3;
          } };
        }
        t2.baggageEntryMetadataFromString = baggageEntryMetadataFromString;
      }, 67: (e2, t2, r2) => {
        Object.defineProperty(t2, "__esModule", { value: true });
        t2.context = void 0;
        const n = r2(491);
        t2.context = n.ContextAPI.getInstance();
      }, 223: (e2, t2, r2) => {
        Object.defineProperty(t2, "__esModule", { value: true });
        t2.NoopContextManager = void 0;
        const n = r2(780);
        class NoopContextManager {
          active() {
            return n.ROOT_CONTEXT;
          }
          with(e3, t3, r3, ...n2) {
            return t3.call(r3, ...n2);
          }
          bind(e3, t3) {
            return t3;
          }
          enable() {
            return this;
          }
          disable() {
            return this;
          }
        }
        t2.NoopContextManager = NoopContextManager;
      }, 780: (e2, t2) => {
        Object.defineProperty(t2, "__esModule", { value: true });
        t2.ROOT_CONTEXT = t2.createContextKey = void 0;
        function createContextKey(e3) {
          return Symbol.for(e3);
        }
        t2.createContextKey = createContextKey;
        class BaseContext {
          constructor(e3) {
            const t3 = this;
            t3._currentContext = e3 ? new Map(e3) : /* @__PURE__ */ new Map();
            t3.getValue = (e4) => t3._currentContext.get(e4);
            t3.setValue = (e4, r2) => {
              const n = new BaseContext(t3._currentContext);
              n._currentContext.set(e4, r2);
              return n;
            };
            t3.deleteValue = (e4) => {
              const r2 = new BaseContext(t3._currentContext);
              r2._currentContext.delete(e4);
              return r2;
            };
          }
        }
        t2.ROOT_CONTEXT = new BaseContext();
      }, 506: (e2, t2, r2) => {
        Object.defineProperty(t2, "__esModule", { value: true });
        t2.diag = void 0;
        const n = r2(930);
        t2.diag = n.DiagAPI.instance();
      }, 56: (e2, t2, r2) => {
        Object.defineProperty(t2, "__esModule", { value: true });
        t2.DiagComponentLogger = void 0;
        const n = r2(172);
        class DiagComponentLogger {
          constructor(e3) {
            this._namespace = e3.namespace || "DiagComponentLogger";
          }
          debug(...e3) {
            return logProxy("debug", this._namespace, e3);
          }
          error(...e3) {
            return logProxy("error", this._namespace, e3);
          }
          info(...e3) {
            return logProxy("info", this._namespace, e3);
          }
          warn(...e3) {
            return logProxy("warn", this._namespace, e3);
          }
          verbose(...e3) {
            return logProxy("verbose", this._namespace, e3);
          }
        }
        t2.DiagComponentLogger = DiagComponentLogger;
        function logProxy(e3, t3, r3) {
          const a = (0, n.getGlobal)("diag");
          if (!a) {
            return;
          }
          r3.unshift(t3);
          return a[e3](...r3);
        }
      }, 972: (e2, t2) => {
        Object.defineProperty(t2, "__esModule", { value: true });
        t2.DiagConsoleLogger = void 0;
        const r2 = [{ n: "error", c: "error" }, { n: "warn", c: "warn" }, { n: "info", c: "info" }, { n: "debug", c: "debug" }, { n: "verbose", c: "trace" }];
        class DiagConsoleLogger {
          constructor() {
            function _consoleFunc(e3) {
              return function(...t3) {
                if (console) {
                  let r3 = console[e3];
                  if (typeof r3 !== "function") {
                    r3 = console.log;
                  }
                  if (typeof r3 === "function") {
                    return r3.apply(console, t3);
                  }
                }
              };
            }
            for (let e3 = 0; e3 < r2.length; e3++) {
              this[r2[e3].n] = _consoleFunc(r2[e3].c);
            }
          }
        }
        t2.DiagConsoleLogger = DiagConsoleLogger;
      }, 912: (e2, t2, r2) => {
        Object.defineProperty(t2, "__esModule", { value: true });
        t2.createLogLevelDiagLogger = void 0;
        const n = r2(957);
        function createLogLevelDiagLogger(e3, t3) {
          if (e3 < n.DiagLogLevel.NONE) {
            e3 = n.DiagLogLevel.NONE;
          } else if (e3 > n.DiagLogLevel.ALL) {
            e3 = n.DiagLogLevel.ALL;
          }
          t3 = t3 || {};
          function _filterFunc(r3, n2) {
            const a = t3[r3];
            if (typeof a === "function" && e3 >= n2) {
              return a.bind(t3);
            }
            return function() {
            };
          }
          return { error: _filterFunc("error", n.DiagLogLevel.ERROR), warn: _filterFunc("warn", n.DiagLogLevel.WARN), info: _filterFunc("info", n.DiagLogLevel.INFO), debug: _filterFunc("debug", n.DiagLogLevel.DEBUG), verbose: _filterFunc("verbose", n.DiagLogLevel.VERBOSE) };
        }
        t2.createLogLevelDiagLogger = createLogLevelDiagLogger;
      }, 957: (e2, t2) => {
        Object.defineProperty(t2, "__esModule", { value: true });
        t2.DiagLogLevel = void 0;
        var r2;
        (function(e3) {
          e3[e3["NONE"] = 0] = "NONE";
          e3[e3["ERROR"] = 30] = "ERROR";
          e3[e3["WARN"] = 50] = "WARN";
          e3[e3["INFO"] = 60] = "INFO";
          e3[e3["DEBUG"] = 70] = "DEBUG";
          e3[e3["VERBOSE"] = 80] = "VERBOSE";
          e3[e3["ALL"] = 9999] = "ALL";
        })(r2 = t2.DiagLogLevel || (t2.DiagLogLevel = {}));
      }, 172: (e2, t2, r2) => {
        Object.defineProperty(t2, "__esModule", { value: true });
        t2.unregisterGlobal = t2.getGlobal = t2.registerGlobal = void 0;
        const n = r2(200);
        const a = r2(521);
        const o = r2(130);
        const i = a.VERSION.split(".")[0];
        const c = Symbol.for(`opentelemetry.js.api.${i}`);
        const s = n._globalThis;
        function registerGlobal(e3, t3, r3, n2 = false) {
          var o2;
          const i2 = s[c] = (o2 = s[c]) !== null && o2 !== void 0 ? o2 : { version: a.VERSION };
          if (!n2 && i2[e3]) {
            const t4 = new Error(`@opentelemetry/api: Attempted duplicate registration of API: ${e3}`);
            r3.error(t4.stack || t4.message);
            return false;
          }
          if (i2.version !== a.VERSION) {
            const t4 = new Error(`@opentelemetry/api: Registration of version v${i2.version} for ${e3} does not match previously registered API v${a.VERSION}`);
            r3.error(t4.stack || t4.message);
            return false;
          }
          i2[e3] = t3;
          r3.debug(`@opentelemetry/api: Registered a global for ${e3} v${a.VERSION}.`);
          return true;
        }
        t2.registerGlobal = registerGlobal;
        function getGlobal(e3) {
          var t3, r3;
          const n2 = (t3 = s[c]) === null || t3 === void 0 ? void 0 : t3.version;
          if (!n2 || !(0, o.isCompatible)(n2)) {
            return;
          }
          return (r3 = s[c]) === null || r3 === void 0 ? void 0 : r3[e3];
        }
        t2.getGlobal = getGlobal;
        function unregisterGlobal(e3, t3) {
          t3.debug(`@opentelemetry/api: Unregistering a global for ${e3} v${a.VERSION}.`);
          const r3 = s[c];
          if (r3) {
            delete r3[e3];
          }
        }
        t2.unregisterGlobal = unregisterGlobal;
      }, 130: (e2, t2, r2) => {
        Object.defineProperty(t2, "__esModule", { value: true });
        t2.isCompatible = t2._makeCompatibilityCheck = void 0;
        const n = r2(521);
        const a = /^(\d+)\.(\d+)\.(\d+)(-(.+))?$/;
        function _makeCompatibilityCheck(e3) {
          const t3 = /* @__PURE__ */ new Set([e3]);
          const r3 = /* @__PURE__ */ new Set();
          const n2 = e3.match(a);
          if (!n2) {
            return () => false;
          }
          const o = { major: +n2[1], minor: +n2[2], patch: +n2[3], prerelease: n2[4] };
          if (o.prerelease != null) {
            return function isExactmatch(t4) {
              return t4 === e3;
            };
          }
          function _reject(e4) {
            r3.add(e4);
            return false;
          }
          function _accept(e4) {
            t3.add(e4);
            return true;
          }
          return function isCompatible(e4) {
            if (t3.has(e4)) {
              return true;
            }
            if (r3.has(e4)) {
              return false;
            }
            const n3 = e4.match(a);
            if (!n3) {
              return _reject(e4);
            }
            const i = { major: +n3[1], minor: +n3[2], patch: +n3[3], prerelease: n3[4] };
            if (i.prerelease != null) {
              return _reject(e4);
            }
            if (o.major !== i.major) {
              return _reject(e4);
            }
            if (o.major === 0) {
              if (o.minor === i.minor && o.patch <= i.patch) {
                return _accept(e4);
              }
              return _reject(e4);
            }
            if (o.minor <= i.minor) {
              return _accept(e4);
            }
            return _reject(e4);
          };
        }
        t2._makeCompatibilityCheck = _makeCompatibilityCheck;
        t2.isCompatible = _makeCompatibilityCheck(n.VERSION);
      }, 886: (e2, t2, r2) => {
        Object.defineProperty(t2, "__esModule", { value: true });
        t2.metrics = void 0;
        const n = r2(653);
        t2.metrics = n.MetricsAPI.getInstance();
      }, 901: (e2, t2) => {
        Object.defineProperty(t2, "__esModule", { value: true });
        t2.ValueType = void 0;
        var r2;
        (function(e3) {
          e3[e3["INT"] = 0] = "INT";
          e3[e3["DOUBLE"] = 1] = "DOUBLE";
        })(r2 = t2.ValueType || (t2.ValueType = {}));
      }, 102: (e2, t2) => {
        Object.defineProperty(t2, "__esModule", { value: true });
        t2.createNoopMeter = t2.NOOP_OBSERVABLE_UP_DOWN_COUNTER_METRIC = t2.NOOP_OBSERVABLE_GAUGE_METRIC = t2.NOOP_OBSERVABLE_COUNTER_METRIC = t2.NOOP_UP_DOWN_COUNTER_METRIC = t2.NOOP_HISTOGRAM_METRIC = t2.NOOP_COUNTER_METRIC = t2.NOOP_METER = t2.NoopObservableUpDownCounterMetric = t2.NoopObservableGaugeMetric = t2.NoopObservableCounterMetric = t2.NoopObservableMetric = t2.NoopHistogramMetric = t2.NoopUpDownCounterMetric = t2.NoopCounterMetric = t2.NoopMetric = t2.NoopMeter = void 0;
        class NoopMeter {
          constructor() {
          }
          createHistogram(e3, r2) {
            return t2.NOOP_HISTOGRAM_METRIC;
          }
          createCounter(e3, r2) {
            return t2.NOOP_COUNTER_METRIC;
          }
          createUpDownCounter(e3, r2) {
            return t2.NOOP_UP_DOWN_COUNTER_METRIC;
          }
          createObservableGauge(e3, r2) {
            return t2.NOOP_OBSERVABLE_GAUGE_METRIC;
          }
          createObservableCounter(e3, r2) {
            return t2.NOOP_OBSERVABLE_COUNTER_METRIC;
          }
          createObservableUpDownCounter(e3, r2) {
            return t2.NOOP_OBSERVABLE_UP_DOWN_COUNTER_METRIC;
          }
          addBatchObservableCallback(e3, t3) {
          }
          removeBatchObservableCallback(e3) {
          }
        }
        t2.NoopMeter = NoopMeter;
        class NoopMetric {
        }
        t2.NoopMetric = NoopMetric;
        class NoopCounterMetric extends NoopMetric {
          add(e3, t3) {
          }
        }
        t2.NoopCounterMetric = NoopCounterMetric;
        class NoopUpDownCounterMetric extends NoopMetric {
          add(e3, t3) {
          }
        }
        t2.NoopUpDownCounterMetric = NoopUpDownCounterMetric;
        class NoopHistogramMetric extends NoopMetric {
          record(e3, t3) {
          }
        }
        t2.NoopHistogramMetric = NoopHistogramMetric;
        class NoopObservableMetric {
          addCallback(e3) {
          }
          removeCallback(e3) {
          }
        }
        t2.NoopObservableMetric = NoopObservableMetric;
        class NoopObservableCounterMetric extends NoopObservableMetric {
        }
        t2.NoopObservableCounterMetric = NoopObservableCounterMetric;
        class NoopObservableGaugeMetric extends NoopObservableMetric {
        }
        t2.NoopObservableGaugeMetric = NoopObservableGaugeMetric;
        class NoopObservableUpDownCounterMetric extends NoopObservableMetric {
        }
        t2.NoopObservableUpDownCounterMetric = NoopObservableUpDownCounterMetric;
        t2.NOOP_METER = new NoopMeter();
        t2.NOOP_COUNTER_METRIC = new NoopCounterMetric();
        t2.NOOP_HISTOGRAM_METRIC = new NoopHistogramMetric();
        t2.NOOP_UP_DOWN_COUNTER_METRIC = new NoopUpDownCounterMetric();
        t2.NOOP_OBSERVABLE_COUNTER_METRIC = new NoopObservableCounterMetric();
        t2.NOOP_OBSERVABLE_GAUGE_METRIC = new NoopObservableGaugeMetric();
        t2.NOOP_OBSERVABLE_UP_DOWN_COUNTER_METRIC = new NoopObservableUpDownCounterMetric();
        function createNoopMeter() {
          return t2.NOOP_METER;
        }
        t2.createNoopMeter = createNoopMeter;
      }, 660: (e2, t2, r2) => {
        Object.defineProperty(t2, "__esModule", { value: true });
        t2.NOOP_METER_PROVIDER = t2.NoopMeterProvider = void 0;
        const n = r2(102);
        class NoopMeterProvider {
          getMeter(e3, t3, r3) {
            return n.NOOP_METER;
          }
        }
        t2.NoopMeterProvider = NoopMeterProvider;
        t2.NOOP_METER_PROVIDER = new NoopMeterProvider();
      }, 200: function(e2, t2, r2) {
        var n = this && this.__createBinding || (Object.create ? function(e3, t3, r3, n2) {
          if (n2 === void 0)
            n2 = r3;
          Object.defineProperty(e3, n2, { enumerable: true, get: function() {
            return t3[r3];
          } });
        } : function(e3, t3, r3, n2) {
          if (n2 === void 0)
            n2 = r3;
          e3[n2] = t3[r3];
        });
        var a = this && this.__exportStar || function(e3, t3) {
          for (var r3 in e3)
            if (r3 !== "default" && !Object.prototype.hasOwnProperty.call(t3, r3))
              n(t3, e3, r3);
        };
        Object.defineProperty(t2, "__esModule", { value: true });
        a(r2(46), t2);
      }, 651: (e2, t2) => {
        Object.defineProperty(t2, "__esModule", { value: true });
        t2._globalThis = void 0;
        t2._globalThis = typeof globalThis === "object" ? globalThis : global;
      }, 46: function(e2, t2, r2) {
        var n = this && this.__createBinding || (Object.create ? function(e3, t3, r3, n2) {
          if (n2 === void 0)
            n2 = r3;
          Object.defineProperty(e3, n2, { enumerable: true, get: function() {
            return t3[r3];
          } });
        } : function(e3, t3, r3, n2) {
          if (n2 === void 0)
            n2 = r3;
          e3[n2] = t3[r3];
        });
        var a = this && this.__exportStar || function(e3, t3) {
          for (var r3 in e3)
            if (r3 !== "default" && !Object.prototype.hasOwnProperty.call(t3, r3))
              n(t3, e3, r3);
        };
        Object.defineProperty(t2, "__esModule", { value: true });
        a(r2(651), t2);
      }, 939: (e2, t2, r2) => {
        Object.defineProperty(t2, "__esModule", { value: true });
        t2.propagation = void 0;
        const n = r2(181);
        t2.propagation = n.PropagationAPI.getInstance();
      }, 874: (e2, t2) => {
        Object.defineProperty(t2, "__esModule", { value: true });
        t2.NoopTextMapPropagator = void 0;
        class NoopTextMapPropagator {
          inject(e3, t3) {
          }
          extract(e3, t3) {
            return e3;
          }
          fields() {
            return [];
          }
        }
        t2.NoopTextMapPropagator = NoopTextMapPropagator;
      }, 194: (e2, t2) => {
        Object.defineProperty(t2, "__esModule", { value: true });
        t2.defaultTextMapSetter = t2.defaultTextMapGetter = void 0;
        t2.defaultTextMapGetter = { get(e3, t3) {
          if (e3 == null) {
            return void 0;
          }
          return e3[t3];
        }, keys(e3) {
          if (e3 == null) {
            return [];
          }
          return Object.keys(e3);
        } };
        t2.defaultTextMapSetter = { set(e3, t3, r2) {
          if (e3 == null) {
            return;
          }
          e3[t3] = r2;
        } };
      }, 845: (e2, t2, r2) => {
        Object.defineProperty(t2, "__esModule", { value: true });
        t2.trace = void 0;
        const n = r2(997);
        t2.trace = n.TraceAPI.getInstance();
      }, 403: (e2, t2, r2) => {
        Object.defineProperty(t2, "__esModule", { value: true });
        t2.NonRecordingSpan = void 0;
        const n = r2(476);
        class NonRecordingSpan {
          constructor(e3 = n.INVALID_SPAN_CONTEXT) {
            this._spanContext = e3;
          }
          spanContext() {
            return this._spanContext;
          }
          setAttribute(e3, t3) {
            return this;
          }
          setAttributes(e3) {
            return this;
          }
          addEvent(e3, t3) {
            return this;
          }
          setStatus(e3) {
            return this;
          }
          updateName(e3) {
            return this;
          }
          end(e3) {
          }
          isRecording() {
            return false;
          }
          recordException(e3, t3) {
          }
        }
        t2.NonRecordingSpan = NonRecordingSpan;
      }, 614: (e2, t2, r2) => {
        Object.defineProperty(t2, "__esModule", { value: true });
        t2.NoopTracer = void 0;
        const n = r2(491);
        const a = r2(607);
        const o = r2(403);
        const i = r2(139);
        const c = n.ContextAPI.getInstance();
        class NoopTracer {
          startSpan(e3, t3, r3 = c.active()) {
            const n2 = Boolean(t3 === null || t3 === void 0 ? void 0 : t3.root);
            if (n2) {
              return new o.NonRecordingSpan();
            }
            const s = r3 && (0, a.getSpanContext)(r3);
            if (isSpanContext(s) && (0, i.isSpanContextValid)(s)) {
              return new o.NonRecordingSpan(s);
            } else {
              return new o.NonRecordingSpan();
            }
          }
          startActiveSpan(e3, t3, r3, n2) {
            let o2;
            let i2;
            let s;
            if (arguments.length < 2) {
              return;
            } else if (arguments.length === 2) {
              s = t3;
            } else if (arguments.length === 3) {
              o2 = t3;
              s = r3;
            } else {
              o2 = t3;
              i2 = r3;
              s = n2;
            }
            const u = i2 !== null && i2 !== void 0 ? i2 : c.active();
            const l = this.startSpan(e3, o2, u);
            const g = (0, a.setSpan)(u, l);
            return c.with(g, s, void 0, l);
          }
        }
        t2.NoopTracer = NoopTracer;
        function isSpanContext(e3) {
          return typeof e3 === "object" && typeof e3["spanId"] === "string" && typeof e3["traceId"] === "string" && typeof e3["traceFlags"] === "number";
        }
      }, 124: (e2, t2, r2) => {
        Object.defineProperty(t2, "__esModule", { value: true });
        t2.NoopTracerProvider = void 0;
        const n = r2(614);
        class NoopTracerProvider {
          getTracer(e3, t3, r3) {
            return new n.NoopTracer();
          }
        }
        t2.NoopTracerProvider = NoopTracerProvider;
      }, 125: (e2, t2, r2) => {
        Object.defineProperty(t2, "__esModule", { value: true });
        t2.ProxyTracer = void 0;
        const n = r2(614);
        const a = new n.NoopTracer();
        class ProxyTracer {
          constructor(e3, t3, r3, n2) {
            this._provider = e3;
            this.name = t3;
            this.version = r3;
            this.options = n2;
          }
          startSpan(e3, t3, r3) {
            return this._getTracer().startSpan(e3, t3, r3);
          }
          startActiveSpan(e3, t3, r3, n2) {
            const a2 = this._getTracer();
            return Reflect.apply(a2.startActiveSpan, a2, arguments);
          }
          _getTracer() {
            if (this._delegate) {
              return this._delegate;
            }
            const e3 = this._provider.getDelegateTracer(this.name, this.version, this.options);
            if (!e3) {
              return a;
            }
            this._delegate = e3;
            return this._delegate;
          }
        }
        t2.ProxyTracer = ProxyTracer;
      }, 846: (e2, t2, r2) => {
        Object.defineProperty(t2, "__esModule", { value: true });
        t2.ProxyTracerProvider = void 0;
        const n = r2(125);
        const a = r2(124);
        const o = new a.NoopTracerProvider();
        class ProxyTracerProvider {
          getTracer(e3, t3, r3) {
            var a2;
            return (a2 = this.getDelegateTracer(e3, t3, r3)) !== null && a2 !== void 0 ? a2 : new n.ProxyTracer(this, e3, t3, r3);
          }
          getDelegate() {
            var e3;
            return (e3 = this._delegate) !== null && e3 !== void 0 ? e3 : o;
          }
          setDelegate(e3) {
            this._delegate = e3;
          }
          getDelegateTracer(e3, t3, r3) {
            var n2;
            return (n2 = this._delegate) === null || n2 === void 0 ? void 0 : n2.getTracer(e3, t3, r3);
          }
        }
        t2.ProxyTracerProvider = ProxyTracerProvider;
      }, 996: (e2, t2) => {
        Object.defineProperty(t2, "__esModule", { value: true });
        t2.SamplingDecision = void 0;
        var r2;
        (function(e3) {
          e3[e3["NOT_RECORD"] = 0] = "NOT_RECORD";
          e3[e3["RECORD"] = 1] = "RECORD";
          e3[e3["RECORD_AND_SAMPLED"] = 2] = "RECORD_AND_SAMPLED";
        })(r2 = t2.SamplingDecision || (t2.SamplingDecision = {}));
      }, 607: (e2, t2, r2) => {
        Object.defineProperty(t2, "__esModule", { value: true });
        t2.getSpanContext = t2.setSpanContext = t2.deleteSpan = t2.setSpan = t2.getActiveSpan = t2.getSpan = void 0;
        const n = r2(780);
        const a = r2(403);
        const o = r2(491);
        const i = (0, n.createContextKey)("OpenTelemetry Context Key SPAN");
        function getSpan(e3) {
          return e3.getValue(i) || void 0;
        }
        t2.getSpan = getSpan;
        function getActiveSpan() {
          return getSpan(o.ContextAPI.getInstance().active());
        }
        t2.getActiveSpan = getActiveSpan;
        function setSpan(e3, t3) {
          return e3.setValue(i, t3);
        }
        t2.setSpan = setSpan;
        function deleteSpan(e3) {
          return e3.deleteValue(i);
        }
        t2.deleteSpan = deleteSpan;
        function setSpanContext(e3, t3) {
          return setSpan(e3, new a.NonRecordingSpan(t3));
        }
        t2.setSpanContext = setSpanContext;
        function getSpanContext(e3) {
          var t3;
          return (t3 = getSpan(e3)) === null || t3 === void 0 ? void 0 : t3.spanContext();
        }
        t2.getSpanContext = getSpanContext;
      }, 325: (e2, t2, r2) => {
        Object.defineProperty(t2, "__esModule", { value: true });
        t2.TraceStateImpl = void 0;
        const n = r2(564);
        const a = 32;
        const o = 512;
        const i = ",";
        const c = "=";
        class TraceStateImpl {
          constructor(e3) {
            this._internalState = /* @__PURE__ */ new Map();
            if (e3)
              this._parse(e3);
          }
          set(e3, t3) {
            const r3 = this._clone();
            if (r3._internalState.has(e3)) {
              r3._internalState.delete(e3);
            }
            r3._internalState.set(e3, t3);
            return r3;
          }
          unset(e3) {
            const t3 = this._clone();
            t3._internalState.delete(e3);
            return t3;
          }
          get(e3) {
            return this._internalState.get(e3);
          }
          serialize() {
            return this._keys().reduce((e3, t3) => {
              e3.push(t3 + c + this.get(t3));
              return e3;
            }, []).join(i);
          }
          _parse(e3) {
            if (e3.length > o)
              return;
            this._internalState = e3.split(i).reverse().reduce((e4, t3) => {
              const r3 = t3.trim();
              const a2 = r3.indexOf(c);
              if (a2 !== -1) {
                const o2 = r3.slice(0, a2);
                const i2 = r3.slice(a2 + 1, t3.length);
                if ((0, n.validateKey)(o2) && (0, n.validateValue)(i2)) {
                  e4.set(o2, i2);
                } else {
                }
              }
              return e4;
            }, /* @__PURE__ */ new Map());
            if (this._internalState.size > a) {
              this._internalState = new Map(Array.from(this._internalState.entries()).reverse().slice(0, a));
            }
          }
          _keys() {
            return Array.from(this._internalState.keys()).reverse();
          }
          _clone() {
            const e3 = new TraceStateImpl();
            e3._internalState = new Map(this._internalState);
            return e3;
          }
        }
        t2.TraceStateImpl = TraceStateImpl;
      }, 564: (e2, t2) => {
        Object.defineProperty(t2, "__esModule", { value: true });
        t2.validateValue = t2.validateKey = void 0;
        const r2 = "[_0-9a-z-*/]";
        const n = `[a-z]${r2}{0,255}`;
        const a = `[a-z0-9]${r2}{0,240}@[a-z]${r2}{0,13}`;
        const o = new RegExp(`^(?:${n}|${a})$`);
        const i = /^[ -~]{0,255}[!-~]$/;
        const c = /,|=/;
        function validateKey(e3) {
          return o.test(e3);
        }
        t2.validateKey = validateKey;
        function validateValue(e3) {
          return i.test(e3) && !c.test(e3);
        }
        t2.validateValue = validateValue;
      }, 98: (e2, t2, r2) => {
        Object.defineProperty(t2, "__esModule", { value: true });
        t2.createTraceState = void 0;
        const n = r2(325);
        function createTraceState(e3) {
          return new n.TraceStateImpl(e3);
        }
        t2.createTraceState = createTraceState;
      }, 476: (e2, t2, r2) => {
        Object.defineProperty(t2, "__esModule", { value: true });
        t2.INVALID_SPAN_CONTEXT = t2.INVALID_TRACEID = t2.INVALID_SPANID = void 0;
        const n = r2(475);
        t2.INVALID_SPANID = "0000000000000000";
        t2.INVALID_TRACEID = "00000000000000000000000000000000";
        t2.INVALID_SPAN_CONTEXT = { traceId: t2.INVALID_TRACEID, spanId: t2.INVALID_SPANID, traceFlags: n.TraceFlags.NONE };
      }, 357: (e2, t2) => {
        Object.defineProperty(t2, "__esModule", { value: true });
        t2.SpanKind = void 0;
        var r2;
        (function(e3) {
          e3[e3["INTERNAL"] = 0] = "INTERNAL";
          e3[e3["SERVER"] = 1] = "SERVER";
          e3[e3["CLIENT"] = 2] = "CLIENT";
          e3[e3["PRODUCER"] = 3] = "PRODUCER";
          e3[e3["CONSUMER"] = 4] = "CONSUMER";
        })(r2 = t2.SpanKind || (t2.SpanKind = {}));
      }, 139: (e2, t2, r2) => {
        Object.defineProperty(t2, "__esModule", { value: true });
        t2.wrapSpanContext = t2.isSpanContextValid = t2.isValidSpanId = t2.isValidTraceId = void 0;
        const n = r2(476);
        const a = r2(403);
        const o = /^([0-9a-f]{32})$/i;
        const i = /^[0-9a-f]{16}$/i;
        function isValidTraceId(e3) {
          return o.test(e3) && e3 !== n.INVALID_TRACEID;
        }
        t2.isValidTraceId = isValidTraceId;
        function isValidSpanId(e3) {
          return i.test(e3) && e3 !== n.INVALID_SPANID;
        }
        t2.isValidSpanId = isValidSpanId;
        function isSpanContextValid(e3) {
          return isValidTraceId(e3.traceId) && isValidSpanId(e3.spanId);
        }
        t2.isSpanContextValid = isSpanContextValid;
        function wrapSpanContext(e3) {
          return new a.NonRecordingSpan(e3);
        }
        t2.wrapSpanContext = wrapSpanContext;
      }, 847: (e2, t2) => {
        Object.defineProperty(t2, "__esModule", { value: true });
        t2.SpanStatusCode = void 0;
        var r2;
        (function(e3) {
          e3[e3["UNSET"] = 0] = "UNSET";
          e3[e3["OK"] = 1] = "OK";
          e3[e3["ERROR"] = 2] = "ERROR";
        })(r2 = t2.SpanStatusCode || (t2.SpanStatusCode = {}));
      }, 475: (e2, t2) => {
        Object.defineProperty(t2, "__esModule", { value: true });
        t2.TraceFlags = void 0;
        var r2;
        (function(e3) {
          e3[e3["NONE"] = 0] = "NONE";
          e3[e3["SAMPLED"] = 1] = "SAMPLED";
        })(r2 = t2.TraceFlags || (t2.TraceFlags = {}));
      }, 521: (e2, t2) => {
        Object.defineProperty(t2, "__esModule", { value: true });
        t2.VERSION = void 0;
        t2.VERSION = "1.6.0";
      } };
      var t = {};
      function __nccwpck_require__2(r2) {
        var n = t[r2];
        if (n !== void 0) {
          return n.exports;
        }
        var a = t[r2] = { exports: {} };
        var o = true;
        try {
          e[r2].call(a.exports, a, a.exports, __nccwpck_require__2);
          o = false;
        } finally {
          if (o)
            delete t[r2];
        }
        return a.exports;
      }
      if (typeof __nccwpck_require__2 !== "undefined")
        __nccwpck_require__2.ab = __dirname + "/";
      var r = {};
      (() => {
        var e2 = r;
        Object.defineProperty(e2, "__esModule", { value: true });
        e2.trace = e2.propagation = e2.metrics = e2.diag = e2.context = e2.INVALID_SPAN_CONTEXT = e2.INVALID_TRACEID = e2.INVALID_SPANID = e2.isValidSpanId = e2.isValidTraceId = e2.isSpanContextValid = e2.createTraceState = e2.TraceFlags = e2.SpanStatusCode = e2.SpanKind = e2.SamplingDecision = e2.ProxyTracerProvider = e2.ProxyTracer = e2.defaultTextMapSetter = e2.defaultTextMapGetter = e2.ValueType = e2.createNoopMeter = e2.DiagLogLevel = e2.DiagConsoleLogger = e2.ROOT_CONTEXT = e2.createContextKey = e2.baggageEntryMetadataFromString = void 0;
        var t2 = __nccwpck_require__2(369);
        Object.defineProperty(e2, "baggageEntryMetadataFromString", { enumerable: true, get: function() {
          return t2.baggageEntryMetadataFromString;
        } });
        var n = __nccwpck_require__2(780);
        Object.defineProperty(e2, "createContextKey", { enumerable: true, get: function() {
          return n.createContextKey;
        } });
        Object.defineProperty(e2, "ROOT_CONTEXT", { enumerable: true, get: function() {
          return n.ROOT_CONTEXT;
        } });
        var a = __nccwpck_require__2(972);
        Object.defineProperty(e2, "DiagConsoleLogger", { enumerable: true, get: function() {
          return a.DiagConsoleLogger;
        } });
        var o = __nccwpck_require__2(957);
        Object.defineProperty(e2, "DiagLogLevel", { enumerable: true, get: function() {
          return o.DiagLogLevel;
        } });
        var i = __nccwpck_require__2(102);
        Object.defineProperty(e2, "createNoopMeter", { enumerable: true, get: function() {
          return i.createNoopMeter;
        } });
        var c = __nccwpck_require__2(901);
        Object.defineProperty(e2, "ValueType", { enumerable: true, get: function() {
          return c.ValueType;
        } });
        var s = __nccwpck_require__2(194);
        Object.defineProperty(e2, "defaultTextMapGetter", { enumerable: true, get: function() {
          return s.defaultTextMapGetter;
        } });
        Object.defineProperty(e2, "defaultTextMapSetter", { enumerable: true, get: function() {
          return s.defaultTextMapSetter;
        } });
        var u = __nccwpck_require__2(125);
        Object.defineProperty(e2, "ProxyTracer", { enumerable: true, get: function() {
          return u.ProxyTracer;
        } });
        var l = __nccwpck_require__2(846);
        Object.defineProperty(e2, "ProxyTracerProvider", { enumerable: true, get: function() {
          return l.ProxyTracerProvider;
        } });
        var g = __nccwpck_require__2(996);
        Object.defineProperty(e2, "SamplingDecision", { enumerable: true, get: function() {
          return g.SamplingDecision;
        } });
        var p = __nccwpck_require__2(357);
        Object.defineProperty(e2, "SpanKind", { enumerable: true, get: function() {
          return p.SpanKind;
        } });
        var d = __nccwpck_require__2(847);
        Object.defineProperty(e2, "SpanStatusCode", { enumerable: true, get: function() {
          return d.SpanStatusCode;
        } });
        var _ = __nccwpck_require__2(475);
        Object.defineProperty(e2, "TraceFlags", { enumerable: true, get: function() {
          return _.TraceFlags;
        } });
        var f = __nccwpck_require__2(98);
        Object.defineProperty(e2, "createTraceState", { enumerable: true, get: function() {
          return f.createTraceState;
        } });
        var b = __nccwpck_require__2(139);
        Object.defineProperty(e2, "isSpanContextValid", { enumerable: true, get: function() {
          return b.isSpanContextValid;
        } });
        Object.defineProperty(e2, "isValidTraceId", { enumerable: true, get: function() {
          return b.isValidTraceId;
        } });
        Object.defineProperty(e2, "isValidSpanId", { enumerable: true, get: function() {
          return b.isValidSpanId;
        } });
        var v = __nccwpck_require__2(476);
        Object.defineProperty(e2, "INVALID_SPANID", { enumerable: true, get: function() {
          return v.INVALID_SPANID;
        } });
        Object.defineProperty(e2, "INVALID_TRACEID", { enumerable: true, get: function() {
          return v.INVALID_TRACEID;
        } });
        Object.defineProperty(e2, "INVALID_SPAN_CONTEXT", { enumerable: true, get: function() {
          return v.INVALID_SPAN_CONTEXT;
        } });
        const O = __nccwpck_require__2(67);
        Object.defineProperty(e2, "context", { enumerable: true, get: function() {
          return O.context;
        } });
        const P = __nccwpck_require__2(506);
        Object.defineProperty(e2, "diag", { enumerable: true, get: function() {
          return P.diag;
        } });
        const N = __nccwpck_require__2(886);
        Object.defineProperty(e2, "metrics", { enumerable: true, get: function() {
          return N.metrics;
        } });
        const S = __nccwpck_require__2(939);
        Object.defineProperty(e2, "propagation", { enumerable: true, get: function() {
          return S.propagation;
        } });
        const C = __nccwpck_require__2(845);
        Object.defineProperty(e2, "trace", { enumerable: true, get: function() {
          return C.trace;
        } });
        e2["default"] = { context: O.context, diag: P.diag, metrics: N.metrics, propagation: S.propagation, trace: C.trace };
      })();
      module2.exports = r;
    })();
  }
});

// ../../../node_modules/next/dist/server/lib/trace/tracer.js
var require_tracer = __commonJS({
  "../../../node_modules/next/dist/server/lib/trace/tracer.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name2 in all)
        Object.defineProperty(target, name2, {
          enumerable: true,
          get: all[name2]
        });
    }
    _export(exports2, {
      getTracer: function() {
        return getTracer;
      },
      SpanStatusCode: function() {
        return SpanStatusCode;
      },
      SpanKind: function() {
        return SpanKind;
      }
    });
    var _constants = require_constants3();
    var api;
    if (process.env.NEXT_RUNTIME === "edge") {
      api = require_api_next();
    } else {
      try {
        api = require_api_next();
      } catch (err) {
        api = require_api();
      }
    }
    var { context, propagation, trace, SpanStatusCode, SpanKind, ROOT_CONTEXT } = api;
    var isPromise = (p) => {
      return p !== null && typeof p === "object" && typeof p.then === "function";
    };
    var closeSpanWithError = (span, error) => {
      if ((error == null ? void 0 : error.bubble) === true) {
        span.setAttribute("next.bubble", true);
      } else {
        if (error) {
          span.recordException(error);
        }
        span.setStatus({
          code: SpanStatusCode.ERROR,
          message: error == null ? void 0 : error.message
        });
      }
      span.end();
    };
    var rootSpanAttributesStore = /* @__PURE__ */ new Map();
    var rootSpanIdKey = api.createContextKey("next.rootSpanId");
    var lastSpanId = 0;
    var getSpanId = () => lastSpanId++;
    var NextTracerImpl = class {
      /**
      * Returns an instance to the trace with configured name.
      * Since wrap / trace can be defined in any place prior to actual trace subscriber initialization,
      * This should be lazily evaluated.
      */
      getTracerInstance() {
        return trace.getTracer("next.js", "0.0.1");
      }
      getContext() {
        return context;
      }
      getActiveScopeSpan() {
        return trace.getSpan(context == null ? void 0 : context.active());
      }
      withPropagatedContext(carrier, fn, getter) {
        const activeContext = context.active();
        if (trace.getSpanContext(activeContext)) {
          return fn();
        }
        const remoteContext = propagation.extract(activeContext, carrier, getter);
        return context.with(remoteContext, fn);
      }
      trace(...args) {
        var _trace_getSpanContext;
        const [type, fnOrOptions, fnOrEmpty] = args;
        const { fn, options } = typeof fnOrOptions === "function" ? {
          fn: fnOrOptions,
          options: {}
        } : {
          fn: fnOrEmpty,
          options: {
            ...fnOrOptions
          }
        };
        if (!_constants.NextVanillaSpanAllowlist.includes(type) && process.env.NEXT_OTEL_VERBOSE !== "1" || options.hideSpan) {
          return fn();
        }
        const spanName = options.spanName ?? type;
        let spanContext = this.getSpanContext((options == null ? void 0 : options.parentSpan) ?? this.getActiveScopeSpan());
        let isRootSpan = false;
        if (!spanContext) {
          spanContext = ROOT_CONTEXT;
          isRootSpan = true;
        } else if ((_trace_getSpanContext = trace.getSpanContext(spanContext)) == null ? void 0 : _trace_getSpanContext.isRemote) {
          isRootSpan = true;
        }
        const spanId = getSpanId();
        options.attributes = {
          "next.span_name": spanName,
          "next.span_type": type,
          ...options.attributes
        };
        return context.with(spanContext.setValue(rootSpanIdKey, spanId), () => this.getTracerInstance().startActiveSpan(spanName, options, (span) => {
          const onCleanup = () => {
            rootSpanAttributesStore.delete(spanId);
          };
          if (isRootSpan) {
            rootSpanAttributesStore.set(spanId, new Map(Object.entries(options.attributes ?? {})));
          }
          try {
            if (fn.length > 1) {
              return fn(span, (err) => closeSpanWithError(span, err));
            }
            const result = fn(span);
            if (isPromise(result)) {
              return result.then((res) => {
                span.end();
                return res;
              }).catch((err) => {
                closeSpanWithError(span, err);
                throw err;
              }).finally(onCleanup);
            } else {
              span.end();
              onCleanup();
            }
            return result;
          } catch (err) {
            closeSpanWithError(span, err);
            onCleanup();
            throw err;
          }
        }));
      }
      wrap(...args) {
        const tracer = this;
        const [name2, options, fn] = args.length === 3 ? args : [
          args[0],
          {},
          args[1]
        ];
        if (!_constants.NextVanillaSpanAllowlist.includes(name2) && process.env.NEXT_OTEL_VERBOSE !== "1") {
          return fn;
        }
        return function() {
          let optionsObj = options;
          if (typeof optionsObj === "function" && typeof fn === "function") {
            optionsObj = optionsObj.apply(this, arguments);
          }
          const lastArgId = arguments.length - 1;
          const cb = arguments[lastArgId];
          if (typeof cb === "function") {
            const scopeBoundCb = tracer.getContext().bind(context.active(), cb);
            return tracer.trace(name2, optionsObj, (_span, done) => {
              arguments[lastArgId] = function(err) {
                done == null ? void 0 : done(err);
                return scopeBoundCb.apply(this, arguments);
              };
              return fn.apply(this, arguments);
            });
          } else {
            return tracer.trace(name2, optionsObj, () => fn.apply(this, arguments));
          }
        };
      }
      startSpan(...args) {
        const [type, options] = args;
        const spanContext = this.getSpanContext((options == null ? void 0 : options.parentSpan) ?? this.getActiveScopeSpan());
        return this.getTracerInstance().startSpan(type, options, spanContext);
      }
      getSpanContext(parentSpan) {
        const spanContext = parentSpan ? trace.setSpan(context.active(), parentSpan) : void 0;
        return spanContext;
      }
      getRootSpanAttributes() {
        const spanId = context.active().getValue(rootSpanIdKey);
        return rootSpanAttributesStore.get(spanId);
      }
    };
    var getTracer = (() => {
      const tracer = new NextTracerImpl();
      return () => tracer;
    })();
  }
});

// ../../../node_modules/next/dist/lib/wait.js
var require_wait = __commonJS({
  "../../../node_modules/next/dist/lib/wait.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    Object.defineProperty(exports2, "wait", {
      enumerable: true,
      get: function() {
        return wait;
      }
    });
    async function wait(ms) {
      return new Promise((resolve) => setTimeout(resolve, ms));
    }
  }
});

// ../../../node_modules/next/dist/server/app-render/action-encryption-utils.js
var require_action_encryption_utils = __commonJS({
  "../../../node_modules/next/dist/server/app-render/action-encryption-utils.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name2 in all)
        Object.defineProperty(target, name2, {
          enumerable: true,
          get: all[name2]
        });
    }
    _export(exports2, {
      arrayBufferToString: function() {
        return arrayBufferToString;
      },
      stringToUint8Array: function() {
        return stringToUint8Array;
      },
      encrypt: function() {
        return encrypt;
      },
      decrypt: function() {
        return decrypt;
      },
      generateRandomActionKeyRaw: function() {
        return generateRandomActionKeyRaw;
      },
      setReferenceManifestsSingleton: function() {
        return setReferenceManifestsSingleton;
      },
      getServerModuleMap: function() {
        return getServerModuleMap;
      },
      getClientReferenceManifestSingleton: function() {
        return getClientReferenceManifestSingleton;
      },
      getActionEncryptionKey: function() {
        return getActionEncryptionKey;
      }
    });
    var __next_loaded_action_key;
    var __next_internal_development_raw_action_key;
    function arrayBufferToString(buffer) {
      const bytes = new Uint8Array(buffer);
      const len = bytes.byteLength;
      if (len < 65535) {
        return String.fromCharCode.apply(null, bytes);
      }
      let binary = "";
      for (let i = 0; i < len; i++) {
        binary += String.fromCharCode(bytes[i]);
      }
      return binary;
    }
    function stringToUint8Array(binary) {
      const len = binary.length;
      const arr = new Uint8Array(len);
      for (let i = 0; i < len; i++) {
        arr[i] = binary.charCodeAt(i);
      }
      return arr;
    }
    function encrypt(key, iv, data2) {
      return crypto.subtle.encrypt({
        name: "AES-GCM",
        iv
      }, key, data2);
    }
    function decrypt(key, iv, data2) {
      return crypto.subtle.decrypt({
        name: "AES-GCM",
        iv
      }, key, data2);
    }
    async function generateRandomActionKeyRaw(dev) {
      if (dev) {
        if (typeof __next_internal_development_raw_action_key !== "undefined") {
          return __next_internal_development_raw_action_key;
        }
      }
      const key = await crypto.subtle.generateKey({
        name: "AES-GCM",
        length: 256
      }, true, [
        "encrypt",
        "decrypt"
      ]);
      const exported = await crypto.subtle.exportKey("raw", key);
      const b64 = btoa(arrayBufferToString(exported));
      __next_loaded_action_key = key;
      if (dev) {
        __next_internal_development_raw_action_key = b64;
      }
      return b64;
    }
    var SERVER_ACTION_MANIFESTS_SINGLETON = Symbol.for("next.server.action-manifests");
    function setReferenceManifestsSingleton({ clientReferenceManifest, serverActionsManifest, serverModuleMap }) {
      globalThis[SERVER_ACTION_MANIFESTS_SINGLETON] = {
        clientReferenceManifest,
        serverActionsManifest,
        serverModuleMap
      };
    }
    function getServerModuleMap() {
      const serverActionsManifestSingleton = globalThis[SERVER_ACTION_MANIFESTS_SINGLETON];
      if (!serverActionsManifestSingleton) {
        throw new Error("Missing manifest for Server Actions. This is a bug in Next.js");
      }
      return serverActionsManifestSingleton.serverModuleMap;
    }
    function getClientReferenceManifestSingleton() {
      const serverActionsManifestSingleton = globalThis[SERVER_ACTION_MANIFESTS_SINGLETON];
      if (!serverActionsManifestSingleton) {
        throw new Error("Missing manifest for Server Actions. This is a bug in Next.js");
      }
      return serverActionsManifestSingleton.clientReferenceManifest;
    }
    async function getActionEncryptionKey() {
      if (__next_loaded_action_key) {
        return __next_loaded_action_key;
      }
      const serverActionsManifestSingleton = globalThis[SERVER_ACTION_MANIFESTS_SINGLETON];
      if (!serverActionsManifestSingleton) {
        throw new Error("Missing manifest for Server Actions. This is a bug in Next.js");
      }
      const rawKey = process.env.NEXT_SERVER_ACTIONS_ENCRYPTION_KEY || serverActionsManifestSingleton.serverActionsManifest.encryptionKey;
      if (rawKey === void 0) {
        throw new Error("Missing encryption key for Server Actions");
      }
      __next_loaded_action_key = await crypto.subtle.importKey("raw", stringToUint8Array(atob(rawKey)), "AES-GCM", true, [
        "encrypt",
        "decrypt"
      ]);
      return __next_loaded_action_key;
    }
  }
});

// ../../../node_modules/next/dist/server/app-render/action-utils.js
var require_action_utils = __commonJS({
  "../../../node_modules/next/dist/server/app-render/action-utils.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    Object.defineProperty(exports2, "createServerModuleMap", {
      enumerable: true,
      get: function() {
        return createServerModuleMap;
      }
    });
    function createServerModuleMap({ serverActionsManifest, pageName }) {
      return new Proxy({}, {
        get: (_, id) => {
          return {
            id: serverActionsManifest[process.env.NEXT_RUNTIME === "edge" ? "edge" : "node"][id].workers["app" + pageName],
            name: id,
            chunks: []
          };
        }
      });
    }
  }
});

// ../../../node_modules/next/dist/server/load-components.js
var require_load_components = __commonJS({
  "../../../node_modules/next/dist/server/load-components.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name2 in all)
        Object.defineProperty(target, name2, {
          enumerable: true,
          get: all[name2]
        });
    }
    _export(exports2, {
      loadManifestWithRetries: function() {
        return loadManifestWithRetries;
      },
      evalManifestWithRetries: function() {
        return evalManifestWithRetries;
      },
      loadComponents: function() {
        return loadComponents;
      }
    });
    var _constants = require_constants2();
    var _path = require_path();
    var _require = require_require();
    var _interopdefault = require_interop_default();
    var _tracer = require_tracer();
    var _constants1 = require_constants3();
    var _loadmanifest = require_load_manifest();
    var _wait = require_wait();
    var _actionencryptionutils = require_action_encryption_utils();
    var _actionutils = require_action_utils();
    async function loadManifestWithRetries(manifestPath, attempts = 3) {
      while (true) {
        try {
          return (0, _loadmanifest.loadManifest)(manifestPath);
        } catch (err) {
          attempts--;
          if (attempts <= 0)
            throw err;
          await (0, _wait.wait)(100);
        }
      }
    }
    async function evalManifestWithRetries(manifestPath, attempts = 3) {
      while (true) {
        try {
          return (0, _loadmanifest.evalManifest)(manifestPath);
        } catch (err) {
          attempts--;
          if (attempts <= 0)
            throw err;
          await (0, _wait.wait)(100);
        }
      }
    }
    async function loadClientReferenceManifest(manifestPath, entryName) {
      try {
        const context = await evalManifestWithRetries(manifestPath);
        return context.__RSC_MANIFEST[entryName];
      } catch (err) {
        return void 0;
      }
    }
    async function loadComponentsImpl({ distDir, page, isAppPath }) {
      let DocumentMod = {};
      let AppMod = {};
      if (!isAppPath) {
        [DocumentMod, AppMod] = await Promise.all([
          Promise.resolve().then(() => (0, _require.requirePage)("/_document", distDir, false)),
          Promise.resolve().then(() => (0, _require.requirePage)("/_app", distDir, false))
        ]);
      }
      const hasClientManifest = isAppPath && (page.endsWith("/page") || page === "/not-found" || page === "/_not-found");
      const [buildManifest, reactLoadableManifest, clientReferenceManifest, serverActionsManifest] = await Promise.all([
        loadManifestWithRetries((0, _path.join)(distDir, _constants.BUILD_MANIFEST)),
        loadManifestWithRetries((0, _path.join)(distDir, _constants.REACT_LOADABLE_MANIFEST)),
        hasClientManifest ? loadClientReferenceManifest((0, _path.join)(distDir, "server", "app", page.replace(/%5F/g, "_") + "_" + _constants.CLIENT_REFERENCE_MANIFEST + ".js"), page.replace(/%5F/g, "_")) : void 0,
        isAppPath ? loadManifestWithRetries((0, _path.join)(distDir, "server", _constants.SERVER_REFERENCE_MANIFEST + ".json")).catch(() => null) : null
      ]);
      if (serverActionsManifest && clientReferenceManifest) {
        (0, _actionencryptionutils.setReferenceManifestsSingleton)({
          clientReferenceManifest,
          serverActionsManifest,
          serverModuleMap: (0, _actionutils.createServerModuleMap)({
            serverActionsManifest,
            pageName: page
          })
        });
      }
      const ComponentMod = await Promise.resolve().then(() => (0, _require.requirePage)(page, distDir, isAppPath));
      const Component = (0, _interopdefault.interopDefault)(ComponentMod);
      const Document = (0, _interopdefault.interopDefault)(DocumentMod);
      const App = (0, _interopdefault.interopDefault)(AppMod);
      const { getServerSideProps, getStaticProps, getStaticPaths, routeModule } = ComponentMod;
      return {
        App,
        Document,
        Component,
        buildManifest,
        reactLoadableManifest,
        pageConfig: ComponentMod.config || {},
        ComponentMod,
        getServerSideProps,
        getStaticProps,
        getStaticPaths,
        clientReferenceManifest,
        serverActionsManifest,
        isAppPath,
        page,
        routeModule
      };
    }
    var loadComponents = (0, _tracer.getTracer)().wrap(_constants1.LoadComponentsSpan.loadComponents, loadComponentsImpl);
  }
});

// ../../../node_modules/next/dist/trace/shared.js
var require_shared = __commonJS({
  "../../../node_modules/next/dist/trace/shared.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name2 in all)
        Object.defineProperty(target, name2, {
          enumerable: true,
          get: all[name2]
        });
    }
    _export(exports2, {
      traceGlobals: function() {
        return traceGlobals;
      },
      setGlobal: function() {
        return setGlobal;
      }
    });
    var _traceGlobals = global._traceGlobals;
    if (!_traceGlobals) {
      _traceGlobals = /* @__PURE__ */ new Map();
    }
    global._traceGlobals = _traceGlobals;
    var traceGlobals = _traceGlobals;
    var setGlobal = (key, val) => {
      traceGlobals.set(key, val);
    };
  }
});

// ../../../node_modules/next/dist/trace/report/to-telemetry.js
var require_to_telemetry = __commonJS({
  "../../../node_modules/next/dist/trace/report/to-telemetry.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    Object.defineProperty(exports2, "default", {
      enumerable: true,
      get: function() {
        return _default;
      }
    });
    var _shared = require_shared();
    var TRACE_EVENT_ACCESSLIST = new Map(Object.entries({
      "webpack-invalidated": "WEBPACK_INVALIDATED"
    }));
    var reportToTelemetry = ({ name: name2, duration }) => {
      const eventName = TRACE_EVENT_ACCESSLIST.get(name2);
      if (!eventName) {
        return;
      }
      const telemetry = _shared.traceGlobals.get("telemetry");
      if (!telemetry) {
        return;
      }
      telemetry.record({
        eventName,
        payload: {
          durationInMicroseconds: duration
        }
      });
    };
    var _default = {
      flushAll: () => {
      },
      report: reportToTelemetry
    };
  }
});

// ../../../node_modules/next/dist/trace/report/to-json.js
var require_to_json = __commonJS({
  "../../../node_modules/next/dist/trace/report/to-json.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name2 in all)
        Object.defineProperty(target, name2, {
          enumerable: true,
          get: all[name2]
        });
    }
    _export(exports2, {
      batcher: function() {
        return batcher;
      },
      default: function() {
        return _default;
      }
    });
    var _crypto = require_crypto();
    var _shared = require_shared();
    var _fs = _interop_require_default(require_fs());
    var _path = _interop_require_default(require_path());
    var _constants = require_constants2();
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function batcher(reportEvents) {
      const events = [];
      const queue = /* @__PURE__ */ new Set();
      return {
        flushAll: async () => {
          await Promise.all(queue);
          if (events.length > 0) {
            await reportEvents(events);
            events.length = 0;
          }
        },
        report: (event) => {
          events.push(event);
          if (events.length > 100) {
            const evts = events.slice();
            events.length = 0;
            const report = reportEvents(evts);
            queue.add(report);
            report.then(() => queue.delete(report));
          }
        }
      };
    }
    var writeStream;
    var traceId;
    var batch;
    var writeStreamOptions = {
      flags: "a",
      encoding: "utf8"
    };
    var RotatingWriteStream = class {
      constructor(file, sizeLimit) {
        this.file = file;
        this.size = 0;
        this.sizeLimit = sizeLimit;
        this.createWriteStream();
      }
      createWriteStream() {
        this.writeStream = _fs.default.createWriteStream(this.file, writeStreamOptions);
      }
      // Recreate the file
      async rotate() {
        await this.end();
        try {
          _fs.default.unlinkSync(this.file);
        } catch (err) {
          if (err.code !== "ENOENT") {
            throw err;
          }
        }
        this.size = 0;
        this.createWriteStream();
        this.rotatePromise = void 0;
      }
      async write(data2) {
        if (this.rotatePromise)
          await this.rotatePromise;
        this.size += data2.length;
        if (this.size > this.sizeLimit) {
          await (this.rotatePromise = this.rotate());
        }
        if (!this.writeStream.write(data2, "utf8")) {
          if (this.drainPromise === void 0) {
            this.drainPromise = new Promise((resolve, _reject) => {
              this.writeStream.once("drain", () => {
                this.drainPromise = void 0;
                resolve();
              });
            });
          }
          await this.drainPromise;
        }
      }
      end() {
        return new Promise((resolve) => {
          this.writeStream.end(resolve);
        });
      }
    };
    var reportToLocalHost = (event) => {
      const distDir = _shared.traceGlobals.get("distDir");
      const phase = _shared.traceGlobals.get("phase");
      if (!distDir || !phase) {
        return;
      }
      if (!traceId) {
        traceId = process.env.TRACE_ID || (0, _crypto.randomBytes)(8).toString("hex");
      }
      if (!batch) {
        batch = batcher(async (events) => {
          if (!writeStream) {
            await _fs.default.promises.mkdir(distDir, {
              recursive: true
            });
            const file = _path.default.join(distDir, "trace");
            writeStream = new RotatingWriteStream(
              file,
              // Development is limited to 50MB, production is unlimited
              phase === _constants.PHASE_DEVELOPMENT_SERVER ? 52428800 : Infinity
            );
          }
          const eventsJson = JSON.stringify(events);
          try {
            await writeStream.write(eventsJson + "\n");
          } catch (err) {
            console.log(err);
          }
        });
      }
      batch.report({
        ...event,
        traceId
      });
    };
    var _default = {
      flushAll: () => batch ? batch.flushAll().then(() => {
        const phase = _shared.traceGlobals.get("phase");
        if (phase !== _constants.PHASE_DEVELOPMENT_SERVER) {
          return writeStream.end();
        }
      }) : void 0,
      report: reportToLocalHost
    };
  }
});

// ../../../node_modules/next/dist/trace/report/index.js
var require_report = __commonJS({
  "../../../node_modules/next/dist/trace/report/index.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    Object.defineProperty(exports2, "reporter", {
      enumerable: true,
      get: function() {
        return reporter;
      }
    });
    var _totelemetry = _interop_require_default(require_to_telemetry());
    var _tojson = _interop_require_default(require_to_json());
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    var MultiReporter = class {
      constructor(reporters) {
        this.reporters = [];
        this.reporters = reporters;
      }
      async flushAll() {
        await Promise.all(this.reporters.map((reporter2) => reporter2.flushAll()));
      }
      report(event) {
        this.reporters.forEach((reporter2) => reporter2.report(event));
      }
    };
    var reporter = new MultiReporter([
      _tojson.default,
      _totelemetry.default
    ]);
  }
});

// ../../../node_modules/next/dist/trace/trace.js
var require_trace = __commonJS({
  "../../../node_modules/next/dist/trace/trace.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name2 in all)
        Object.defineProperty(target, name2, {
          enumerable: true,
          get: all[name2]
        });
    }
    _export(exports2, {
      SpanStatus: function() {
        return SpanStatus;
      },
      Span: function() {
        return Span;
      },
      trace: function() {
        return trace;
      },
      flushAllTraces: function() {
        return flushAllTraces;
      },
      exportTraceState: function() {
        return exportTraceState;
      },
      initializeTraceState: function() {
        return initializeTraceState;
      },
      getTraceEvents: function() {
        return getTraceEvents;
      },
      recordTraceEvents: function() {
        return recordTraceEvents;
      },
      clearTraceEvents: function() {
        return clearTraceEvents;
      }
    });
    var _report = require_report();
    var NUM_OF_MICROSEC_IN_NANOSEC = BigInt("1000");
    var count = 0;
    var getId = () => {
      count++;
      return count;
    };
    var defaultParentSpanId;
    var shouldSaveTraceEvents;
    var savedTraceEvents = [];
    var SpanStatus;
    (function(SpanStatus2) {
      SpanStatus2["Started"] = "started";
      SpanStatus2["Stopped"] = "stopped";
    })(SpanStatus || (SpanStatus = {}));
    var Span = class _Span {
      constructor({ name: name2, parentId, attrs, startTime }) {
        this.name = name2;
        this.parentId = parentId ?? defaultParentSpanId;
        this.attrs = attrs ? {
          ...attrs
        } : {};
        if (this.parentId === void 0) {
          this.attrs.isTurbopack = Boolean(process.env.TURBOPACK);
        }
        this.status = "started";
        this.id = getId();
        this._start = startTime || process.hrtime.bigint();
        this.now = Date.now();
      }
      // Durations are reported as microseconds. This gives 1000x the precision
      // of something like Date.now(), which reports in milliseconds.
      // Additionally, ~285 years can be safely represented as microseconds as
      // a float64 in both JSON and JavaScript.
      stop(stopTime) {
        if (this.status === "stopped") {
          return;
        }
        const end = stopTime || process.hrtime.bigint();
        const duration = (end - this._start) / NUM_OF_MICROSEC_IN_NANOSEC;
        this.status = "stopped";
        if (duration > Number.MAX_SAFE_INTEGER) {
          throw new Error(`Duration is too long to express as float64: ${duration}`);
        }
        const timestamp = this._start / NUM_OF_MICROSEC_IN_NANOSEC;
        const traceEvent = {
          name: this.name,
          duration: Number(duration),
          timestamp: Number(timestamp),
          id: this.id,
          parentId: this.parentId,
          tags: this.attrs,
          startTime: this.now
        };
        _report.reporter.report(traceEvent);
        if (shouldSaveTraceEvents) {
          savedTraceEvents.push(traceEvent);
        }
      }
      traceChild(name2, attrs) {
        return new _Span({
          name: name2,
          parentId: this.id,
          attrs
        });
      }
      manualTraceChild(name2, startTime, stopTime, attrs) {
        const span = new _Span({
          name: name2,
          parentId: this.id,
          attrs,
          startTime
        });
        span.stop(stopTime);
      }
      getId() {
        return this.id;
      }
      setAttribute(key, value) {
        this.attrs[key] = value;
      }
      traceFn(fn) {
        try {
          return fn(this);
        } finally {
          this.stop();
        }
      }
      async traceAsyncFn(fn) {
        try {
          return await fn(this);
        } finally {
          this.stop();
        }
      }
    };
    var trace = (name2, parentId, attrs) => {
      return new Span({
        name: name2,
        parentId,
        attrs
      });
    };
    var flushAllTraces = () => _report.reporter.flushAll();
    var exportTraceState = () => ({
      defaultParentSpanId,
      lastId: count,
      shouldSaveTraceEvents
    });
    var initializeTraceState = (state) => {
      count = state.lastId;
      defaultParentSpanId = state.defaultParentSpanId;
      shouldSaveTraceEvents = state.shouldSaveTraceEvents;
    };
    function getTraceEvents() {
      return savedTraceEvents;
    }
    function recordTraceEvents(events) {
      for (const traceEvent of events) {
        _report.reporter.report(traceEvent);
        if (traceEvent.id > count) {
          count = traceEvent.id + 1;
        }
      }
      if (shouldSaveTraceEvents) {
        savedTraceEvents.push(...events);
      }
    }
    var clearTraceEvents = () => savedTraceEvents = [];
  }
});

// ../../../node_modules/next/dist/trace/index.js
var require_trace2 = __commonJS({
  "../../../node_modules/next/dist/trace/index.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name2 in all)
        Object.defineProperty(target, name2, {
          enumerable: true,
          get: all[name2]
        });
    }
    _export(exports2, {
      trace: function() {
        return _trace.trace;
      },
      exportTraceState: function() {
        return _trace.exportTraceState;
      },
      flushAllTraces: function() {
        return _trace.flushAllTraces;
      },
      getTraceEvents: function() {
        return _trace.getTraceEvents;
      },
      initializeTraceState: function() {
        return _trace.initializeTraceState;
      },
      recordTraceEvents: function() {
        return _trace.recordTraceEvents;
      },
      Span: function() {
        return _trace.Span;
      },
      setGlobal: function() {
        return _shared.setGlobal;
      },
      SpanStatus: function() {
        return _trace.SpanStatus;
      }
    });
    var _trace = require_trace();
    var _shared = require_shared();
  }
});

// ../../../node_modules/next/dist/server/setup-http-agent-env.js
var require_setup_http_agent_env = __commonJS({
  "../../../node_modules/next/dist/server/setup-http-agent-env.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    Object.defineProperty(exports2, "setHttpClientAndAgentOptions", {
      enumerable: true,
      get: function() {
        return setHttpClientAndAgentOptions;
      }
    });
    var _http = require_http();
    var _https = require_https();
    function setHttpClientAndAgentOptions(config) {
      if (globalThis.__NEXT_HTTP_AGENT) {
        return;
      }
      if (!config) {
        throw new Error("Expected config.httpAgentOptions to be an object");
      }
      globalThis.__NEXT_HTTP_AGENT_OPTIONS = config.httpAgentOptions;
      globalThis.__NEXT_HTTP_AGENT = new _http.Agent(config.httpAgentOptions);
      globalThis.__NEXT_HTTPS_AGENT = new _https.Agent(config.httpAgentOptions);
    }
  }
});

// ../../../node_modules/next/dist/compiled/async-sema/index.js
var require_async_sema = __commonJS({
  "../../../node_modules/next/dist/compiled/async-sema/index.js"(exports2, module2) {
    (() => {
      "use strict";
      var t = { 490: function(t2, e2, i2) {
        var s = this && this.__importDefault || function(t3) {
          return t3 && t3.__esModule ? t3 : { default: t3 };
        };
        Object.defineProperty(e2, "__esModule", { value: true });
        const r = s(i2(361));
        function arrayMove(t3, e3, i3, s2, r2) {
          for (let n = 0; n < r2; ++n) {
            i3[n + s2] = t3[n + e3];
            t3[n + e3] = void 0;
          }
        }
        function pow2AtLeast(t3) {
          t3 = t3 >>> 0;
          t3 = t3 - 1;
          t3 = t3 | t3 >> 1;
          t3 = t3 | t3 >> 2;
          t3 = t3 | t3 >> 4;
          t3 = t3 | t3 >> 8;
          t3 = t3 | t3 >> 16;
          return t3 + 1;
        }
        function getCapacity(t3) {
          return pow2AtLeast(Math.min(Math.max(16, t3), 1073741824));
        }
        class Deque {
          constructor(t3) {
            this._capacity = getCapacity(t3);
            this._length = 0;
            this._front = 0;
            this.arr = [];
          }
          push(t3) {
            const e3 = this._length;
            this.checkCapacity(e3 + 1);
            const i3 = this._front + e3 & this._capacity - 1;
            this.arr[i3] = t3;
            this._length = e3 + 1;
            return e3 + 1;
          }
          pop() {
            const t3 = this._length;
            if (t3 === 0) {
              return void 0;
            }
            const e3 = this._front + t3 - 1 & this._capacity - 1;
            const i3 = this.arr[e3];
            this.arr[e3] = void 0;
            this._length = t3 - 1;
            return i3;
          }
          shift() {
            const t3 = this._length;
            if (t3 === 0) {
              return void 0;
            }
            const e3 = this._front;
            const i3 = this.arr[e3];
            this.arr[e3] = void 0;
            this._front = e3 + 1 & this._capacity - 1;
            this._length = t3 - 1;
            return i3;
          }
          get length() {
            return this._length;
          }
          checkCapacity(t3) {
            if (this._capacity < t3) {
              this.resizeTo(getCapacity(this._capacity * 1.5 + 16));
            }
          }
          resizeTo(t3) {
            const e3 = this._capacity;
            this._capacity = t3;
            const i3 = this._front;
            const s2 = this._length;
            if (i3 + s2 > e3) {
              const t4 = i3 + s2 & e3 - 1;
              arrayMove(this.arr, 0, this.arr, e3, t4);
            }
          }
        }
        class ReleaseEmitter extends r.default {
        }
        function isFn(t3) {
          return typeof t3 === "function";
        }
        function defaultInit() {
          return "1";
        }
        class Sema {
          constructor(t3, { initFn: e3 = defaultInit, pauseFn: i3, resumeFn: s2, capacity: r2 = 10 } = {}) {
            if (isFn(i3) !== isFn(s2)) {
              throw new Error("pauseFn and resumeFn must be both set for pausing");
            }
            this.nrTokens = t3;
            this.free = new Deque(t3);
            this.waiting = new Deque(r2);
            this.releaseEmitter = new ReleaseEmitter();
            this.noTokens = e3 === defaultInit;
            this.pauseFn = i3;
            this.resumeFn = s2;
            this.paused = false;
            this.releaseEmitter.on("release", (t4) => {
              const e4 = this.waiting.shift();
              if (e4) {
                e4.resolve(t4);
              } else {
                if (this.resumeFn && this.paused) {
                  this.paused = false;
                  this.resumeFn();
                }
                this.free.push(t4);
              }
            });
            for (let i4 = 0; i4 < t3; i4++) {
              this.free.push(e3());
            }
          }
          async acquire() {
            let t3 = this.free.pop();
            if (t3 !== void 0) {
              return t3;
            }
            return new Promise((t4, e3) => {
              if (this.pauseFn && !this.paused) {
                this.paused = true;
                this.pauseFn();
              }
              this.waiting.push({ resolve: t4, reject: e3 });
            });
          }
          release(t3) {
            this.releaseEmitter.emit("release", this.noTokens ? "1" : t3);
          }
          drain() {
            const t3 = new Array(this.nrTokens);
            for (let e3 = 0; e3 < this.nrTokens; e3++) {
              t3[e3] = this.acquire();
            }
            return Promise.all(t3);
          }
          nrWaiting() {
            return this.waiting.length;
          }
        }
        e2.Sema = Sema;
        function RateLimit(t3, { timeUnit: e3 = 1e3, uniformDistribution: i3 = false } = {}) {
          const s2 = new Sema(i3 ? 1 : t3);
          const r2 = i3 ? e3 / t3 : e3;
          return async function rl() {
            await s2.acquire();
            setTimeout(() => s2.release(), r2);
          };
        }
        e2.RateLimit = RateLimit;
      }, 361: (t2) => {
        t2.exports = require_events();
      } };
      var e = {};
      function __nccwpck_require__2(i2) {
        var s = e[i2];
        if (s !== void 0) {
          return s.exports;
        }
        var r = e[i2] = { exports: {} };
        var n = true;
        try {
          t[i2].call(r.exports, r, r.exports, __nccwpck_require__2);
          n = false;
        } finally {
          if (n)
            delete e[i2];
        }
        return r.exports;
      }
      if (typeof __nccwpck_require__2 !== "undefined")
        __nccwpck_require__2.ab = __dirname + "/";
      var i = __nccwpck_require__2(490);
      module2.exports = i;
    })();
  }
});

// browser-external:stream/web
var require_web = __commonJS({
  "browser-external:stream/web"(exports2, module2) {
    module2.exports = Object.create(new Proxy({}, {
      get(_, key) {
        if (key !== "__esModule" && key !== "__proto__" && key !== "constructor" && key !== "splice") {
          console.warn(`Module "stream/web" has been externalized for browser compatibility. Cannot access "stream/web.${key}" in client code. See https://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`);
        }
      }
    }));
  }
});

// ../../../node_modules/next/dist/compiled/edge-runtime/index.js
var require_edge_runtime = __commonJS({
  "../../../node_modules/next/dist/compiled/edge-runtime/index.js"(exports, module) {
    (() => {
      var __webpack_modules__ = { 45: (e) => {
        e.exports = '"use strict";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value) => __defProp(target, "name", { value, configurable: true });\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === "object" || typeof from === "function") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);\n\n// src/primitives/abort-controller.js\nvar abort_controller_exports = {};\n__export(abort_controller_exports, {\n  AbortController: () => AbortController,\n  AbortSignal: () => AbortSignal,\n  DOMException: () => DOMException\n});\nmodule.exports = __toCommonJS(abort_controller_exports);\nvar kSignal = Symbol("kSignal");\nvar kAborted = Symbol("kAborted");\nvar kReason = Symbol("kReason");\nvar kName = Symbol("kName");\nvar kOnabort = Symbol("kOnabort");\nvar _DOMException = class _DOMException extends Error {\n  constructor(message, name) {\n    super(message);\n    this[kName] = name;\n  }\n  get name() {\n    return this[kName];\n  }\n};\n__name(_DOMException, "DOMException");\nvar DOMException = _DOMException;\nfunction createAbortSignal() {\n  const signal = new EventTarget();\n  Object.setPrototypeOf(signal, AbortSignal.prototype);\n  signal[kAborted] = false;\n  signal[kReason] = void 0;\n  signal[kOnabort] = void 0;\n  return signal;\n}\n__name(createAbortSignal, "createAbortSignal");\nfunction abortSignalAbort(signal, reason) {\n  if (typeof reason === "undefined") {\n    reason = new DOMException("The operation was aborted.", "AbortError");\n  }\n  if (signal.aborted) {\n    return;\n  }\n  signal[kReason] = reason;\n  signal[kAborted] = true;\n  signal.dispatchEvent(new Event("abort"));\n}\n__name(abortSignalAbort, "abortSignalAbort");\nvar _AbortController = class _AbortController {\n  constructor() {\n    this[kSignal] = createAbortSignal();\n  }\n  get signal() {\n    return this[kSignal];\n  }\n  abort(reason) {\n    abortSignalAbort(this.signal, reason);\n  }\n};\n__name(_AbortController, "AbortController");\nvar AbortController = _AbortController;\nvar _AbortSignal = class _AbortSignal extends EventTarget {\n  constructor() {\n    throw new TypeError("Illegal constructor.");\n  }\n  get aborted() {\n    return this[kAborted];\n  }\n  get reason() {\n    return this[kReason];\n  }\n  get onabort() {\n    return this[kOnabort];\n  }\n  set onabort(value) {\n    if (this[kOnabort]) {\n      this.removeEventListener("abort", this[kOnabort]);\n    }\n    if (value) {\n      this[kOnabort] = value;\n      this.addEventListener("abort", this[kOnabort]);\n    }\n  }\n  throwIfAborted() {\n    if (this[kAborted]) {\n      throw this[kReason];\n    }\n  }\n  static abort(reason) {\n    const signal = createAbortSignal();\n    abortSignalAbort(signal, reason);\n    return signal;\n  }\n  static timeout(milliseconds) {\n    const signal = createAbortSignal();\n    setTimeout(() => {\n      abortSignalAbort(\n        signal,\n        new DOMException("The operation timed out.", "TimeoutError")\n      );\n    }, milliseconds);\n    return signal;\n  }\n};\n__name(_AbortSignal, "AbortSignal");\nvar AbortSignal = _AbortSignal;\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  AbortController,\n  AbortSignal,\n  DOMException\n});\n';
      }, 153: (e) => {
        e.exports = `"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
var __esm = (fn, res) => function __init() {
  return fn && (res = (0, fn[__getOwnPropNames(fn)[0]])(fn = 0)), res;
};
var __commonJS = (cb, mod) => function __require() {
  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// <define:process>
var init_define_process = __esm({
  "<define:process>"() {
  }
});

// ../../node_modules/.pnpm/blob-polyfill@7.0.20220408/node_modules/blob-polyfill/Blob.js
var require_Blob = __commonJS({
  "../../node_modules/.pnpm/blob-polyfill@7.0.20220408/node_modules/blob-polyfill/Blob.js"(exports) {
    "use strict";
    init_define_process();
    (function(global2) {
      (function(factory) {
        if (typeof define === "function" && define.amd) {
          define(["exports"], factory);
        } else if (typeof exports === "object" && typeof exports.nodeName !== "string") {
          factory(exports);
        } else {
          factory(global2);
        }
      })(function(exports2) {
        "use strict";
        var BlobBuilder = global2.BlobBuilder || global2.WebKitBlobBuilder || global2.MSBlobBuilder || global2.MozBlobBuilder;
        var URL = global2.URL || global2.webkitURL || function(href, a) {
          a = document.createElement("a");
          a.href = href;
          return a;
        };
        var origBlob = global2.Blob;
        var createObjectURL = URL.createObjectURL;
        var revokeObjectURL = URL.revokeObjectURL;
        var strTag = global2.Symbol && global2.Symbol.toStringTag;
        var blobSupported = false;
        var blobSupportsArrayBufferView = false;
        var blobBuilderSupported = BlobBuilder && BlobBuilder.prototype.append && BlobBuilder.prototype.getBlob;
        try {
          blobSupported = new Blob(["\\xE4"]).size === 2;
          blobSupportsArrayBufferView = new Blob([new Uint8Array([1, 2])]).size === 2;
        } catch (e) {
        }
        function mapArrayBufferViews(ary) {
          return ary.map(function(chunk) {
            if (chunk.buffer instanceof ArrayBuffer) {
              var buf = chunk.buffer;
              if (chunk.byteLength !== buf.byteLength) {
                var copy = new Uint8Array(chunk.byteLength);
                copy.set(new Uint8Array(buf, chunk.byteOffset, chunk.byteLength));
                buf = copy.buffer;
              }
              return buf;
            }
            return chunk;
          });
        }
        __name(mapArrayBufferViews, "mapArrayBufferViews");
        function BlobBuilderConstructor(ary, options) {
          options = options || {};
          var bb = new BlobBuilder();
          mapArrayBufferViews(ary).forEach(function(part) {
            bb.append(part);
          });
          return options.type ? bb.getBlob(options.type) : bb.getBlob();
        }
        __name(BlobBuilderConstructor, "BlobBuilderConstructor");
        function BlobConstructor(ary, options) {
          return new origBlob(mapArrayBufferViews(ary), options || {});
        }
        __name(BlobConstructor, "BlobConstructor");
        if (global2.Blob) {
          BlobBuilderConstructor.prototype = Blob.prototype;
          BlobConstructor.prototype = Blob.prototype;
        }
        function stringEncode(string) {
          var pos = 0;
          var len = string.length;
          var Arr = global2.Uint8Array || Array;
          var at = 0;
          var tlen = Math.max(32, len + (len >> 1) + 7);
          var target = new Arr(tlen >> 3 << 3);
          while (pos < len) {
            var value = string.charCodeAt(pos++);
            if (value >= 55296 && value <= 56319) {
              if (pos < len) {
                var extra = string.charCodeAt(pos);
                if ((extra & 64512) === 56320) {
                  ++pos;
                  value = ((value & 1023) << 10) + (extra & 1023) + 65536;
                }
              }
              if (value >= 55296 && value <= 56319) {
                continue;
              }
            }
            if (at + 4 > target.length) {
              tlen += 8;
              tlen *= 1 + pos / string.length * 2;
              tlen = tlen >> 3 << 3;
              var update = new Uint8Array(tlen);
              update.set(target);
              target = update;
            }
            if ((value & 4294967168) === 0) {
              target[at++] = value;
              continue;
            } else if ((value & 4294965248) === 0) {
              target[at++] = value >> 6 & 31 | 192;
            } else if ((value & 4294901760) === 0) {
              target[at++] = value >> 12 & 15 | 224;
              target[at++] = value >> 6 & 63 | 128;
            } else if ((value & 4292870144) === 0) {
              target[at++] = value >> 18 & 7 | 240;
              target[at++] = value >> 12 & 63 | 128;
              target[at++] = value >> 6 & 63 | 128;
            } else {
              continue;
            }
            target[at++] = value & 63 | 128;
          }
          return target.slice(0, at);
        }
        __name(stringEncode, "stringEncode");
        function stringDecode(buf) {
          var end = buf.length;
          var res = [];
          var i = 0;
          while (i < end) {
            var firstByte = buf[i];
            var codePoint = null;
            var bytesPerSequence = firstByte > 239 ? 4 : firstByte > 223 ? 3 : firstByte > 191 ? 2 : 1;
            if (i + bytesPerSequence <= end) {
              var secondByte, thirdByte, fourthByte, tempCodePoint;
              switch (bytesPerSequence) {
                case 1:
                  if (firstByte < 128) {
                    codePoint = firstByte;
                  }
                  break;
                case 2:
                  secondByte = buf[i + 1];
                  if ((secondByte & 192) === 128) {
                    tempCodePoint = (firstByte & 31) << 6 | secondByte & 63;
                    if (tempCodePoint > 127) {
                      codePoint = tempCodePoint;
                    }
                  }
                  break;
                case 3:
                  secondByte = buf[i + 1];
                  thirdByte = buf[i + 2];
                  if ((secondByte & 192) === 128 && (thirdByte & 192) === 128) {
                    tempCodePoint = (firstByte & 15) << 12 | (secondByte & 63) << 6 | thirdByte & 63;
                    if (tempCodePoint > 2047 && (tempCodePoint < 55296 || tempCodePoint > 57343)) {
                      codePoint = tempCodePoint;
                    }
                  }
                  break;
                case 4:
                  secondByte = buf[i + 1];
                  thirdByte = buf[i + 2];
                  fourthByte = buf[i + 3];
                  if ((secondByte & 192) === 128 && (thirdByte & 192) === 128 && (fourthByte & 192) === 128) {
                    tempCodePoint = (firstByte & 15) << 18 | (secondByte & 63) << 12 | (thirdByte & 63) << 6 | fourthByte & 63;
                    if (tempCodePoint > 65535 && tempCodePoint < 1114112) {
                      codePoint = tempCodePoint;
                    }
                  }
              }
            }
            if (codePoint === null) {
              codePoint = 65533;
              bytesPerSequence = 1;
            } else if (codePoint > 65535) {
              codePoint -= 65536;
              res.push(codePoint >>> 10 & 1023 | 55296);
              codePoint = 56320 | codePoint & 1023;
            }
            res.push(codePoint);
            i += bytesPerSequence;
          }
          var len = res.length;
          var str = "";
          var j = 0;
          while (j < len) {
            str += String.fromCharCode.apply(String, res.slice(j, j += 4096));
          }
          return str;
        }
        __name(stringDecode, "stringDecode");
        var textEncode = typeof TextEncoder === "function" ? TextEncoder.prototype.encode.bind(new TextEncoder()) : stringEncode;
        var textDecode = typeof TextDecoder === "function" ? TextDecoder.prototype.decode.bind(new TextDecoder()) : stringDecode;
        function FakeBlobBuilder() {
          function bufferClone(buf) {
            var view = new Array(buf.byteLength);
            var array = new Uint8Array(buf);
            var i = view.length;
            while (i--) {
              view[i] = array[i];
            }
            return view;
          }
          __name(bufferClone, "bufferClone");
          function array2base64(input) {
            var byteToCharMap = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
            var output = [];
            for (var i = 0; i < input.length; i += 3) {
              var byte1 = input[i];
              var haveByte2 = i + 1 < input.length;
              var byte2 = haveByte2 ? input[i + 1] : 0;
              var haveByte3 = i + 2 < input.length;
              var byte3 = haveByte3 ? input[i + 2] : 0;
              var outByte1 = byte1 >> 2;
              var outByte2 = (byte1 & 3) << 4 | byte2 >> 4;
              var outByte3 = (byte2 & 15) << 2 | byte3 >> 6;
              var outByte4 = byte3 & 63;
              if (!haveByte3) {
                outByte4 = 64;
                if (!haveByte2) {
                  outByte3 = 64;
                }
              }
              output.push(
                byteToCharMap[outByte1],
                byteToCharMap[outByte2],
                byteToCharMap[outByte3],
                byteToCharMap[outByte4]
              );
            }
            return output.join("");
          }
          __name(array2base64, "array2base64");
          var create = Object.create || function(a) {
            function c() {
            }
            __name(c, "c");
            c.prototype = a;
            return new c();
          };
          function getObjectTypeName(o) {
            return Object.prototype.toString.call(o).slice(8, -1);
          }
          __name(getObjectTypeName, "getObjectTypeName");
          function isPrototypeOf(c, o) {
            return typeof c === "object" && Object.prototype.isPrototypeOf.call(c.prototype, o);
          }
          __name(isPrototypeOf, "isPrototypeOf");
          function isDataView(o) {
            return getObjectTypeName(o) === "DataView" || isPrototypeOf(global2.DataView, o);
          }
          __name(isDataView, "isDataView");
          var arrayBufferClassNames = [
            "Int8Array",
            "Uint8Array",
            "Uint8ClampedArray",
            "Int16Array",
            "Uint16Array",
            "Int32Array",
            "Uint32Array",
            "Float32Array",
            "Float64Array",
            "ArrayBuffer"
          ];
          function includes(a, v) {
            return a.indexOf(v) !== -1;
          }
          __name(includes, "includes");
          function isArrayBuffer(o) {
            return includes(arrayBufferClassNames, getObjectTypeName(o)) || isPrototypeOf(global2.ArrayBuffer, o);
          }
          __name(isArrayBuffer, "isArrayBuffer");
          function concatTypedarrays(chunks) {
            var size = 0;
            var j = chunks.length;
            while (j--) {
              size += chunks[j].length;
            }
            var b = new Uint8Array(size);
            var offset = 0;
            for (var i = 0; i < chunks.length; i++) {
              var chunk = chunks[i];
              b.set(chunk, offset);
              offset += chunk.byteLength || chunk.length;
            }
            return b;
          }
          __name(concatTypedarrays, "concatTypedarrays");
          function Blob3(chunks, opts) {
            chunks = chunks ? chunks.slice() : [];
            opts = opts == null ? {} : opts;
            for (var i = 0, len = chunks.length; i < len; i++) {
              var chunk = chunks[i];
              if (chunk instanceof Blob3) {
                chunks[i] = chunk._buffer;
              } else if (typeof chunk === "string") {
                chunks[i] = textEncode(chunk);
              } else if (isDataView(chunk)) {
                chunks[i] = bufferClone(chunk.buffer);
              } else if (isArrayBuffer(chunk)) {
                chunks[i] = bufferClone(chunk);
              } else {
                chunks[i] = textEncode(String(chunk));
              }
            }
            this._buffer = global2.Uint8Array ? concatTypedarrays(chunks) : [].concat.apply([], chunks);
            this.size = this._buffer.length;
            this.type = opts.type || "";
            if (/[^\\u0020-\\u007E]/.test(this.type)) {
              this.type = "";
            } else {
              this.type = this.type.toLowerCase();
            }
          }
          __name(Blob3, "Blob");
          Blob3.prototype.arrayBuffer = function() {
            return Promise.resolve(this._buffer.buffer || this._buffer);
          };
          Blob3.prototype.text = function() {
            return Promise.resolve(textDecode(this._buffer));
          };
          Blob3.prototype.slice = function(start, end, type) {
            var slice = this._buffer.slice(start || 0, end || this._buffer.length);
            return new Blob3([slice], { type });
          };
          Blob3.prototype.toString = function() {
            return "[object Blob]";
          };
          function File2(chunks, name, opts) {
            opts = opts || {};
            var a = Blob3.call(this, chunks, opts) || this;
            a.name = name.replace(/\\//g, ":");
            a.lastModifiedDate = opts.lastModified ? new Date(opts.lastModified) : /* @__PURE__ */ new Date();
            a.lastModified = +a.lastModifiedDate;
            return a;
          }
          __name(File2, "File");
          File2.prototype = create(Blob3.prototype);
          File2.prototype.constructor = File2;
          if (Object.setPrototypeOf) {
            Object.setPrototypeOf(File2, Blob3);
          } else {
            try {
              File2.__proto__ = Blob3;
            } catch (e) {
            }
          }
          File2.prototype.toString = function() {
            return "[object File]";
          };
          function FileReader2() {
            if (!(this instanceof FileReader2)) {
              throw new TypeError("Failed to construct 'FileReader': Please use the 'new' operator, this DOM object constructor cannot be called as a function.");
            }
            var delegate = document.createDocumentFragment();
            this.addEventListener = delegate.addEventListener;
            this.dispatchEvent = function(evt) {
              var local = this["on" + evt.type];
              if (typeof local === "function")
                local(evt);
              delegate.dispatchEvent(evt);
            };
            this.removeEventListener = delegate.removeEventListener;
          }
          __name(FileReader2, "FileReader");
          function _read(fr, blob2, kind) {
            if (!(blob2 instanceof Blob3)) {
              throw new TypeError("Failed to execute '" + kind + "' on 'FileReader': parameter 1 is not of type 'Blob'.");
            }
            fr.result = "";
            setTimeout(function() {
              this.readyState = FileReader2.LOADING;
              fr.dispatchEvent(new Event("load"));
              fr.dispatchEvent(new Event("loadend"));
            });
          }
          __name(_read, "_read");
          FileReader2.EMPTY = 0;
          FileReader2.LOADING = 1;
          FileReader2.DONE = 2;
          FileReader2.prototype.error = null;
          FileReader2.prototype.onabort = null;
          FileReader2.prototype.onerror = null;
          FileReader2.prototype.onload = null;
          FileReader2.prototype.onloadend = null;
          FileReader2.prototype.onloadstart = null;
          FileReader2.prototype.onprogress = null;
          FileReader2.prototype.readAsDataURL = function(blob2) {
            _read(this, blob2, "readAsDataURL");
            this.result = "data:" + blob2.type + ";base64," + array2base64(blob2._buffer);
          };
          FileReader2.prototype.readAsText = function(blob2) {
            _read(this, blob2, "readAsText");
            this.result = textDecode(blob2._buffer);
          };
          FileReader2.prototype.readAsArrayBuffer = function(blob2) {
            _read(this, blob2, "readAsText");
            this.result = (blob2._buffer.buffer || blob2._buffer).slice();
          };
          FileReader2.prototype.abort = function() {
          };
          URL.createObjectURL = function(blob2) {
            return blob2 instanceof Blob3 ? "data:" + blob2.type + ";base64," + array2base64(blob2._buffer) : createObjectURL.call(URL, blob2);
          };
          URL.revokeObjectURL = function(url) {
            revokeObjectURL && revokeObjectURL.call(URL, url);
          };
          var _send = global2.XMLHttpRequest && global2.XMLHttpRequest.prototype.send;
          if (_send) {
            XMLHttpRequest.prototype.send = function(data) {
              if (data instanceof Blob3) {
                this.setRequestHeader("Content-Type", data.type);
                _send.call(this, textDecode(data._buffer));
              } else {
                _send.call(this, data);
              }
            };
          }
          exports2.Blob = Blob3;
          exports2.File = File2;
          exports2.FileReader = FileReader2;
          exports2.URL = URL;
        }
        __name(FakeBlobBuilder, "FakeBlobBuilder");
        function fixFileAndXHR() {
          var isIE = !!global2.ActiveXObject || "-ms-scroll-limit" in document.documentElement.style && "-ms-ime-align" in document.documentElement.style;
          var _send = global2.XMLHttpRequest && global2.XMLHttpRequest.prototype.send;
          if (isIE && _send) {
            XMLHttpRequest.prototype.send = function(data) {
              if (data instanceof Blob) {
                this.setRequestHeader("Content-Type", data.type);
                _send.call(this, data);
              } else {
                _send.call(this, data);
              }
            };
          }
          try {
            new File([], "");
            exports2.File = global2.File;
            exports2.FileReader = global2.FileReader;
          } catch (e) {
            try {
              exports2.File = new Function(
                'class File extends Blob {constructor(chunks, name, opts) {opts = opts || {};super(chunks, opts || {});this.name = name.replace(/\\\\//g, ":");this.lastModifiedDate = opts.lastModified ? new Date(opts.lastModified) : new Date();this.lastModified = +this.lastModifiedDate;}};return new File([], ""), File'
              )();
            } catch (e2) {
              exports2.File = function(b, d, c) {
                var blob2 = new Blob(b, c);
                var t = c && void 0 !== c.lastModified ? new Date(c.lastModified) : /* @__PURE__ */ new Date();
                blob2.name = d.replace(/\\//g, ":");
                blob2.lastModifiedDate = t;
                blob2.lastModified = +t;
                blob2.toString = function() {
                  return "[object File]";
                };
                if (strTag) {
                  blob2[strTag] = "File";
                }
                return blob2;
              };
            }
          }
        }
        __name(fixFileAndXHR, "fixFileAndXHR");
        if (blobSupported) {
          fixFileAndXHR();
          exports2.Blob = blobSupportsArrayBufferView ? global2.Blob : BlobConstructor;
        } else if (blobBuilderSupported) {
          fixFileAndXHR();
          exports2.Blob = BlobBuilderConstructor;
        } else {
          FakeBlobBuilder();
        }
        if (strTag) {
          if (!exports2.File.prototype[strTag])
            exports2.File.prototype[strTag] = "File";
          if (!exports2.Blob.prototype[strTag])
            exports2.Blob.prototype[strTag] = "Blob";
          if (!exports2.FileReader.prototype[strTag])
            exports2.FileReader.prototype[strTag] = "FileReader";
        }
        var blob = exports2.Blob.prototype;
        var stream;
        try {
          new ReadableStream({ type: "bytes" });
          stream = /* @__PURE__ */ __name(function stream2() {
            var position = 0;
            var blob2 = this;
            return new ReadableStream({
              type: "bytes",
              autoAllocateChunkSize: 524288,
              pull: function(controller) {
                var v = controller.byobRequest.view;
                var chunk = blob2.slice(position, position + v.byteLength);
                return chunk.arrayBuffer().then(function(buffer) {
                  var uint8array = new Uint8Array(buffer);
                  var bytesRead = uint8array.byteLength;
                  position += bytesRead;
                  v.set(uint8array);
                  controller.byobRequest.respond(bytesRead);
                  if (position >= blob2.size)
                    controller.close();
                });
              }
            });
          }, "stream");
        } catch (e) {
          try {
            new ReadableStream({});
            stream = /* @__PURE__ */ __name(function stream2(blob2) {
              var position = 0;
              return new ReadableStream({
                pull: function(controller) {
                  var chunk = blob2.slice(position, position + 524288);
                  return chunk.arrayBuffer().then(function(buffer) {
                    position += buffer.byteLength;
                    var uint8array = new Uint8Array(buffer);
                    controller.enqueue(uint8array);
                    if (position == blob2.size)
                      controller.close();
                  });
                }
              });
            }, "stream");
          } catch (e2) {
            try {
              new Response("").body.getReader().read();
              stream = /* @__PURE__ */ __name(function stream2() {
                return new Response(this).body;
              }, "stream");
            } catch (e3) {
              stream = /* @__PURE__ */ __name(function stream2() {
                throw new Error("Include https://github.com/MattiasBuelens/web-streams-polyfill");
              }, "stream");
            }
          }
        }
        function promisify(obj) {
          return new Promise(function(resolve, reject) {
            obj.onload = obj.onerror = function(evt) {
              obj.onload = obj.onerror = null;
              evt.type === "load" ? resolve(obj.result || obj) : reject(new Error("Failed to read the blob/file"));
            };
          });
        }
        __name(promisify, "promisify");
        if (!blob.arrayBuffer) {
          blob.arrayBuffer = /* @__PURE__ */ __name(function arrayBuffer() {
            var fr = new FileReader();
            fr.readAsArrayBuffer(this);
            return promisify(fr);
          }, "arrayBuffer");
        }
        if (!blob.text) {
          blob.text = /* @__PURE__ */ __name(function text() {
            var fr = new FileReader();
            fr.readAsText(this);
            return promisify(fr);
          }, "text");
        }
        if (!blob.stream) {
          blob.stream = stream;
        }
      });
    })(
      typeof self !== "undefined" && self || typeof window !== "undefined" && window || typeof global !== "undefined" && global || exports
    );
  }
});

// src/primitives/blob.js
var blob_exports = {};
__export(blob_exports, {
  Blob: () => import_blob_polyfill.Blob
});
module.exports = __toCommonJS(blob_exports);
init_define_process();
var import_blob_polyfill = __toESM(require_Blob());
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  Blob
});
`;
      }, 638: (e) => {
        e.exports = '"use strict";\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value) => __defProp(target, "name", { value, configurable: true });\nvar __esm = (fn, res) => function __init() {\n  return fn && (res = (0, fn[__getOwnPropNames(fn)[0]])(fn = 0)), res;\n};\nvar __commonJS = (cb, mod) => function __require() {\n  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;\n};\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === "object" || typeof from === "function") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n  // If the importer is in node compatibility mode or this is not an ESM\n  // file that has been converted to a CommonJS file using a Babel-\n  // compatible transform (i.e. "__esModule" has not been set), then set\n  // "default" to the CommonJS "module.exports" for node compatibility.\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,\n  mod\n));\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);\n\n// <define:process>\nvar init_define_process = __esm({\n  "<define:process>"() {\n  }\n});\n\n// ../format/dist/index.js\nvar require_dist = __commonJS({\n  "../format/dist/index.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    var __defProp2 = Object.defineProperty;\n    var __getOwnPropDesc2 = Object.getOwnPropertyDescriptor;\n    var __getOwnPropNames2 = Object.getOwnPropertyNames;\n    var __hasOwnProp2 = Object.prototype.hasOwnProperty;\n    var __export2 = /* @__PURE__ */ __name((target, all) => {\n      for (var name in all)\n        __defProp2(target, name, { get: all[name], enumerable: true });\n    }, "__export");\n    var __copyProps2 = /* @__PURE__ */ __name((to, from, except, desc) => {\n      if (from && typeof from === "object" || typeof from === "function") {\n        for (let key of __getOwnPropNames2(from))\n          if (!__hasOwnProp2.call(to, key) && key !== except)\n            __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });\n      }\n      return to;\n    }, "__copyProps");\n    var __toCommonJS2 = /* @__PURE__ */ __name((mod) => __copyProps2(__defProp2({}, "__esModule", { value: true }), mod), "__toCommonJS");\n    var src_exports = {};\n    __export2(src_exports, {\n      createFormat: () => createFormat2\n    });\n    module2.exports = __toCommonJS2(src_exports);\n    var ReflectGetOwnPropertyDescriptor = Reflect.getOwnPropertyDescriptor;\n    function GetOwnGetter(target, key) {\n      const descriptor = ReflectGetOwnPropertyDescriptor(target, key);\n      return descriptor ? descriptor.get : void 0;\n    }\n    __name(GetOwnGetter, "GetOwnGetter");\n    var ReflectGetPrototypeOf = Reflect.getPrototypeOf;\n    var TypedArray = ReflectGetPrototypeOf(Uint8Array);\n    var ArrayPrototypeFilter = Array.prototype.filter;\n    var ArrayPrototypePush = Array.prototype.push;\n    var DatePrototypeGetTime = Date.prototype.getTime;\n    var DatePrototypeToISOString = Date.prototype.toISOString;\n    var ObjectGetOwnPropertyDescriptors = Object.getOwnPropertyDescriptors;\n    var ObjectGetOwnPropertyNames = Object.getOwnPropertyNames;\n    var ObjectGetOwnPropertySymbols = Object.getOwnPropertySymbols;\n    var ObjectKeys = Object.keys;\n    var ObjectPrototypePropertyIsEnumerable = Object.prototype.propertyIsEnumerable;\n    var ObjectPrototypeToString = Object.prototype.toString;\n    var MapPrototypeGetSize = GetOwnGetter(Map.prototype, "size");\n    var SetPrototypeGetSize = GetOwnGetter(Set.prototype, "size");\n    var StringPrototypeIncludes = String.prototype.includes;\n    var SymbolIterator = Symbol.iterator;\n    var SymbolPrototypeToString = Symbol.prototype.toString;\n    var TypedArrayPrototypeGetLength = GetOwnGetter(\n      TypedArray.prototype,\n      "length"\n    );\n    var typedArrayStrings = /* @__PURE__ */ new Set([\n      "[object BigInt64Array]",\n      "[object BigUint64Array]",\n      "[object Float32Array]",\n      "[object Float64Array]",\n      "[object Int8Array]",\n      "[object Int16Array]",\n      "[object Int32Array]",\n      "[object Uint8Array]",\n      "[object Uint8ClampedArray]",\n      "[object Uint16Array]",\n      "[object Uint32Array]"\n    ]);\n    function getOwnNonIndexProperties(object, filter) {\n      const indexes = Array.isArray(object) || isTypedArray(object) ? new Set([...object.keys()].map((v) => v.toString())) : void 0;\n      return Object.entries(ObjectGetOwnPropertyDescriptors(object)).filter(([key, desc]) => {\n        if (indexes && indexes.has(key)) {\n          return false;\n        }\n        if (filter === 1 && !desc.enumerable) {\n          return false;\n        }\n        return true;\n      }).map(([key]) => key);\n    }\n    __name(getOwnNonIndexProperties, "getOwnNonIndexProperties");\n    var isTypedArray = /* @__PURE__ */ __name((value) => kind(value, "object") && typedArrayStrings.has(ObjectPrototypeToString.call(value)), "isTypedArray");\n    function kind(value, type) {\n      return typeof value === type;\n    }\n    __name(kind, "kind");\n    var getConstructorName = /* @__PURE__ */ __name((object) => {\n      var _a;\n      return (_a = object.constructor) == null ? void 0 : _a.name;\n    }, "getConstructorName");\n    var getPrefix = /* @__PURE__ */ __name((constructor = "", size = "") => `${constructor}${size} `, "getPrefix");\n    function createFormat2(opts = {}) {\n      if (opts.customInspectSymbol === void 0) {\n        opts.customInspectSymbol = Symbol.for("edge-runtime.inspect.custom");\n      }\n      if (opts.formatError === void 0) {\n        opts.formatError = (error2) => `[${Error.prototype.toString.call(error2)}]`;\n      }\n      const { formatError, customInspectSymbol } = opts;\n      function format2(...args) {\n        const [firstArg] = args;\n        if (!kind(firstArg, "string")) {\n          if (hasCustomSymbol(firstArg, customInspectSymbol)) {\n            return format2(firstArg[customInspectSymbol]({ format: format2 }));\n          } else {\n            return args.map((item) => inspect(item, { customInspectSymbol })).join(" ");\n          }\n        }\n        let index = 1;\n        let str = String(firstArg).replace(/%[sjdOoif%]/g, (token) => {\n          if (token === "%%")\n            return "%";\n          if (index >= args.length)\n            return token;\n          switch (token) {\n            case "%s": {\n              const arg = args[index++];\n              if (hasCustomSymbol(arg, customInspectSymbol)) {\n                return format2(arg[customInspectSymbol]({ format: format2 }));\n              } else if (isDate(arg) || isError(arg) || kind(arg, "bigint")) {\n                return format2(arg);\n              } else {\n                return String(arg);\n              }\n            }\n            case "%j":\n              return safeStringify(args[index++]);\n            case "%d": {\n              const arg = args[index++];\n              if (kind(arg, "bigint")) {\n                return format2(arg);\n              } else {\n                return String(Number(arg));\n              }\n            }\n            case "%O":\n              return inspect(args[index++], { customInspectSymbol });\n            case "%o":\n              return inspect(args[index++], {\n                customInspectSymbol,\n                showHidden: true,\n                depth: 4\n              });\n            case "%i": {\n              const arg = args[index++];\n              if (kind(arg, "bigint")) {\n                return format2(arg);\n              } else {\n                return String(parseInt(arg, 10));\n              }\n            }\n            case "%f":\n              return String(parseFloat(args[index++]));\n            default:\n              return token;\n          }\n        });\n        for (let arg = args[index]; index < args.length; arg = args[++index]) {\n          if (arg === null || !kind(arg, "object")) {\n            str += " " + arg;\n          } else {\n            str += " " + inspect(arg);\n          }\n        }\n        return str;\n      }\n      __name(format2, "format");\n      function formatValue(ctx, value, recurseTimes) {\n        if (hasCustomSymbol(value, customInspectSymbol)) {\n          return format2(value[customInspectSymbol]({ format: format2 }));\n        }\n        const formattedPrimitive = formatPrimitive(value);\n        if (formattedPrimitive !== void 0) {\n          return formattedPrimitive;\n        }\n        if (ctx.seen.includes(value)) {\n          let index = 1;\n          if (ctx.circular === void 0) {\n            ctx.circular = /* @__PURE__ */ new Map();\n            ctx.circular.set(value, index);\n          } else {\n            index = ctx.circular.get(value);\n            if (index === void 0) {\n              index = ctx.circular.size + 1;\n              ctx.circular.set(value, index);\n            }\n          }\n          return `[Circular *${index}]`;\n        }\n        return formatRaw(ctx, value, recurseTimes);\n      }\n      __name(formatValue, "formatValue");\n      function formatRaw(ctx, value, recurseTimes) {\n        let keys = [];\n        const constructor = getConstructorName(value);\n        let base = "";\n        let formatter = /* @__PURE__ */ __name(() => [], "formatter");\n        let braces = ["", ""];\n        let noIterator = true;\n        const filter = ctx.showHidden ? 0 : 1;\n        if (SymbolIterator in value) {\n          noIterator = false;\n          if (Array.isArray(value)) {\n            const prefix = constructor !== "Array" ? getPrefix(constructor, `(${value.length})`) : "";\n            keys = getOwnNonIndexProperties(value, filter);\n            braces = [`${prefix}[`, "]"];\n            if (value.length === 0 && keys.length === 0) {\n              return `${braces[0]}]`;\n            }\n            formatter = formatArray;\n          } else if (isSet(value)) {\n            const size = SetPrototypeGetSize.call(value);\n            const prefix = getPrefix(constructor, `(${size})`);\n            keys = getKeys(value, ctx.showHidden);\n            formatter = formatSet;\n            if (size === 0 && keys.length === 0) {\n              return `${prefix}{}`;\n            }\n            braces = [`${prefix}{`, "}"];\n          } else if (isMap(value)) {\n            const size = MapPrototypeGetSize.call(value);\n            const prefix = getPrefix(constructor, `(${size})`);\n            keys = getKeys(value, ctx.showHidden);\n            formatter = formatMap;\n            if (size === 0 && keys.length === 0) {\n              return `${prefix}{}`;\n            }\n            braces = [`${prefix}{`, "}"];\n          } else if (isTypedArray(value)) {\n            keys = getOwnNonIndexProperties(value, filter);\n            const size = TypedArrayPrototypeGetLength.call(value);\n            const prefix = getPrefix(constructor, `(${size})`);\n            braces = [`${prefix}[`, "]"];\n            if (value.length === 0 && keys.length === 0)\n              return `${braces[0]}]`;\n            formatter = formatTypedArray.bind(null, size);\n          } else {\n            noIterator = true;\n          }\n        }\n        if (noIterator) {\n          keys = getKeys(value, ctx.showHidden);\n          braces = ["{", "}"];\n          if (constructor === void 0) {\n            if (keys.length === 0) {\n              return `[Object: null prototype] {}`;\n            }\n          } else if (constructor === "Object") {\n            if (keys.length === 0) {\n              return `{}`;\n            }\n          } else if (kind(value, "function")) {\n            base = `[Function${value.name ? ": " + value.name : ""}]`;\n            if (keys.length === 0) {\n              return base;\n            }\n          } else if (isRegExp(value)) {\n            base = RegExp.prototype.toString.call(value);\n            if (keys.length === 0) {\n              return base;\n            }\n            base = " " + base;\n          } else if (isDate(value)) {\n            base = Number.isNaN(DatePrototypeGetTime.call(value)) ? Date.prototype.toString.call(value) : DatePrototypeToISOString.call(value);\n            if (keys.length === 0) {\n              return base;\n            }\n            base = " " + base;\n          } else if (isError(value)) {\n            base = formatError(value);\n            if (keys.length === 0) {\n              return base;\n            }\n            base = " " + base;\n          } else if (hasCustomSymbol(value, ctx.customInspectSymbol)) {\n            base = format2(value[ctx.customInspectSymbol]({ format: format2 }));\n            if (keys.length === 0) {\n              return base;\n            }\n            base = " " + base;\n          } else {\n            braces[0] = `${getPrefix(constructor)}{`;\n          }\n        }\n        if (recurseTimes && recurseTimes < 0) {\n          return isRegExp(value) ? RegExp.prototype.toString.call(value) : "[Object]";\n        }\n        ctx.seen.push(value);\n        const visibleKeys = new Set(keys);\n        const output = formatter(ctx, value, recurseTimes, visibleKeys, keys);\n        for (let i = 0; i < keys.length; i++) {\n          output.push(\n            formatProperty(\n              ctx,\n              value,\n              recurseTimes,\n              visibleKeys,\n              keys[i],\n              false\n            )\n          );\n        }\n        if (ctx.circular !== void 0) {\n          const index = ctx.circular.get(value);\n          if (index !== void 0) {\n            const reference = `<ref *${index}>`;\n            base = base === "" ? reference : `${reference} ${base}`;\n          }\n        }\n        ctx.seen.pop();\n        return reduceToSingleString(output, base, braces);\n      }\n      __name(formatRaw, "formatRaw");\n      function inspect(value, opts2) {\n        opts2 = Object.assign({ seen: [], depth: 2 }, opts2);\n        return formatValue(opts2, value, opts2.depth);\n      }\n      __name(inspect, "inspect");\n      function formatProperty(ctx, value, recurseTimes, visibleKeys, key, isArray) {\n        let name;\n        let str;\n        const desc = Object.getOwnPropertyDescriptor(value, key) || {\n          value: value[key]\n        };\n        if (desc.value !== void 0) {\n          str = formatValue(ctx, desc.value, recurseTimes);\n        } else if (desc.get) {\n          str = desc.set ? "[Getter/Setter]" : "[Getter]";\n        } else if (desc.set) {\n          str = "[Setter]";\n        } else {\n          str = "undefined";\n        }\n        if (isArray) {\n          return str;\n        }\n        if (kind(key, "symbol")) {\n          name = `[${SymbolPrototypeToString.call(key)}]`;\n        } else if (!visibleKeys.has(key)) {\n          name = "[" + key + "]";\n        } else {\n          name = key;\n        }\n        return `${name}: ${str}`;\n      }\n      __name(formatProperty, "formatProperty");\n      function formatArray(ctx, value, recurseTimes, visibleKeys) {\n        const output = [];\n        for (let index = 0; index < value.length; ++index) {\n          if (Object.prototype.hasOwnProperty.call(value, String(index))) {\n            output.push(\n              formatProperty(\n                ctx,\n                value,\n                recurseTimes,\n                visibleKeys,\n                String(index),\n                true\n              )\n            );\n          } else {\n            output.push("");\n          }\n        }\n        return output;\n      }\n      __name(formatArray, "formatArray");\n      function formatTypedArray(length, ctx, value, recurseTimes) {\n        const output = new Array(length);\n        for (let i = 0; i < length; ++i) {\n          output[i] = value.length > 0 && kind(value[0], "number") ? String(value[i]) : formatBigInt(value[i]);\n        }\n        if (ctx.showHidden) {\n          for (const key of [\n            "BYTES_PER_ELEMENT",\n            "length",\n            "byteLength",\n            "byteOffset",\n            "buffer"\n          ]) {\n            const str = formatValue(ctx, value[key], recurseTimes);\n            ArrayPrototypePush.call(output, `[${String(key)}]: ${str}`);\n          }\n        }\n        return output;\n      }\n      __name(formatTypedArray, "formatTypedArray");\n      function formatSet(ctx, value, recurseTimes) {\n        const output = [];\n        for (const v of value) {\n          ArrayPrototypePush.call(output, formatValue(ctx, v, recurseTimes));\n        }\n        return output;\n      }\n      __name(formatSet, "formatSet");\n      function formatMap(ctx, value, recurseTimes) {\n        const output = [];\n        for (const { 0: k, 1: v } of value) {\n          output.push(\n            `${formatValue(ctx, k, recurseTimes)} => ${formatValue(\n              ctx,\n              v,\n              recurseTimes\n            )}`\n          );\n        }\n        return output;\n      }\n      __name(formatMap, "formatMap");\n      return format2;\n    }\n    __name(createFormat2, "createFormat");\n    var formatBigInt = /* @__PURE__ */ __name((bigint) => `${bigint}n`, "formatBigInt");\n    function formatPrimitive(value) {\n      if (value === null)\n        return "null";\n      if (value === void 0)\n        return "undefined";\n      if (kind(value, "string")) {\n        return `\'${JSON.stringify(value).replace(/^"|"$/g, "").replace(/\'/g, "\\\\\'").replace(/\\\\"/g, \'"\')}\'`;\n      }\n      if (kind(value, "boolean"))\n        return "" + value;\n      if (kind(value, "number"))\n        return "" + value;\n      if (kind(value, "bigint"))\n        return formatBigInt(value);\n      if (kind(value, "symbol"))\n        return value.toString();\n    }\n    __name(formatPrimitive, "formatPrimitive");\n    function hasCustomSymbol(value, customInspectSymbol) {\n      return value !== null && kind(value, "object") && customInspectSymbol in value && kind(value[customInspectSymbol], "function");\n    }\n    __name(hasCustomSymbol, "hasCustomSymbol");\n    function isRegExp(value) {\n      return kind(value, "object") && Object.prototype.toString.call(value) === "[object RegExp]";\n    }\n    __name(isRegExp, "isRegExp");\n    function isDate(value) {\n      return kind(value, "object") && Object.prototype.toString.call(value) === "[object Date]";\n    }\n    __name(isDate, "isDate");\n    function isError(value) {\n      return kind(value, "object") && (Object.prototype.toString.call(value) === "[object Error]" || value instanceof Error);\n    }\n    __name(isError, "isError");\n    function isMap(value) {\n      return kind(value, "object") && Object.prototype.toString.call(value) === "[object Map]";\n    }\n    __name(isMap, "isMap");\n    function isSet(value) {\n      return kind(value, "object") && Object.prototype.toString.call(value) === "[object Set]";\n    }\n    __name(isSet, "isSet");\n    function isBelowBreakLength(output, start, base) {\n      const breakLength = 80;\n      let totalLength = output.length + start;\n      if (totalLength + output.length > breakLength) {\n        return false;\n      }\n      for (let i = 0; i < output.length; i++) {\n        totalLength += output[i].length;\n        if (totalLength > breakLength) {\n          return false;\n        }\n      }\n      return base === "" || !StringPrototypeIncludes.call(base, "\\n");\n    }\n    __name(isBelowBreakLength, "isBelowBreakLength");\n    function reduceToSingleString(output, base, braces) {\n      const start = output.length + braces[0].length + base.length + 10;\n      if (!isBelowBreakLength(output, start, base)) {\n        return (base ? base + " " : "") + braces[0] + "\\n  " + output.join(",\\n  ") + "\\n" + braces[1];\n      }\n      return ((base ? base + " " : "") + braces[0] + " " + output.join(", ") + " " + braces[1]).trim();\n    }\n    __name(reduceToSingleString, "reduceToSingleString");\n    function safeStringify(input) {\n      if (Array.isArray(input)) {\n        input = input.map(\n          (element) => JSON.parse(JSON.stringify(element, makeCircularReplacer()))\n        );\n      }\n      return JSON.stringify(input, makeCircularReplacer());\n    }\n    __name(safeStringify, "safeStringify");\n    function makeCircularReplacer() {\n      const seen = /* @__PURE__ */ new WeakSet();\n      return (key, value) => {\n        if (value !== null && kind(value, "object")) {\n          if (seen.has(value))\n            return "[Circular]";\n          seen.add(value);\n        }\n        return value;\n      };\n    }\n    __name(makeCircularReplacer, "makeCircularReplacer");\n    function getKeys(value, showHidden = false) {\n      let keys;\n      const symbols = ObjectGetOwnPropertySymbols(value);\n      if (showHidden) {\n        keys = ObjectGetOwnPropertyNames(value);\n        if (symbols.length !== 0)\n          ArrayPrototypePush.apply(keys, symbols);\n      } else {\n        try {\n          keys = ObjectKeys(value);\n        } catch (err) {\n          keys = ObjectGetOwnPropertyNames(value);\n        }\n        if (symbols.length !== 0) {\n          const filter = /* @__PURE__ */ __name((key) => ObjectPrototypePropertyIsEnumerable.call(value, key), "filter");\n          ArrayPrototypePush.apply(keys, ArrayPrototypeFilter.call(symbols, filter));\n        }\n      }\n      return keys;\n    }\n    __name(getKeys, "getKeys");\n  }\n});\n\n// src/primitives/console.js\nvar console_exports = {};\n__export(console_exports, {\n  console: () => konsole\n});\nmodule.exports = __toCommonJS(console_exports);\ninit_define_process();\nvar import_format = __toESM(require_dist());\nvar format = (0, import_format.createFormat)();\nvar bareError = console.error.bind(console);\nvar bareLog = console.log.bind(console);\nvar assert = console.assert.bind(console);\nvar time = console.time.bind(console);\nvar timeEnd = console.timeEnd.bind(console);\nvar timeLog = console.timeLog.bind(console);\nvar trace = console.trace.bind(console);\nvar error = /* @__PURE__ */ __name((...args) => bareError(format(...args)), "error");\nvar log = /* @__PURE__ */ __name((...args) => bareLog(format(...args)), "log");\nvar konsole = {\n  assert: (assertion, ...args) => assert(assertion, format(...args)),\n  count: console.count.bind(console),\n  debug: log,\n  dir: console.dir.bind(console),\n  error,\n  info: log,\n  log,\n  time: (...args) => time(format(...args)),\n  timeEnd: (...args) => timeEnd(format(...args)),\n  timeLog,\n  trace,\n  warn: error\n};\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  console\n});\n';
      }, 827: (e) => {
        e.exports = '"use strict";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value) => __defProp(target, "name", { value, configurable: true });\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === "object" || typeof from === "function") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);\n\n// src/primitives/crypto.js\nvar crypto_exports = {};\n__export(crypto_exports, {\n  Crypto: () => Crypto,\n  CryptoKey: () => CryptoKey,\n  SubtleCrypto: () => SubtleCrypto,\n  crypto: () => crypto\n});\nmodule.exports = __toCommonJS(crypto_exports);\nvar import_node_crypto = require("crypto");\nvar { Crypto, CryptoKey } = import_node_crypto.webcrypto;\nfunction SubtleCrypto() {\n  if (!(this instanceof SubtleCrypto))\n    return new SubtleCrypto();\n  throw TypeError("Illegal constructor");\n}\n__name(SubtleCrypto, "SubtleCrypto");\nvar crypto = new Crypto();\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  Crypto,\n  CryptoKey,\n  SubtleCrypto,\n  crypto\n});\n';
      }, 319: (e) => {
        e.exports = '"use strict";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value) => __defProp(target, "name", { value, configurable: true });\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === "object" || typeof from === "function") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);\n\n// src/primitives/encoding.js\nvar encoding_exports = {};\n__export(encoding_exports, {\n  atob: () => atob,\n  btoa: () => btoa\n});\nmodule.exports = __toCommonJS(encoding_exports);\nvar atob = /* @__PURE__ */ __name((enc) => Buffer.from(enc, "base64").toString("binary"), "atob");\nvar btoa = /* @__PURE__ */ __name((str) => Buffer.from(str, "binary").toString("base64"), "btoa");\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  atob,\n  btoa\n});\n';
      }, 921: (e) => {
        e.exports = '"use strict";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value) => __defProp(target, "name", { value, configurable: true });\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === "object" || typeof from === "function") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);\n\n// src/primitives/events.js\nvar events_exports = {};\n__export(events_exports, {\n  FetchEvent: () => FetchEvent,\n  PromiseRejectionEvent: () => PromiseRejectionEvent\n});\nmodule.exports = __toCommonJS(events_exports);\nvar _FetchEvent = class _FetchEvent extends Event {\n  constructor(request) {\n    super("fetch");\n    this.request = request;\n    this.response = null;\n    this.awaiting = /* @__PURE__ */ new Set();\n  }\n  respondWith(response) {\n    this.response = response;\n  }\n  waitUntil(promise) {\n    this.awaiting.add(promise);\n    promise.finally(() => this.awaiting.delete(promise));\n  }\n};\n__name(_FetchEvent, "FetchEvent");\nvar FetchEvent = _FetchEvent;\nvar _PromiseRejectionEvent = class _PromiseRejectionEvent extends Event {\n  constructor(type, init) {\n    super(type, { cancelable: true });\n    this.promise = init.promise;\n    this.reason = init.reason;\n  }\n};\n__name(_PromiseRejectionEvent, "PromiseRejectionEvent");\nvar PromiseRejectionEvent = _PromiseRejectionEvent;\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  FetchEvent,\n  PromiseRejectionEvent\n});\n';
      }, 634: (e) => {
        e.exports = '"use strict";\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value) => __defProp(target, "name", { value, configurable: true });\nvar __esm = (fn, res) => function __init() {\n  return fn && (res = (0, fn[__getOwnPropNames(fn)[0]])(fn = 0)), res;\n};\nvar __commonJS = (cb, mod) => function __require() {\n  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;\n};\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === "object" || typeof from === "function") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n  // If the importer is in node compatibility mode or this is not an ESM\n  // file that has been converted to a CommonJS file using a Babel-\n  // compatible transform (i.e. "__esModule" has not been set), then set\n  // "default" to the CommonJS "module.exports" for node compatibility.\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,\n  mod\n));\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);\nvar __accessCheck = (obj, member, msg) => {\n  if (!member.has(obj))\n    throw TypeError("Cannot " + msg);\n};\nvar __privateGet = (obj, member, getter) => {\n  __accessCheck(obj, member, "read from private field");\n  return getter ? getter.call(obj) : member.get(obj);\n};\nvar __privateAdd = (obj, member, value) => {\n  if (member.has(obj))\n    throw TypeError("Cannot add the same private member more than once");\n  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n};\nvar __privateSet = (obj, member, value, setter) => {\n  __accessCheck(obj, member, "write to private field");\n  setter ? setter.call(obj, value) : member.set(obj, value);\n  return value;\n};\nvar __privateMethod = (obj, member, method) => {\n  __accessCheck(obj, member, "access private method");\n  return method;\n};\n\n// <define:process>\nvar define_process_default;\nvar init_define_process = __esm({\n  "<define:process>"() {\n    define_process_default = { env: {}, versions: { node: "16.6.0" } };\n  }\n});\n\n// ../../node_modules/.pnpm/undici@5.23.0/node_modules/undici/lib/fetch/symbols.js\nvar require_symbols = __commonJS({\n  "../../node_modules/.pnpm/undici@5.23.0/node_modules/undici/lib/fetch/symbols.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    module2.exports = {\n      kUrl: Symbol("url"),\n      kHeaders: Symbol("headers"),\n      kSignal: Symbol("signal"),\n      kState: Symbol("state"),\n      kGuard: Symbol("guard"),\n      kRealm: Symbol("realm")\n    };\n  }\n});\n\n// ../../node_modules/.pnpm/undici@5.23.0/node_modules/undici/lib/core/symbols.js\nvar require_symbols2 = __commonJS({\n  "../../node_modules/.pnpm/undici@5.23.0/node_modules/undici/lib/core/symbols.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    module2.exports = {\n      kClose: Symbol("close"),\n      kDestroy: Symbol("destroy"),\n      kDispatch: Symbol("dispatch"),\n      kUrl: Symbol("url"),\n      kWriting: Symbol("writing"),\n      kResuming: Symbol("resuming"),\n      kQueue: Symbol("queue"),\n      kConnect: Symbol("connect"),\n      kConnecting: Symbol("connecting"),\n      kHeadersList: Symbol("headers list"),\n      kKeepAliveDefaultTimeout: Symbol("default keep alive timeout"),\n      kKeepAliveMaxTimeout: Symbol("max keep alive timeout"),\n      kKeepAliveTimeoutThreshold: Symbol("keep alive timeout threshold"),\n      kKeepAliveTimeoutValue: Symbol("keep alive timeout"),\n      kKeepAlive: Symbol("keep alive"),\n      kHeadersTimeout: Symbol("headers timeout"),\n      kBodyTimeout: Symbol("body timeout"),\n      kServerName: Symbol("server name"),\n      kLocalAddress: Symbol("local address"),\n      kHost: Symbol("host"),\n      kNoRef: Symbol("no ref"),\n      kBodyUsed: Symbol("used"),\n      kRunning: Symbol("running"),\n      kBlocking: Symbol("blocking"),\n      kPending: Symbol("pending"),\n      kSize: Symbol("size"),\n      kBusy: Symbol("busy"),\n      kQueued: Symbol("queued"),\n      kFree: Symbol("free"),\n      kConnected: Symbol("connected"),\n      kClosed: Symbol("closed"),\n      kNeedDrain: Symbol("need drain"),\n      kReset: Symbol("reset"),\n      kDestroyed: Symbol.for("nodejs.stream.destroyed"),\n      kMaxHeadersSize: Symbol("max headers size"),\n      kRunningIdx: Symbol("running index"),\n      kPendingIdx: Symbol("pending index"),\n      kError: Symbol("error"),\n      kClients: Symbol("clients"),\n      kClient: Symbol("client"),\n      kParser: Symbol("parser"),\n      kOnDestroyed: Symbol("destroy callbacks"),\n      kPipelining: Symbol("pipelining"),\n      kSocket: Symbol("socket"),\n      kHostHeader: Symbol("host header"),\n      kConnector: Symbol("connector"),\n      kStrictContentLength: Symbol("strict content length"),\n      kMaxRedirections: Symbol("maxRedirections"),\n      kMaxRequests: Symbol("maxRequestsPerClient"),\n      kProxy: Symbol("proxy agent options"),\n      kCounter: Symbol("socket request counter"),\n      kInterceptors: Symbol("dispatch interceptors"),\n      kMaxResponseSize: Symbol("max response size")\n    };\n  }\n});\n\n// ../../node_modules/.pnpm/undici@5.23.0/node_modules/undici/lib/core/errors.js\nvar require_errors = __commonJS({\n  "../../node_modules/.pnpm/undici@5.23.0/node_modules/undici/lib/core/errors.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    var _UndiciError = class _UndiciError extends Error {\n      constructor(message) {\n        super(message);\n        this.name = "UndiciError";\n        this.code = "UND_ERR";\n      }\n    };\n    __name(_UndiciError, "UndiciError");\n    var UndiciError = _UndiciError;\n    var _ConnectTimeoutError = class _ConnectTimeoutError extends UndiciError {\n      constructor(message) {\n        super(message);\n        Error.captureStackTrace(this, _ConnectTimeoutError);\n        this.name = "ConnectTimeoutError";\n        this.message = message || "Connect Timeout Error";\n        this.code = "UND_ERR_CONNECT_TIMEOUT";\n      }\n    };\n    __name(_ConnectTimeoutError, "ConnectTimeoutError");\n    var ConnectTimeoutError = _ConnectTimeoutError;\n    var _HeadersTimeoutError = class _HeadersTimeoutError extends UndiciError {\n      constructor(message) {\n        super(message);\n        Error.captureStackTrace(this, _HeadersTimeoutError);\n        this.name = "HeadersTimeoutError";\n        this.message = message || "Headers Timeout Error";\n        this.code = "UND_ERR_HEADERS_TIMEOUT";\n      }\n    };\n    __name(_HeadersTimeoutError, "HeadersTimeoutError");\n    var HeadersTimeoutError = _HeadersTimeoutError;\n    var _HeadersOverflowError = class _HeadersOverflowError extends UndiciError {\n      constructor(message) {\n        super(message);\n        Error.captureStackTrace(this, _HeadersOverflowError);\n        this.name = "HeadersOverflowError";\n        this.message = message || "Headers Overflow Error";\n        this.code = "UND_ERR_HEADERS_OVERFLOW";\n      }\n    };\n    __name(_HeadersOverflowError, "HeadersOverflowError");\n    var HeadersOverflowError = _HeadersOverflowError;\n    var _BodyTimeoutError = class _BodyTimeoutError extends UndiciError {\n      constructor(message) {\n        super(message);\n        Error.captureStackTrace(this, _BodyTimeoutError);\n        this.name = "BodyTimeoutError";\n        this.message = message || "Body Timeout Error";\n        this.code = "UND_ERR_BODY_TIMEOUT";\n      }\n    };\n    __name(_BodyTimeoutError, "BodyTimeoutError");\n    var BodyTimeoutError = _BodyTimeoutError;\n    var _ResponseStatusCodeError = class _ResponseStatusCodeError extends UndiciError {\n      constructor(message, statusCode, headers, body) {\n        super(message);\n        Error.captureStackTrace(this, _ResponseStatusCodeError);\n        this.name = "ResponseStatusCodeError";\n        this.message = message || "Response Status Code Error";\n        this.code = "UND_ERR_RESPONSE_STATUS_CODE";\n        this.body = body;\n        this.status = statusCode;\n        this.statusCode = statusCode;\n        this.headers = headers;\n      }\n    };\n    __name(_ResponseStatusCodeError, "ResponseStatusCodeError");\n    var ResponseStatusCodeError = _ResponseStatusCodeError;\n    var _InvalidArgumentError = class _InvalidArgumentError extends UndiciError {\n      constructor(message) {\n        super(message);\n        Error.captureStackTrace(this, _InvalidArgumentError);\n        this.name = "InvalidArgumentError";\n        this.message = message || "Invalid Argument Error";\n        this.code = "UND_ERR_INVALID_ARG";\n      }\n    };\n    __name(_InvalidArgumentError, "InvalidArgumentError");\n    var InvalidArgumentError2 = _InvalidArgumentError;\n    var _InvalidReturnValueError = class _InvalidReturnValueError extends UndiciError {\n      constructor(message) {\n        super(message);\n        Error.captureStackTrace(this, _InvalidReturnValueError);\n        this.name = "InvalidReturnValueError";\n        this.message = message || "Invalid Return Value Error";\n        this.code = "UND_ERR_INVALID_RETURN_VALUE";\n      }\n    };\n    __name(_InvalidReturnValueError, "InvalidReturnValueError");\n    var InvalidReturnValueError = _InvalidReturnValueError;\n    var _RequestAbortedError = class _RequestAbortedError extends UndiciError {\n      constructor(message) {\n        super(message);\n        Error.captureStackTrace(this, _RequestAbortedError);\n        this.name = "AbortError";\n        this.message = message || "Request aborted";\n        this.code = "UND_ERR_ABORTED";\n      }\n    };\n    __name(_RequestAbortedError, "RequestAbortedError");\n    var RequestAbortedError = _RequestAbortedError;\n    var _InformationalError = class _InformationalError extends UndiciError {\n      constructor(message) {\n        super(message);\n        Error.captureStackTrace(this, _InformationalError);\n        this.name = "InformationalError";\n        this.message = message || "Request information";\n        this.code = "UND_ERR_INFO";\n      }\n    };\n    __name(_InformationalError, "InformationalError");\n    var InformationalError = _InformationalError;\n    var _RequestContentLengthMismatchError = class _RequestContentLengthMismatchError extends UndiciError {\n      constructor(message) {\n        super(message);\n        Error.captureStackTrace(this, _RequestContentLengthMismatchError);\n        this.name = "RequestContentLengthMismatchError";\n        this.message = message || "Request body length does not match content-length header";\n        this.code = "UND_ERR_REQ_CONTENT_LENGTH_MISMATCH";\n      }\n    };\n    __name(_RequestContentLengthMismatchError, "RequestContentLengthMismatchError");\n    var RequestContentLengthMismatchError = _RequestContentLengthMismatchError;\n    var _ResponseContentLengthMismatchError = class _ResponseContentLengthMismatchError extends UndiciError {\n      constructor(message) {\n        super(message);\n        Error.captureStackTrace(this, _ResponseContentLengthMismatchError);\n        this.name = "ResponseContentLengthMismatchError";\n        this.message = message || "Response body length does not match content-length header";\n        this.code = "UND_ERR_RES_CONTENT_LENGTH_MISMATCH";\n      }\n    };\n    __name(_ResponseContentLengthMismatchError, "ResponseContentLengthMismatchError");\n    var ResponseContentLengthMismatchError = _ResponseContentLengthMismatchError;\n    var _ClientDestroyedError = class _ClientDestroyedError extends UndiciError {\n      constructor(message) {\n        super(message);\n        Error.captureStackTrace(this, _ClientDestroyedError);\n        this.name = "ClientDestroyedError";\n        this.message = message || "The client is destroyed";\n        this.code = "UND_ERR_DESTROYED";\n      }\n    };\n    __name(_ClientDestroyedError, "ClientDestroyedError");\n    var ClientDestroyedError = _ClientDestroyedError;\n    var _ClientClosedError = class _ClientClosedError extends UndiciError {\n      constructor(message) {\n        super(message);\n        Error.captureStackTrace(this, _ClientClosedError);\n        this.name = "ClientClosedError";\n        this.message = message || "The client is closed";\n        this.code = "UND_ERR_CLOSED";\n      }\n    };\n    __name(_ClientClosedError, "ClientClosedError");\n    var ClientClosedError = _ClientClosedError;\n    var _SocketError = class _SocketError extends UndiciError {\n      constructor(message, socket) {\n        super(message);\n        Error.captureStackTrace(this, _SocketError);\n        this.name = "SocketError";\n        this.message = message || "Socket error";\n        this.code = "UND_ERR_SOCKET";\n        this.socket = socket;\n      }\n    };\n    __name(_SocketError, "SocketError");\n    var SocketError = _SocketError;\n    var _NotSupportedError = class _NotSupportedError extends UndiciError {\n      constructor(message) {\n        super(message);\n        Error.captureStackTrace(this, _NotSupportedError);\n        this.name = "NotSupportedError";\n        this.message = message || "Not supported error";\n        this.code = "UND_ERR_NOT_SUPPORTED";\n      }\n    };\n    __name(_NotSupportedError, "NotSupportedError");\n    var NotSupportedError = _NotSupportedError;\n    var _BalancedPoolMissingUpstreamError = class _BalancedPoolMissingUpstreamError extends UndiciError {\n      constructor(message) {\n        super(message);\n        Error.captureStackTrace(this, NotSupportedError);\n        this.name = "MissingUpstreamError";\n        this.message = message || "No upstream has been added to the BalancedPool";\n        this.code = "UND_ERR_BPL_MISSING_UPSTREAM";\n      }\n    };\n    __name(_BalancedPoolMissingUpstreamError, "BalancedPoolMissingUpstreamError");\n    var BalancedPoolMissingUpstreamError = _BalancedPoolMissingUpstreamError;\n    var _HTTPParserError = class _HTTPParserError extends Error {\n      constructor(message, code, data) {\n        super(message);\n        Error.captureStackTrace(this, _HTTPParserError);\n        this.name = "HTTPParserError";\n        this.code = code ? `HPE_${code}` : void 0;\n        this.data = data ? data.toString() : void 0;\n      }\n    };\n    __name(_HTTPParserError, "HTTPParserError");\n    var HTTPParserError = _HTTPParserError;\n    var _ResponseExceededMaxSizeError = class _ResponseExceededMaxSizeError extends UndiciError {\n      constructor(message) {\n        super(message);\n        Error.captureStackTrace(this, _ResponseExceededMaxSizeError);\n        this.name = "ResponseExceededMaxSizeError";\n        this.message = message || "Response content exceeded max size";\n        this.code = "UND_ERR_RES_EXCEEDED_MAX_SIZE";\n      }\n    };\n    __name(_ResponseExceededMaxSizeError, "ResponseExceededMaxSizeError");\n    var ResponseExceededMaxSizeError = _ResponseExceededMaxSizeError;\n    module2.exports = {\n      HTTPParserError,\n      UndiciError,\n      HeadersTimeoutError,\n      HeadersOverflowError,\n      BodyTimeoutError,\n      RequestContentLengthMismatchError,\n      ConnectTimeoutError,\n      ResponseStatusCodeError,\n      InvalidArgumentError: InvalidArgumentError2,\n      InvalidReturnValueError,\n      RequestAbortedError,\n      ClientDestroyedError,\n      ClientClosedError,\n      InformationalError,\n      SocketError,\n      NotSupportedError,\n      ResponseContentLengthMismatchError,\n      BalancedPoolMissingUpstreamError,\n      ResponseExceededMaxSizeError\n    };\n  }\n});\n\n// ../../node_modules/.pnpm/undici@5.23.0/node_modules/undici/lib/core/util.js\nvar require_util = __commonJS({\n  "../../node_modules/.pnpm/undici@5.23.0/node_modules/undici/lib/core/util.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    var assert = require("assert");\n    var { kDestroyed, kBodyUsed } = require_symbols2();\n    var { IncomingMessage } = require("http");\n    var stream = require("stream");\n    var net = require("net");\n    var { InvalidArgumentError: InvalidArgumentError2 } = require_errors();\n    var { Blob: Blob2 } = require("buffer");\n    var nodeUtil = require("util");\n    var { stringify } = require("querystring");\n    var [nodeMajor, nodeMinor] = define_process_default.versions.node.split(".").map((v) => Number(v));\n    function nop() {\n    }\n    __name(nop, "nop");\n    function isStream(obj) {\n      return obj && typeof obj === "object" && typeof obj.pipe === "function" && typeof obj.on === "function";\n    }\n    __name(isStream, "isStream");\n    function isBlobLike(object) {\n      return Blob2 && object instanceof Blob2 || object && typeof object === "object" && (typeof object.stream === "function" || typeof object.arrayBuffer === "function") && /^(Blob|File)$/.test(object[Symbol.toStringTag]);\n    }\n    __name(isBlobLike, "isBlobLike");\n    function buildURL(url, queryParams) {\n      if (url.includes("?") || url.includes("#")) {\n        throw new Error(\'Query params cannot be passed when url already contains "?" or "#".\');\n      }\n      const stringified = stringify(queryParams);\n      if (stringified) {\n        url += "?" + stringified;\n      }\n      return url;\n    }\n    __name(buildURL, "buildURL");\n    function parseURL(url) {\n      if (typeof url === "string") {\n        url = new URL(url);\n        if (!/^https?:/.test(url.origin || url.protocol)) {\n          throw new InvalidArgumentError2("Invalid URL protocol: the URL must start with `http:` or `https:`.");\n        }\n        return url;\n      }\n      if (!url || typeof url !== "object") {\n        throw new InvalidArgumentError2("Invalid URL: The URL argument must be a non-null object.");\n      }\n      if (url.port != null && url.port !== "" && !Number.isFinite(parseInt(url.port))) {\n        throw new InvalidArgumentError2("Invalid URL: port must be a valid integer or a string representation of an integer.");\n      }\n      if (url.path != null && typeof url.path !== "string") {\n        throw new InvalidArgumentError2("Invalid URL path: the path must be a string or null/undefined.");\n      }\n      if (url.pathname != null && typeof url.pathname !== "string") {\n        throw new InvalidArgumentError2("Invalid URL pathname: the pathname must be a string or null/undefined.");\n      }\n      if (url.hostname != null && typeof url.hostname !== "string") {\n        throw new InvalidArgumentError2("Invalid URL hostname: the hostname must be a string or null/undefined.");\n      }\n      if (url.origin != null && typeof url.origin !== "string") {\n        throw new InvalidArgumentError2("Invalid URL origin: the origin must be a string or null/undefined.");\n      }\n      if (!/^https?:/.test(url.origin || url.protocol)) {\n        throw new InvalidArgumentError2("Invalid URL protocol: the URL must start with `http:` or `https:`.");\n      }\n      if (!(url instanceof URL)) {\n        const port = url.port != null ? url.port : url.protocol === "https:" ? 443 : 80;\n        let origin = url.origin != null ? url.origin : `${url.protocol}//${url.hostname}:${port}`;\n        let path = url.path != null ? url.path : `${url.pathname || ""}${url.search || ""}`;\n        if (origin.endsWith("/")) {\n          origin = origin.substring(0, origin.length - 1);\n        }\n        if (path && !path.startsWith("/")) {\n          path = `/${path}`;\n        }\n        url = new URL(origin + path);\n      }\n      return url;\n    }\n    __name(parseURL, "parseURL");\n    function parseOrigin(url) {\n      url = parseURL(url);\n      if (url.pathname !== "/" || url.search || url.hash) {\n        throw new InvalidArgumentError2("invalid url");\n      }\n      return url;\n    }\n    __name(parseOrigin, "parseOrigin");\n    function getHostname(host) {\n      if (host[0] === "[") {\n        const idx2 = host.indexOf("]");\n        assert(idx2 !== -1);\n        return host.substr(1, idx2 - 1);\n      }\n      const idx = host.indexOf(":");\n      if (idx === -1)\n        return host;\n      return host.substr(0, idx);\n    }\n    __name(getHostname, "getHostname");\n    function getServerName(host) {\n      if (!host) {\n        return null;\n      }\n      assert.strictEqual(typeof host, "string");\n      const servername = getHostname(host);\n      if (net.isIP(servername)) {\n        return "";\n      }\n      return servername;\n    }\n    __name(getServerName, "getServerName");\n    function deepClone(obj) {\n      return JSON.parse(JSON.stringify(obj));\n    }\n    __name(deepClone, "deepClone");\n    function isAsyncIterable(obj) {\n      return !!(obj != null && typeof obj[Symbol.asyncIterator] === "function");\n    }\n    __name(isAsyncIterable, "isAsyncIterable");\n    function isIterable(obj) {\n      return !!(obj != null && (typeof obj[Symbol.iterator] === "function" || typeof obj[Symbol.asyncIterator] === "function"));\n    }\n    __name(isIterable, "isIterable");\n    function bodyLength(body) {\n      if (body == null) {\n        return 0;\n      } else if (isStream(body)) {\n        const state = body._readableState;\n        return state && state.ended === true && Number.isFinite(state.length) ? state.length : null;\n      } else if (isBlobLike(body)) {\n        return body.size != null ? body.size : null;\n      } else if (isBuffer(body)) {\n        return body.byteLength;\n      }\n      return null;\n    }\n    __name(bodyLength, "bodyLength");\n    function isDestroyed(stream2) {\n      return !stream2 || !!(stream2.destroyed || stream2[kDestroyed]);\n    }\n    __name(isDestroyed, "isDestroyed");\n    function isReadableAborted(stream2) {\n      const state = stream2 && stream2._readableState;\n      return isDestroyed(stream2) && state && !state.endEmitted;\n    }\n    __name(isReadableAborted, "isReadableAborted");\n    function destroy(stream2, err) {\n      if (!isStream(stream2) || isDestroyed(stream2)) {\n        return;\n      }\n      if (typeof stream2.destroy === "function") {\n        if (Object.getPrototypeOf(stream2).constructor === IncomingMessage) {\n          stream2.socket = null;\n        }\n        stream2.destroy(err);\n      } else if (err) {\n        define_process_default.nextTick((stream3, err2) => {\n          stream3.emit("error", err2);\n        }, stream2, err);\n      }\n      if (stream2.destroyed !== true) {\n        stream2[kDestroyed] = true;\n      }\n    }\n    __name(destroy, "destroy");\n    var KEEPALIVE_TIMEOUT_EXPR = /timeout=(\\d+)/;\n    function parseKeepAliveTimeout(val) {\n      const m = val.toString().match(KEEPALIVE_TIMEOUT_EXPR);\n      return m ? parseInt(m[1], 10) * 1e3 : null;\n    }\n    __name(parseKeepAliveTimeout, "parseKeepAliveTimeout");\n    function parseHeaders(headers, obj = {}) {\n      for (let i = 0; i < headers.length; i += 2) {\n        const key = headers[i].toString().toLowerCase();\n        let val = obj[key];\n        if (!val) {\n          if (Array.isArray(headers[i + 1])) {\n            obj[key] = headers[i + 1];\n          } else {\n            obj[key] = headers[i + 1].toString("utf8");\n          }\n        } else {\n          if (!Array.isArray(val)) {\n            val = [val];\n            obj[key] = val;\n          }\n          val.push(headers[i + 1].toString("utf8"));\n        }\n      }\n      if ("content-length" in obj && "content-disposition" in obj) {\n        obj["content-disposition"] = Buffer.from(obj["content-disposition"]).toString("latin1");\n      }\n      return obj;\n    }\n    __name(parseHeaders, "parseHeaders");\n    function parseRawHeaders(headers) {\n      const ret = [];\n      let hasContentLength = false;\n      let contentDispositionIdx = -1;\n      for (let n = 0; n < headers.length; n += 2) {\n        const key = headers[n + 0].toString();\n        const val = headers[n + 1].toString("utf8");\n        if (key.length === 14 && (key === "content-length" || key.toLowerCase() === "content-length")) {\n          ret.push(key, val);\n          hasContentLength = true;\n        } else if (key.length === 19 && (key === "content-disposition" || key.toLowerCase() === "content-disposition")) {\n          contentDispositionIdx = ret.push(key, val) - 1;\n        } else {\n          ret.push(key, val);\n        }\n      }\n      if (hasContentLength && contentDispositionIdx !== -1) {\n        ret[contentDispositionIdx] = Buffer.from(ret[contentDispositionIdx]).toString("latin1");\n      }\n      return ret;\n    }\n    __name(parseRawHeaders, "parseRawHeaders");\n    function isBuffer(buffer) {\n      return buffer instanceof Uint8Array || Buffer.isBuffer(buffer);\n    }\n    __name(isBuffer, "isBuffer");\n    function validateHandler(handler, method, upgrade) {\n      if (!handler || typeof handler !== "object") {\n        throw new InvalidArgumentError2("handler must be an object");\n      }\n      if (typeof handler.onConnect !== "function") {\n        throw new InvalidArgumentError2("invalid onConnect method");\n      }\n      if (typeof handler.onError !== "function") {\n        throw new InvalidArgumentError2("invalid onError method");\n      }\n      if (typeof handler.onBodySent !== "function" && handler.onBodySent !== void 0) {\n        throw new InvalidArgumentError2("invalid onBodySent method");\n      }\n      if (upgrade || method === "CONNECT") {\n        if (typeof handler.onUpgrade !== "function") {\n          throw new InvalidArgumentError2("invalid onUpgrade method");\n        }\n      } else {\n        if (typeof handler.onHeaders !== "function") {\n          throw new InvalidArgumentError2("invalid onHeaders method");\n        }\n        if (typeof handler.onData !== "function") {\n          throw new InvalidArgumentError2("invalid onData method");\n        }\n        if (typeof handler.onComplete !== "function") {\n          throw new InvalidArgumentError2("invalid onComplete method");\n        }\n      }\n    }\n    __name(validateHandler, "validateHandler");\n    function isDisturbed(body) {\n      return !!(body && (stream.isDisturbed ? stream.isDisturbed(body) || body[kBodyUsed] : body[kBodyUsed] || body.readableDidRead || body._readableState && body._readableState.dataEmitted || isReadableAborted(body)));\n    }\n    __name(isDisturbed, "isDisturbed");\n    function isErrored(body) {\n      return !!(body && (stream.isErrored ? stream.isErrored(body) : /state: \'errored\'/.test(\n        nodeUtil.inspect(body)\n      )));\n    }\n    __name(isErrored, "isErrored");\n    function isReadable(body) {\n      return !!(body && (stream.isReadable ? stream.isReadable(body) : /state: \'readable\'/.test(\n        nodeUtil.inspect(body)\n      )));\n    }\n    __name(isReadable, "isReadable");\n    function getSocketInfo(socket) {\n      return {\n        localAddress: socket.localAddress,\n        localPort: socket.localPort,\n        remoteAddress: socket.remoteAddress,\n        remotePort: socket.remotePort,\n        remoteFamily: socket.remoteFamily,\n        timeout: socket.timeout,\n        bytesWritten: socket.bytesWritten,\n        bytesRead: socket.bytesRead\n      };\n    }\n    __name(getSocketInfo, "getSocketInfo");\n    var ReadableStream;\n    function ReadableStreamFrom(iterable) {\n      if (!ReadableStream) {\n        ReadableStream = require("./streams").ReadableStream;\n      }\n      if (ReadableStream.from) {\n        return ReadableStream.from(iterable);\n      }\n      let iterator;\n      return new ReadableStream(\n        {\n          async start() {\n            iterator = iterable[Symbol.asyncIterator]();\n          },\n          async pull(controller) {\n            const { done, value } = await iterator.next();\n            if (done) {\n              queueMicrotask(() => {\n                controller.close();\n              });\n            } else {\n              const buf = Buffer.isBuffer(value) ? value : Buffer.from(value);\n              controller.enqueue(new Uint8Array(buf));\n            }\n            return controller.desiredSize > 0;\n          },\n          async cancel(reason) {\n            await iterator.return();\n          }\n        },\n        0\n      );\n    }\n    __name(ReadableStreamFrom, "ReadableStreamFrom");\n    function isFormDataLike(object) {\n      return object && typeof object === "object" && typeof object.append === "function" && typeof object.delete === "function" && typeof object.get === "function" && typeof object.getAll === "function" && typeof object.has === "function" && typeof object.set === "function" && object[Symbol.toStringTag] === "FormData";\n    }\n    __name(isFormDataLike, "isFormDataLike");\n    function throwIfAborted(signal) {\n      if (!signal) {\n        return;\n      }\n      if (typeof signal.throwIfAborted === "function") {\n        signal.throwIfAborted();\n      } else {\n        if (signal.aborted) {\n          const err = new Error("The operation was aborted");\n          err.name = "AbortError";\n          throw err;\n        }\n      }\n    }\n    __name(throwIfAborted, "throwIfAborted");\n    var events;\n    function addAbortListener(signal, listener) {\n      if (typeof Symbol.dispose === "symbol") {\n        if (!events) {\n          events = require("events");\n        }\n        if (typeof events.addAbortListener === "function" && "aborted" in signal) {\n          return events.addAbortListener(signal, listener);\n        }\n      }\n      if ("addEventListener" in signal) {\n        signal.addEventListener("abort", listener, { once: true });\n        return () => signal.removeEventListener("abort", listener);\n      }\n      signal.addListener("abort", listener);\n      return () => signal.removeListener("abort", listener);\n    }\n    __name(addAbortListener, "addAbortListener");\n    var hasToWellFormed = !!String.prototype.toWellFormed;\n    function toUSVString(val) {\n      if (hasToWellFormed) {\n        return `${val}`.toWellFormed();\n      } else if (nodeUtil.toUSVString) {\n        return nodeUtil.toUSVString(val);\n      }\n      return `${val}`;\n    }\n    __name(toUSVString, "toUSVString");\n    var kEnumerableProperty = /* @__PURE__ */ Object.create(null);\n    kEnumerableProperty.enumerable = true;\n    module2.exports = {\n      kEnumerableProperty,\n      nop,\n      isDisturbed,\n      isErrored,\n      isReadable,\n      toUSVString,\n      isReadableAborted,\n      isBlobLike,\n      parseOrigin,\n      parseURL,\n      getServerName,\n      isStream,\n      isIterable,\n      isAsyncIterable,\n      isDestroyed,\n      parseRawHeaders,\n      parseHeaders,\n      parseKeepAliveTimeout,\n      destroy,\n      bodyLength,\n      deepClone,\n      ReadableStreamFrom,\n      isBuffer,\n      validateHandler,\n      getSocketInfo,\n      isFormDataLike,\n      buildURL,\n      throwIfAborted,\n      addAbortListener,\n      nodeMajor,\n      nodeMinor,\n      nodeHasAutoSelectFamily: nodeMajor > 18 || nodeMajor === 18 && nodeMinor >= 13\n    };\n  }\n});\n\n// ../../node_modules/.pnpm/undici@5.23.0/node_modules/undici/lib/fetch/constants.js\nvar require_constants = __commonJS({\n  "../../node_modules/.pnpm/undici@5.23.0/node_modules/undici/lib/fetch/constants.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    var { MessageChannel, receiveMessageOnPort } = require("worker_threads");\n    var corsSafeListedMethods = ["GET", "HEAD", "POST"];\n    var nullBodyStatus = [101, 204, 205, 304];\n    var redirectStatus = [301, 302, 303, 307, 308];\n    var badPorts = [\n      "1",\n      "7",\n      "9",\n      "11",\n      "13",\n      "15",\n      "17",\n      "19",\n      "20",\n      "21",\n      "22",\n      "23",\n      "25",\n      "37",\n      "42",\n      "43",\n      "53",\n      "69",\n      "77",\n      "79",\n      "87",\n      "95",\n      "101",\n      "102",\n      "103",\n      "104",\n      "109",\n      "110",\n      "111",\n      "113",\n      "115",\n      "117",\n      "119",\n      "123",\n      "135",\n      "137",\n      "139",\n      "143",\n      "161",\n      "179",\n      "389",\n      "427",\n      "465",\n      "512",\n      "513",\n      "514",\n      "515",\n      "526",\n      "530",\n      "531",\n      "532",\n      "540",\n      "548",\n      "554",\n      "556",\n      "563",\n      "587",\n      "601",\n      "636",\n      "989",\n      "990",\n      "993",\n      "995",\n      "1719",\n      "1720",\n      "1723",\n      "2049",\n      "3659",\n      "4045",\n      "5060",\n      "5061",\n      "6000",\n      "6566",\n      "6665",\n      "6666",\n      "6667",\n      "6668",\n      "6669",\n      "6697",\n      "10080"\n    ];\n    var referrerPolicy = [\n      "",\n      "no-referrer",\n      "no-referrer-when-downgrade",\n      "same-origin",\n      "origin",\n      "strict-origin",\n      "origin-when-cross-origin",\n      "strict-origin-when-cross-origin",\n      "unsafe-url"\n    ];\n    var requestRedirect = ["follow", "manual", "error"];\n    var safeMethods = ["GET", "HEAD", "OPTIONS", "TRACE"];\n    var requestMode = ["navigate", "same-origin", "no-cors", "cors"];\n    var requestCredentials = ["omit", "same-origin", "include"];\n    var requestCache = [\n      "default",\n      "no-store",\n      "reload",\n      "no-cache",\n      "force-cache",\n      "only-if-cached"\n    ];\n    var requestBodyHeader = [\n      "content-encoding",\n      "content-language",\n      "content-location",\n      "content-type",\n      // See https://github.com/nodejs/undici/issues/2021\n      // \'Content-Length\' is a forbidden header name, which is typically\n      // removed in the Headers implementation. However, undici doesn\'t\n      // filter out headers, so we add it here.\n      "content-length"\n    ];\n    var requestDuplex = [\n      "half"\n    ];\n    var forbiddenMethods = ["CONNECT", "TRACE", "TRACK"];\n    var subresource = [\n      "audio",\n      "audioworklet",\n      "font",\n      "image",\n      "manifest",\n      "paintworklet",\n      "script",\n      "style",\n      "track",\n      "video",\n      "xslt",\n      ""\n    ];\n    var DOMException = globalThis.DOMException ?? (() => {\n      try {\n        atob("~");\n      } catch (err) {\n        return Object.getPrototypeOf(err).constructor;\n      }\n    })();\n    var channel;\n    var structuredClone = globalThis.structuredClone ?? // https://github.com/nodejs/node/blob/b27ae24dcc4251bad726d9d84baf678d1f707fed/lib/internal/structured_clone.js\n    // structuredClone was added in v17.0.0, but fetch supports v16.8\n    /* @__PURE__ */ __name(function structuredClone2(value, options = void 0) {\n      if (arguments.length === 0) {\n        throw new TypeError("missing argument");\n      }\n      if (!channel) {\n        channel = new MessageChannel();\n      }\n      channel.port1.unref();\n      channel.port2.unref();\n      channel.port1.postMessage(value, options?.transfer);\n      return receiveMessageOnPort(channel.port2).message;\n    }, "structuredClone");\n    module2.exports = {\n      DOMException,\n      structuredClone,\n      subresource,\n      forbiddenMethods,\n      requestBodyHeader,\n      referrerPolicy,\n      requestRedirect,\n      requestMode,\n      requestCredentials,\n      requestCache,\n      redirectStatus,\n      corsSafeListedMethods,\n      nullBodyStatus,\n      safeMethods,\n      badPorts,\n      requestDuplex\n    };\n  }\n});\n\n// ../../node_modules/.pnpm/undici@5.23.0/node_modules/undici/lib/fetch/global.js\nvar require_global = __commonJS({\n  "../../node_modules/.pnpm/undici@5.23.0/node_modules/undici/lib/fetch/global.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    var globalOrigin = Symbol.for("undici.globalOrigin.1");\n    function getGlobalOrigin() {\n      return globalThis[globalOrigin];\n    }\n    __name(getGlobalOrigin, "getGlobalOrigin");\n    function setGlobalOrigin(newOrigin) {\n      if (newOrigin !== void 0 && typeof newOrigin !== "string" && !(newOrigin instanceof URL)) {\n        throw new Error("Invalid base url");\n      }\n      if (newOrigin === void 0) {\n        Object.defineProperty(globalThis, globalOrigin, {\n          value: void 0,\n          writable: true,\n          enumerable: false,\n          configurable: false\n        });\n        return;\n      }\n      const parsedURL = new URL(newOrigin);\n      if (parsedURL.protocol !== "http:" && parsedURL.protocol !== "https:") {\n        throw new TypeError(`Only http & https urls are allowed, received ${parsedURL.protocol}`);\n      }\n      Object.defineProperty(globalThis, globalOrigin, {\n        value: parsedURL,\n        writable: true,\n        enumerable: false,\n        configurable: false\n      });\n    }\n    __name(setGlobalOrigin, "setGlobalOrigin");\n    module2.exports = {\n      getGlobalOrigin,\n      setGlobalOrigin\n    };\n  }\n});\n\n// src/patches/util-types.js\nvar require_util_types = __commonJS({\n  "src/patches/util-types.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    module2.exports = require("util").types;\n  }\n});\n\n// ../../node_modules/.pnpm/undici@5.23.0/node_modules/undici/lib/fetch/util.js\nvar require_util2 = __commonJS({\n  "../../node_modules/.pnpm/undici@5.23.0/node_modules/undici/lib/fetch/util.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    var { redirectStatus, badPorts, referrerPolicy: referrerPolicyTokens } = require_constants();\n    var { getGlobalOrigin } = require_global();\n    var { performance: performance2 } = require("perf_hooks");\n    var { isBlobLike, toUSVString, ReadableStreamFrom } = require_util();\n    var assert = require("assert");\n    var { isUint8Array } = require_util_types();\n    var crypto;\n    try {\n      crypto = require("crypto");\n    } catch {\n    }\n    function responseURL(response) {\n      const urlList = response.urlList;\n      const length = urlList.length;\n      return length === 0 ? null : urlList[length - 1].toString();\n    }\n    __name(responseURL, "responseURL");\n    function responseLocationURL(response, requestFragment) {\n      if (!redirectStatus.includes(response.status)) {\n        return null;\n      }\n      let location = response.headersList.get("location");\n      if (location !== null && isValidHeaderValue(location)) {\n        location = new URL(location, responseURL(response));\n      }\n      if (location && !location.hash) {\n        location.hash = requestFragment;\n      }\n      return location;\n    }\n    __name(responseLocationURL, "responseLocationURL");\n    function requestCurrentURL(request) {\n      return request.urlList[request.urlList.length - 1];\n    }\n    __name(requestCurrentURL, "requestCurrentURL");\n    function requestBadPort(request) {\n      const url = requestCurrentURL(request);\n      if (urlIsHttpHttpsScheme(url) && badPorts.includes(url.port)) {\n        return "blocked";\n      }\n      return "allowed";\n    }\n    __name(requestBadPort, "requestBadPort");\n    function isErrorLike(object) {\n      return object instanceof Error || (object?.constructor?.name === "Error" || object?.constructor?.name === "DOMException");\n    }\n    __name(isErrorLike, "isErrorLike");\n    function isValidReasonPhrase(statusText) {\n      for (let i = 0; i < statusText.length; ++i) {\n        const c = statusText.charCodeAt(i);\n        if (!(c === 9 || // HTAB\n        c >= 32 && c <= 126 || // SP / VCHAR\n        c >= 128 && c <= 255)) {\n          return false;\n        }\n      }\n      return true;\n    }\n    __name(isValidReasonPhrase, "isValidReasonPhrase");\n    function isTokenChar(c) {\n      return !(c >= 127 || c <= 32 || c === "(" || c === ")" || c === "<" || c === ">" || c === "@" || c === "," || c === ";" || c === ":" || c === "\\\\" || c === \'"\' || c === "/" || c === "[" || c === "]" || c === "?" || c === "=" || c === "{" || c === "}");\n    }\n    __name(isTokenChar, "isTokenChar");\n    function isValidHTTPToken(characters) {\n      if (!characters || typeof characters !== "string") {\n        return false;\n      }\n      for (let i = 0; i < characters.length; ++i) {\n        const c = characters.charCodeAt(i);\n        if (c > 127 || !isTokenChar(c)) {\n          return false;\n        }\n      }\n      return true;\n    }\n    __name(isValidHTTPToken, "isValidHTTPToken");\n    function isValidHeaderName2(potentialValue) {\n      if (potentialValue.length === 0) {\n        return false;\n      }\n      return isValidHTTPToken(potentialValue);\n    }\n    __name(isValidHeaderName2, "isValidHeaderName");\n    function isValidHeaderValue(potentialValue) {\n      if (potentialValue.startsWith("	") || potentialValue.startsWith(" ") || potentialValue.endsWith("	") || potentialValue.endsWith(" ")) {\n        return false;\n      }\n      if (potentialValue.includes("\\0") || potentialValue.includes("\\r") || potentialValue.includes("\\n")) {\n        return false;\n      }\n      return true;\n    }\n    __name(isValidHeaderValue, "isValidHeaderValue");\n    function setRequestReferrerPolicyOnRedirect(request, actualResponse) {\n      const { headersList } = actualResponse;\n      const policyHeader = (headersList.get("referrer-policy") ?? "").split(",");\n      let policy = "";\n      if (policyHeader.length > 0) {\n        for (let i = policyHeader.length; i !== 0; i--) {\n          const token = policyHeader[i - 1].trim();\n          if (referrerPolicyTokens.includes(token)) {\n            policy = token;\n            break;\n          }\n        }\n      }\n      if (policy !== "") {\n        request.referrerPolicy = policy;\n      }\n    }\n    __name(setRequestReferrerPolicyOnRedirect, "setRequestReferrerPolicyOnRedirect");\n    function crossOriginResourcePolicyCheck() {\n      return "allowed";\n    }\n    __name(crossOriginResourcePolicyCheck, "crossOriginResourcePolicyCheck");\n    function corsCheck() {\n      return "success";\n    }\n    __name(corsCheck, "corsCheck");\n    function TAOCheck() {\n      return "success";\n    }\n    __name(TAOCheck, "TAOCheck");\n    function appendFetchMetadata(httpRequest) {\n      let header = null;\n      header = httpRequest.mode;\n      httpRequest.headersList.set("sec-fetch-mode", header);\n    }\n    __name(appendFetchMetadata, "appendFetchMetadata");\n    function appendRequestOriginHeader(request) {\n      let serializedOrigin = request.origin;\n      if (request.responseTainting === "cors" || request.mode === "websocket") {\n        if (serializedOrigin) {\n          request.headersList.append("origin", serializedOrigin);\n        }\n      } else if (request.method !== "GET" && request.method !== "HEAD") {\n        switch (request.referrerPolicy) {\n          case "no-referrer":\n            serializedOrigin = null;\n            break;\n          case "no-referrer-when-downgrade":\n          case "strict-origin":\n          case "strict-origin-when-cross-origin":\n            if (request.origin && urlHasHttpsScheme(request.origin) && !urlHasHttpsScheme(requestCurrentURL(request))) {\n              serializedOrigin = null;\n            }\n            break;\n          case "same-origin":\n            if (!sameOrigin(request, requestCurrentURL(request))) {\n              serializedOrigin = null;\n            }\n            break;\n          default:\n        }\n        if (serializedOrigin) {\n          request.headersList.append("origin", serializedOrigin);\n        }\n      }\n    }\n    __name(appendRequestOriginHeader, "appendRequestOriginHeader");\n    function coarsenedSharedCurrentTime(crossOriginIsolatedCapability) {\n      return performance2.now();\n    }\n    __name(coarsenedSharedCurrentTime, "coarsenedSharedCurrentTime");\n    function createOpaqueTimingInfo(timingInfo) {\n      return {\n        startTime: timingInfo.startTime ?? 0,\n        redirectStartTime: 0,\n        redirectEndTime: 0,\n        postRedirectStartTime: timingInfo.startTime ?? 0,\n        finalServiceWorkerStartTime: 0,\n        finalNetworkResponseStartTime: 0,\n        finalNetworkRequestStartTime: 0,\n        endTime: 0,\n        encodedBodySize: 0,\n        decodedBodySize: 0,\n        finalConnectionTimingInfo: null\n      };\n    }\n    __name(createOpaqueTimingInfo, "createOpaqueTimingInfo");\n    function makePolicyContainer() {\n      return {\n        referrerPolicy: "strict-origin-when-cross-origin"\n      };\n    }\n    __name(makePolicyContainer, "makePolicyContainer");\n    function clonePolicyContainer(policyContainer) {\n      return {\n        referrerPolicy: policyContainer.referrerPolicy\n      };\n    }\n    __name(clonePolicyContainer, "clonePolicyContainer");\n    function determineRequestsReferrer(request) {\n      const policy = request.referrerPolicy;\n      assert(policy);\n      let referrerSource = null;\n      if (request.referrer === "client") {\n        const globalOrigin = getGlobalOrigin();\n        if (!globalOrigin || globalOrigin.origin === "null") {\n          return "no-referrer";\n        }\n        referrerSource = new URL(globalOrigin);\n      } else if (request.referrer instanceof URL) {\n        referrerSource = request.referrer;\n      }\n      let referrerURL = stripURLForReferrer(referrerSource);\n      const referrerOrigin = stripURLForReferrer(referrerSource, true);\n      if (referrerURL.toString().length > 4096) {\n        referrerURL = referrerOrigin;\n      }\n      const areSameOrigin = sameOrigin(request, referrerURL);\n      const isNonPotentiallyTrustWorthy = isURLPotentiallyTrustworthy(referrerURL) && !isURLPotentiallyTrustworthy(request.url);\n      switch (policy) {\n        case "origin":\n          return referrerOrigin != null ? referrerOrigin : stripURLForReferrer(referrerSource, true);\n        case "unsafe-url":\n          return referrerURL;\n        case "same-origin":\n          return areSameOrigin ? referrerOrigin : "no-referrer";\n        case "origin-when-cross-origin":\n          return areSameOrigin ? referrerURL : referrerOrigin;\n        case "strict-origin-when-cross-origin": {\n          const currentURL = requestCurrentURL(request);\n          if (sameOrigin(referrerURL, currentURL)) {\n            return referrerURL;\n          }\n          if (isURLPotentiallyTrustworthy(referrerURL) && !isURLPotentiallyTrustworthy(currentURL)) {\n            return "no-referrer";\n          }\n          return referrerOrigin;\n        }\n        case "strict-origin":\n        case "no-referrer-when-downgrade":\n        default:\n          return isNonPotentiallyTrustWorthy ? "no-referrer" : referrerOrigin;\n      }\n    }\n    __name(determineRequestsReferrer, "determineRequestsReferrer");\n    function stripURLForReferrer(url, originOnly) {\n      assert(url instanceof URL);\n      if (url.protocol === "file:" || url.protocol === "about:" || url.protocol === "blank:") {\n        return "no-referrer";\n      }\n      url.username = "";\n      url.password = "";\n      url.hash = "";\n      if (originOnly) {\n        url.pathname = "";\n        url.search = "";\n      }\n      return url;\n    }\n    __name(stripURLForReferrer, "stripURLForReferrer");\n    function isURLPotentiallyTrustworthy(url) {\n      if (!(url instanceof URL)) {\n        return false;\n      }\n      if (url.href === "about:blank" || url.href === "about:srcdoc") {\n        return true;\n      }\n      if (url.protocol === "data:")\n        return true;\n      if (url.protocol === "file:")\n        return true;\n      return isOriginPotentiallyTrustworthy(url.origin);\n      function isOriginPotentiallyTrustworthy(origin) {\n        if (origin == null || origin === "null")\n          return false;\n        const originAsURL = new URL(origin);\n        if (originAsURL.protocol === "https:" || originAsURL.protocol === "wss:") {\n          return true;\n        }\n        if (/^127(?:\\.[0-9]+){0,2}\\.[0-9]+$|^\\[(?:0*:)*?:?0*1\\]$/.test(originAsURL.hostname) || (originAsURL.hostname === "localhost" || originAsURL.hostname.includes("localhost.")) || originAsURL.hostname.endsWith(".localhost")) {\n          return true;\n        }\n        return false;\n      }\n      __name(isOriginPotentiallyTrustworthy, "isOriginPotentiallyTrustworthy");\n    }\n    __name(isURLPotentiallyTrustworthy, "isURLPotentiallyTrustworthy");\n    function bytesMatch(bytes, metadataList) {\n      if (crypto === void 0) {\n        return true;\n      }\n      const parsedMetadata = parseMetadata(metadataList);\n      if (parsedMetadata === "no metadata") {\n        return true;\n      }\n      if (parsedMetadata.length === 0) {\n        return true;\n      }\n      const list = parsedMetadata.sort((c, d) => d.algo.localeCompare(c.algo));\n      const strongest = list[0].algo;\n      const metadata = list.filter((item) => item.algo === strongest);\n      for (const item of metadata) {\n        const algorithm = item.algo;\n        const expectedValue = item.hash;\n        const actualValue = crypto.createHash(algorithm).update(bytes).digest("base64");\n        if (actualValue === expectedValue) {\n          return true;\n        }\n      }\n      return false;\n    }\n    __name(bytesMatch, "bytesMatch");\n    var parseHashWithOptions = /((?<algo>sha256|sha384|sha512)-(?<hash>[A-z0-9+/]{1}.*={0,2}))( +[\\x21-\\x7e]?)?/i;\n    function parseMetadata(metadata) {\n      const result = [];\n      let empty = true;\n      const supportedHashes = crypto.getHashes();\n      for (const token of metadata.split(" ")) {\n        empty = false;\n        const parsedToken = parseHashWithOptions.exec(token);\n        if (parsedToken === null || parsedToken.groups === void 0) {\n          continue;\n        }\n        const algorithm = parsedToken.groups.algo;\n        if (supportedHashes.includes(algorithm.toLowerCase())) {\n          result.push(parsedToken.groups);\n        }\n      }\n      if (empty === true) {\n        return "no metadata";\n      }\n      return result;\n    }\n    __name(parseMetadata, "parseMetadata");\n    function tryUpgradeRequestToAPotentiallyTrustworthyURL(request) {\n    }\n    __name(tryUpgradeRequestToAPotentiallyTrustworthyURL, "tryUpgradeRequestToAPotentiallyTrustworthyURL");\n    function sameOrigin(A, B) {\n      if (A.origin === B.origin && A.origin === "null") {\n        return true;\n      }\n      if (A.protocol === B.protocol && A.hostname === B.hostname && A.port === B.port) {\n        return true;\n      }\n      return false;\n    }\n    __name(sameOrigin, "sameOrigin");\n    function createDeferredPromise() {\n      let res;\n      let rej;\n      const promise = new Promise((resolve, reject) => {\n        res = resolve;\n        rej = reject;\n      });\n      return { promise, resolve: res, reject: rej };\n    }\n    __name(createDeferredPromise, "createDeferredPromise");\n    function isAborted(fetchParams) {\n      return fetchParams.controller.state === "aborted";\n    }\n    __name(isAborted, "isAborted");\n    function isCancelled(fetchParams) {\n      return fetchParams.controller.state === "aborted" || fetchParams.controller.state === "terminated";\n    }\n    __name(isCancelled, "isCancelled");\n    function normalizeMethod(method) {\n      return /^(DELETE|GET|HEAD|OPTIONS|POST|PUT)$/i.test(method) ? method.toUpperCase() : method;\n    }\n    __name(normalizeMethod, "normalizeMethod");\n    function serializeJavascriptValueToJSONString(value) {\n      const result = JSON.stringify(value);\n      if (result === void 0) {\n        throw new TypeError("Value is not JSON serializable");\n      }\n      assert(typeof result === "string");\n      return result;\n    }\n    __name(serializeJavascriptValueToJSONString, "serializeJavascriptValueToJSONString");\n    var esIteratorPrototype = Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]()));\n    function makeIterator(iterator, name, kind) {\n      const object = {\n        index: 0,\n        kind,\n        target: iterator\n      };\n      const i = {\n        next() {\n          if (Object.getPrototypeOf(this) !== i) {\n            throw new TypeError(\n              `\'next\' called on an object that does not implement interface ${name} Iterator.`\n            );\n          }\n          const { index, kind: kind2, target } = object;\n          const values = target();\n          const len = values.length;\n          if (index >= len) {\n            return { value: void 0, done: true };\n          }\n          const pair = values[index];\n          object.index = index + 1;\n          return iteratorResult(pair, kind2);\n        },\n        // The class string of an iterator prototype object for a given interface is the\n        // result of concatenating the identifier of the interface and the string " Iterator".\n        [Symbol.toStringTag]: `${name} Iterator`\n      };\n      Object.setPrototypeOf(i, esIteratorPrototype);\n      return Object.setPrototypeOf({}, i);\n    }\n    __name(makeIterator, "makeIterator");\n    function iteratorResult(pair, kind) {\n      let result;\n      switch (kind) {\n        case "key": {\n          result = pair[0];\n          break;\n        }\n        case "value": {\n          result = pair[1];\n          break;\n        }\n        case "key+value": {\n          result = pair;\n          break;\n        }\n      }\n      return { value: result, done: false };\n    }\n    __name(iteratorResult, "iteratorResult");\n    function fullyReadBody(body, processBody, processBodyError) {\n      const successSteps = /* @__PURE__ */ __name((bytes) => queueMicrotask(() => processBody(bytes)), "successSteps");\n      const errorSteps = /* @__PURE__ */ __name((error) => queueMicrotask(() => processBodyError(error)), "errorSteps");\n      let reader;\n      try {\n        reader = body.stream.getReader();\n      } catch (e) {\n        errorSteps(e);\n        return;\n      }\n      readAllBytes(reader, successSteps, errorSteps);\n    }\n    __name(fullyReadBody, "fullyReadBody");\n    var ReadableStream = globalThis.ReadableStream;\n    function isReadableStreamLike(stream) {\n      if (!ReadableStream) {\n        ReadableStream = require("./streams").ReadableStream;\n      }\n      return stream instanceof ReadableStream || stream[Symbol.toStringTag] === "ReadableStream" && typeof stream.tee === "function";\n    }\n    __name(isReadableStreamLike, "isReadableStreamLike");\n    var MAXIMUM_ARGUMENT_LENGTH = 65535;\n    function isomorphicDecode(input) {\n      if (input.length < MAXIMUM_ARGUMENT_LENGTH) {\n        return String.fromCharCode(...input);\n      }\n      return input.reduce((previous, current) => previous + String.fromCharCode(current), "");\n    }\n    __name(isomorphicDecode, "isomorphicDecode");\n    function readableStreamClose(controller) {\n      try {\n        controller.close();\n      } catch (err) {\n        if (!err.message.includes("Controller is already closed")) {\n          throw err;\n        }\n      }\n    }\n    __name(readableStreamClose, "readableStreamClose");\n    function isomorphicEncode(input) {\n      for (let i = 0; i < input.length; i++) {\n        assert(input.charCodeAt(i) <= 255);\n      }\n      return input;\n    }\n    __name(isomorphicEncode, "isomorphicEncode");\n    async function readAllBytes(reader, successSteps, failureSteps) {\n      const bytes = [];\n      let byteLength = 0;\n      while (true) {\n        let done;\n        let chunk;\n        try {\n          ({ done, value: chunk } = await reader.read());\n        } catch (e) {\n          failureSteps(e);\n          return;\n        }\n        if (done) {\n          successSteps(Buffer.concat(bytes, byteLength));\n          return;\n        }\n        if (!isUint8Array(chunk)) {\n          failureSteps(new TypeError("Received non-Uint8Array chunk"));\n          return;\n        }\n        bytes.push(chunk);\n        byteLength += chunk.length;\n      }\n    }\n    __name(readAllBytes, "readAllBytes");\n    function urlIsLocal(url) {\n      assert("protocol" in url);\n      const protocol = url.protocol;\n      return protocol === "about:" || protocol === "blob:" || protocol === "data:";\n    }\n    __name(urlIsLocal, "urlIsLocal");\n    function urlHasHttpsScheme(url) {\n      if (typeof url === "string") {\n        return url.startsWith("https:");\n      }\n      return url.protocol === "https:";\n    }\n    __name(urlHasHttpsScheme, "urlHasHttpsScheme");\n    function urlIsHttpHttpsScheme(url) {\n      assert("protocol" in url);\n      const protocol = url.protocol;\n      return protocol === "http:" || protocol === "https:";\n    }\n    __name(urlIsHttpHttpsScheme, "urlIsHttpHttpsScheme");\n    var hasOwn = Object.hasOwn || ((dict, key) => Object.prototype.hasOwnProperty.call(dict, key));\n    module2.exports = {\n      isAborted,\n      isCancelled,\n      createDeferredPromise,\n      ReadableStreamFrom,\n      toUSVString,\n      tryUpgradeRequestToAPotentiallyTrustworthyURL,\n      coarsenedSharedCurrentTime,\n      determineRequestsReferrer,\n      makePolicyContainer,\n      clonePolicyContainer,\n      appendFetchMetadata,\n      appendRequestOriginHeader,\n      TAOCheck,\n      corsCheck,\n      crossOriginResourcePolicyCheck,\n      createOpaqueTimingInfo,\n      setRequestReferrerPolicyOnRedirect,\n      isValidHTTPToken,\n      requestBadPort,\n      requestCurrentURL,\n      responseURL,\n      responseLocationURL,\n      isBlobLike,\n      isURLPotentiallyTrustworthy,\n      isValidReasonPhrase,\n      sameOrigin,\n      normalizeMethod,\n      serializeJavascriptValueToJSONString,\n      makeIterator,\n      isValidHeaderName: isValidHeaderName2,\n      isValidHeaderValue,\n      hasOwn,\n      isErrorLike,\n      fullyReadBody,\n      bytesMatch,\n      isReadableStreamLike,\n      readableStreamClose,\n      isomorphicEncode,\n      isomorphicDecode,\n      urlIsLocal,\n      urlHasHttpsScheme,\n      urlIsHttpHttpsScheme,\n      readAllBytes\n    };\n  }\n});\n\n// ../../node_modules/.pnpm/undici@5.23.0/node_modules/undici/lib/fetch/webidl.js\nvar require_webidl = __commonJS({\n  "../../node_modules/.pnpm/undici@5.23.0/node_modules/undici/lib/fetch/webidl.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    var { types } = require("util");\n    var { hasOwn, toUSVString } = require_util2();\n    var webidl = {};\n    webidl.converters = {};\n    webidl.util = {};\n    webidl.errors = {};\n    webidl.errors.exception = function(message) {\n      return new TypeError(`${message.header}: ${message.message}`);\n    };\n    webidl.errors.conversionFailed = function(context) {\n      const plural = context.types.length === 1 ? "" : " one of";\n      const message = `${context.argument} could not be converted to${plural}: ${context.types.join(", ")}.`;\n      return webidl.errors.exception({\n        header: context.prefix,\n        message\n      });\n    };\n    webidl.errors.invalidArgument = function(context) {\n      return webidl.errors.exception({\n        header: context.prefix,\n        message: `"${context.value}" is an invalid ${context.type}.`\n      });\n    };\n    webidl.brandCheck = function(V, I, opts = void 0) {\n      if (opts?.strict !== false && !(V instanceof I)) {\n        throw new TypeError("Illegal invocation");\n      } else {\n        return V?.[Symbol.toStringTag] === I.prototype[Symbol.toStringTag];\n      }\n    };\n    webidl.argumentLengthCheck = function({ length }, min, ctx) {\n      if (length < min) {\n        throw webidl.errors.exception({\n          message: `${min} argument${min !== 1 ? "s" : ""} required, but${length ? " only" : ""} ${length} found.`,\n          ...ctx\n        });\n      }\n    };\n    webidl.illegalConstructor = function() {\n      throw webidl.errors.exception({\n        header: "TypeError",\n        message: "Illegal constructor"\n      });\n    };\n    webidl.util.Type = function(V) {\n      switch (typeof V) {\n        case "undefined":\n          return "Undefined";\n        case "boolean":\n          return "Boolean";\n        case "string":\n          return "String";\n        case "symbol":\n          return "Symbol";\n        case "number":\n          return "Number";\n        case "bigint":\n          return "BigInt";\n        case "function":\n        case "object": {\n          if (V === null) {\n            return "Null";\n          }\n          return "Object";\n        }\n      }\n    };\n    webidl.util.ConvertToInt = function(V, bitLength, signedness, opts = {}) {\n      let upperBound;\n      let lowerBound;\n      if (bitLength === 64) {\n        upperBound = Math.pow(2, 53) - 1;\n        if (signedness === "unsigned") {\n          lowerBound = 0;\n        } else {\n          lowerBound = Math.pow(-2, 53) + 1;\n        }\n      } else if (signedness === "unsigned") {\n        lowerBound = 0;\n        upperBound = Math.pow(2, bitLength) - 1;\n      } else {\n        lowerBound = Math.pow(-2, bitLength) - 1;\n        upperBound = Math.pow(2, bitLength - 1) - 1;\n      }\n      let x = Number(V);\n      if (x === 0) {\n        x = 0;\n      }\n      if (opts.enforceRange === true) {\n        if (Number.isNaN(x) || x === Number.POSITIVE_INFINITY || x === Number.NEGATIVE_INFINITY) {\n          throw webidl.errors.exception({\n            header: "Integer conversion",\n            message: `Could not convert ${V} to an integer.`\n          });\n        }\n        x = webidl.util.IntegerPart(x);\n        if (x < lowerBound || x > upperBound) {\n          throw webidl.errors.exception({\n            header: "Integer conversion",\n            message: `Value must be between ${lowerBound}-${upperBound}, got ${x}.`\n          });\n        }\n        return x;\n      }\n      if (!Number.isNaN(x) && opts.clamp === true) {\n        x = Math.min(Math.max(x, lowerBound), upperBound);\n        if (Math.floor(x) % 2 === 0) {\n          x = Math.floor(x);\n        } else {\n          x = Math.ceil(x);\n        }\n        return x;\n      }\n      if (Number.isNaN(x) || x === 0 && Object.is(0, x) || x === Number.POSITIVE_INFINITY || x === Number.NEGATIVE_INFINITY) {\n        return 0;\n      }\n      x = webidl.util.IntegerPart(x);\n      x = x % Math.pow(2, bitLength);\n      if (signedness === "signed" && x >= Math.pow(2, bitLength) - 1) {\n        return x - Math.pow(2, bitLength);\n      }\n      return x;\n    };\n    webidl.util.IntegerPart = function(n) {\n      const r = Math.floor(Math.abs(n));\n      if (n < 0) {\n        return -1 * r;\n      }\n      return r;\n    };\n    webidl.sequenceConverter = function(converter) {\n      return (V) => {\n        if (webidl.util.Type(V) !== "Object") {\n          throw webidl.errors.exception({\n            header: "Sequence",\n            message: `Value of type ${webidl.util.Type(V)} is not an Object.`\n          });\n        }\n        const method = V?.[Symbol.iterator]?.();\n        const seq = [];\n        if (method === void 0 || typeof method.next !== "function") {\n          throw webidl.errors.exception({\n            header: "Sequence",\n            message: "Object is not an iterator."\n          });\n        }\n        while (true) {\n          const { done, value } = method.next();\n          if (done) {\n            break;\n          }\n          seq.push(converter(value));\n        }\n        return seq;\n      };\n    };\n    webidl.recordConverter = function(keyConverter, valueConverter) {\n      return (O) => {\n        if (webidl.util.Type(O) !== "Object") {\n          throw webidl.errors.exception({\n            header: "Record",\n            message: `Value of type ${webidl.util.Type(O)} is not an Object.`\n          });\n        }\n        const result = {};\n        if (!types.isProxy(O)) {\n          const keys2 = Object.keys(O);\n          for (const key of keys2) {\n            const typedKey = keyConverter(key);\n            const typedValue = valueConverter(O[key]);\n            result[typedKey] = typedValue;\n          }\n          return result;\n        }\n        const keys = Reflect.ownKeys(O);\n        for (const key of keys) {\n          const desc = Reflect.getOwnPropertyDescriptor(O, key);\n          if (desc?.enumerable) {\n            const typedKey = keyConverter(key);\n            const typedValue = valueConverter(O[key]);\n            result[typedKey] = typedValue;\n          }\n        }\n        return result;\n      };\n    };\n    webidl.interfaceConverter = function(i) {\n      return (V, opts = {}) => {\n        if (opts.strict !== false && !(V instanceof i)) {\n          throw webidl.errors.exception({\n            header: i.name,\n            message: `Expected ${V} to be an instance of ${i.name}.`\n          });\n        }\n        return V;\n      };\n    };\n    webidl.dictionaryConverter = function(converters) {\n      return (dictionary) => {\n        const type = webidl.util.Type(dictionary);\n        const dict = {};\n        if (type === "Null" || type === "Undefined") {\n          return dict;\n        } else if (type !== "Object") {\n          throw webidl.errors.exception({\n            header: "Dictionary",\n            message: `Expected ${dictionary} to be one of: Null, Undefined, Object.`\n          });\n        }\n        for (const options of converters) {\n          const { key, defaultValue, required, converter } = options;\n          if (required === true) {\n            if (!hasOwn(dictionary, key)) {\n              throw webidl.errors.exception({\n                header: "Dictionary",\n                message: `Missing required key "${key}".`\n              });\n            }\n          }\n          let value = dictionary[key];\n          const hasDefault = hasOwn(options, "defaultValue");\n          if (hasDefault && value !== null) {\n            value = value ?? defaultValue;\n          }\n          if (required || hasDefault || value !== void 0) {\n            value = converter(value);\n            if (options.allowedValues && !options.allowedValues.includes(value)) {\n              throw webidl.errors.exception({\n                header: "Dictionary",\n                message: `${value} is not an accepted type. Expected one of ${options.allowedValues.join(", ")}.`\n              });\n            }\n            dict[key] = value;\n          }\n        }\n        return dict;\n      };\n    };\n    webidl.nullableConverter = function(converter) {\n      return (V) => {\n        if (V === null) {\n          return V;\n        }\n        return converter(V);\n      };\n    };\n    webidl.converters.DOMString = function(V, opts = {}) {\n      if (V === null && opts.legacyNullToEmptyString) {\n        return "";\n      }\n      if (typeof V === "symbol") {\n        throw new TypeError("Could not convert argument of type symbol to string.");\n      }\n      return String(V);\n    };\n    webidl.converters.ByteString = function(V) {\n      const x = webidl.converters.DOMString(V);\n      for (let index = 0; index < x.length; index++) {\n        const charCode = x.charCodeAt(index);\n        if (charCode > 255) {\n          throw new TypeError(\n            `Cannot convert argument to a ByteString because the character at index ${index} has a value of ${charCode} which is greater than 255.`\n          );\n        }\n      }\n      return x;\n    };\n    webidl.converters.USVString = toUSVString;\n    webidl.converters.boolean = function(V) {\n      const x = Boolean(V);\n      return x;\n    };\n    webidl.converters.any = function(V) {\n      return V;\n    };\n    webidl.converters["long long"] = function(V) {\n      const x = webidl.util.ConvertToInt(V, 64, "signed");\n      return x;\n    };\n    webidl.converters["unsigned long long"] = function(V) {\n      const x = webidl.util.ConvertToInt(V, 64, "unsigned");\n      return x;\n    };\n    webidl.converters["unsigned long"] = function(V) {\n      const x = webidl.util.ConvertToInt(V, 32, "unsigned");\n      return x;\n    };\n    webidl.converters["unsigned short"] = function(V, opts) {\n      const x = webidl.util.ConvertToInt(V, 16, "unsigned", opts);\n      return x;\n    };\n    webidl.converters.ArrayBuffer = function(V, opts = {}) {\n      if (webidl.util.Type(V) !== "Object" || !types.isAnyArrayBuffer(V)) {\n        throw webidl.errors.conversionFailed({\n          prefix: `${V}`,\n          argument: `${V}`,\n          types: ["ArrayBuffer"]\n        });\n      }\n      if (opts.allowShared === false && types.isSharedArrayBuffer(V)) {\n        throw webidl.errors.exception({\n          header: "ArrayBuffer",\n          message: "SharedArrayBuffer is not allowed."\n        });\n      }\n      return V;\n    };\n    webidl.converters.TypedArray = function(V, T, opts = {}) {\n      if (webidl.util.Type(V) !== "Object" || !types.isTypedArray(V) || V.constructor.name !== T.name) {\n        throw webidl.errors.conversionFailed({\n          prefix: `${T.name}`,\n          argument: `${V}`,\n          types: [T.name]\n        });\n      }\n      if (opts.allowShared === false && types.isSharedArrayBuffer(V.buffer)) {\n        throw webidl.errors.exception({\n          header: "ArrayBuffer",\n          message: "SharedArrayBuffer is not allowed."\n        });\n      }\n      return V;\n    };\n    webidl.converters.DataView = function(V, opts = {}) {\n      if (webidl.util.Type(V) !== "Object" || !types.isDataView(V)) {\n        throw webidl.errors.exception({\n          header: "DataView",\n          message: "Object is not a DataView."\n        });\n      }\n      if (opts.allowShared === false && types.isSharedArrayBuffer(V.buffer)) {\n        throw webidl.errors.exception({\n          header: "ArrayBuffer",\n          message: "SharedArrayBuffer is not allowed."\n        });\n      }\n      return V;\n    };\n    webidl.converters.BufferSource = function(V, opts = {}) {\n      if (types.isAnyArrayBuffer(V)) {\n        return webidl.converters.ArrayBuffer(V, opts);\n      }\n      if (types.isTypedArray(V)) {\n        return webidl.converters.TypedArray(V, V.constructor);\n      }\n      if (types.isDataView(V)) {\n        return webidl.converters.DataView(V, opts);\n      }\n      throw new TypeError(`Could not convert ${V} to a BufferSource.`);\n    };\n    webidl.converters["sequence<ByteString>"] = webidl.sequenceConverter(\n      webidl.converters.ByteString\n    );\n    webidl.converters["sequence<sequence<ByteString>>"] = webidl.sequenceConverter(\n      webidl.converters["sequence<ByteString>"]\n    );\n    webidl.converters["record<ByteString, ByteString>"] = webidl.recordConverter(\n      webidl.converters.ByteString,\n      webidl.converters.ByteString\n    );\n    module2.exports = {\n      webidl\n    };\n  }\n});\n\n// ../../node_modules/.pnpm/undici@5.23.0/node_modules/undici/lib/fetch/headers.js\nvar require_headers = __commonJS({\n  "../../node_modules/.pnpm/undici@5.23.0/node_modules/undici/lib/fetch/headers.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    var { kHeadersList } = require_symbols2();\n    var { kGuard: kGuard2 } = require_symbols();\n    var { kEnumerableProperty } = require_util();\n    var {\n      makeIterator,\n      isValidHeaderName: isValidHeaderName2,\n      isValidHeaderValue\n    } = require_util2();\n    var { webidl } = require_webidl();\n    var assert = require("assert");\n    var kHeadersMap = Symbol("headers map");\n    var kHeadersSortedMap = Symbol("headers map sorted");\n    function headerValueNormalize(potentialValue) {\n      let i = potentialValue.length;\n      while (/[\\r\\n\\t ]/.test(potentialValue.charAt(--i)))\n        ;\n      return potentialValue.slice(0, i + 1).replace(/^[\\r\\n\\t ]+/, "");\n    }\n    __name(headerValueNormalize, "headerValueNormalize");\n    function fill(headers, object) {\n      if (Array.isArray(object)) {\n        for (const header of object) {\n          if (header.length !== 2) {\n            throw webidl.errors.exception({\n              header: "Headers constructor",\n              message: `expected name/value pair to be length 2, found ${header.length}.`\n            });\n          }\n          headers.append(header[0], header[1]);\n        }\n      } else if (typeof object === "object" && object !== null) {\n        for (const [key, value] of Object.entries(object)) {\n          headers.append(key, value);\n        }\n      } else {\n        throw webidl.errors.conversionFailed({\n          prefix: "Headers constructor",\n          argument: "Argument 1",\n          types: ["sequence<sequence<ByteString>>", "record<ByteString, ByteString>"]\n        });\n      }\n    }\n    __name(fill, "fill");\n    var _HeadersList = class _HeadersList {\n      /** @type {[string, string][]|null} */\n      cookies = null;\n      constructor(init) {\n        if (init instanceof _HeadersList) {\n          this[kHeadersMap] = new Map(init[kHeadersMap]);\n          this[kHeadersSortedMap] = init[kHeadersSortedMap];\n          this.cookies = init.cookies;\n        } else {\n          this[kHeadersMap] = new Map(init);\n          this[kHeadersSortedMap] = null;\n        }\n      }\n      // https://fetch.spec.whatwg.org/#header-list-contains\n      contains(name) {\n        name = name.toLowerCase();\n        return this[kHeadersMap].has(name);\n      }\n      clear() {\n        this[kHeadersMap].clear();\n        this[kHeadersSortedMap] = null;\n        this.cookies = null;\n      }\n      // https://fetch.spec.whatwg.org/#concept-header-list-append\n      append(name, value) {\n        this[kHeadersSortedMap] = null;\n        const lowercaseName = name.toLowerCase();\n        const exists = this[kHeadersMap].get(lowercaseName);\n        if (exists) {\n          const delimiter = lowercaseName === "cookie" ? "; " : ", ";\n          this[kHeadersMap].set(lowercaseName, {\n            name: exists.name,\n            value: `${exists.value}${delimiter}${value}`\n          });\n        } else {\n          this[kHeadersMap].set(lowercaseName, { name, value });\n        }\n        if (lowercaseName === "set-cookie") {\n          this.cookies ??= [];\n          this.cookies.push(value);\n        }\n      }\n      // https://fetch.spec.whatwg.org/#concept-header-list-set\n      set(name, value) {\n        this[kHeadersSortedMap] = null;\n        const lowercaseName = name.toLowerCase();\n        if (lowercaseName === "set-cookie") {\n          this.cookies = [value];\n        }\n        return this[kHeadersMap].set(lowercaseName, { name, value });\n      }\n      // https://fetch.spec.whatwg.org/#concept-header-list-delete\n      delete(name) {\n        this[kHeadersSortedMap] = null;\n        name = name.toLowerCase();\n        if (name === "set-cookie") {\n          this.cookies = null;\n        }\n        return this[kHeadersMap].delete(name);\n      }\n      // https://fetch.spec.whatwg.org/#concept-header-list-get\n      get(name) {\n        if (!this.contains(name)) {\n          return null;\n        }\n        return this[kHeadersMap].get(name.toLowerCase())?.value ?? null;\n      }\n      *[Symbol.iterator]() {\n        for (const [name, { value }] of this[kHeadersMap]) {\n          yield [name, value];\n        }\n      }\n      get entries() {\n        const headers = {};\n        if (this[kHeadersMap].size) {\n          for (const { name, value } of this[kHeadersMap].values()) {\n            headers[name] = value;\n          }\n        }\n        return headers;\n      }\n    };\n    __name(_HeadersList, "HeadersList");\n    var HeadersList = _HeadersList;\n    var _Headers = class _Headers {\n      constructor(init = void 0) {\n        this[kHeadersList] = new HeadersList();\n        this[kGuard2] = "none";\n        if (init !== void 0) {\n          init = webidl.converters.HeadersInit(init);\n          fill(this, init);\n        }\n      }\n      // https://fetch.spec.whatwg.org/#dom-headers-append\n      append(name, value) {\n        webidl.brandCheck(this, _Headers);\n        webidl.argumentLengthCheck(arguments, 2, { header: "Headers.append" });\n        name = webidl.converters.ByteString(name);\n        value = webidl.converters.ByteString(value);\n        value = headerValueNormalize(value);\n        if (!isValidHeaderName2(name)) {\n          throw webidl.errors.invalidArgument({\n            prefix: "Headers.append",\n            value: name,\n            type: "header name"\n          });\n        } else if (!isValidHeaderValue(value)) {\n          throw webidl.errors.invalidArgument({\n            prefix: "Headers.append",\n            value,\n            type: "header value"\n          });\n        }\n        if (this[kGuard2] === "immutable") {\n          throw new TypeError("immutable");\n        } else if (this[kGuard2] === "request-no-cors") {\n        }\n        return this[kHeadersList].append(name, value);\n      }\n      // https://fetch.spec.whatwg.org/#dom-headers-delete\n      delete(name) {\n        webidl.brandCheck(this, _Headers);\n        webidl.argumentLengthCheck(arguments, 1, { header: "Headers.delete" });\n        name = webidl.converters.ByteString(name);\n        if (!isValidHeaderName2(name)) {\n          throw webidl.errors.invalidArgument({\n            prefix: "Headers.delete",\n            value: name,\n            type: "header name"\n          });\n        }\n        if (this[kGuard2] === "immutable") {\n          throw new TypeError("immutable");\n        } else if (this[kGuard2] === "request-no-cors") {\n        }\n        if (!this[kHeadersList].contains(name)) {\n          return;\n        }\n        return this[kHeadersList].delete(name);\n      }\n      // https://fetch.spec.whatwg.org/#dom-headers-get\n      get(name) {\n        webidl.brandCheck(this, _Headers);\n        webidl.argumentLengthCheck(arguments, 1, { header: "Headers.get" });\n        name = webidl.converters.ByteString(name);\n        if (!isValidHeaderName2(name)) {\n          throw webidl.errors.invalidArgument({\n            prefix: "Headers.get",\n            value: name,\n            type: "header name"\n          });\n        }\n        return this[kHeadersList].get(name);\n      }\n      // https://fetch.spec.whatwg.org/#dom-headers-has\n      has(name) {\n        webidl.brandCheck(this, _Headers);\n        webidl.argumentLengthCheck(arguments, 1, { header: "Headers.has" });\n        name = webidl.converters.ByteString(name);\n        if (!isValidHeaderName2(name)) {\n          throw webidl.errors.invalidArgument({\n            prefix: "Headers.has",\n            value: name,\n            type: "header name"\n          });\n        }\n        return this[kHeadersList].contains(name);\n      }\n      // https://fetch.spec.whatwg.org/#dom-headers-set\n      set(name, value) {\n        webidl.brandCheck(this, _Headers);\n        webidl.argumentLengthCheck(arguments, 2, { header: "Headers.set" });\n        name = webidl.converters.ByteString(name);\n        value = webidl.converters.ByteString(value);\n        value = headerValueNormalize(value);\n        if (!isValidHeaderName2(name)) {\n          throw webidl.errors.invalidArgument({\n            prefix: "Headers.set",\n            value: name,\n            type: "header name"\n          });\n        } else if (!isValidHeaderValue(value)) {\n          throw webidl.errors.invalidArgument({\n            prefix: "Headers.set",\n            value,\n            type: "header value"\n          });\n        }\n        if (this[kGuard2] === "immutable") {\n          throw new TypeError("immutable");\n        } else if (this[kGuard2] === "request-no-cors") {\n        }\n        return this[kHeadersList].set(name, value);\n      }\n      // https://fetch.spec.whatwg.org/#dom-headers-getsetcookie\n      getSetCookie() {\n        webidl.brandCheck(this, _Headers);\n        const list = this[kHeadersList].cookies;\n        if (list) {\n          return [...list];\n        }\n        return [];\n      }\n      // https://fetch.spec.whatwg.org/#concept-header-list-sort-and-combine\n      get [kHeadersSortedMap]() {\n        if (this[kHeadersList][kHeadersSortedMap]) {\n          return this[kHeadersList][kHeadersSortedMap];\n        }\n        const headers = [];\n        const names = [...this[kHeadersList]].sort((a, b) => a[0] < b[0] ? -1 : 1);\n        const cookies = this[kHeadersList].cookies;\n        for (const [name, value] of names) {\n          if (name === "set-cookie") {\n            for (const value2 of cookies) {\n              headers.push([name, value2]);\n            }\n          } else {\n            assert(value !== null);\n            headers.push([name, value]);\n          }\n        }\n        this[kHeadersList][kHeadersSortedMap] = headers;\n        return headers;\n      }\n      keys() {\n        webidl.brandCheck(this, _Headers);\n        return makeIterator(\n          () => [...this[kHeadersSortedMap].values()],\n          "Headers",\n          "key"\n        );\n      }\n      values() {\n        webidl.brandCheck(this, _Headers);\n        return makeIterator(\n          () => [...this[kHeadersSortedMap].values()],\n          "Headers",\n          "value"\n        );\n      }\n      entries() {\n        webidl.brandCheck(this, _Headers);\n        return makeIterator(\n          () => [...this[kHeadersSortedMap].values()],\n          "Headers",\n          "key+value"\n        );\n      }\n      /**\n       * @param {(value: string, key: string, self: Headers) => void} callbackFn\n       * @param {unknown} thisArg\n       */\n      forEach(callbackFn, thisArg = globalThis) {\n        webidl.brandCheck(this, _Headers);\n        webidl.argumentLengthCheck(arguments, 1, { header: "Headers.forEach" });\n        if (typeof callbackFn !== "function") {\n          throw new TypeError(\n            "Failed to execute \'forEach\' on \'Headers\': parameter 1 is not of type \'Function\'."\n          );\n        }\n        for (const [key, value] of this) {\n          callbackFn.apply(thisArg, [value, key, this]);\n        }\n      }\n      [Symbol.for("nodejs.util.inspect.custom")]() {\n        webidl.brandCheck(this, _Headers);\n        return this[kHeadersList];\n      }\n    };\n    __name(_Headers, "Headers");\n    var Headers3 = _Headers;\n    Headers3.prototype[Symbol.iterator] = Headers3.prototype.entries;\n    Object.defineProperties(Headers3.prototype, {\n      append: kEnumerableProperty,\n      delete: kEnumerableProperty,\n      get: kEnumerableProperty,\n      has: kEnumerableProperty,\n      set: kEnumerableProperty,\n      getSetCookie: kEnumerableProperty,\n      keys: kEnumerableProperty,\n      values: kEnumerableProperty,\n      entries: kEnumerableProperty,\n      forEach: kEnumerableProperty,\n      [Symbol.iterator]: { enumerable: false },\n      [Symbol.toStringTag]: {\n        value: "Headers",\n        configurable: true\n      }\n    });\n    webidl.converters.HeadersInit = function(V) {\n      if (webidl.util.Type(V) === "Object") {\n        if (V[Symbol.iterator]) {\n          return webidl.converters["sequence<sequence<ByteString>>"](V);\n        }\n        return webidl.converters["record<ByteString, ByteString>"](V);\n      }\n      throw webidl.errors.conversionFailed({\n        prefix: "Headers constructor",\n        argument: "Argument 1",\n        types: ["sequence<sequence<ByteString>>", "record<ByteString, ByteString>"]\n      });\n    };\n    module2.exports = {\n      fill,\n      Headers: Headers3,\n      HeadersList\n    };\n  }\n});\n\n// ../../node_modules/.pnpm/busboy@1.6.0/node_modules/busboy/lib/utils.js\nvar require_utils = __commonJS({\n  "../../node_modules/.pnpm/busboy@1.6.0/node_modules/busboy/lib/utils.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    function parseContentType(str) {\n      if (str.length === 0)\n        return;\n      const params = /* @__PURE__ */ Object.create(null);\n      let i = 0;\n      for (; i < str.length; ++i) {\n        const code = str.charCodeAt(i);\n        if (TOKEN[code] !== 1) {\n          if (code !== 47 || i === 0)\n            return;\n          break;\n        }\n      }\n      if (i === str.length)\n        return;\n      const type = str.slice(0, i).toLowerCase();\n      const subtypeStart = ++i;\n      for (; i < str.length; ++i) {\n        const code = str.charCodeAt(i);\n        if (TOKEN[code] !== 1) {\n          if (i === subtypeStart)\n            return;\n          if (parseContentTypeParams(str, i, params) === void 0)\n            return;\n          break;\n        }\n      }\n      if (i === subtypeStart)\n        return;\n      const subtype = str.slice(subtypeStart, i).toLowerCase();\n      return { type, subtype, params };\n    }\n    __name(parseContentType, "parseContentType");\n    function parseContentTypeParams(str, i, params) {\n      while (i < str.length) {\n        for (; i < str.length; ++i) {\n          const code = str.charCodeAt(i);\n          if (code !== 32 && code !== 9)\n            break;\n        }\n        if (i === str.length)\n          break;\n        if (str.charCodeAt(i++) !== 59)\n          return;\n        for (; i < str.length; ++i) {\n          const code = str.charCodeAt(i);\n          if (code !== 32 && code !== 9)\n            break;\n        }\n        if (i === str.length)\n          return;\n        let name;\n        const nameStart = i;\n        for (; i < str.length; ++i) {\n          const code = str.charCodeAt(i);\n          if (TOKEN[code] !== 1) {\n            if (code !== 61)\n              return;\n            break;\n          }\n        }\n        if (i === str.length)\n          return;\n        name = str.slice(nameStart, i);\n        ++i;\n        if (i === str.length)\n          return;\n        let value = "";\n        let valueStart;\n        if (str.charCodeAt(i) === 34) {\n          valueStart = ++i;\n          let escaping = false;\n          for (; i < str.length; ++i) {\n            const code = str.charCodeAt(i);\n            if (code === 92) {\n              if (escaping) {\n                valueStart = i;\n                escaping = false;\n              } else {\n                value += str.slice(valueStart, i);\n                escaping = true;\n              }\n              continue;\n            }\n            if (code === 34) {\n              if (escaping) {\n                valueStart = i;\n                escaping = false;\n                continue;\n              }\n              value += str.slice(valueStart, i);\n              break;\n            }\n            if (escaping) {\n              valueStart = i - 1;\n              escaping = false;\n            }\n            if (QDTEXT[code] !== 1)\n              return;\n          }\n          if (i === str.length)\n            return;\n          ++i;\n        } else {\n          valueStart = i;\n          for (; i < str.length; ++i) {\n            const code = str.charCodeAt(i);\n            if (TOKEN[code] !== 1) {\n              if (i === valueStart)\n                return;\n              break;\n            }\n          }\n          value = str.slice(valueStart, i);\n        }\n        name = name.toLowerCase();\n        if (params[name] === void 0)\n          params[name] = value;\n      }\n      return params;\n    }\n    __name(parseContentTypeParams, "parseContentTypeParams");\n    function parseDisposition(str, defDecoder) {\n      if (str.length === 0)\n        return;\n      const params = /* @__PURE__ */ Object.create(null);\n      let i = 0;\n      for (; i < str.length; ++i) {\n        const code = str.charCodeAt(i);\n        if (TOKEN[code] !== 1) {\n          if (parseDispositionParams(str, i, params, defDecoder) === void 0)\n            return;\n          break;\n        }\n      }\n      const type = str.slice(0, i).toLowerCase();\n      return { type, params };\n    }\n    __name(parseDisposition, "parseDisposition");\n    function parseDispositionParams(str, i, params, defDecoder) {\n      while (i < str.length) {\n        for (; i < str.length; ++i) {\n          const code = str.charCodeAt(i);\n          if (code !== 32 && code !== 9)\n            break;\n        }\n        if (i === str.length)\n          break;\n        if (str.charCodeAt(i++) !== 59)\n          return;\n        for (; i < str.length; ++i) {\n          const code = str.charCodeAt(i);\n          if (code !== 32 && code !== 9)\n            break;\n        }\n        if (i === str.length)\n          return;\n        let name;\n        const nameStart = i;\n        for (; i < str.length; ++i) {\n          const code = str.charCodeAt(i);\n          if (TOKEN[code] !== 1) {\n            if (code === 61)\n              break;\n            return;\n          }\n        }\n        if (i === str.length)\n          return;\n        let value = "";\n        let valueStart;\n        let charset;\n        name = str.slice(nameStart, i);\n        if (name.charCodeAt(name.length - 1) === 42) {\n          const charsetStart = ++i;\n          for (; i < str.length; ++i) {\n            const code = str.charCodeAt(i);\n            if (CHARSET[code] !== 1) {\n              if (code !== 39)\n                return;\n              break;\n            }\n          }\n          if (i === str.length)\n            return;\n          charset = str.slice(charsetStart, i);\n          ++i;\n          for (; i < str.length; ++i) {\n            const code = str.charCodeAt(i);\n            if (code === 39)\n              break;\n          }\n          if (i === str.length)\n            return;\n          ++i;\n          if (i === str.length)\n            return;\n          valueStart = i;\n          let encode = 0;\n          for (; i < str.length; ++i) {\n            const code = str.charCodeAt(i);\n            if (EXTENDED_VALUE[code] !== 1) {\n              if (code === 37) {\n                let hexUpper;\n                let hexLower;\n                if (i + 2 < str.length && (hexUpper = HEX_VALUES[str.charCodeAt(i + 1)]) !== -1 && (hexLower = HEX_VALUES[str.charCodeAt(i + 2)]) !== -1) {\n                  const byteVal = (hexUpper << 4) + hexLower;\n                  value += str.slice(valueStart, i);\n                  value += String.fromCharCode(byteVal);\n                  i += 2;\n                  valueStart = i + 1;\n                  if (byteVal >= 128)\n                    encode = 2;\n                  else if (encode === 0)\n                    encode = 1;\n                  continue;\n                }\n                return;\n              }\n              break;\n            }\n          }\n          value += str.slice(valueStart, i);\n          value = convertToUTF8(value, charset, encode);\n          if (value === void 0)\n            return;\n        } else {\n          ++i;\n          if (i === str.length)\n            return;\n          if (str.charCodeAt(i) === 34) {\n            valueStart = ++i;\n            let escaping = false;\n            for (; i < str.length; ++i) {\n              const code = str.charCodeAt(i);\n              if (code === 92) {\n                if (escaping) {\n                  valueStart = i;\n                  escaping = false;\n                } else {\n                  value += str.slice(valueStart, i);\n                  escaping = true;\n                }\n                continue;\n              }\n              if (code === 34) {\n                if (escaping) {\n                  valueStart = i;\n                  escaping = false;\n                  continue;\n                }\n                value += str.slice(valueStart, i);\n                break;\n              }\n              if (escaping) {\n                valueStart = i - 1;\n                escaping = false;\n              }\n              if (QDTEXT[code] !== 1)\n                return;\n            }\n            if (i === str.length)\n              return;\n            ++i;\n          } else {\n            valueStart = i;\n            for (; i < str.length; ++i) {\n              const code = str.charCodeAt(i);\n              if (TOKEN[code] !== 1) {\n                if (i === valueStart)\n                  return;\n                break;\n              }\n            }\n            value = str.slice(valueStart, i);\n          }\n          value = defDecoder(value, 2);\n          if (value === void 0)\n            return;\n        }\n        name = name.toLowerCase();\n        if (params[name] === void 0)\n          params[name] = value;\n      }\n      return params;\n    }\n    __name(parseDispositionParams, "parseDispositionParams");\n    function getDecoder(charset) {\n      let lc;\n      while (true) {\n        switch (charset) {\n          case "utf-8":\n          case "utf8":\n            return decoders.utf8;\n          case "latin1":\n          case "ascii":\n          case "us-ascii":\n          case "iso-8859-1":\n          case "iso8859-1":\n          case "iso88591":\n          case "iso_8859-1":\n          case "windows-1252":\n          case "iso_8859-1:1987":\n          case "cp1252":\n          case "x-cp1252":\n            return decoders.latin1;\n          case "utf16le":\n          case "utf-16le":\n          case "ucs2":\n          case "ucs-2":\n            return decoders.utf16le;\n          case "base64":\n            return decoders.base64;\n          default:\n            if (lc === void 0) {\n              lc = true;\n              charset = charset.toLowerCase();\n              continue;\n            }\n            return decoders.other.bind(charset);\n        }\n      }\n    }\n    __name(getDecoder, "getDecoder");\n    var decoders = {\n      utf8: (data, hint) => {\n        if (data.length === 0)\n          return "";\n        if (typeof data === "string") {\n          if (hint < 2)\n            return data;\n          data = Buffer.from(data, "latin1");\n        }\n        return data.utf8Slice(0, data.length);\n      },\n      latin1: (data, hint) => {\n        if (data.length === 0)\n          return "";\n        if (typeof data === "string")\n          return data;\n        return data.latin1Slice(0, data.length);\n      },\n      utf16le: (data, hint) => {\n        if (data.length === 0)\n          return "";\n        if (typeof data === "string")\n          data = Buffer.from(data, "latin1");\n        return data.ucs2Slice(0, data.length);\n      },\n      base64: (data, hint) => {\n        if (data.length === 0)\n          return "";\n        if (typeof data === "string")\n          data = Buffer.from(data, "latin1");\n        return data.base64Slice(0, data.length);\n      },\n      other: (data, hint) => {\n        if (data.length === 0)\n          return "";\n        if (typeof data === "string")\n          data = Buffer.from(data, "latin1");\n        try {\n          const decoder = new TextDecoder(exports);\n          return decoder.decode(data);\n        } catch {\n        }\n      }\n    };\n    function convertToUTF8(data, charset, hint) {\n      const decode = getDecoder(charset);\n      if (decode)\n        return decode(data, hint);\n    }\n    __name(convertToUTF8, "convertToUTF8");\n    function basename(path) {\n      if (typeof path !== "string")\n        return "";\n      for (let i = path.length - 1; i >= 0; --i) {\n        switch (path.charCodeAt(i)) {\n          case 47:\n          case 92:\n            path = path.slice(i + 1);\n            return path === ".." || path === "." ? "" : path;\n        }\n      }\n      return path === ".." || path === "." ? "" : path;\n    }\n    __name(basename, "basename");\n    var TOKEN = [\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      1,\n      0,\n      1,\n      1,\n      1,\n      1,\n      1,\n      0,\n      0,\n      1,\n      1,\n      0,\n      1,\n      1,\n      0,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      0,\n      0,\n      0,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      0,\n      1,\n      0,\n      1,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0\n    ];\n    var QDTEXT = [\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      1,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      1,\n      1,\n      0,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      0,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      0,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1\n    ];\n    var CHARSET = [\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      1,\n      0,\n      1,\n      1,\n      1,\n      1,\n      0,\n      0,\n      0,\n      0,\n      1,\n      0,\n      1,\n      0,\n      0,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      0,\n      0,\n      0,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      0,\n      1,\n      1,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0\n    ];\n    var EXTENDED_VALUE = [\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      1,\n      0,\n      1,\n      1,\n      0,\n      1,\n      0,\n      0,\n      0,\n      0,\n      1,\n      0,\n      1,\n      1,\n      0,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      0,\n      0,\n      0,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      0,\n      1,\n      0,\n      1,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0\n    ];\n    var HEX_VALUES = [\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      0,\n      1,\n      2,\n      3,\n      4,\n      5,\n      6,\n      7,\n      8,\n      9,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      10,\n      11,\n      12,\n      13,\n      14,\n      15,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      10,\n      11,\n      12,\n      13,\n      14,\n      15,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1\n    ];\n    module2.exports = {\n      basename,\n      convertToUTF8,\n      getDecoder,\n      parseContentType,\n      parseDisposition\n    };\n  }\n});\n\n// ../../node_modules/.pnpm/streamsearch@1.1.0/node_modules/streamsearch/lib/sbmh.js\nvar require_sbmh = __commonJS({\n  "../../node_modules/.pnpm/streamsearch@1.1.0/node_modules/streamsearch/lib/sbmh.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    function memcmp(buf1, pos1, buf2, pos2, num) {\n      for (let i = 0; i < num; ++i) {\n        if (buf1[pos1 + i] !== buf2[pos2 + i])\n          return false;\n      }\n      return true;\n    }\n    __name(memcmp, "memcmp");\n    var _SBMH = class _SBMH {\n      constructor(needle, cb) {\n        if (typeof cb !== "function")\n          throw new Error("Missing match callback");\n        if (typeof needle === "string")\n          needle = Buffer.from(needle);\n        else if (!Buffer.isBuffer(needle))\n          throw new Error(`Expected Buffer for needle, got ${typeof needle}`);\n        const needleLen = needle.length;\n        this.maxMatches = Infinity;\n        this.matches = 0;\n        this._cb = cb;\n        this._lookbehindSize = 0;\n        this._needle = needle;\n        this._bufPos = 0;\n        this._lookbehind = Buffer.allocUnsafe(needleLen);\n        this._occ = [\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen,\n          needleLen\n        ];\n        if (needleLen > 1) {\n          for (let i = 0; i < needleLen - 1; ++i)\n            this._occ[needle[i]] = needleLen - 1 - i;\n        }\n      }\n      reset() {\n        this.matches = 0;\n        this._lookbehindSize = 0;\n        this._bufPos = 0;\n      }\n      push(chunk, pos) {\n        let result;\n        if (!Buffer.isBuffer(chunk))\n          chunk = Buffer.from(chunk, "latin1");\n        const chunkLen = chunk.length;\n        this._bufPos = pos || 0;\n        while (result !== chunkLen && this.matches < this.maxMatches)\n          result = feed(this, chunk);\n        return result;\n      }\n      destroy() {\n        const lbSize = this._lookbehindSize;\n        if (lbSize)\n          this._cb(false, this._lookbehind, 0, lbSize, false);\n        this.reset();\n      }\n    };\n    __name(_SBMH, "SBMH");\n    var SBMH = _SBMH;\n    function feed(self, data) {\n      const len = data.length;\n      const needle = self._needle;\n      const needleLen = needle.length;\n      let pos = -self._lookbehindSize;\n      const lastNeedleCharPos = needleLen - 1;\n      const lastNeedleChar = needle[lastNeedleCharPos];\n      const end = len - needleLen;\n      const occ = self._occ;\n      const lookbehind = self._lookbehind;\n      if (pos < 0) {\n        while (pos < 0 && pos <= end) {\n          const nextPos = pos + lastNeedleCharPos;\n          const ch = nextPos < 0 ? lookbehind[self._lookbehindSize + nextPos] : data[nextPos];\n          if (ch === lastNeedleChar && matchNeedle(self, data, pos, lastNeedleCharPos)) {\n            self._lookbehindSize = 0;\n            ++self.matches;\n            if (pos > -self._lookbehindSize)\n              self._cb(true, lookbehind, 0, self._lookbehindSize + pos, false);\n            else\n              self._cb(true, void 0, 0, 0, true);\n            return self._bufPos = pos + needleLen;\n          }\n          pos += occ[ch];\n        }\n        while (pos < 0 && !matchNeedle(self, data, pos, len - pos))\n          ++pos;\n        if (pos < 0) {\n          const bytesToCutOff = self._lookbehindSize + pos;\n          if (bytesToCutOff > 0) {\n            self._cb(false, lookbehind, 0, bytesToCutOff, false);\n          }\n          self._lookbehindSize -= bytesToCutOff;\n          lookbehind.copy(lookbehind, 0, bytesToCutOff, self._lookbehindSize);\n          lookbehind.set(data, self._lookbehindSize);\n          self._lookbehindSize += len;\n          self._bufPos = len;\n          return len;\n        }\n        self._cb(false, lookbehind, 0, self._lookbehindSize, false);\n        self._lookbehindSize = 0;\n      }\n      pos += self._bufPos;\n      const firstNeedleChar = needle[0];\n      while (pos <= end) {\n        const ch = data[pos + lastNeedleCharPos];\n        if (ch === lastNeedleChar && data[pos] === firstNeedleChar && memcmp(needle, 0, data, pos, lastNeedleCharPos)) {\n          ++self.matches;\n          if (pos > 0)\n            self._cb(true, data, self._bufPos, pos, true);\n          else\n            self._cb(true, void 0, 0, 0, true);\n          return self._bufPos = pos + needleLen;\n        }\n        pos += occ[ch];\n      }\n      while (pos < len) {\n        if (data[pos] !== firstNeedleChar || !memcmp(data, pos, needle, 0, len - pos)) {\n          ++pos;\n          continue;\n        }\n        data.copy(lookbehind, 0, pos, len);\n        self._lookbehindSize = len - pos;\n        break;\n      }\n      if (pos > 0)\n        self._cb(false, data, self._bufPos, pos < len ? pos : len, true);\n      self._bufPos = len;\n      return len;\n    }\n    __name(feed, "feed");\n    function matchNeedle(self, data, pos, len) {\n      const lb = self._lookbehind;\n      const lbSize = self._lookbehindSize;\n      const needle = self._needle;\n      for (let i = 0; i < len; ++i, ++pos) {\n        const ch = pos < 0 ? lb[lbSize + pos] : data[pos];\n        if (ch !== needle[i])\n          return false;\n      }\n      return true;\n    }\n    __name(matchNeedle, "matchNeedle");\n    module2.exports = SBMH;\n  }\n});\n\n// ../../node_modules/.pnpm/busboy@1.6.0/node_modules/busboy/lib/types/multipart.js\nvar require_multipart = __commonJS({\n  "../../node_modules/.pnpm/busboy@1.6.0/node_modules/busboy/lib/types/multipart.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    var { Readable, Writable } = require("stream");\n    var StreamSearch = require_sbmh();\n    var {\n      basename,\n      convertToUTF8,\n      getDecoder,\n      parseContentType,\n      parseDisposition\n    } = require_utils();\n    var BUF_CRLF = Buffer.from("\\r\\n");\n    var BUF_CR = Buffer.from("\\r");\n    var BUF_DASH = Buffer.from("-");\n    function noop() {\n    }\n    __name(noop, "noop");\n    var MAX_HEADER_PAIRS = 2e3;\n    var MAX_HEADER_SIZE = 16 * 1024;\n    var HPARSER_NAME = 0;\n    var HPARSER_PRE_OWS = 1;\n    var HPARSER_VALUE = 2;\n    var _HeaderParser = class _HeaderParser {\n      constructor(cb) {\n        this.header = /* @__PURE__ */ Object.create(null);\n        this.pairCount = 0;\n        this.byteCount = 0;\n        this.state = HPARSER_NAME;\n        this.name = "";\n        this.value = "";\n        this.crlf = 0;\n        this.cb = cb;\n      }\n      reset() {\n        this.header = /* @__PURE__ */ Object.create(null);\n        this.pairCount = 0;\n        this.byteCount = 0;\n        this.state = HPARSER_NAME;\n        this.name = "";\n        this.value = "";\n        this.crlf = 0;\n      }\n      push(chunk, pos, end) {\n        let start = pos;\n        while (pos < end) {\n          switch (this.state) {\n            case HPARSER_NAME: {\n              let done = false;\n              for (; pos < end; ++pos) {\n                if (this.byteCount === MAX_HEADER_SIZE)\n                  return -1;\n                ++this.byteCount;\n                const code = chunk[pos];\n                if (TOKEN[code] !== 1) {\n                  if (code !== 58)\n                    return -1;\n                  this.name += chunk.latin1Slice(start, pos);\n                  if (this.name.length === 0)\n                    return -1;\n                  ++pos;\n                  done = true;\n                  this.state = HPARSER_PRE_OWS;\n                  break;\n                }\n              }\n              if (!done) {\n                this.name += chunk.latin1Slice(start, pos);\n                break;\n              }\n            }\n            case HPARSER_PRE_OWS: {\n              let done = false;\n              for (; pos < end; ++pos) {\n                if (this.byteCount === MAX_HEADER_SIZE)\n                  return -1;\n                ++this.byteCount;\n                const code = chunk[pos];\n                if (code !== 32 && code !== 9) {\n                  start = pos;\n                  done = true;\n                  this.state = HPARSER_VALUE;\n                  break;\n                }\n              }\n              if (!done)\n                break;\n            }\n            case HPARSER_VALUE:\n              switch (this.crlf) {\n                case 0:\n                  for (; pos < end; ++pos) {\n                    if (this.byteCount === MAX_HEADER_SIZE)\n                      return -1;\n                    ++this.byteCount;\n                    const code = chunk[pos];\n                    if (FIELD_VCHAR[code] !== 1) {\n                      if (code !== 13)\n                        return -1;\n                      ++this.crlf;\n                      break;\n                    }\n                  }\n                  this.value += chunk.latin1Slice(start, pos++);\n                  break;\n                case 1:\n                  if (this.byteCount === MAX_HEADER_SIZE)\n                    return -1;\n                  ++this.byteCount;\n                  if (chunk[pos++] !== 10)\n                    return -1;\n                  ++this.crlf;\n                  break;\n                case 2: {\n                  if (this.byteCount === MAX_HEADER_SIZE)\n                    return -1;\n                  ++this.byteCount;\n                  const code = chunk[pos];\n                  if (code === 32 || code === 9) {\n                    start = pos;\n                    this.crlf = 0;\n                  } else {\n                    if (++this.pairCount < MAX_HEADER_PAIRS) {\n                      this.name = this.name.toLowerCase();\n                      if (this.header[this.name] === void 0)\n                        this.header[this.name] = [this.value];\n                      else\n                        this.header[this.name].push(this.value);\n                    }\n                    if (code === 13) {\n                      ++this.crlf;\n                      ++pos;\n                    } else {\n                      start = pos;\n                      this.crlf = 0;\n                      this.state = HPARSER_NAME;\n                      this.name = "";\n                      this.value = "";\n                    }\n                  }\n                  break;\n                }\n                case 3: {\n                  if (this.byteCount === MAX_HEADER_SIZE)\n                    return -1;\n                  ++this.byteCount;\n                  if (chunk[pos++] !== 10)\n                    return -1;\n                  const header = this.header;\n                  this.reset();\n                  this.cb(header);\n                  return pos;\n                }\n              }\n              break;\n          }\n        }\n        return pos;\n      }\n    };\n    __name(_HeaderParser, "HeaderParser");\n    var HeaderParser = _HeaderParser;\n    var _FileStream = class _FileStream extends Readable {\n      constructor(opts, owner) {\n        super(opts);\n        this.truncated = false;\n        this._readcb = null;\n        this.once("end", () => {\n          this._read();\n          if (--owner._fileEndsLeft === 0 && owner._finalcb) {\n            const cb = owner._finalcb;\n            owner._finalcb = null;\n            define_process_default.nextTick(cb);\n          }\n        });\n      }\n      _read(n) {\n        const cb = this._readcb;\n        if (cb) {\n          this._readcb = null;\n          cb();\n        }\n      }\n    };\n    __name(_FileStream, "FileStream");\n    var FileStream = _FileStream;\n    var ignoreData = {\n      push: (chunk, pos) => {\n      },\n      destroy: () => {\n      }\n    };\n    function callAndUnsetCb(self, err) {\n      const cb = self._writecb;\n      self._writecb = null;\n      if (err)\n        self.destroy(err);\n      else if (cb)\n        cb();\n    }\n    __name(callAndUnsetCb, "callAndUnsetCb");\n    function nullDecoder(val, hint) {\n      return val;\n    }\n    __name(nullDecoder, "nullDecoder");\n    var _Multipart = class _Multipart extends Writable {\n      constructor(cfg) {\n        const streamOpts = {\n          autoDestroy: true,\n          emitClose: true,\n          highWaterMark: typeof cfg.highWaterMark === "number" ? cfg.highWaterMark : void 0\n        };\n        super(streamOpts);\n        if (!cfg.conType.params || typeof cfg.conType.params.boundary !== "string")\n          throw new Error("Multipart: Boundary not found");\n        const boundary = cfg.conType.params.boundary;\n        const paramDecoder = typeof cfg.defParamCharset === "string" && cfg.defParamCharset ? getDecoder(cfg.defParamCharset) : nullDecoder;\n        const defCharset = cfg.defCharset || "utf8";\n        const preservePath = cfg.preservePath;\n        const fileOpts = {\n          autoDestroy: true,\n          emitClose: true,\n          highWaterMark: typeof cfg.fileHwm === "number" ? cfg.fileHwm : void 0\n        };\n        const limits = cfg.limits;\n        const fieldSizeLimit = limits && typeof limits.fieldSize === "number" ? limits.fieldSize : 1 * 1024 * 1024;\n        const fileSizeLimit = limits && typeof limits.fileSize === "number" ? limits.fileSize : Infinity;\n        const filesLimit = limits && typeof limits.files === "number" ? limits.files : Infinity;\n        const fieldsLimit = limits && typeof limits.fields === "number" ? limits.fields : Infinity;\n        const partsLimit = limits && typeof limits.parts === "number" ? limits.parts : Infinity;\n        let parts = -1;\n        let fields = 0;\n        let files = 0;\n        let skipPart = false;\n        this._fileEndsLeft = 0;\n        this._fileStream = void 0;\n        this._complete = false;\n        let fileSize = 0;\n        let field;\n        let fieldSize = 0;\n        let partCharset;\n        let partEncoding;\n        let partType;\n        let partName;\n        let partTruncated = false;\n        let hitFilesLimit = false;\n        let hitFieldsLimit = false;\n        this._hparser = null;\n        const hparser = new HeaderParser((header) => {\n          this._hparser = null;\n          skipPart = false;\n          partType = "text/plain";\n          partCharset = defCharset;\n          partEncoding = "7bit";\n          partName = void 0;\n          partTruncated = false;\n          let filename;\n          if (!header["content-disposition"]) {\n            skipPart = true;\n            return;\n          }\n          const disp = parseDisposition(\n            header["content-disposition"][0],\n            paramDecoder\n          );\n          if (!disp || disp.type !== "form-data") {\n            skipPart = true;\n            return;\n          }\n          if (disp.params) {\n            if (disp.params.name)\n              partName = disp.params.name;\n            if (disp.params["filename*"])\n              filename = disp.params["filename*"];\n            else if (disp.params.filename)\n              filename = disp.params.filename;\n            if (filename !== void 0 && !preservePath)\n              filename = basename(filename);\n          }\n          if (header["content-type"]) {\n            const conType = parseContentType(header["content-type"][0]);\n            if (conType) {\n              partType = `${conType.type}/${conType.subtype}`;\n              if (conType.params && typeof conType.params.charset === "string")\n                partCharset = conType.params.charset.toLowerCase();\n            }\n          }\n          if (header["content-transfer-encoding"])\n            partEncoding = header["content-transfer-encoding"][0].toLowerCase();\n          if (partType === "application/octet-stream" || filename !== void 0) {\n            if (files === filesLimit) {\n              if (!hitFilesLimit) {\n                hitFilesLimit = true;\n                this.emit("filesLimit");\n              }\n              skipPart = true;\n              return;\n            }\n            ++files;\n            if (this.listenerCount("file") === 0) {\n              skipPart = true;\n              return;\n            }\n            fileSize = 0;\n            this._fileStream = new FileStream(fileOpts, this);\n            ++this._fileEndsLeft;\n            this.emit(\n              "file",\n              partName,\n              this._fileStream,\n              {\n                filename,\n                encoding: partEncoding,\n                mimeType: partType\n              }\n            );\n          } else {\n            if (fields === fieldsLimit) {\n              if (!hitFieldsLimit) {\n                hitFieldsLimit = true;\n                this.emit("fieldsLimit");\n              }\n              skipPart = true;\n              return;\n            }\n            ++fields;\n            if (this.listenerCount("field") === 0) {\n              skipPart = true;\n              return;\n            }\n            field = [];\n            fieldSize = 0;\n          }\n        });\n        let matchPostBoundary = 0;\n        const ssCb = /* @__PURE__ */ __name((isMatch, data, start, end, isDataSafe) => {\n          retrydata:\n            while (data) {\n              if (this._hparser !== null) {\n                const ret = this._hparser.push(data, start, end);\n                if (ret === -1) {\n                  this._hparser = null;\n                  hparser.reset();\n                  this.emit("error", new Error("Malformed part header"));\n                  break;\n                }\n                start = ret;\n              }\n              if (start === end)\n                break;\n              if (matchPostBoundary !== 0) {\n                if (matchPostBoundary === 1) {\n                  switch (data[start]) {\n                    case 45:\n                      matchPostBoundary = 2;\n                      ++start;\n                      break;\n                    case 13:\n                      matchPostBoundary = 3;\n                      ++start;\n                      break;\n                    default:\n                      matchPostBoundary = 0;\n                  }\n                  if (start === end)\n                    return;\n                }\n                if (matchPostBoundary === 2) {\n                  matchPostBoundary = 0;\n                  if (data[start] === 45) {\n                    this._complete = true;\n                    this._bparser = ignoreData;\n                    return;\n                  }\n                  const writecb = this._writecb;\n                  this._writecb = noop;\n                  ssCb(false, BUF_DASH, 0, 1, false);\n                  this._writecb = writecb;\n                } else if (matchPostBoundary === 3) {\n                  matchPostBoundary = 0;\n                  if (data[start] === 10) {\n                    ++start;\n                    if (parts >= partsLimit)\n                      break;\n                    this._hparser = hparser;\n                    if (start === end)\n                      break;\n                    continue retrydata;\n                  } else {\n                    const writecb = this._writecb;\n                    this._writecb = noop;\n                    ssCb(false, BUF_CR, 0, 1, false);\n                    this._writecb = writecb;\n                  }\n                }\n              }\n              if (!skipPart) {\n                if (this._fileStream) {\n                  let chunk;\n                  const actualLen = Math.min(end - start, fileSizeLimit - fileSize);\n                  if (!isDataSafe) {\n                    chunk = Buffer.allocUnsafe(actualLen);\n                    data.copy(chunk, 0, start, start + actualLen);\n                  } else {\n                    chunk = data.slice(start, start + actualLen);\n                  }\n                  fileSize += chunk.length;\n                  if (fileSize === fileSizeLimit) {\n                    if (chunk.length > 0)\n                      this._fileStream.push(chunk);\n                    this._fileStream.emit("limit");\n                    this._fileStream.truncated = true;\n                    skipPart = true;\n                  } else if (!this._fileStream.push(chunk)) {\n                    if (this._writecb)\n                      this._fileStream._readcb = this._writecb;\n                    this._writecb = null;\n                  }\n                } else if (field !== void 0) {\n                  let chunk;\n                  const actualLen = Math.min(\n                    end - start,\n                    fieldSizeLimit - fieldSize\n                  );\n                  if (!isDataSafe) {\n                    chunk = Buffer.allocUnsafe(actualLen);\n                    data.copy(chunk, 0, start, start + actualLen);\n                  } else {\n                    chunk = data.slice(start, start + actualLen);\n                  }\n                  fieldSize += actualLen;\n                  field.push(chunk);\n                  if (fieldSize === fieldSizeLimit) {\n                    skipPart = true;\n                    partTruncated = true;\n                  }\n                }\n              }\n              break;\n            }\n          if (isMatch) {\n            matchPostBoundary = 1;\n            if (this._fileStream) {\n              this._fileStream.push(null);\n              this._fileStream = null;\n            } else if (field !== void 0) {\n              let data2;\n              switch (field.length) {\n                case 0:\n                  data2 = "";\n                  break;\n                case 1:\n                  data2 = convertToUTF8(field[0], partCharset, 0);\n                  break;\n                default:\n                  data2 = convertToUTF8(\n                    Buffer.concat(field, fieldSize),\n                    partCharset,\n                    0\n                  );\n              }\n              field = void 0;\n              fieldSize = 0;\n              this.emit(\n                "field",\n                partName,\n                data2,\n                {\n                  nameTruncated: false,\n                  valueTruncated: partTruncated,\n                  encoding: partEncoding,\n                  mimeType: partType\n                }\n              );\n            }\n            if (++parts === partsLimit)\n              this.emit("partsLimit");\n          }\n        }, "ssCb");\n        this._bparser = new StreamSearch(`\\r\n--${boundary}`, ssCb);\n        this._writecb = null;\n        this._finalcb = null;\n        this.write(BUF_CRLF);\n      }\n      static detect(conType) {\n        return conType.type === "multipart" && conType.subtype === "form-data";\n      }\n      _write(chunk, enc, cb) {\n        this._writecb = cb;\n        this._bparser.push(chunk, 0);\n        if (this._writecb)\n          callAndUnsetCb(this);\n      }\n      _destroy(err, cb) {\n        this._hparser = null;\n        this._bparser = ignoreData;\n        if (!err)\n          err = checkEndState(this);\n        const fileStream = this._fileStream;\n        if (fileStream) {\n          this._fileStream = null;\n          fileStream.destroy(err);\n        }\n        cb(err);\n      }\n      _final(cb) {\n        this._bparser.destroy();\n        if (!this._complete)\n          return cb(new Error("Unexpected end of form"));\n        if (this._fileEndsLeft)\n          this._finalcb = finalcb.bind(null, this, cb);\n        else\n          finalcb(this, cb);\n      }\n    };\n    __name(_Multipart, "Multipart");\n    var Multipart = _Multipart;\n    function finalcb(self, cb, err) {\n      if (err)\n        return cb(err);\n      err = checkEndState(self);\n      cb(err);\n    }\n    __name(finalcb, "finalcb");\n    function checkEndState(self) {\n      if (self._hparser)\n        return new Error("Malformed part header");\n      const fileStream = self._fileStream;\n      if (fileStream) {\n        self._fileStream = null;\n        fileStream.destroy(new Error("Unexpected end of file"));\n      }\n      if (!self._complete)\n        return new Error("Unexpected end of form");\n    }\n    __name(checkEndState, "checkEndState");\n    var TOKEN = [\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      1,\n      0,\n      1,\n      1,\n      1,\n      1,\n      1,\n      0,\n      0,\n      1,\n      1,\n      0,\n      1,\n      1,\n      0,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      0,\n      0,\n      0,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      0,\n      1,\n      0,\n      1,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0\n    ];\n    var FIELD_VCHAR = [\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      1,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      0,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1\n    ];\n    module2.exports = Multipart;\n  }\n});\n\n// ../../node_modules/.pnpm/busboy@1.6.0/node_modules/busboy/lib/types/urlencoded.js\nvar require_urlencoded = __commonJS({\n  "../../node_modules/.pnpm/busboy@1.6.0/node_modules/busboy/lib/types/urlencoded.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    var { Writable } = require("stream");\n    var { getDecoder } = require_utils();\n    var _URLEncoded = class _URLEncoded extends Writable {\n      constructor(cfg) {\n        const streamOpts = {\n          autoDestroy: true,\n          emitClose: true,\n          highWaterMark: typeof cfg.highWaterMark === "number" ? cfg.highWaterMark : void 0\n        };\n        super(streamOpts);\n        let charset = cfg.defCharset || "utf8";\n        if (cfg.conType.params && typeof cfg.conType.params.charset === "string")\n          charset = cfg.conType.params.charset;\n        this.charset = charset;\n        const limits = cfg.limits;\n        this.fieldSizeLimit = limits && typeof limits.fieldSize === "number" ? limits.fieldSize : 1 * 1024 * 1024;\n        this.fieldsLimit = limits && typeof limits.fields === "number" ? limits.fields : Infinity;\n        this.fieldNameSizeLimit = limits && typeof limits.fieldNameSize === "number" ? limits.fieldNameSize : 100;\n        this._inKey = true;\n        this._keyTrunc = false;\n        this._valTrunc = false;\n        this._bytesKey = 0;\n        this._bytesVal = 0;\n        this._fields = 0;\n        this._key = "";\n        this._val = "";\n        this._byte = -2;\n        this._lastPos = 0;\n        this._encode = 0;\n        this._decoder = getDecoder(charset);\n      }\n      static detect(conType) {\n        return conType.type === "application" && conType.subtype === "x-www-form-urlencoded";\n      }\n      _write(chunk, enc, cb) {\n        if (this._fields >= this.fieldsLimit)\n          return cb();\n        let i = 0;\n        const len = chunk.length;\n        this._lastPos = 0;\n        if (this._byte !== -2) {\n          i = readPctEnc(this, chunk, i, len);\n          if (i === -1)\n            return cb(new Error("Malformed urlencoded form"));\n          if (i >= len)\n            return cb();\n          if (this._inKey)\n            ++this._bytesKey;\n          else\n            ++this._bytesVal;\n        }\n        main:\n          while (i < len) {\n            if (this._inKey) {\n              i = skipKeyBytes(this, chunk, i, len);\n              while (i < len) {\n                switch (chunk[i]) {\n                  case 61:\n                    if (this._lastPos < i)\n                      this._key += chunk.latin1Slice(this._lastPos, i);\n                    this._lastPos = ++i;\n                    this._key = this._decoder(this._key, this._encode);\n                    this._encode = 0;\n                    this._inKey = false;\n                    continue main;\n                  case 38:\n                    if (this._lastPos < i)\n                      this._key += chunk.latin1Slice(this._lastPos, i);\n                    this._lastPos = ++i;\n                    this._key = this._decoder(this._key, this._encode);\n                    this._encode = 0;\n                    if (this._bytesKey > 0) {\n                      this.emit(\n                        "field",\n                        this._key,\n                        "",\n                        {\n                          nameTruncated: this._keyTrunc,\n                          valueTruncated: false,\n                          encoding: this.charset,\n                          mimeType: "text/plain"\n                        }\n                      );\n                    }\n                    this._key = "";\n                    this._val = "";\n                    this._keyTrunc = false;\n                    this._valTrunc = false;\n                    this._bytesKey = 0;\n                    this._bytesVal = 0;\n                    if (++this._fields >= this.fieldsLimit) {\n                      this.emit("fieldsLimit");\n                      return cb();\n                    }\n                    continue;\n                  case 43:\n                    if (this._lastPos < i)\n                      this._key += chunk.latin1Slice(this._lastPos, i);\n                    this._key += " ";\n                    this._lastPos = i + 1;\n                    break;\n                  case 37:\n                    if (this._encode === 0)\n                      this._encode = 1;\n                    if (this._lastPos < i)\n                      this._key += chunk.latin1Slice(this._lastPos, i);\n                    this._lastPos = i + 1;\n                    this._byte = -1;\n                    i = readPctEnc(this, chunk, i + 1, len);\n                    if (i === -1)\n                      return cb(new Error("Malformed urlencoded form"));\n                    if (i >= len)\n                      return cb();\n                    ++this._bytesKey;\n                    i = skipKeyBytes(this, chunk, i, len);\n                    continue;\n                }\n                ++i;\n                ++this._bytesKey;\n                i = skipKeyBytes(this, chunk, i, len);\n              }\n              if (this._lastPos < i)\n                this._key += chunk.latin1Slice(this._lastPos, i);\n            } else {\n              i = skipValBytes(this, chunk, i, len);\n              while (i < len) {\n                switch (chunk[i]) {\n                  case 38:\n                    if (this._lastPos < i)\n                      this._val += chunk.latin1Slice(this._lastPos, i);\n                    this._lastPos = ++i;\n                    this._inKey = true;\n                    this._val = this._decoder(this._val, this._encode);\n                    this._encode = 0;\n                    if (this._bytesKey > 0 || this._bytesVal > 0) {\n                      this.emit(\n                        "field",\n                        this._key,\n                        this._val,\n                        {\n                          nameTruncated: this._keyTrunc,\n                          valueTruncated: this._valTrunc,\n                          encoding: this.charset,\n                          mimeType: "text/plain"\n                        }\n                      );\n                    }\n                    this._key = "";\n                    this._val = "";\n                    this._keyTrunc = false;\n                    this._valTrunc = false;\n                    this._bytesKey = 0;\n                    this._bytesVal = 0;\n                    if (++this._fields >= this.fieldsLimit) {\n                      this.emit("fieldsLimit");\n                      return cb();\n                    }\n                    continue main;\n                  case 43:\n                    if (this._lastPos < i)\n                      this._val += chunk.latin1Slice(this._lastPos, i);\n                    this._val += " ";\n                    this._lastPos = i + 1;\n                    break;\n                  case 37:\n                    if (this._encode === 0)\n                      this._encode = 1;\n                    if (this._lastPos < i)\n                      this._val += chunk.latin1Slice(this._lastPos, i);\n                    this._lastPos = i + 1;\n                    this._byte = -1;\n                    i = readPctEnc(this, chunk, i + 1, len);\n                    if (i === -1)\n                      return cb(new Error("Malformed urlencoded form"));\n                    if (i >= len)\n                      return cb();\n                    ++this._bytesVal;\n                    i = skipValBytes(this, chunk, i, len);\n                    continue;\n                }\n                ++i;\n                ++this._bytesVal;\n                i = skipValBytes(this, chunk, i, len);\n              }\n              if (this._lastPos < i)\n                this._val += chunk.latin1Slice(this._lastPos, i);\n            }\n          }\n        cb();\n      }\n      _final(cb) {\n        if (this._byte !== -2)\n          return cb(new Error("Malformed urlencoded form"));\n        if (!this._inKey || this._bytesKey > 0 || this._bytesVal > 0) {\n          if (this._inKey)\n            this._key = this._decoder(this._key, this._encode);\n          else\n            this._val = this._decoder(this._val, this._encode);\n          this.emit(\n            "field",\n            this._key,\n            this._val,\n            {\n              nameTruncated: this._keyTrunc,\n              valueTruncated: this._valTrunc,\n              encoding: this.charset,\n              mimeType: "text/plain"\n            }\n          );\n        }\n        cb();\n      }\n    };\n    __name(_URLEncoded, "URLEncoded");\n    var URLEncoded = _URLEncoded;\n    function readPctEnc(self, chunk, pos, len) {\n      if (pos >= len)\n        return len;\n      if (self._byte === -1) {\n        const hexUpper = HEX_VALUES[chunk[pos++]];\n        if (hexUpper === -1)\n          return -1;\n        if (hexUpper >= 8)\n          self._encode = 2;\n        if (pos < len) {\n          const hexLower = HEX_VALUES[chunk[pos++]];\n          if (hexLower === -1)\n            return -1;\n          if (self._inKey)\n            self._key += String.fromCharCode((hexUpper << 4) + hexLower);\n          else\n            self._val += String.fromCharCode((hexUpper << 4) + hexLower);\n          self._byte = -2;\n          self._lastPos = pos;\n        } else {\n          self._byte = hexUpper;\n        }\n      } else {\n        const hexLower = HEX_VALUES[chunk[pos++]];\n        if (hexLower === -1)\n          return -1;\n        if (self._inKey)\n          self._key += String.fromCharCode((self._byte << 4) + hexLower);\n        else\n          self._val += String.fromCharCode((self._byte << 4) + hexLower);\n        self._byte = -2;\n        self._lastPos = pos;\n      }\n      return pos;\n    }\n    __name(readPctEnc, "readPctEnc");\n    function skipKeyBytes(self, chunk, pos, len) {\n      if (self._bytesKey > self.fieldNameSizeLimit) {\n        if (!self._keyTrunc) {\n          if (self._lastPos < pos)\n            self._key += chunk.latin1Slice(self._lastPos, pos - 1);\n        }\n        self._keyTrunc = true;\n        for (; pos < len; ++pos) {\n          const code = chunk[pos];\n          if (code === 61 || code === 38)\n            break;\n          ++self._bytesKey;\n        }\n        self._lastPos = pos;\n      }\n      return pos;\n    }\n    __name(skipKeyBytes, "skipKeyBytes");\n    function skipValBytes(self, chunk, pos, len) {\n      if (self._bytesVal > self.fieldSizeLimit) {\n        if (!self._valTrunc) {\n          if (self._lastPos < pos)\n            self._val += chunk.latin1Slice(self._lastPos, pos - 1);\n        }\n        self._valTrunc = true;\n        for (; pos < len; ++pos) {\n          if (chunk[pos] === 38)\n            break;\n          ++self._bytesVal;\n        }\n        self._lastPos = pos;\n      }\n      return pos;\n    }\n    __name(skipValBytes, "skipValBytes");\n    var HEX_VALUES = [\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      0,\n      1,\n      2,\n      3,\n      4,\n      5,\n      6,\n      7,\n      8,\n      9,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      10,\n      11,\n      12,\n      13,\n      14,\n      15,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      10,\n      11,\n      12,\n      13,\n      14,\n      15,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      -1\n    ];\n    module2.exports = URLEncoded;\n  }\n});\n\n// ../../node_modules/.pnpm/busboy@1.6.0/node_modules/busboy/lib/index.js\nvar require_lib = __commonJS({\n  "../../node_modules/.pnpm/busboy@1.6.0/node_modules/busboy/lib/index.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    var { parseContentType } = require_utils();\n    function getInstance(cfg) {\n      const headers = cfg.headers;\n      const conType = parseContentType(headers["content-type"]);\n      if (!conType)\n        throw new Error("Malformed content type");\n      for (const type of TYPES) {\n        const matched = type.detect(conType);\n        if (!matched)\n          continue;\n        const instanceCfg = {\n          limits: cfg.limits,\n          headers,\n          conType,\n          highWaterMark: void 0,\n          fileHwm: void 0,\n          defCharset: void 0,\n          defParamCharset: void 0,\n          preservePath: false\n        };\n        if (cfg.highWaterMark)\n          instanceCfg.highWaterMark = cfg.highWaterMark;\n        if (cfg.fileHwm)\n          instanceCfg.fileHwm = cfg.fileHwm;\n        instanceCfg.defCharset = cfg.defCharset;\n        instanceCfg.defParamCharset = cfg.defParamCharset;\n        instanceCfg.preservePath = cfg.preservePath;\n        return new type(instanceCfg);\n      }\n      throw new Error(`Unsupported content type: ${headers["content-type"]}`);\n    }\n    __name(getInstance, "getInstance");\n    var TYPES = [\n      require_multipart(),\n      require_urlencoded()\n    ].filter(function(typemod) {\n      return typeof typemod.detect === "function";\n    });\n    module2.exports = (cfg) => {\n      if (typeof cfg !== "object" || cfg === null)\n        cfg = {};\n      if (typeof cfg.headers !== "object" || cfg.headers === null || typeof cfg.headers["content-type"] !== "string") {\n        throw new Error("Missing Content-Type");\n      }\n      return getInstance(cfg);\n    };\n  }\n});\n\n// ../../node_modules/.pnpm/undici@5.23.0/node_modules/undici/lib/fetch/dataURL.js\nvar require_dataURL = __commonJS({\n  "../../node_modules/.pnpm/undici@5.23.0/node_modules/undici/lib/fetch/dataURL.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    var assert = require("assert");\n    var { atob: atob2 } = require("buffer");\n    var { isomorphicDecode } = require_util2();\n    var encoder = new TextEncoder();\n    var HTTP_TOKEN_CODEPOINTS = /^[!#$%&\'*+-.^_|~A-Za-z0-9]+$/;\n    var HTTP_WHITESPACE_REGEX = /(\\u000A|\\u000D|\\u0009|\\u0020)/;\n    var HTTP_QUOTED_STRING_TOKENS = /[\\u0009|\\u0020-\\u007E|\\u0080-\\u00FF]/;\n    function dataURLProcessor(dataURL) {\n      assert(dataURL.protocol === "data:");\n      let input = URLSerializer(dataURL, true);\n      input = input.slice(5);\n      const position = { position: 0 };\n      let mimeType = collectASequenceOfCodePointsFast(\n        ",",\n        input,\n        position\n      );\n      const mimeTypeLength = mimeType.length;\n      mimeType = removeASCIIWhitespace(mimeType, true, true);\n      if (position.position >= input.length) {\n        return "failure";\n      }\n      position.position++;\n      const encodedBody = input.slice(mimeTypeLength + 1);\n      let body = stringPercentDecode(encodedBody);\n      if (/;(\\u0020){0,}base64$/i.test(mimeType)) {\n        const stringBody = isomorphicDecode(body);\n        body = forgivingBase64(stringBody);\n        if (body === "failure") {\n          return "failure";\n        }\n        mimeType = mimeType.slice(0, -6);\n        mimeType = mimeType.replace(/(\\u0020)+$/, "");\n        mimeType = mimeType.slice(0, -1);\n      }\n      if (mimeType.startsWith(";")) {\n        mimeType = "text/plain" + mimeType;\n      }\n      let mimeTypeRecord = parseMIMEType(mimeType);\n      if (mimeTypeRecord === "failure") {\n        mimeTypeRecord = parseMIMEType("text/plain;charset=US-ASCII");\n      }\n      return { mimeType: mimeTypeRecord, body };\n    }\n    __name(dataURLProcessor, "dataURLProcessor");\n    function URLSerializer(url, excludeFragment = false) {\n      const href = url.href;\n      if (!excludeFragment) {\n        return href;\n      }\n      const hash = href.lastIndexOf("#");\n      if (hash === -1) {\n        return href;\n      }\n      return href.slice(0, hash);\n    }\n    __name(URLSerializer, "URLSerializer");\n    function collectASequenceOfCodePoints(condition, input, position) {\n      let result = "";\n      while (position.position < input.length && condition(input[position.position])) {\n        result += input[position.position];\n        position.position++;\n      }\n      return result;\n    }\n    __name(collectASequenceOfCodePoints, "collectASequenceOfCodePoints");\n    function collectASequenceOfCodePointsFast(char, input, position) {\n      const idx = input.indexOf(char, position.position);\n      const start = position.position;\n      if (idx === -1) {\n        position.position = input.length;\n        return input.slice(start);\n      }\n      position.position = idx;\n      return input.slice(start, position.position);\n    }\n    __name(collectASequenceOfCodePointsFast, "collectASequenceOfCodePointsFast");\n    function stringPercentDecode(input) {\n      const bytes = encoder.encode(input);\n      return percentDecode(bytes);\n    }\n    __name(stringPercentDecode, "stringPercentDecode");\n    function percentDecode(input) {\n      const output = [];\n      for (let i = 0; i < input.length; i++) {\n        const byte = input[i];\n        if (byte !== 37) {\n          output.push(byte);\n        } else if (byte === 37 && !/^[0-9A-Fa-f]{2}$/i.test(String.fromCharCode(input[i + 1], input[i + 2]))) {\n          output.push(37);\n        } else {\n          const nextTwoBytes = String.fromCharCode(input[i + 1], input[i + 2]);\n          const bytePoint = Number.parseInt(nextTwoBytes, 16);\n          output.push(bytePoint);\n          i += 2;\n        }\n      }\n      return Uint8Array.from(output);\n    }\n    __name(percentDecode, "percentDecode");\n    function parseMIMEType(input) {\n      input = removeHTTPWhitespace(input, true, true);\n      const position = { position: 0 };\n      const type = collectASequenceOfCodePointsFast(\n        "/",\n        input,\n        position\n      );\n      if (type.length === 0 || !HTTP_TOKEN_CODEPOINTS.test(type)) {\n        return "failure";\n      }\n      if (position.position > input.length) {\n        return "failure";\n      }\n      position.position++;\n      let subtype = collectASequenceOfCodePointsFast(\n        ";",\n        input,\n        position\n      );\n      subtype = removeHTTPWhitespace(subtype, false, true);\n      if (subtype.length === 0 || !HTTP_TOKEN_CODEPOINTS.test(subtype)) {\n        return "failure";\n      }\n      const typeLowercase = type.toLowerCase();\n      const subtypeLowercase = subtype.toLowerCase();\n      const mimeType = {\n        type: typeLowercase,\n        subtype: subtypeLowercase,\n        /** @type {Map<string, string>} */\n        parameters: /* @__PURE__ */ new Map(),\n        // https://mimesniff.spec.whatwg.org/#mime-type-essence\n        essence: `${typeLowercase}/${subtypeLowercase}`\n      };\n      while (position.position < input.length) {\n        position.position++;\n        collectASequenceOfCodePoints(\n          // https://fetch.spec.whatwg.org/#http-whitespace\n          (char) => HTTP_WHITESPACE_REGEX.test(char),\n          input,\n          position\n        );\n        let parameterName = collectASequenceOfCodePoints(\n          (char) => char !== ";" && char !== "=",\n          input,\n          position\n        );\n        parameterName = parameterName.toLowerCase();\n        if (position.position < input.length) {\n          if (input[position.position] === ";") {\n            continue;\n          }\n          position.position++;\n        }\n        if (position.position > input.length) {\n          break;\n        }\n        let parameterValue = null;\n        if (input[position.position] === \'"\') {\n          parameterValue = collectAnHTTPQuotedString(input, position, true);\n          collectASequenceOfCodePointsFast(\n            ";",\n            input,\n            position\n          );\n        } else {\n          parameterValue = collectASequenceOfCodePointsFast(\n            ";",\n            input,\n            position\n          );\n          parameterValue = removeHTTPWhitespace(parameterValue, false, true);\n          if (parameterValue.length === 0) {\n            continue;\n          }\n        }\n        if (parameterName.length !== 0 && HTTP_TOKEN_CODEPOINTS.test(parameterName) && (parameterValue.length === 0 || HTTP_QUOTED_STRING_TOKENS.test(parameterValue)) && !mimeType.parameters.has(parameterName)) {\n          mimeType.parameters.set(parameterName, parameterValue);\n        }\n      }\n      return mimeType;\n    }\n    __name(parseMIMEType, "parseMIMEType");\n    function forgivingBase64(data) {\n      data = data.replace(/[\\u0009\\u000A\\u000C\\u000D\\u0020]/g, "");\n      if (data.length % 4 === 0) {\n        data = data.replace(/=?=$/, "");\n      }\n      if (data.length % 4 === 1) {\n        return "failure";\n      }\n      if (/[^+/0-9A-Za-z]/.test(data)) {\n        return "failure";\n      }\n      const binary = atob2(data);\n      const bytes = new Uint8Array(binary.length);\n      for (let byte = 0; byte < binary.length; byte++) {\n        bytes[byte] = binary.charCodeAt(byte);\n      }\n      return bytes;\n    }\n    __name(forgivingBase64, "forgivingBase64");\n    function collectAnHTTPQuotedString(input, position, extractValue) {\n      const positionStart = position.position;\n      let value = "";\n      assert(input[position.position] === \'"\');\n      position.position++;\n      while (true) {\n        value += collectASequenceOfCodePoints(\n          (char) => char !== \'"\' && char !== "\\\\",\n          input,\n          position\n        );\n        if (position.position >= input.length) {\n          break;\n        }\n        const quoteOrBackslash = input[position.position];\n        position.position++;\n        if (quoteOrBackslash === "\\\\") {\n          if (position.position >= input.length) {\n            value += "\\\\";\n            break;\n          }\n          value += input[position.position];\n          position.position++;\n        } else {\n          assert(quoteOrBackslash === \'"\');\n          break;\n        }\n      }\n      if (extractValue) {\n        return value;\n      }\n      return input.slice(positionStart, position.position);\n    }\n    __name(collectAnHTTPQuotedString, "collectAnHTTPQuotedString");\n    function serializeAMimeType(mimeType) {\n      assert(mimeType !== "failure");\n      const { parameters, essence } = mimeType;\n      let serialization = essence;\n      for (let [name, value] of parameters.entries()) {\n        serialization += ";";\n        serialization += name;\n        serialization += "=";\n        if (!HTTP_TOKEN_CODEPOINTS.test(value)) {\n          value = value.replace(/(\\\\|")/g, "\\\\$1");\n          value = \'"\' + value;\n          value += \'"\';\n        }\n        serialization += value;\n      }\n      return serialization;\n    }\n    __name(serializeAMimeType, "serializeAMimeType");\n    function isHTTPWhiteSpace(char) {\n      return char === "\\r" || char === "\\n" || char === "	" || char === " ";\n    }\n    __name(isHTTPWhiteSpace, "isHTTPWhiteSpace");\n    function removeHTTPWhitespace(str, leading = true, trailing = true) {\n      let lead = 0;\n      let trail = str.length - 1;\n      if (leading) {\n        for (; lead < str.length && isHTTPWhiteSpace(str[lead]); lead++)\n          ;\n      }\n      if (trailing) {\n        for (; trail > 0 && isHTTPWhiteSpace(str[trail]); trail--)\n          ;\n      }\n      return str.slice(lead, trail + 1);\n    }\n    __name(removeHTTPWhitespace, "removeHTTPWhitespace");\n    function isASCIIWhitespace(char) {\n      return char === "\\r" || char === "\\n" || char === "	" || char === "\\f" || char === " ";\n    }\n    __name(isASCIIWhitespace, "isASCIIWhitespace");\n    function removeASCIIWhitespace(str, leading = true, trailing = true) {\n      let lead = 0;\n      let trail = str.length - 1;\n      if (leading) {\n        for (; lead < str.length && isASCIIWhitespace(str[lead]); lead++)\n          ;\n      }\n      if (trailing) {\n        for (; trail > 0 && isASCIIWhitespace(str[trail]); trail--)\n          ;\n      }\n      return str.slice(lead, trail + 1);\n    }\n    __name(removeASCIIWhitespace, "removeASCIIWhitespace");\n    module2.exports = {\n      dataURLProcessor,\n      URLSerializer,\n      collectASequenceOfCodePoints,\n      collectASequenceOfCodePointsFast,\n      stringPercentDecode,\n      parseMIMEType,\n      collectAnHTTPQuotedString,\n      serializeAMimeType\n    };\n  }\n});\n\n// ../../node_modules/.pnpm/undici@5.23.0/node_modules/undici/lib/fetch/file.js\nvar require_file = __commonJS({\n  "../../node_modules/.pnpm/undici@5.23.0/node_modules/undici/lib/fetch/file.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    var { Blob: Blob2, File: NativeFile } = require("buffer");\n    var { types } = require("util");\n    var { kState } = require_symbols();\n    var { isBlobLike } = require_util2();\n    var { webidl } = require_webidl();\n    var { parseMIMEType, serializeAMimeType } = require_dataURL();\n    var { kEnumerableProperty } = require_util();\n    var _File = class _File extends Blob2 {\n      constructor(fileBits, fileName, options = {}) {\n        webidl.argumentLengthCheck(arguments, 2, { header: "File constructor" });\n        fileBits = webidl.converters["sequence<BlobPart>"](fileBits);\n        fileName = webidl.converters.USVString(fileName);\n        options = webidl.converters.FilePropertyBag(options);\n        const n = fileName;\n        let t = options.type;\n        let d;\n        substep: {\n          if (t) {\n            t = parseMIMEType(t);\n            if (t === "failure") {\n              t = "";\n              break substep;\n            }\n            t = serializeAMimeType(t).toLowerCase();\n          }\n          d = options.lastModified;\n        }\n        super(processBlobParts(fileBits, options), { type: t });\n        this[kState] = {\n          name: n,\n          lastModified: d,\n          type: t\n        };\n      }\n      get name() {\n        webidl.brandCheck(this, _File);\n        return this[kState].name;\n      }\n      get lastModified() {\n        webidl.brandCheck(this, _File);\n        return this[kState].lastModified;\n      }\n      get type() {\n        webidl.brandCheck(this, _File);\n        return this[kState].type;\n      }\n    };\n    __name(_File, "File");\n    var File2 = _File;\n    var _FileLike = class _FileLike {\n      constructor(blobLike, fileName, options = {}) {\n        const n = fileName;\n        const t = options.type;\n        const d = options.lastModified ?? Date.now();\n        this[kState] = {\n          blobLike,\n          name: n,\n          type: t,\n          lastModified: d\n        };\n      }\n      stream(...args) {\n        webidl.brandCheck(this, _FileLike);\n        return this[kState].blobLike.stream(...args);\n      }\n      arrayBuffer(...args) {\n        webidl.brandCheck(this, _FileLike);\n        return this[kState].blobLike.arrayBuffer(...args);\n      }\n      slice(...args) {\n        webidl.brandCheck(this, _FileLike);\n        return this[kState].blobLike.slice(...args);\n      }\n      text(...args) {\n        webidl.brandCheck(this, _FileLike);\n        return this[kState].blobLike.text(...args);\n      }\n      get size() {\n        webidl.brandCheck(this, _FileLike);\n        return this[kState].blobLike.size;\n      }\n      get type() {\n        webidl.brandCheck(this, _FileLike);\n        return this[kState].blobLike.type;\n      }\n      get name() {\n        webidl.brandCheck(this, _FileLike);\n        return this[kState].name;\n      }\n      get lastModified() {\n        webidl.brandCheck(this, _FileLike);\n        return this[kState].lastModified;\n      }\n      get [Symbol.toStringTag]() {\n        return "File";\n      }\n    };\n    __name(_FileLike, "FileLike");\n    var FileLike = _FileLike;\n    Object.defineProperties(File2.prototype, {\n      [Symbol.toStringTag]: {\n        value: "File",\n        configurable: true\n      },\n      name: kEnumerableProperty,\n      lastModified: kEnumerableProperty\n    });\n    webidl.converters.Blob = webidl.interfaceConverter(Blob2);\n    webidl.converters.BlobPart = function(V, opts) {\n      if (webidl.util.Type(V) === "Object") {\n        if (isBlobLike(V)) {\n          return webidl.converters.Blob(V, { strict: false });\n        }\n        if (ArrayBuffer.isView(V) || types.isAnyArrayBuffer(V)) {\n          return webidl.converters.BufferSource(V, opts);\n        }\n      }\n      return webidl.converters.USVString(V, opts);\n    };\n    webidl.converters["sequence<BlobPart>"] = webidl.sequenceConverter(\n      webidl.converters.BlobPart\n    );\n    webidl.converters.FilePropertyBag = webidl.dictionaryConverter([\n      {\n        key: "lastModified",\n        converter: webidl.converters["long long"],\n        get defaultValue() {\n          return Date.now();\n        }\n      },\n      {\n        key: "type",\n        converter: webidl.converters.DOMString,\n        defaultValue: ""\n      },\n      {\n        key: "endings",\n        converter: (value) => {\n          value = webidl.converters.DOMString(value);\n          value = value.toLowerCase();\n          if (value !== "native") {\n            value = "transparent";\n          }\n          return value;\n        },\n        defaultValue: "transparent"\n      }\n    ]);\n    function processBlobParts(parts, options) {\n      const bytes = [];\n      for (const element of parts) {\n        if (typeof element === "string") {\n          let s = element;\n          if (options.endings === "native") {\n            s = convertLineEndingsNative(s);\n          }\n          bytes.push(new TextEncoder().encode(s));\n        } else if (types.isAnyArrayBuffer(element) || types.isTypedArray(element)) {\n          if (!element.buffer) {\n            bytes.push(new Uint8Array(element));\n          } else {\n            bytes.push(\n              new Uint8Array(element.buffer, element.byteOffset, element.byteLength)\n            );\n          }\n        } else if (isBlobLike(element)) {\n          bytes.push(element);\n        }\n      }\n      return bytes;\n    }\n    __name(processBlobParts, "processBlobParts");\n    function convertLineEndingsNative(s) {\n      let nativeLineEnding = "\\n";\n      if (define_process_default.platform === "win32") {\n        nativeLineEnding = "\\r\\n";\n      }\n      return s.replace(/\\r?\\n/g, nativeLineEnding);\n    }\n    __name(convertLineEndingsNative, "convertLineEndingsNative");\n    function isFileLike(object) {\n      return NativeFile && object instanceof NativeFile || object instanceof File2 || object && (typeof object.stream === "function" || typeof object.arrayBuffer === "function") && object[Symbol.toStringTag] === "File";\n    }\n    __name(isFileLike, "isFileLike");\n    module2.exports = { File: File2, FileLike, isFileLike };\n  }\n});\n\n// ../../node_modules/.pnpm/undici@5.23.0/node_modules/undici/lib/fetch/formdata.js\nvar require_formdata = __commonJS({\n  "../../node_modules/.pnpm/undici@5.23.0/node_modules/undici/lib/fetch/formdata.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    var { isBlobLike, toUSVString, makeIterator } = require_util2();\n    var { kState } = require_symbols();\n    var { File: UndiciFile, FileLike, isFileLike } = require_file();\n    var { webidl } = require_webidl();\n    var { Blob: Blob2, File: NativeFile } = require("buffer");\n    var File2 = NativeFile ?? UndiciFile;\n    var _FormData = class _FormData {\n      constructor(form) {\n        if (form !== void 0) {\n          throw webidl.errors.conversionFailed({\n            prefix: "FormData constructor",\n            argument: "Argument 1",\n            types: ["undefined"]\n          });\n        }\n        this[kState] = [];\n      }\n      append(name, value, filename = void 0) {\n        webidl.brandCheck(this, _FormData);\n        webidl.argumentLengthCheck(arguments, 2, { header: "FormData.append" });\n        if (arguments.length === 3 && !isBlobLike(value)) {\n          throw new TypeError(\n            "Failed to execute \'append\' on \'FormData\': parameter 2 is not of type \'Blob\'"\n          );\n        }\n        name = webidl.converters.USVString(name);\n        value = isBlobLike(value) ? webidl.converters.Blob(value, { strict: false }) : webidl.converters.USVString(value);\n        filename = arguments.length === 3 ? webidl.converters.USVString(filename) : void 0;\n        const entry = makeEntry(name, value, filename);\n        this[kState].push(entry);\n      }\n      delete(name) {\n        webidl.brandCheck(this, _FormData);\n        webidl.argumentLengthCheck(arguments, 1, { header: "FormData.delete" });\n        name = webidl.converters.USVString(name);\n        this[kState] = this[kState].filter((entry) => entry.name !== name);\n      }\n      get(name) {\n        webidl.brandCheck(this, _FormData);\n        webidl.argumentLengthCheck(arguments, 1, { header: "FormData.get" });\n        name = webidl.converters.USVString(name);\n        const idx = this[kState].findIndex((entry) => entry.name === name);\n        if (idx === -1) {\n          return null;\n        }\n        return this[kState][idx].value;\n      }\n      getAll(name) {\n        webidl.brandCheck(this, _FormData);\n        webidl.argumentLengthCheck(arguments, 1, { header: "FormData.getAll" });\n        name = webidl.converters.USVString(name);\n        return this[kState].filter((entry) => entry.name === name).map((entry) => entry.value);\n      }\n      has(name) {\n        webidl.brandCheck(this, _FormData);\n        webidl.argumentLengthCheck(arguments, 1, { header: "FormData.has" });\n        name = webidl.converters.USVString(name);\n        return this[kState].findIndex((entry) => entry.name === name) !== -1;\n      }\n      set(name, value, filename = void 0) {\n        webidl.brandCheck(this, _FormData);\n        webidl.argumentLengthCheck(arguments, 2, { header: "FormData.set" });\n        if (arguments.length === 3 && !isBlobLike(value)) {\n          throw new TypeError(\n            "Failed to execute \'set\' on \'FormData\': parameter 2 is not of type \'Blob\'"\n          );\n        }\n        name = webidl.converters.USVString(name);\n        value = isBlobLike(value) ? webidl.converters.Blob(value, { strict: false }) : webidl.converters.USVString(value);\n        filename = arguments.length === 3 ? toUSVString(filename) : void 0;\n        const entry = makeEntry(name, value, filename);\n        const idx = this[kState].findIndex((entry2) => entry2.name === name);\n        if (idx !== -1) {\n          this[kState] = [\n            ...this[kState].slice(0, idx),\n            entry,\n            ...this[kState].slice(idx + 1).filter((entry2) => entry2.name !== name)\n          ];\n        } else {\n          this[kState].push(entry);\n        }\n      }\n      entries() {\n        webidl.brandCheck(this, _FormData);\n        return makeIterator(\n          () => this[kState].map((pair) => [pair.name, pair.value]),\n          "FormData",\n          "key+value"\n        );\n      }\n      keys() {\n        webidl.brandCheck(this, _FormData);\n        return makeIterator(\n          () => this[kState].map((pair) => [pair.name, pair.value]),\n          "FormData",\n          "key"\n        );\n      }\n      values() {\n        webidl.brandCheck(this, _FormData);\n        return makeIterator(\n          () => this[kState].map((pair) => [pair.name, pair.value]),\n          "FormData",\n          "value"\n        );\n      }\n      /**\n       * @param {(value: string, key: string, self: FormData) => void} callbackFn\n       * @param {unknown} thisArg\n       */\n      forEach(callbackFn, thisArg = globalThis) {\n        webidl.brandCheck(this, _FormData);\n        webidl.argumentLengthCheck(arguments, 1, { header: "FormData.forEach" });\n        if (typeof callbackFn !== "function") {\n          throw new TypeError(\n            "Failed to execute \'forEach\' on \'FormData\': parameter 1 is not of type \'Function\'."\n          );\n        }\n        for (const [key, value] of this) {\n          callbackFn.apply(thisArg, [value, key, this]);\n        }\n      }\n    };\n    __name(_FormData, "FormData");\n    var FormData2 = _FormData;\n    FormData2.prototype[Symbol.iterator] = FormData2.prototype.entries;\n    Object.defineProperties(FormData2.prototype, {\n      [Symbol.toStringTag]: {\n        value: "FormData",\n        configurable: true\n      }\n    });\n    function makeEntry(name, value, filename) {\n      name = Buffer.from(name).toString("utf8");\n      if (typeof value === "string") {\n        value = Buffer.from(value).toString("utf8");\n      } else {\n        if (!isFileLike(value)) {\n          value = value instanceof Blob2 ? new File2([value], "blob", { type: value.type }) : new FileLike(value, "blob", { type: value.type });\n        }\n        if (filename !== void 0) {\n          const options = {\n            type: value.type,\n            lastModified: value.lastModified\n          };\n          value = NativeFile && value instanceof NativeFile || value instanceof UndiciFile ? new File2([value], filename, options) : new FileLike(value, filename, options);\n        }\n      }\n      return { name, value };\n    }\n    __name(makeEntry, "makeEntry");\n    module2.exports = { FormData: FormData2 };\n  }\n});\n\n// ../../node_modules/.pnpm/undici@5.23.0/node_modules/undici/lib/fetch/body.js\nvar require_body = __commonJS({\n  "../../node_modules/.pnpm/undici@5.23.0/node_modules/undici/lib/fetch/body.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    var Busboy = require_lib();\n    var util = require_util();\n    var {\n      ReadableStreamFrom,\n      isBlobLike,\n      isReadableStreamLike,\n      readableStreamClose,\n      createDeferredPromise,\n      fullyReadBody\n    } = require_util2();\n    var { FormData: FormData2 } = require_formdata();\n    var { kState } = require_symbols();\n    var { webidl } = require_webidl();\n    var { DOMException, structuredClone } = require_constants();\n    var { Blob: Blob2, File: NativeFile } = require("buffer");\n    var { kBodyUsed } = require_symbols2();\n    var assert = require("assert");\n    var { isErrored } = require_util();\n    var { isUint8Array, isArrayBuffer } = require_util_types();\n    var { File: UndiciFile } = require_file();\n    var { parseMIMEType, serializeAMimeType } = require_dataURL();\n    var ReadableStream = globalThis.ReadableStream;\n    var File2 = NativeFile ?? UndiciFile;\n    function extractBody(object, keepalive = false) {\n      if (!ReadableStream) {\n        ReadableStream = require("./streams").ReadableStream;\n      }\n      let stream = null;\n      if (object instanceof ReadableStream) {\n        stream = object;\n      } else if (isBlobLike(object)) {\n        stream = object.stream();\n      } else {\n        stream = new ReadableStream({\n          async pull(controller) {\n            controller.enqueue(\n              typeof source === "string" ? new TextEncoder().encode(source) : source\n            );\n            queueMicrotask(() => readableStreamClose(controller));\n          },\n          start() {\n          },\n          type: void 0\n        });\n      }\n      assert(isReadableStreamLike(stream));\n      let action = null;\n      let source = null;\n      let length = null;\n      let type = null;\n      if (typeof object === "string") {\n        source = object;\n        type = "text/plain;charset=UTF-8";\n      } else if (object instanceof URLSearchParams) {\n        source = object.toString();\n        type = "application/x-www-form-urlencoded;charset=UTF-8";\n      } else if (isArrayBuffer(object)) {\n        source = new Uint8Array(object.slice());\n      } else if (ArrayBuffer.isView(object)) {\n        source = new Uint8Array(object.buffer.slice(object.byteOffset, object.byteOffset + object.byteLength));\n      } else if (util.isFormDataLike(object)) {\n        const boundary = `----formdata-undici-0${`${Math.floor(Math.random() * 1e11)}`.padStart(11, "0")}`;\n        const prefix = `--${boundary}\\r\nContent-Disposition: form-data`;\n        const escape = /* @__PURE__ */ __name((str) => str.replace(/\\n/g, "%0A").replace(/\\r/g, "%0D").replace(/"/g, "%22"), "escape");\n        const normalizeLinefeeds = /* @__PURE__ */ __name((value) => value.replace(/\\r?\\n|\\r/g, "\\r\\n"), "normalizeLinefeeds");\n        const enc = new TextEncoder();\n        const blobParts = [];\n        const rn = new Uint8Array([13, 10]);\n        length = 0;\n        let hasUnknownSizeValue = false;\n        for (const [name, value] of object) {\n          if (typeof value === "string") {\n            const chunk2 = enc.encode(prefix + `; name="${escape(normalizeLinefeeds(name))}"\\r\n\\r\n${normalizeLinefeeds(value)}\\r\n`);\n            blobParts.push(chunk2);\n            length += chunk2.byteLength;\n          } else {\n            const chunk2 = enc.encode(`${prefix}; name="${escape(normalizeLinefeeds(name))}"` + (value.name ? `; filename="${escape(value.name)}"` : "") + `\\r\nContent-Type: ${value.type || "application/octet-stream"}\\r\n\\r\n`);\n            blobParts.push(chunk2, value, rn);\n            if (typeof value.size === "number") {\n              length += chunk2.byteLength + value.size + rn.byteLength;\n            } else {\n              hasUnknownSizeValue = true;\n            }\n          }\n        }\n        const chunk = enc.encode(`--${boundary}--`);\n        blobParts.push(chunk);\n        length += chunk.byteLength;\n        if (hasUnknownSizeValue) {\n          length = null;\n        }\n        source = object;\n        action = /* @__PURE__ */ __name(async function* () {\n          for (const part of blobParts) {\n            if (part.stream) {\n              yield* part.stream();\n            } else {\n              yield part;\n            }\n          }\n        }, "action");\n        type = "multipart/form-data; boundary=" + boundary;\n      } else if (isBlobLike(object)) {\n        source = object;\n        length = object.size;\n        if (object.type) {\n          type = object.type;\n        }\n      } else if (typeof object[Symbol.asyncIterator] === "function") {\n        if (keepalive) {\n          throw new TypeError("keepalive");\n        }\n        if (util.isDisturbed(object) || object.locked) {\n          throw new TypeError(\n            "Response body object should not be disturbed or locked"\n          );\n        }\n        stream = object instanceof ReadableStream ? object : ReadableStreamFrom(object);\n      }\n      if (typeof source === "string" || util.isBuffer(source)) {\n        length = Buffer.byteLength(source);\n      }\n      if (action != null) {\n        let iterator;\n        stream = new ReadableStream({\n          async start() {\n            iterator = action(object)[Symbol.asyncIterator]();\n          },\n          async pull(controller) {\n            const { value, done } = await iterator.next();\n            if (done) {\n              queueMicrotask(() => {\n                controller.close();\n              });\n            } else {\n              if (!isErrored(stream)) {\n                controller.enqueue(new Uint8Array(value));\n              }\n            }\n            return controller.desiredSize > 0;\n          },\n          async cancel(reason) {\n            await iterator.return();\n          },\n          type: void 0\n        });\n      }\n      const body = { stream, source, length };\n      return [body, type];\n    }\n    __name(extractBody, "extractBody");\n    function safelyExtractBody(object, keepalive = false) {\n      if (!ReadableStream) {\n        ReadableStream = require("./streams").ReadableStream;\n      }\n      if (object instanceof ReadableStream) {\n        assert(!util.isDisturbed(object), "The body has already been consumed.");\n        assert(!object.locked, "The stream is locked.");\n      }\n      return extractBody(object, keepalive);\n    }\n    __name(safelyExtractBody, "safelyExtractBody");\n    function cloneBody(body) {\n      const [out1, out2] = body.stream.tee();\n      const out2Clone = structuredClone(out2, { transfer: [out2] });\n      const [, finalClone] = out2Clone.tee();\n      body.stream = out1;\n      return {\n        stream: finalClone,\n        length: body.length,\n        source: body.source\n      };\n    }\n    __name(cloneBody, "cloneBody");\n    async function* consumeBody(body) {\n      if (body) {\n        if (isUint8Array(body)) {\n          yield body;\n        } else {\n          const stream = body.stream;\n          if (util.isDisturbed(stream)) {\n            throw new TypeError("The body has already been consumed.");\n          }\n          if (stream.locked) {\n            throw new TypeError("The stream is locked.");\n          }\n          stream[kBodyUsed] = true;\n          yield* stream;\n        }\n      }\n    }\n    __name(consumeBody, "consumeBody");\n    function throwIfAborted(state) {\n      if (state.aborted) {\n        throw new DOMException("The operation was aborted.", "AbortError");\n      }\n    }\n    __name(throwIfAborted, "throwIfAborted");\n    function bodyMixinMethods(instance) {\n      const methods = {\n        blob() {\n          return specConsumeBody(this, (bytes) => {\n            let mimeType = bodyMimeType(this);\n            if (mimeType === "failure") {\n              mimeType = "";\n            } else if (mimeType) {\n              mimeType = serializeAMimeType(mimeType);\n            }\n            return new Blob2([bytes], { type: mimeType });\n          }, instance);\n        },\n        arrayBuffer() {\n          return specConsumeBody(this, (bytes) => {\n            return new Uint8Array(bytes).buffer;\n          }, instance);\n        },\n        text() {\n          return specConsumeBody(this, utf8DecodeBytes, instance);\n        },\n        json() {\n          return specConsumeBody(this, parseJSONFromBytes, instance);\n        },\n        async formData() {\n          webidl.brandCheck(this, instance);\n          throwIfAborted(this[kState]);\n          const contentType = this.headers.get("Content-Type");\n          if (/multipart\\/form-data/.test(contentType)) {\n            const headers = {};\n            for (const [key, value] of this.headers)\n              headers[key.toLowerCase()] = value;\n            const responseFormData = new FormData2();\n            let busboy;\n            try {\n              busboy = Busboy({\n                headers,\n                defParamCharset: "utf8"\n              });\n            } catch (err) {\n              throw new DOMException(`${err}`, "AbortError");\n            }\n            busboy.on("field", (name, value) => {\n              responseFormData.append(name, value);\n            });\n            busboy.on("file", (name, value, info) => {\n              const { filename, encoding, mimeType } = info;\n              const chunks = [];\n              if (encoding === "base64" || encoding.toLowerCase() === "base64") {\n                let base64chunk = "";\n                value.on("data", (chunk) => {\n                  base64chunk += chunk.toString().replace(/[\\r\\n]/gm, "");\n                  const end = base64chunk.length - base64chunk.length % 4;\n                  chunks.push(Buffer.from(base64chunk.slice(0, end), "base64"));\n                  base64chunk = base64chunk.slice(end);\n                });\n                value.on("end", () => {\n                  chunks.push(Buffer.from(base64chunk, "base64"));\n                  responseFormData.append(name, new File2(chunks, filename, { type: mimeType }));\n                });\n              } else {\n                value.on("data", (chunk) => {\n                  chunks.push(chunk);\n                });\n                value.on("end", () => {\n                  responseFormData.append(name, new File2(chunks, filename, { type: mimeType }));\n                });\n              }\n            });\n            const busboyResolve = new Promise((resolve, reject) => {\n              busboy.on("finish", resolve);\n              busboy.on("error", (err) => reject(new TypeError(err)));\n            });\n            if (this.body !== null)\n              for await (const chunk of consumeBody(this[kState].body))\n                busboy.write(chunk);\n            busboy.end();\n            await busboyResolve;\n            return responseFormData;\n          } else if (/application\\/x-www-form-urlencoded/.test(contentType)) {\n            let entries;\n            try {\n              let text = "";\n              const textDecoder = new TextDecoder("utf-8", { ignoreBOM: true });\n              for await (const chunk of consumeBody(this[kState].body)) {\n                if (!isUint8Array(chunk)) {\n                  throw new TypeError("Expected Uint8Array chunk");\n                }\n                text += textDecoder.decode(chunk, { stream: true });\n              }\n              text += textDecoder.decode();\n              entries = new URLSearchParams(text);\n            } catch (err) {\n              throw Object.assign(new TypeError(), { cause: err });\n            }\n            const formData = new FormData2();\n            for (const [name, value] of entries) {\n              formData.append(name, value);\n            }\n            return formData;\n          } else {\n            await Promise.resolve();\n            throwIfAborted(this[kState]);\n            throw webidl.errors.exception({\n              header: `${instance.name}.formData`,\n              message: "Could not parse content as FormData."\n            });\n          }\n        }\n      };\n      return methods;\n    }\n    __name(bodyMixinMethods, "bodyMixinMethods");\n    function mixinBody(prototype) {\n      Object.assign(prototype.prototype, bodyMixinMethods(prototype));\n    }\n    __name(mixinBody, "mixinBody");\n    async function specConsumeBody(object, convertBytesToJSValue, instance) {\n      webidl.brandCheck(object, instance);\n      throwIfAborted(object[kState]);\n      if (bodyUnusable(object[kState].body)) {\n        throw new TypeError("Body is unusable");\n      }\n      const promise = createDeferredPromise();\n      const errorSteps = /* @__PURE__ */ __name((error) => promise.reject(error), "errorSteps");\n      const successSteps = /* @__PURE__ */ __name((data) => {\n        try {\n          promise.resolve(convertBytesToJSValue(data));\n        } catch (e) {\n          errorSteps(e);\n        }\n      }, "successSteps");\n      if (object[kState].body == null) {\n        successSteps(new Uint8Array());\n        return promise.promise;\n      }\n      fullyReadBody(object[kState].body, successSteps, errorSteps);\n      return promise.promise;\n    }\n    __name(specConsumeBody, "specConsumeBody");\n    function bodyUnusable(body) {\n      return body != null && (body.stream.locked || util.isDisturbed(body.stream));\n    }\n    __name(bodyUnusable, "bodyUnusable");\n    function utf8DecodeBytes(buffer) {\n      if (buffer.length === 0) {\n        return "";\n      }\n      if (buffer[0] === 239 && buffer[1] === 187 && buffer[2] === 191) {\n        buffer = buffer.subarray(3);\n      }\n      const output = new TextDecoder().decode(buffer);\n      return output;\n    }\n    __name(utf8DecodeBytes, "utf8DecodeBytes");\n    function parseJSONFromBytes(bytes) {\n      return JSON.parse(utf8DecodeBytes(bytes));\n    }\n    __name(parseJSONFromBytes, "parseJSONFromBytes");\n    function bodyMimeType(object) {\n      const { headersList } = object[kState];\n      const contentType = headersList.get("content-type");\n      if (contentType === null) {\n        return "failure";\n      }\n      return parseMIMEType(contentType);\n    }\n    __name(bodyMimeType, "bodyMimeType");\n    module2.exports = {\n      extractBody,\n      safelyExtractBody,\n      cloneBody,\n      mixinBody\n    };\n  }\n});\n\n// ../../node_modules/.pnpm/undici@5.23.0/node_modules/undici/lib/fetch/response.js\nvar require_response = __commonJS({\n  "../../node_modules/.pnpm/undici@5.23.0/node_modules/undici/lib/fetch/response.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    var { Headers: Headers3, HeadersList, fill } = require_headers();\n    var { extractBody, cloneBody, mixinBody } = require_body();\n    var util = require_util();\n    var { kEnumerableProperty } = util;\n    var {\n      isValidReasonPhrase,\n      isCancelled,\n      isAborted,\n      isBlobLike,\n      serializeJavascriptValueToJSONString,\n      isErrorLike,\n      isomorphicEncode\n    } = require_util2();\n    var {\n      redirectStatus,\n      nullBodyStatus,\n      DOMException\n    } = require_constants();\n    var { kState, kHeaders: kHeaders2, kGuard: kGuard2, kRealm } = require_symbols();\n    var { webidl } = require_webidl();\n    var { FormData: FormData2 } = require_formdata();\n    var { getGlobalOrigin } = require_global();\n    var { URLSerializer } = require_dataURL();\n    var { kHeadersList } = require_symbols2();\n    var assert = require("assert");\n    var { types } = require("util");\n    var ReadableStream = globalThis.ReadableStream || require("./streams").ReadableStream;\n    var _Response = class _Response {\n      // Creates network error Response.\n      static error() {\n        const relevantRealm = { settingsObject: {} };\n        const responseObject = new _Response();\n        responseObject[kState] = makeNetworkError();\n        responseObject[kRealm] = relevantRealm;\n        responseObject[kHeaders2][kHeadersList] = responseObject[kState].headersList;\n        responseObject[kHeaders2][kGuard2] = "immutable";\n        responseObject[kHeaders2][kRealm] = relevantRealm;\n        return responseObject;\n      }\n      // https://fetch.spec.whatwg.org/#dom-response-json\n      static json(data = void 0, init = {}) {\n        webidl.argumentLengthCheck(arguments, 1, { header: "Response.json" });\n        if (init !== null) {\n          init = webidl.converters.ResponseInit(init);\n        }\n        const bytes = new TextEncoder("utf-8").encode(\n          serializeJavascriptValueToJSONString(data)\n        );\n        const body = extractBody(bytes);\n        const relevantRealm = { settingsObject: {} };\n        const responseObject = new _Response();\n        responseObject[kRealm] = relevantRealm;\n        responseObject[kHeaders2][kGuard2] = "response";\n        responseObject[kHeaders2][kRealm] = relevantRealm;\n        initializeResponse(responseObject, init, { body: body[0], type: "application/json" });\n        return responseObject;\n      }\n      // Creates a redirect Response that redirects to url with status status.\n      static redirect(url, status = 302) {\n        const relevantRealm = { settingsObject: {} };\n        webidl.argumentLengthCheck(arguments, 1, { header: "Response.redirect" });\n        url = webidl.converters.USVString(url);\n        status = webidl.converters["unsigned short"](status);\n        let parsedURL;\n        try {\n          parsedURL = new URL(url, getGlobalOrigin());\n        } catch (err) {\n          throw Object.assign(new TypeError("Failed to parse URL from " + url), {\n            cause: err\n          });\n        }\n        if (!redirectStatus.includes(status)) {\n          throw new RangeError("Invalid status code " + status);\n        }\n        const responseObject = new _Response();\n        responseObject[kRealm] = relevantRealm;\n        responseObject[kHeaders2][kGuard2] = "immutable";\n        responseObject[kHeaders2][kRealm] = relevantRealm;\n        responseObject[kState].status = status;\n        const value = isomorphicEncode(URLSerializer(parsedURL));\n        responseObject[kState].headersList.append("location", value);\n        return responseObject;\n      }\n      // https://fetch.spec.whatwg.org/#dom-response\n      constructor(body = null, init = {}) {\n        if (body !== null) {\n          body = webidl.converters.BodyInit(body);\n        }\n        init = webidl.converters.ResponseInit(init);\n        this[kRealm] = { settingsObject: {} };\n        this[kState] = makeResponse({});\n        this[kHeaders2] = new Headers3();\n        this[kHeaders2][kGuard2] = "response";\n        this[kHeaders2][kHeadersList] = this[kState].headersList;\n        this[kHeaders2][kRealm] = this[kRealm];\n        let bodyWithType = null;\n        if (body != null) {\n          const [extractedBody, type] = extractBody(body);\n          bodyWithType = { body: extractedBody, type };\n        }\n        initializeResponse(this, init, bodyWithType);\n      }\n      // Returns response’s type, e.g., "cors".\n      get type() {\n        webidl.brandCheck(this, _Response);\n        return this[kState].type;\n      }\n      // Returns response’s URL, if it has one; otherwise the empty string.\n      get url() {\n        webidl.brandCheck(this, _Response);\n        const urlList = this[kState].urlList;\n        const url = urlList[urlList.length - 1] ?? null;\n        if (url === null) {\n          return "";\n        }\n        return URLSerializer(url, true);\n      }\n      // Returns whether response was obtained through a redirect.\n      get redirected() {\n        webidl.brandCheck(this, _Response);\n        return this[kState].urlList.length > 1;\n      }\n      // Returns response’s status.\n      get status() {\n        webidl.brandCheck(this, _Response);\n        return this[kState].status;\n      }\n      // Returns whether response’s status is an ok status.\n      get ok() {\n        webidl.brandCheck(this, _Response);\n        return this[kState].status >= 200 && this[kState].status <= 299;\n      }\n      // Returns response’s status message.\n      get statusText() {\n        webidl.brandCheck(this, _Response);\n        return this[kState].statusText;\n      }\n      // Returns response’s headers as Headers.\n      get headers() {\n        webidl.brandCheck(this, _Response);\n        return this[kHeaders2];\n      }\n      get body() {\n        webidl.brandCheck(this, _Response);\n        return this[kState].body ? this[kState].body.stream : null;\n      }\n      get bodyUsed() {\n        webidl.brandCheck(this, _Response);\n        return !!this[kState].body && util.isDisturbed(this[kState].body.stream);\n      }\n      // Returns a clone of response.\n      clone() {\n        webidl.brandCheck(this, _Response);\n        if (this.bodyUsed || this.body && this.body.locked) {\n          throw webidl.errors.exception({\n            header: "Response.clone",\n            message: "Body has already been consumed."\n          });\n        }\n        const clonedResponse = cloneResponse(this[kState]);\n        const clonedResponseObject = new _Response();\n        clonedResponseObject[kState] = clonedResponse;\n        clonedResponseObject[kRealm] = this[kRealm];\n        clonedResponseObject[kHeaders2][kHeadersList] = clonedResponse.headersList;\n        clonedResponseObject[kHeaders2][kGuard2] = this[kHeaders2][kGuard2];\n        clonedResponseObject[kHeaders2][kRealm] = this[kHeaders2][kRealm];\n        return clonedResponseObject;\n      }\n    };\n    __name(_Response, "Response");\n    var Response3 = _Response;\n    mixinBody(Response3);\n    Object.defineProperties(Response3.prototype, {\n      type: kEnumerableProperty,\n      url: kEnumerableProperty,\n      status: kEnumerableProperty,\n      ok: kEnumerableProperty,\n      redirected: kEnumerableProperty,\n      statusText: kEnumerableProperty,\n      headers: kEnumerableProperty,\n      clone: kEnumerableProperty,\n      body: kEnumerableProperty,\n      bodyUsed: kEnumerableProperty,\n      [Symbol.toStringTag]: {\n        value: "Response",\n        configurable: true\n      }\n    });\n    Object.defineProperties(Response3, {\n      json: kEnumerableProperty,\n      redirect: kEnumerableProperty,\n      error: kEnumerableProperty\n    });\n    function cloneResponse(response) {\n      if (response.internalResponse) {\n        return filterResponse(\n          cloneResponse(response.internalResponse),\n          response.type\n        );\n      }\n      const newResponse = makeResponse({ ...response, body: null });\n      if (response.body != null) {\n        newResponse.body = cloneBody(response.body);\n      }\n      return newResponse;\n    }\n    __name(cloneResponse, "cloneResponse");\n    function makeResponse(init) {\n      return {\n        aborted: false,\n        rangeRequested: false,\n        timingAllowPassed: false,\n        requestIncludesCredentials: false,\n        type: "default",\n        status: 200,\n        timingInfo: null,\n        cacheState: "",\n        statusText: "",\n        ...init,\n        headersList: init.headersList ? new HeadersList(init.headersList) : new HeadersList(),\n        urlList: init.urlList ? [...init.urlList] : []\n      };\n    }\n    __name(makeResponse, "makeResponse");\n    function makeNetworkError(reason) {\n      const isError = isErrorLike(reason);\n      return makeResponse({\n        type: "error",\n        status: 0,\n        error: isError ? reason : new Error(reason ? String(reason) : reason),\n        aborted: reason && reason.name === "AbortError"\n      });\n    }\n    __name(makeNetworkError, "makeNetworkError");\n    function makeFilteredResponse(response, state) {\n      state = {\n        internalResponse: response,\n        ...state\n      };\n      return new Proxy(response, {\n        get(target, p) {\n          return p in state ? state[p] : target[p];\n        },\n        set(target, p, value) {\n          assert(!(p in state));\n          target[p] = value;\n          return true;\n        }\n      });\n    }\n    __name(makeFilteredResponse, "makeFilteredResponse");\n    function filterResponse(response, type) {\n      if (type === "basic") {\n        return makeFilteredResponse(response, {\n          type: "basic",\n          headersList: response.headersList\n        });\n      } else if (type === "cors") {\n        return makeFilteredResponse(response, {\n          type: "cors",\n          headersList: response.headersList\n        });\n      } else if (type === "opaque") {\n        return makeFilteredResponse(response, {\n          type: "opaque",\n          urlList: Object.freeze([]),\n          status: 0,\n          statusText: "",\n          body: null\n        });\n      } else if (type === "opaqueredirect") {\n        return makeFilteredResponse(response, {\n          type: "opaqueredirect",\n          status: 0,\n          statusText: "",\n          headersList: [],\n          body: null\n        });\n      } else {\n        assert(false);\n      }\n    }\n    __name(filterResponse, "filterResponse");\n    function makeAppropriateNetworkError(fetchParams) {\n      assert(isCancelled(fetchParams));\n      return isAborted(fetchParams) ? makeNetworkError(new DOMException("The operation was aborted.", "AbortError")) : makeNetworkError("Request was cancelled.");\n    }\n    __name(makeAppropriateNetworkError, "makeAppropriateNetworkError");\n    function initializeResponse(response, init, body) {\n      if (init.status !== null && (init.status < 200 || init.status > 599)) {\n        throw new RangeError(\'init["status"] must be in the range of 200 to 599, inclusive.\');\n      }\n      if ("statusText" in init && init.statusText != null) {\n        if (!isValidReasonPhrase(String(init.statusText))) {\n          throw new TypeError("Invalid statusText");\n        }\n      }\n      if ("status" in init && init.status != null) {\n        response[kState].status = init.status;\n      }\n      if ("statusText" in init && init.statusText != null) {\n        response[kState].statusText = init.statusText;\n      }\n      if ("headers" in init && init.headers != null) {\n        fill(response[kHeaders2], init.headers);\n      }\n      if (body) {\n        if (nullBodyStatus.includes(response.status)) {\n          throw webidl.errors.exception({\n            header: "Response constructor",\n            message: "Invalid response status code " + response.status\n          });\n        }\n        response[kState].body = body.body;\n        if (body.type != null && !response[kState].headersList.contains("Content-Type")) {\n          response[kState].headersList.append("content-type", body.type);\n        }\n      }\n    }\n    __name(initializeResponse, "initializeResponse");\n    webidl.converters.ReadableStream = webidl.interfaceConverter(\n      ReadableStream\n    );\n    webidl.converters.FormData = webidl.interfaceConverter(\n      FormData2\n    );\n    webidl.converters.URLSearchParams = webidl.interfaceConverter(\n      URLSearchParams\n    );\n    webidl.converters.XMLHttpRequestBodyInit = function(V) {\n      if (typeof V === "string") {\n        return webidl.converters.USVString(V);\n      }\n      if (isBlobLike(V)) {\n        return webidl.converters.Blob(V, { strict: false });\n      }\n      if (types.isAnyArrayBuffer(V) || types.isTypedArray(V) || types.isDataView(V)) {\n        return webidl.converters.BufferSource(V);\n      }\n      if (util.isFormDataLike(V)) {\n        return webidl.converters.FormData(V, { strict: false });\n      }\n      if (V instanceof URLSearchParams) {\n        return webidl.converters.URLSearchParams(V);\n      }\n      return webidl.converters.DOMString(V);\n    };\n    webidl.converters.BodyInit = function(V) {\n      if (V instanceof ReadableStream) {\n        return webidl.converters.ReadableStream(V);\n      }\n      if (V?.[Symbol.asyncIterator]) {\n        return V;\n      }\n      return webidl.converters.XMLHttpRequestBodyInit(V);\n    };\n    webidl.converters.ResponseInit = webidl.dictionaryConverter([\n      {\n        key: "status",\n        converter: webidl.converters["unsigned short"],\n        defaultValue: 200\n      },\n      {\n        key: "statusText",\n        converter: webidl.converters.ByteString,\n        defaultValue: ""\n      },\n      {\n        key: "headers",\n        converter: webidl.converters.HeadersInit\n      }\n    ]);\n    module2.exports = {\n      makeNetworkError,\n      makeResponse,\n      makeAppropriateNetworkError,\n      filterResponse,\n      Response: Response3,\n      cloneResponse\n    };\n  }\n});\n\n// ../../node_modules/.pnpm/undici@5.23.0/node_modules/undici/lib/compat/dispatcher-weakref.js\nvar require_dispatcher_weakref = __commonJS({\n  "../../node_modules/.pnpm/undici@5.23.0/node_modules/undici/lib/compat/dispatcher-weakref.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    var { kConnected, kSize } = require_symbols2();\n    var _CompatWeakRef = class _CompatWeakRef {\n      constructor(value) {\n        this.value = value;\n      }\n      deref() {\n        return this.value[kConnected] === 0 && this.value[kSize] === 0 ? void 0 : this.value;\n      }\n    };\n    __name(_CompatWeakRef, "CompatWeakRef");\n    var CompatWeakRef = _CompatWeakRef;\n    var _CompatFinalizer = class _CompatFinalizer {\n      constructor(finalizer) {\n        this.finalizer = finalizer;\n      }\n      register(dispatcher, key) {\n        dispatcher.on("disconnect", () => {\n          if (dispatcher[kConnected] === 0 && dispatcher[kSize] === 0) {\n            this.finalizer(key);\n          }\n        });\n      }\n    };\n    __name(_CompatFinalizer, "CompatFinalizer");\n    var CompatFinalizer = _CompatFinalizer;\n    module2.exports = function() {\n      return {\n        WeakRef: global.WeakRef || CompatWeakRef,\n        FinalizationRegistry: global.FinalizationRegistry || CompatFinalizer\n      };\n    };\n  }\n});\n\n// ../../node_modules/.pnpm/undici@5.23.0/node_modules/undici/lib/fetch/request.js\nvar require_request = __commonJS({\n  "../../node_modules/.pnpm/undici@5.23.0/node_modules/undici/lib/fetch/request.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    global.FinalizationRegistry = function() {\n      return { register: function() {\n      } };\n    };\n    var { extractBody, mixinBody, cloneBody } = require_body();\n    var { Headers: Headers3, fill: fillHeaders, HeadersList } = require_headers();\n    var { FinalizationRegistry } = require_dispatcher_weakref()();\n    var util = require_util();\n    var {\n      isValidHTTPToken,\n      sameOrigin,\n      normalizeMethod,\n      makePolicyContainer\n    } = require_util2();\n    var {\n      forbiddenMethods,\n      corsSafeListedMethods,\n      referrerPolicy,\n      requestRedirect,\n      requestMode,\n      requestCredentials,\n      requestCache,\n      requestDuplex\n    } = require_constants();\n    var { kEnumerableProperty } = util;\n    var { kHeaders: kHeaders2, kSignal, kState, kGuard: kGuard2, kRealm } = require_symbols();\n    var { webidl } = require_webidl();\n    var { getGlobalOrigin } = require_global();\n    var { URLSerializer } = require_dataURL();\n    var { kHeadersList } = require_symbols2();\n    var assert = require("assert");\n    var { getMaxListeners, setMaxListeners, getEventListeners, defaultMaxListeners } = require("events");\n    var TransformStream = globalThis.TransformStream;\n    var kInit = Symbol("init");\n    var kAbortController = Symbol("abortController");\n    var requestFinalizer = new FinalizationRegistry(({ signal, abort }) => {\n      signal.removeEventListener("abort", abort);\n    });\n    var _Request2 = class _Request2 {\n      // https://fetch.spec.whatwg.org/#dom-request\n      constructor(input, init = {}) {\n        if (input === kInit) {\n          return;\n        }\n        webidl.argumentLengthCheck(arguments, 1, { header: "Request constructor" });\n        input = webidl.converters.RequestInfo(input);\n        init = webidl.converters.RequestInit(init);\n        this[kRealm] = {\n          settingsObject: {\n            baseUrl: getGlobalOrigin(),\n            get origin() {\n              return this.baseUrl?.origin;\n            },\n            policyContainer: makePolicyContainer()\n          }\n        };\n        let request = null;\n        let fallbackMode = null;\n        const baseUrl = this[kRealm].settingsObject.baseUrl;\n        let signal = null;\n        if (typeof input === "string") {\n          let parsedURL;\n          try {\n            parsedURL = new URL(input, baseUrl);\n          } catch (err) {\n            throw new TypeError("Failed to parse URL from " + input, { cause: err });\n          }\n          if (parsedURL.username || parsedURL.password) {\n            throw new TypeError(\n              "Request cannot be constructed from a URL that includes credentials: " + input\n            );\n          }\n          request = makeRequest({ urlList: [parsedURL] });\n          fallbackMode = "cors";\n        } else {\n          assert(input instanceof _Request2);\n          request = input[kState];\n          signal = input[kSignal];\n        }\n        const origin = this[kRealm].settingsObject.origin;\n        let window = "client";\n        if (request.window?.constructor?.name === "EnvironmentSettingsObject" && sameOrigin(request.window, origin)) {\n          window = request.window;\n        }\n        if (init.window != null) {\n          throw new TypeError(`\'window\' option \'${window}\' must be null`);\n        }\n        if ("window" in init) {\n          window = "no-window";\n        }\n        request = makeRequest({\n          // URL request’s URL.\n          // undici implementation note: this is set as the first item in request\'s urlList in makeRequest\n          // method request’s method.\n          method: request.method,\n          // header list A copy of request’s header list.\n          // undici implementation note: headersList is cloned in makeRequest\n          headersList: request.headersList,\n          // unsafe-request flag Set.\n          unsafeRequest: request.unsafeRequest,\n          // client This’s relevant settings object.\n          client: this[kRealm].settingsObject,\n          // window window.\n          window,\n          // priority request’s priority.\n          priority: request.priority,\n          // origin request’s origin. The propagation of the origin is only significant for navigation requests\n          // being handled by a service worker. In this scenario a request can have an origin that is different\n          // from the current client.\n          origin: request.origin,\n          // referrer request’s referrer.\n          referrer: request.referrer,\n          // referrer policy request’s referrer policy.\n          referrerPolicy: request.referrerPolicy,\n          // mode request’s mode.\n          mode: request.mode,\n          // credentials mode request’s credentials mode.\n          credentials: request.credentials,\n          // cache mode request’s cache mode.\n          cache: request.cache,\n          // redirect mode request’s redirect mode.\n          redirect: request.redirect,\n          // integrity metadata request’s integrity metadata.\n          integrity: request.integrity,\n          // keepalive request’s keepalive.\n          keepalive: request.keepalive,\n          // reload-navigation flag request’s reload-navigation flag.\n          reloadNavigation: request.reloadNavigation,\n          // history-navigation flag request’s history-navigation flag.\n          historyNavigation: request.historyNavigation,\n          // URL list A clone of request’s URL list.\n          urlList: [...request.urlList]\n        });\n        if (Object.keys(init).length > 0) {\n          if (request.mode === "navigate") {\n            request.mode = "same-origin";\n          }\n          request.reloadNavigation = false;\n          request.historyNavigation = false;\n          request.origin = "client";\n          request.referrer = "client";\n          request.referrerPolicy = "";\n          request.url = request.urlList[request.urlList.length - 1];\n          request.urlList = [request.url];\n        }\n        if (init.referrer !== void 0) {\n          const referrer = init.referrer;\n          if (referrer === "") {\n            request.referrer = "no-referrer";\n          } else {\n            let parsedReferrer;\n            try {\n              parsedReferrer = new URL(referrer, baseUrl);\n            } catch (err) {\n              throw new TypeError(`Referrer "${referrer}" is not a valid URL.`, { cause: err });\n            }\n            if (parsedReferrer.protocol === "about:" && parsedReferrer.hostname === "client" || origin && !sameOrigin(parsedReferrer, this[kRealm].settingsObject.baseUrl)) {\n              request.referrer = "client";\n            } else {\n              request.referrer = parsedReferrer;\n            }\n          }\n        }\n        if (init.referrerPolicy !== void 0) {\n          request.referrerPolicy = init.referrerPolicy;\n        }\n        let mode;\n        if (init.mode !== void 0) {\n          mode = init.mode;\n        } else {\n          mode = fallbackMode;\n        }\n        if (mode === "navigate") {\n          throw webidl.errors.exception({\n            header: "Request constructor",\n            message: "invalid request mode navigate."\n          });\n        }\n        if (mode != null) {\n          request.mode = mode;\n        }\n        if (init.credentials !== void 0) {\n          request.credentials = init.credentials;\n        }\n        if (init.cache !== void 0) {\n          request.cache = init.cache;\n        }\n        if (request.cache === "only-if-cached" && request.mode !== "same-origin") {\n          throw new TypeError(\n            "\'only-if-cached\' can be set only with \'same-origin\' mode"\n          );\n        }\n        if (init.redirect !== void 0) {\n          request.redirect = init.redirect;\n        }\n        if (init.integrity !== void 0 && init.integrity != null) {\n          request.integrity = String(init.integrity);\n        }\n        if (init.keepalive !== void 0) {\n          request.keepalive = Boolean(init.keepalive);\n        }\n        if (init.method !== void 0) {\n          let method = init.method;\n          if (!isValidHTTPToken(init.method)) {\n            throw TypeError(`\'${init.method}\' is not a valid HTTP method.`);\n          }\n          if (forbiddenMethods.indexOf(method.toUpperCase()) !== -1) {\n            throw TypeError(`\'${init.method}\' HTTP method is unsupported.`);\n          }\n          method = normalizeMethod(init.method);\n          request.method = method;\n        }\n        if (init.signal !== void 0) {\n          signal = init.signal;\n        }\n        this[kState] = request;\n        const ac = new AbortController();\n        this[kSignal] = ac.signal;\n        this[kSignal][kRealm] = this[kRealm];\n        if (signal != null) {\n          if (!signal || typeof signal.aborted !== "boolean" || typeof signal.addEventListener !== "function") {\n            throw new TypeError(\n              "Failed to construct \'Request\': member signal is not of type AbortSignal."\n            );\n          }\n          if (signal.aborted) {\n            ac.abort(signal.reason);\n          } else {\n            this[kAbortController] = ac;\n            const acRef = new WeakRef(ac);\n            const abort = /* @__PURE__ */ __name(function() {\n              const ac2 = acRef.deref();\n              if (ac2 !== void 0) {\n                ac2.abort(this.reason);\n              }\n            }, "abort");\n            try {\n              if (typeof getMaxListeners === "function" && getMaxListeners(signal) === defaultMaxListeners) {\n                setMaxListeners(100, signal);\n              } else if (getEventListeners(signal, "abort").length >= defaultMaxListeners) {\n                setMaxListeners(100, signal);\n              }\n            } catch {\n            }\n            util.addAbortListener(signal, abort);\n            requestFinalizer.register(ac, { signal, abort });\n          }\n        }\n        this[kHeaders2] = new Headers3();\n        this[kHeaders2][kHeadersList] = request.headersList;\n        this[kHeaders2][kGuard2] = "request";\n        this[kHeaders2][kRealm] = this[kRealm];\n        if (mode === "no-cors") {\n          if (!corsSafeListedMethods.includes(request.method)) {\n            throw new TypeError(\n              `\'${request.method} is unsupported in no-cors mode.`\n            );\n          }\n          this[kHeaders2][kGuard2] = "request-no-cors";\n        }\n        if (Object.keys(init).length !== 0) {\n          let headers = new Headers3(this[kHeaders2]);\n          if (init.headers !== void 0) {\n            headers = init.headers;\n          }\n          this[kHeaders2][kHeadersList].clear();\n          if (headers.constructor.name === "Headers") {\n            for (const [key, val] of headers) {\n              this[kHeaders2].append(key, val);\n            }\n          } else {\n            fillHeaders(this[kHeaders2], headers);\n          }\n        }\n        const inputBody = input instanceof _Request2 ? input[kState].body : null;\n        if ((init.body != null || inputBody != null) && (request.method === "GET" || request.method === "HEAD")) {\n          throw new TypeError("Request with GET/HEAD method cannot have body.");\n        }\n        let initBody = null;\n        if (init.body != null) {\n          const [extractedBody, contentType] = extractBody(\n            init.body,\n            request.keepalive\n          );\n          initBody = extractedBody;\n          if (contentType && !this[kHeaders2][kHeadersList].contains("content-type")) {\n            this[kHeaders2].append("content-type", contentType);\n          }\n        }\n        const inputOrInitBody = initBody ?? inputBody;\n        if (inputOrInitBody != null && inputOrInitBody.source == null) {\n          if (initBody != null && init.duplex == null) {\n            throw new TypeError("RequestInit: duplex option is required when sending a body.");\n          }\n          if (request.mode !== "same-origin" && request.mode !== "cors") {\n            throw new TypeError(\n              \'If request is made from ReadableStream, mode should be "same-origin" or "cors"\'\n            );\n          }\n          request.useCORSPreflightFlag = true;\n        }\n        let finalBody = inputOrInitBody;\n        if (initBody == null && inputBody != null) {\n          if (util.isDisturbed(inputBody.stream) || inputBody.stream.locked) {\n            throw new TypeError(\n              "Cannot construct a Request with a Request object that has already been used."\n            );\n          }\n          if (!TransformStream) {\n            TransformStream = require("./streams").TransformStream;\n          }\n          const identityTransform = new TransformStream();\n          inputBody.stream.pipeThrough(identityTransform);\n          finalBody = {\n            source: inputBody.source,\n            length: inputBody.length,\n            stream: identityTransform.readable\n          };\n        }\n        this[kState].body = finalBody;\n      }\n      // Returns request’s HTTP method, which is "GET" by default.\n      get method() {\n        webidl.brandCheck(this, _Request2);\n        return this[kState].method;\n      }\n      // Returns the URL of request as a string.\n      get url() {\n        webidl.brandCheck(this, _Request2);\n        return URLSerializer(this[kState].url);\n      }\n      // Returns a Headers object consisting of the headers associated with request.\n      // Note that headers added in the network layer by the user agent will not\n      // be accounted for in this object, e.g., the "Host" header.\n      get headers() {\n        webidl.brandCheck(this, _Request2);\n        return this[kHeaders2];\n      }\n      // Returns the kind of resource requested by request, e.g., "document"\n      // or "script".\n      get destination() {\n        webidl.brandCheck(this, _Request2);\n        return this[kState].destination;\n      }\n      // Returns the referrer of request. Its value can be a same-origin URL if\n      // explicitly set in init, the empty string to indicate no referrer, and\n      // "about:client" when defaulting to the global’s default. This is used\n      // during fetching to determine the value of the `Referer` header of the\n      // request being made.\n      get referrer() {\n        webidl.brandCheck(this, _Request2);\n        if (this[kState].referrer === "no-referrer") {\n          return "";\n        }\n        if (this[kState].referrer === "client") {\n          return "about:client";\n        }\n        return this[kState].referrer.toString();\n      }\n      // Returns the referrer policy associated with request.\n      // This is used during fetching to compute the value of the request’s\n      // referrer.\n      get referrerPolicy() {\n        webidl.brandCheck(this, _Request2);\n        return this[kState].referrerPolicy;\n      }\n      // Returns the mode associated with request, which is a string indicating\n      // whether the request will use CORS, or will be restricted to same-origin\n      // URLs.\n      get mode() {\n        webidl.brandCheck(this, _Request2);\n        return this[kState].mode;\n      }\n      // Returns the credentials mode associated with request,\n      // which is a string indicating whether credentials will be sent with the\n      // request always, never, or only when sent to a same-origin URL.\n      get credentials() {\n        return this[kState].credentials;\n      }\n      // Returns the cache mode associated with request,\n      // which is a string indicating how the request will\n      // interact with the browser’s cache when fetching.\n      get cache() {\n        webidl.brandCheck(this, _Request2);\n        return this[kState].cache;\n      }\n      // Returns the redirect mode associated with request,\n      // which is a string indicating how redirects for the\n      // request will be handled during fetching. A request\n      // will follow redirects by default.\n      get redirect() {\n        webidl.brandCheck(this, _Request2);\n        return this[kState].redirect;\n      }\n      // Returns request’s subresource integrity metadata, which is a\n      // cryptographic hash of the resource being fetched. Its value\n      // consists of multiple hashes separated by whitespace. [SRI]\n      get integrity() {\n        webidl.brandCheck(this, _Request2);\n        return this[kState].integrity;\n      }\n      // Returns a boolean indicating whether or not request can outlive the\n      // global in which it was created.\n      get keepalive() {\n        webidl.brandCheck(this, _Request2);\n        return this[kState].keepalive;\n      }\n      // Returns a boolean indicating whether or not request is for a reload\n      // navigation.\n      get isReloadNavigation() {\n        webidl.brandCheck(this, _Request2);\n        return this[kState].reloadNavigation;\n      }\n      // Returns a boolean indicating whether or not request is for a history\n      // navigation (a.k.a. back-foward navigation).\n      get isHistoryNavigation() {\n        webidl.brandCheck(this, _Request2);\n        return this[kState].historyNavigation;\n      }\n      // Returns the signal associated with request, which is an AbortSignal\n      // object indicating whether or not request has been aborted, and its\n      // abort event handler.\n      get signal() {\n        webidl.brandCheck(this, _Request2);\n        return this[kSignal];\n      }\n      get body() {\n        webidl.brandCheck(this, _Request2);\n        return this[kState].body ? this[kState].body.stream : null;\n      }\n      get bodyUsed() {\n        webidl.brandCheck(this, _Request2);\n        return !!this[kState].body && util.isDisturbed(this[kState].body.stream);\n      }\n      get duplex() {\n        webidl.brandCheck(this, _Request2);\n        return "half";\n      }\n      // Returns a clone of request.\n      clone() {\n        webidl.brandCheck(this, _Request2);\n        if (this.bodyUsed || this.body?.locked) {\n          throw new TypeError("unusable");\n        }\n        const clonedRequest = cloneRequest(this[kState]);\n        const clonedRequestObject = new _Request2(kInit);\n        clonedRequestObject[kState] = clonedRequest;\n        clonedRequestObject[kRealm] = this[kRealm];\n        clonedRequestObject[kHeaders2] = new Headers3();\n        clonedRequestObject[kHeaders2][kHeadersList] = clonedRequest.headersList;\n        clonedRequestObject[kHeaders2][kGuard2] = this[kHeaders2][kGuard2];\n        clonedRequestObject[kHeaders2][kRealm] = this[kHeaders2][kRealm];\n        const ac = new AbortController();\n        if (this.signal.aborted) {\n          ac.abort(this.signal.reason);\n        } else {\n          util.addAbortListener(\n            this.signal,\n            () => {\n              ac.abort(this.signal.reason);\n            }\n          );\n        }\n        clonedRequestObject[kSignal] = ac.signal;\n        return clonedRequestObject;\n      }\n    };\n    __name(_Request2, "Request");\n    var Request2 = _Request2;\n    mixinBody(Request2);\n    function makeRequest(init) {\n      const request = {\n        method: "GET",\n        localURLsOnly: false,\n        unsafeRequest: false,\n        body: null,\n        client: null,\n        reservedClient: null,\n        replacesClientId: "",\n        window: "client",\n        keepalive: false,\n        serviceWorkers: "all",\n        initiator: "",\n        destination: "",\n        priority: null,\n        origin: "client",\n        policyContainer: "client",\n        referrer: "client",\n        referrerPolicy: "",\n        mode: "no-cors",\n        useCORSPreflightFlag: false,\n        credentials: "same-origin",\n        useCredentials: false,\n        cache: "default",\n        redirect: "follow",\n        integrity: "",\n        cryptoGraphicsNonceMetadata: "",\n        parserMetadata: "",\n        reloadNavigation: false,\n        historyNavigation: false,\n        userActivation: false,\n        taintedOrigin: false,\n        redirectCount: 0,\n        responseTainting: "basic",\n        preventNoCacheCacheControlHeaderModification: false,\n        done: false,\n        timingAllowFailed: false,\n        ...init,\n        headersList: init.headersList ? new HeadersList(init.headersList) : new HeadersList()\n      };\n      request.url = request.urlList[0];\n      return request;\n    }\n    __name(makeRequest, "makeRequest");\n    function cloneRequest(request) {\n      const newRequest = makeRequest({ ...request, body: null });\n      if (request.body != null) {\n        newRequest.body = cloneBody(request.body);\n      }\n      return newRequest;\n    }\n    __name(cloneRequest, "cloneRequest");\n    Object.defineProperties(Request2.prototype, {\n      method: kEnumerableProperty,\n      url: kEnumerableProperty,\n      headers: kEnumerableProperty,\n      redirect: kEnumerableProperty,\n      clone: kEnumerableProperty,\n      signal: kEnumerableProperty,\n      duplex: kEnumerableProperty,\n      destination: kEnumerableProperty,\n      body: kEnumerableProperty,\n      bodyUsed: kEnumerableProperty,\n      isHistoryNavigation: kEnumerableProperty,\n      isReloadNavigation: kEnumerableProperty,\n      keepalive: kEnumerableProperty,\n      integrity: kEnumerableProperty,\n      cache: kEnumerableProperty,\n      credentials: kEnumerableProperty,\n      attribute: kEnumerableProperty,\n      referrerPolicy: kEnumerableProperty,\n      referrer: kEnumerableProperty,\n      mode: kEnumerableProperty,\n      [Symbol.toStringTag]: {\n        value: "Request",\n        configurable: true\n      }\n    });\n    webidl.converters.Request = webidl.interfaceConverter(\n      Request2\n    );\n    webidl.converters.RequestInfo = function(V) {\n      if (typeof V === "string") {\n        return webidl.converters.USVString(V);\n      }\n      if (V instanceof Request2) {\n        return webidl.converters.Request(V);\n      }\n      return webidl.converters.USVString(V);\n    };\n    webidl.converters.AbortSignal = webidl.interfaceConverter(\n      AbortSignal\n    );\n    webidl.converters.RequestInit = webidl.dictionaryConverter([\n      {\n        key: "method",\n        converter: webidl.converters.ByteString\n      },\n      {\n        key: "headers",\n        converter: webidl.converters.HeadersInit\n      },\n      {\n        key: "body",\n        converter: webidl.nullableConverter(\n          webidl.converters.BodyInit\n        )\n      },\n      {\n        key: "referrer",\n        converter: webidl.converters.USVString\n      },\n      {\n        key: "referrerPolicy",\n        converter: webidl.converters.DOMString,\n        // https://w3c.github.io/webappsec-referrer-policy/#referrer-policy\n        allowedValues: referrerPolicy\n      },\n      {\n        key: "mode",\n        converter: webidl.converters.DOMString,\n        // https://fetch.spec.whatwg.org/#concept-request-mode\n        allowedValues: requestMode\n      },\n      {\n        key: "credentials",\n        converter: webidl.converters.DOMString,\n        // https://fetch.spec.whatwg.org/#requestcredentials\n        allowedValues: requestCredentials\n      },\n      {\n        key: "cache",\n        converter: webidl.converters.DOMString,\n        // https://fetch.spec.whatwg.org/#requestcache\n        allowedValues: requestCache\n      },\n      {\n        key: "redirect",\n        converter: webidl.converters.DOMString,\n        // https://fetch.spec.whatwg.org/#requestredirect\n        allowedValues: requestRedirect\n      },\n      {\n        key: "integrity",\n        converter: webidl.converters.DOMString\n      },\n      {\n        key: "keepalive",\n        converter: webidl.converters.boolean\n      },\n      {\n        key: "signal",\n        converter: webidl.nullableConverter(\n          (signal) => webidl.converters.AbortSignal(\n            signal,\n            { strict: false }\n          )\n        )\n      },\n      {\n        key: "window",\n        converter: webidl.converters.any\n      },\n      {\n        key: "duplex",\n        converter: webidl.converters.DOMString,\n        allowedValues: requestDuplex\n      }\n    ]);\n    module2.exports = { Request: Request2, makeRequest };\n  }\n});\n\n// ../../node_modules/.pnpm/undici@5.23.0/node_modules/undici/lib/dispatcher.js\nvar require_dispatcher = __commonJS({\n  "../../node_modules/.pnpm/undici@5.23.0/node_modules/undici/lib/dispatcher.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    var EventEmitter = require("events");\n    var _Dispatcher = class _Dispatcher extends EventEmitter {\n      dispatch() {\n        throw new Error("not implemented");\n      }\n      close() {\n        throw new Error("not implemented");\n      }\n      destroy() {\n        throw new Error("not implemented");\n      }\n    };\n    __name(_Dispatcher, "Dispatcher");\n    var Dispatcher = _Dispatcher;\n    module2.exports = Dispatcher;\n  }\n});\n\n// ../../node_modules/.pnpm/undici@5.23.0/node_modules/undici/lib/dispatcher-base.js\nvar require_dispatcher_base = __commonJS({\n  "../../node_modules/.pnpm/undici@5.23.0/node_modules/undici/lib/dispatcher-base.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    var Dispatcher = require_dispatcher();\n    var {\n      ClientDestroyedError,\n      ClientClosedError,\n      InvalidArgumentError: InvalidArgumentError2\n    } = require_errors();\n    var { kDestroy, kClose, kDispatch, kInterceptors } = require_symbols2();\n    var kDestroyed = Symbol("destroyed");\n    var kClosed = Symbol("closed");\n    var kOnDestroyed = Symbol("onDestroyed");\n    var kOnClosed = Symbol("onClosed");\n    var kInterceptedDispatch = Symbol("Intercepted Dispatch");\n    var _DispatcherBase = class _DispatcherBase extends Dispatcher {\n      constructor() {\n        super();\n        this[kDestroyed] = false;\n        this[kOnDestroyed] = null;\n        this[kClosed] = false;\n        this[kOnClosed] = [];\n      }\n      get destroyed() {\n        return this[kDestroyed];\n      }\n      get closed() {\n        return this[kClosed];\n      }\n      get interceptors() {\n        return this[kInterceptors];\n      }\n      set interceptors(newInterceptors) {\n        if (newInterceptors) {\n          for (let i = newInterceptors.length - 1; i >= 0; i--) {\n            const interceptor = this[kInterceptors][i];\n            if (typeof interceptor !== "function") {\n              throw new InvalidArgumentError2("interceptor must be an function");\n            }\n          }\n        }\n        this[kInterceptors] = newInterceptors;\n      }\n      close(callback) {\n        if (callback === void 0) {\n          return new Promise((resolve, reject) => {\n            this.close((err, data) => {\n              return err ? reject(err) : resolve(data);\n            });\n          });\n        }\n        if (typeof callback !== "function") {\n          throw new InvalidArgumentError2("invalid callback");\n        }\n        if (this[kDestroyed]) {\n          queueMicrotask(() => callback(new ClientDestroyedError(), null));\n          return;\n        }\n        if (this[kClosed]) {\n          if (this[kOnClosed]) {\n            this[kOnClosed].push(callback);\n          } else {\n            queueMicrotask(() => callback(null, null));\n          }\n          return;\n        }\n        this[kClosed] = true;\n        this[kOnClosed].push(callback);\n        const onClosed = /* @__PURE__ */ __name(() => {\n          const callbacks = this[kOnClosed];\n          this[kOnClosed] = null;\n          for (let i = 0; i < callbacks.length; i++) {\n            callbacks[i](null, null);\n          }\n        }, "onClosed");\n        this[kClose]().then(() => this.destroy()).then(() => {\n          queueMicrotask(onClosed);\n        });\n      }\n      destroy(err, callback) {\n        if (typeof err === "function") {\n          callback = err;\n          err = null;\n        }\n        if (callback === void 0) {\n          return new Promise((resolve, reject) => {\n            this.destroy(err, (err2, data) => {\n              return err2 ? (\n                /* istanbul ignore next: should never error */\n                reject(err2)\n              ) : resolve(data);\n            });\n          });\n        }\n        if (typeof callback !== "function") {\n          throw new InvalidArgumentError2("invalid callback");\n        }\n        if (this[kDestroyed]) {\n          if (this[kOnDestroyed]) {\n            this[kOnDestroyed].push(callback);\n          } else {\n            queueMicrotask(() => callback(null, null));\n          }\n          return;\n        }\n        if (!err) {\n          err = new ClientDestroyedError();\n        }\n        this[kDestroyed] = true;\n        this[kOnDestroyed] = this[kOnDestroyed] || [];\n        this[kOnDestroyed].push(callback);\n        const onDestroyed = /* @__PURE__ */ __name(() => {\n          const callbacks = this[kOnDestroyed];\n          this[kOnDestroyed] = null;\n          for (let i = 0; i < callbacks.length; i++) {\n            callbacks[i](null, null);\n          }\n        }, "onDestroyed");\n        this[kDestroy](err).then(() => {\n          queueMicrotask(onDestroyed);\n        });\n      }\n      [kInterceptedDispatch](opts, handler) {\n        if (!this[kInterceptors] || this[kInterceptors].length === 0) {\n          this[kInterceptedDispatch] = this[kDispatch];\n          return this[kDispatch](opts, handler);\n        }\n        let dispatch = this[kDispatch].bind(this);\n        for (let i = this[kInterceptors].length - 1; i >= 0; i--) {\n          dispatch = this[kInterceptors][i](dispatch);\n        }\n        this[kInterceptedDispatch] = dispatch;\n        return dispatch(opts, handler);\n      }\n      dispatch(opts, handler) {\n        if (!handler || typeof handler !== "object") {\n          throw new InvalidArgumentError2("handler must be an object");\n        }\n        try {\n          if (!opts || typeof opts !== "object") {\n            throw new InvalidArgumentError2("opts must be an object.");\n          }\n          if (this[kDestroyed] || this[kOnDestroyed]) {\n            throw new ClientDestroyedError();\n          }\n          if (this[kClosed]) {\n            throw new ClientClosedError();\n          }\n          return this[kInterceptedDispatch](opts, handler);\n        } catch (err) {\n          if (typeof handler.onError !== "function") {\n            throw new InvalidArgumentError2("invalid onError method");\n          }\n          handler.onError(err);\n          return false;\n        }\n      }\n    };\n    __name(_DispatcherBase, "DispatcherBase");\n    var DispatcherBase = _DispatcherBase;\n    module2.exports = DispatcherBase;\n  }\n});\n\n// ../../node_modules/.pnpm/undici@5.23.0/node_modules/undici/lib/node/fixed-queue.js\nvar require_fixed_queue = __commonJS({\n  "../../node_modules/.pnpm/undici@5.23.0/node_modules/undici/lib/node/fixed-queue.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    var kSize = 2048;\n    var kMask = kSize - 1;\n    var _FixedCircularBuffer = class _FixedCircularBuffer {\n      constructor() {\n        this.bottom = 0;\n        this.top = 0;\n        this.list = new Array(kSize);\n        this.next = null;\n      }\n      isEmpty() {\n        return this.top === this.bottom;\n      }\n      isFull() {\n        return (this.top + 1 & kMask) === this.bottom;\n      }\n      push(data) {\n        this.list[this.top] = data;\n        this.top = this.top + 1 & kMask;\n      }\n      shift() {\n        const nextItem = this.list[this.bottom];\n        if (nextItem === void 0)\n          return null;\n        this.list[this.bottom] = void 0;\n        this.bottom = this.bottom + 1 & kMask;\n        return nextItem;\n      }\n    };\n    __name(_FixedCircularBuffer, "FixedCircularBuffer");\n    var FixedCircularBuffer = _FixedCircularBuffer;\n    var _a;\n    module2.exports = (_a = class {\n      constructor() {\n        this.head = this.tail = new FixedCircularBuffer();\n      }\n      isEmpty() {\n        return this.head.isEmpty();\n      }\n      push(data) {\n        if (this.head.isFull()) {\n          this.head = this.head.next = new FixedCircularBuffer();\n        }\n        this.head.push(data);\n      }\n      shift() {\n        const tail = this.tail;\n        const next = tail.shift();\n        if (tail.isEmpty() && tail.next !== null) {\n          this.tail = tail.next;\n        }\n        return next;\n      }\n    }, __name(_a, "FixedQueue"), _a);\n  }\n});\n\n// ../../node_modules/.pnpm/undici@5.23.0/node_modules/undici/lib/pool-stats.js\nvar require_pool_stats = __commonJS({\n  "../../node_modules/.pnpm/undici@5.23.0/node_modules/undici/lib/pool-stats.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    var { kFree, kConnected, kPending, kQueued, kRunning, kSize } = require_symbols2();\n    var kPool = Symbol("pool");\n    var _PoolStats = class _PoolStats {\n      constructor(pool) {\n        this[kPool] = pool;\n      }\n      get connected() {\n        return this[kPool][kConnected];\n      }\n      get free() {\n        return this[kPool][kFree];\n      }\n      get pending() {\n        return this[kPool][kPending];\n      }\n      get queued() {\n        return this[kPool][kQueued];\n      }\n      get running() {\n        return this[kPool][kRunning];\n      }\n      get size() {\n        return this[kPool][kSize];\n      }\n    };\n    __name(_PoolStats, "PoolStats");\n    var PoolStats = _PoolStats;\n    module2.exports = PoolStats;\n  }\n});\n\n// ../../node_modules/.pnpm/undici@5.23.0/node_modules/undici/lib/pool-base.js\nvar require_pool_base = __commonJS({\n  "../../node_modules/.pnpm/undici@5.23.0/node_modules/undici/lib/pool-base.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    var DispatcherBase = require_dispatcher_base();\n    var FixedQueue = require_fixed_queue();\n    var { kConnected, kSize, kRunning, kPending, kQueued, kBusy, kFree, kUrl, kClose, kDestroy, kDispatch } = require_symbols2();\n    var PoolStats = require_pool_stats();\n    var kClients = Symbol("clients");\n    var kNeedDrain = Symbol("needDrain");\n    var kQueue = Symbol("queue");\n    var kClosedResolve = Symbol("closed resolve");\n    var kOnDrain = Symbol("onDrain");\n    var kOnConnect = Symbol("onConnect");\n    var kOnDisconnect = Symbol("onDisconnect");\n    var kOnConnectionError = Symbol("onConnectionError");\n    var kGetDispatcher = Symbol("get dispatcher");\n    var kAddClient = Symbol("add client");\n    var kRemoveClient = Symbol("remove client");\n    var kStats = Symbol("stats");\n    var _PoolBase = class _PoolBase extends DispatcherBase {\n      constructor() {\n        super();\n        this[kQueue] = new FixedQueue();\n        this[kClients] = [];\n        this[kQueued] = 0;\n        const pool = this;\n        this[kOnDrain] = /* @__PURE__ */ __name(function onDrain(origin, targets) {\n          const queue = pool[kQueue];\n          let needDrain = false;\n          while (!needDrain) {\n            const item = queue.shift();\n            if (!item) {\n              break;\n            }\n            pool[kQueued]--;\n            needDrain = !this.dispatch(item.opts, item.handler);\n          }\n          this[kNeedDrain] = needDrain;\n          if (!this[kNeedDrain] && pool[kNeedDrain]) {\n            pool[kNeedDrain] = false;\n            pool.emit("drain", origin, [pool, ...targets]);\n          }\n          if (pool[kClosedResolve] && queue.isEmpty()) {\n            Promise.all(pool[kClients].map((c) => c.close())).then(pool[kClosedResolve]);\n          }\n        }, "onDrain");\n        this[kOnConnect] = (origin, targets) => {\n          pool.emit("connect", origin, [pool, ...targets]);\n        };\n        this[kOnDisconnect] = (origin, targets, err) => {\n          pool.emit("disconnect", origin, [pool, ...targets], err);\n        };\n        this[kOnConnectionError] = (origin, targets, err) => {\n          pool.emit("connectionError", origin, [pool, ...targets], err);\n        };\n        this[kStats] = new PoolStats(this);\n      }\n      get [kBusy]() {\n        return this[kNeedDrain];\n      }\n      get [kConnected]() {\n        return this[kClients].filter((client) => client[kConnected]).length;\n      }\n      get [kFree]() {\n        return this[kClients].filter((client) => client[kConnected] && !client[kNeedDrain]).length;\n      }\n      get [kPending]() {\n        let ret = this[kQueued];\n        for (const { [kPending]: pending } of this[kClients]) {\n          ret += pending;\n        }\n        return ret;\n      }\n      get [kRunning]() {\n        let ret = 0;\n        for (const { [kRunning]: running } of this[kClients]) {\n          ret += running;\n        }\n        return ret;\n      }\n      get [kSize]() {\n        let ret = this[kQueued];\n        for (const { [kSize]: size } of this[kClients]) {\n          ret += size;\n        }\n        return ret;\n      }\n      get stats() {\n        return this[kStats];\n      }\n      async [kClose]() {\n        if (this[kQueue].isEmpty()) {\n          return Promise.all(this[kClients].map((c) => c.close()));\n        } else {\n          return new Promise((resolve) => {\n            this[kClosedResolve] = resolve;\n          });\n        }\n      }\n      async [kDestroy](err) {\n        while (true) {\n          const item = this[kQueue].shift();\n          if (!item) {\n            break;\n          }\n          item.handler.onError(err);\n        }\n        return Promise.all(this[kClients].map((c) => c.destroy(err)));\n      }\n      [kDispatch](opts, handler) {\n        const dispatcher = this[kGetDispatcher]();\n        if (!dispatcher) {\n          this[kNeedDrain] = true;\n          this[kQueue].push({ opts, handler });\n          this[kQueued]++;\n        } else if (!dispatcher.dispatch(opts, handler)) {\n          dispatcher[kNeedDrain] = true;\n          this[kNeedDrain] = !this[kGetDispatcher]();\n        }\n        return !this[kNeedDrain];\n      }\n      [kAddClient](client) {\n        client.on("drain", this[kOnDrain]).on("connect", this[kOnConnect]).on("disconnect", this[kOnDisconnect]).on("connectionError", this[kOnConnectionError]);\n        this[kClients].push(client);\n        if (this[kNeedDrain]) {\n          define_process_default.nextTick(() => {\n            if (this[kNeedDrain]) {\n              this[kOnDrain](client[kUrl], [this, client]);\n            }\n          });\n        }\n        return this;\n      }\n      [kRemoveClient](client) {\n        client.close(() => {\n          const idx = this[kClients].indexOf(client);\n          if (idx !== -1) {\n            this[kClients].splice(idx, 1);\n          }\n        });\n        this[kNeedDrain] = this[kClients].some((dispatcher) => !dispatcher[kNeedDrain] && dispatcher.closed !== true && dispatcher.destroyed !== true);\n      }\n    };\n    __name(_PoolBase, "PoolBase");\n    var PoolBase = _PoolBase;\n    module2.exports = {\n      PoolBase,\n      kClients,\n      kNeedDrain,\n      kAddClient,\n      kRemoveClient,\n      kGetDispatcher\n    };\n  }\n});\n\n// ../../node_modules/.pnpm/undici@5.23.0/node_modules/undici/lib/timers.js\nvar require_timers = __commonJS({\n  "../../node_modules/.pnpm/undici@5.23.0/node_modules/undici/lib/timers.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    var fastNow = Date.now();\n    var fastNowTimeout;\n    var fastTimers = [];\n    function onTimeout() {\n      fastNow = Date.now();\n      let len = fastTimers.length;\n      let idx = 0;\n      while (idx < len) {\n        const timer = fastTimers[idx];\n        if (timer.state === 0) {\n          timer.state = fastNow + timer.delay;\n        } else if (timer.state > 0 && fastNow >= timer.state) {\n          timer.state = -1;\n          timer.callback(timer.opaque);\n        }\n        if (timer.state === -1) {\n          timer.state = -2;\n          if (idx !== len - 1) {\n            fastTimers[idx] = fastTimers.pop();\n          } else {\n            fastTimers.pop();\n          }\n          len -= 1;\n        } else {\n          idx += 1;\n        }\n      }\n      if (fastTimers.length > 0) {\n        refreshTimeout();\n      }\n    }\n    __name(onTimeout, "onTimeout");\n    function refreshTimeout() {\n      if (fastNowTimeout && fastNowTimeout.refresh) {\n        fastNowTimeout.refresh();\n      } else {\n        clearTimeout(fastNowTimeout);\n        fastNowTimeout = setTimeout(onTimeout, 1e3);\n        if (fastNowTimeout.unref) {\n          fastNowTimeout.unref();\n        }\n      }\n    }\n    __name(refreshTimeout, "refreshTimeout");\n    var _Timeout = class _Timeout {\n      constructor(callback, delay, opaque) {\n        this.callback = callback;\n        this.delay = delay;\n        this.opaque = opaque;\n        this.state = -2;\n        this.refresh();\n      }\n      refresh() {\n        if (this.state === -2) {\n          fastTimers.push(this);\n          if (!fastNowTimeout || fastTimers.length === 1) {\n            refreshTimeout();\n          }\n        }\n        this.state = 0;\n      }\n      clear() {\n        this.state = -1;\n      }\n    };\n    __name(_Timeout, "Timeout");\n    var Timeout = _Timeout;\n    module2.exports = {\n      setTimeout(callback, delay, opaque) {\n        return delay < 1e3 ? setTimeout(callback, delay, opaque) : new Timeout(callback, delay, opaque);\n      },\n      clearTimeout(timeout) {\n        if (timeout instanceof Timeout) {\n          timeout.clear();\n        } else {\n          clearTimeout(timeout);\n        }\n      }\n    };\n  }\n});\n\n// src/patches/undici-core-request.js\nvar require_undici_core_request = __commonJS({\n  "src/patches/undici-core-request.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    var { InvalidArgumentError: InvalidArgumentError2 } = require_errors();\n    var assert = require("assert");\n    var util = require_util();\n    var tokenRegExp = /^[\\^_`a-zA-Z\\-0-9!#$%&\'*+.|~]+$/;\n    var headerCharRegex = /[^\\t\\x20-\\x7e\\x80-\\xff]/;\n    var invalidPathRegex = /[^\\u0021-\\u00ff]/;\n    var kHandler = Symbol("handler");\n    var channels = {};\n    var extractBody;\n    try {\n      const diagnosticsChannel = require("diagnostics_channel");\n      channels.create = diagnosticsChannel.channel("undici:request:create");\n      channels.bodySent = diagnosticsChannel.channel("undici:request:bodySent");\n      channels.headers = diagnosticsChannel.channel("undici:request:headers");\n      channels.trailers = diagnosticsChannel.channel("undici:request:trailers");\n      channels.error = diagnosticsChannel.channel("undici:request:error");\n    } catch {\n      channels.create = { hasSubscribers: false };\n      channels.bodySent = { hasSubscribers: false };\n      channels.headers = { hasSubscribers: false };\n      channels.trailers = { hasSubscribers: false };\n      channels.error = { hasSubscribers: false };\n    }\n    var _Request2 = class _Request2 {\n      constructor(origin, {\n        path,\n        method,\n        body,\n        headers,\n        query,\n        idempotent,\n        blocking,\n        upgrade,\n        headersTimeout,\n        bodyTimeout,\n        reset,\n        throwOnError\n      }, handler) {\n        if (typeof path !== "string") {\n          throw new InvalidArgumentError2("path must be a string");\n        } else if (path[0] !== "/" && !(path.startsWith("http://") || path.startsWith("https://")) && method !== "CONNECT") {\n          throw new InvalidArgumentError2(\n            "path must be an absolute URL or start with a slash"\n          );\n        } else if (invalidPathRegex.exec(path) !== null) {\n          throw new InvalidArgumentError2("invalid request path");\n        }\n        if (typeof method !== "string") {\n          throw new InvalidArgumentError2("method must be a string");\n        } else if (tokenRegExp.exec(method) === null) {\n          throw new InvalidArgumentError2("invalid request method");\n        }\n        if (upgrade && typeof upgrade !== "string") {\n          throw new InvalidArgumentError2("upgrade must be a string");\n        }\n        if (headersTimeout != null && (!Number.isFinite(headersTimeout) || headersTimeout < 0)) {\n          throw new InvalidArgumentError2("invalid headersTimeout");\n        }\n        if (bodyTimeout != null && (!Number.isFinite(bodyTimeout) || bodyTimeout < 0)) {\n          throw new InvalidArgumentError2("invalid bodyTimeout");\n        }\n        if (reset != null && typeof reset !== "boolean") {\n          throw new InvalidArgumentError2("invalid reset");\n        }\n        this.headersTimeout = headersTimeout;\n        this.bodyTimeout = bodyTimeout;\n        this.throwOnError = throwOnError === true;\n        this.method = method;\n        if (body == null) {\n          this.body = null;\n        } else if (util.isStream(body)) {\n          this.body = body;\n        } else if (util.isBuffer(body)) {\n          this.body = body.byteLength ? body : null;\n        } else if (ArrayBuffer.isView(body)) {\n          this.body = body.buffer.byteLength ? Buffer.from(body.buffer, body.byteOffset, body.byteLength) : null;\n        } else if (body instanceof ArrayBuffer) {\n          this.body = body.byteLength ? Buffer.from(body) : null;\n        } else if (typeof body === "string") {\n          this.body = body.length ? Buffer.from(body) : null;\n        } else if (util.isFormDataLike(body) || util.isIterable(body) || util.isBlobLike(body)) {\n          this.body = body;\n        } else {\n          throw new InvalidArgumentError2(\n            "body must be a string, a Buffer, a Readable stream, an iterable, or an async iterable"\n          );\n        }\n        this.completed = false;\n        this.aborted = false;\n        this.upgrade = upgrade || null;\n        this.path = query ? util.buildURL(path, query) : path;\n        this.origin = origin;\n        this.idempotent = idempotent == null ? method === "HEAD" || method === "GET" : idempotent;\n        this.blocking = blocking == null ? false : blocking;\n        this.reset = reset == null ? null : reset;\n        this.host = null;\n        this.contentLength = null;\n        this.contentType = null;\n        this.headers = "";\n        if (Array.isArray(headers)) {\n          if (headers.length % 2 !== 0) {\n            throw new InvalidArgumentError2("headers array must be even");\n          }\n          for (let i = 0; i < headers.length; i += 2) {\n            processHeader(this, headers[i], headers[i + 1]);\n          }\n        } else if (headers && typeof headers === "object") {\n          const keys = Object.keys(headers);\n          for (let i = 0; i < keys.length; i++) {\n            const key = keys[i];\n            processHeader(this, key, headers[key]);\n          }\n        } else if (headers != null) {\n          throw new InvalidArgumentError2("headers must be an object or an array");\n        }\n        if (util.isFormDataLike(this.body)) {\n          if (util.nodeMajor < 16 || util.nodeMajor === 16 && util.nodeMinor < 8) {\n            throw new InvalidArgumentError2(\n              "Form-Data bodies are only supported in node v16.8 and newer."\n            );\n          }\n          if (!extractBody) {\n            extractBody = require_body().extractBody;\n          }\n          const [bodyStream, contentType] = extractBody(body);\n          if (this.contentType == null) {\n            this.contentType = contentType;\n            this.headers += `content-type: ${contentType}\\r\n`;\n          }\n          this.body = bodyStream.stream;\n          this.contentLength = bodyStream.length;\n        } else if (util.isBlobLike(body) && this.contentType == null && body.type) {\n          this.contentType = body.type;\n          this.headers += `content-type: ${body.type}\\r\n`;\n        }\n        util.validateHandler(handler, method, upgrade);\n        this.servername = util.getServerName(this.host);\n        this[kHandler] = handler;\n        if (channels.create.hasSubscribers) {\n          channels.create.publish({ request: this });\n        }\n      }\n      onBodySent(chunk) {\n        if (this[kHandler].onBodySent) {\n          try {\n            this[kHandler].onBodySent(chunk);\n          } catch (err) {\n            this.onError(err);\n          }\n        }\n      }\n      onRequestSent() {\n        if (channels.bodySent.hasSubscribers) {\n          channels.bodySent.publish({ request: this });\n        }\n      }\n      onConnect(abort) {\n        assert(!this.aborted);\n        assert(!this.completed);\n        return this[kHandler].onConnect(abort);\n      }\n      onHeaders(statusCode, headers, resume, statusText) {\n        assert(!this.aborted);\n        assert(!this.completed);\n        if (channels.headers.hasSubscribers) {\n          channels.headers.publish({\n            request: this,\n            response: { statusCode, headers, statusText }\n          });\n        }\n        return this[kHandler].onHeaders(statusCode, headers, resume, statusText);\n      }\n      onData(chunk) {\n        assert(!this.aborted);\n        assert(!this.completed);\n        return this[kHandler].onData(chunk);\n      }\n      onUpgrade(statusCode, headers, socket) {\n        assert(!this.aborted);\n        assert(!this.completed);\n        return this[kHandler].onUpgrade(statusCode, headers, socket);\n      }\n      onComplete(trailers) {\n        assert(!this.aborted);\n        this.completed = true;\n        if (channels.trailers.hasSubscribers) {\n          channels.trailers.publish({ request: this, trailers });\n        }\n        return this[kHandler].onComplete(trailers);\n      }\n      onError(error) {\n        if (channels.error.hasSubscribers) {\n          channels.error.publish({ request: this, error });\n        }\n        if (this.aborted) {\n          return;\n        }\n        this.aborted = true;\n        return this[kHandler].onError(error);\n      }\n      addHeader(key, value) {\n        processHeader(this, key, value);\n        return this;\n      }\n    };\n    __name(_Request2, "Request");\n    var Request2 = _Request2;\n    function processHeaderValue(key, val) {\n      if (val && typeof val === "object") {\n        throw new InvalidArgumentError2(`invalid ${key} header`);\n      }\n      val = val != null ? `${val}` : "";\n      if (headerCharRegex.exec(val) !== null) {\n        throw new InvalidArgumentError2(`invalid ${key} header`);\n      }\n      return `${key}: ${val}\\r\n`;\n    }\n    __name(processHeaderValue, "processHeaderValue");\n    function processHeader(request, key, val) {\n      if (val && typeof val === "object" && !Array.isArray(val)) {\n        throw new InvalidArgumentError2(`invalid ${key} header`);\n      } else if (val === void 0) {\n        return;\n      }\n      if (request.host === null && key.length === 4 && key.toLowerCase() === "host") {\n        request.host = val;\n      } else if (request.contentLength === null && key.length === 14 && key.toLowerCase() === "content-length") {\n        request.contentLength = parseInt(val, 10);\n        if (!Number.isFinite(request.contentLength)) {\n          throw new InvalidArgumentError2("invalid content-length header");\n        }\n      } else if (request.contentType === null && key.length === 12 && key.toLowerCase() === "content-type") {\n        request.contentType = val;\n        request.headers += processHeaderValue(key, val);\n      } else {\n        if (Array.isArray(val)) {\n          for (let i = 0; i < val.length; i++) {\n            request.headers += processHeaderValue(key, val[i]);\n          }\n        } else {\n          request.headers += processHeaderValue(key, val);\n        }\n      }\n    }\n    __name(processHeader, "processHeader");\n    module2.exports = Request2;\n  }\n});\n\n// ../../node_modules/.pnpm/undici@5.23.0/node_modules/undici/lib/core/connect.js\nvar require_connect = __commonJS({\n  "../../node_modules/.pnpm/undici@5.23.0/node_modules/undici/lib/core/connect.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    var net = require("net");\n    var assert = require("assert");\n    var util = require_util();\n    var { InvalidArgumentError: InvalidArgumentError2, ConnectTimeoutError } = require_errors();\n    var tls;\n    var SessionCache;\n    var _a, _b;\n    if (global.FinalizationRegistry) {\n      SessionCache = (_a = class {\n        constructor(maxCachedSessions) {\n          this._maxCachedSessions = maxCachedSessions;\n          this._sessionCache = /* @__PURE__ */ new Map();\n          this._sessionRegistry = new global.FinalizationRegistry((key) => {\n            if (this._sessionCache.size < this._maxCachedSessions) {\n              return;\n            }\n            const ref = this._sessionCache.get(key);\n            if (ref !== void 0 && ref.deref() === void 0) {\n              this._sessionCache.delete(key);\n            }\n          });\n        }\n        get(sessionKey) {\n          const ref = this._sessionCache.get(sessionKey);\n          return ref ? ref.deref() : null;\n        }\n        set(sessionKey, session) {\n          if (this._maxCachedSessions === 0) {\n            return;\n          }\n          this._sessionCache.set(sessionKey, new WeakRef(session));\n          this._sessionRegistry.register(session, sessionKey);\n        }\n      }, __name(_a, "WeakSessionCache"), _a);\n    } else {\n      SessionCache = (_b = class {\n        constructor(maxCachedSessions) {\n          this._maxCachedSessions = maxCachedSessions;\n          this._sessionCache = /* @__PURE__ */ new Map();\n        }\n        get(sessionKey) {\n          return this._sessionCache.get(sessionKey);\n        }\n        set(sessionKey, session) {\n          if (this._maxCachedSessions === 0) {\n            return;\n          }\n          if (this._sessionCache.size >= this._maxCachedSessions) {\n            const { value: oldestKey } = this._sessionCache.keys().next();\n            this._sessionCache.delete(oldestKey);\n          }\n          this._sessionCache.set(sessionKey, session);\n        }\n      }, __name(_b, "SimpleSessionCache"), _b);\n    }\n    function buildConnector({ maxCachedSessions, socketPath, timeout, ...opts }) {\n      if (maxCachedSessions != null && (!Number.isInteger(maxCachedSessions) || maxCachedSessions < 0)) {\n        throw new InvalidArgumentError2("maxCachedSessions must be a positive integer or zero");\n      }\n      const options = { path: socketPath, ...opts };\n      const sessionCache = new SessionCache(maxCachedSessions == null ? 100 : maxCachedSessions);\n      timeout = timeout == null ? 1e4 : timeout;\n      return /* @__PURE__ */ __name(function connect({ hostname, host, protocol, port, servername, localAddress, httpSocket }, callback) {\n        let socket;\n        if (protocol === "https:") {\n          if (!tls) {\n            tls = require("tls");\n          }\n          servername = servername || options.servername || util.getServerName(host) || null;\n          const sessionKey = servername || hostname;\n          const session = sessionCache.get(sessionKey) || null;\n          assert(sessionKey);\n          socket = tls.connect({\n            highWaterMark: 16384,\n            // TLS in node can\'t have bigger HWM anyway...\n            ...options,\n            servername,\n            session,\n            localAddress,\n            socket: httpSocket,\n            // upgrade socket connection\n            port: port || 443,\n            host: hostname\n          });\n          socket.on("session", function(session2) {\n            sessionCache.set(sessionKey, session2);\n          });\n        } else {\n          assert(!httpSocket, "httpSocket can only be sent on TLS update");\n          socket = net.connect({\n            highWaterMark: 64 * 1024,\n            // Same as nodejs fs streams.\n            ...options,\n            localAddress,\n            port: port || 80,\n            host: hostname\n          });\n        }\n        if (options.keepAlive == null || options.keepAlive) {\n          const keepAliveInitialDelay = options.keepAliveInitialDelay === void 0 ? 6e4 : options.keepAliveInitialDelay;\n          socket.setKeepAlive(true, keepAliveInitialDelay);\n        }\n        const cancelTimeout = setupTimeout(() => onConnectTimeout(socket), timeout);\n        socket.setNoDelay(true).once(protocol === "https:" ? "secureConnect" : "connect", function() {\n          cancelTimeout();\n          if (callback) {\n            const cb = callback;\n            callback = null;\n            cb(null, this);\n          }\n        }).on("error", function(err) {\n          cancelTimeout();\n          if (callback) {\n            const cb = callback;\n            callback = null;\n            cb(err);\n          }\n        });\n        return socket;\n      }, "connect");\n    }\n    __name(buildConnector, "buildConnector");\n    function setupTimeout(onConnectTimeout2, timeout) {\n      if (!timeout) {\n        return () => {\n        };\n      }\n      let s1 = null;\n      let s2 = null;\n      const timeoutId = setTimeout(() => {\n        s1 = setImmediate(() => {\n          if (define_process_default.platform === "win32") {\n            s2 = setImmediate(() => onConnectTimeout2());\n          } else {\n            onConnectTimeout2();\n          }\n        });\n      }, timeout);\n      return () => {\n        clearTimeout(timeoutId);\n        clearImmediate(s1);\n        clearImmediate(s2);\n      };\n    }\n    __name(setupTimeout, "setupTimeout");\n    function onConnectTimeout(socket) {\n      util.destroy(socket, new ConnectTimeoutError());\n    }\n    __name(onConnectTimeout, "onConnectTimeout");\n    module2.exports = buildConnector;\n  }\n});\n\n// ../../node_modules/.pnpm/undici@5.23.0/node_modules/undici/lib/llhttp/utils.js\nvar require_utils2 = __commonJS({\n  "../../node_modules/.pnpm/undici@5.23.0/node_modules/undici/lib/llhttp/utils.js"(exports) {\n    "use strict";\n    init_define_process();\n    Object.defineProperty(exports, "__esModule", { value: true });\n    exports.enumToMap = void 0;\n    function enumToMap(obj) {\n      const res = {};\n      Object.keys(obj).forEach((key) => {\n        const value = obj[key];\n        if (typeof value === "number") {\n          res[key] = value;\n        }\n      });\n      return res;\n    }\n    __name(enumToMap, "enumToMap");\n    exports.enumToMap = enumToMap;\n  }\n});\n\n// ../../node_modules/.pnpm/undici@5.23.0/node_modules/undici/lib/llhttp/constants.js\nvar require_constants2 = __commonJS({\n  "../../node_modules/.pnpm/undici@5.23.0/node_modules/undici/lib/llhttp/constants.js"(exports) {\n    "use strict";\n    init_define_process();\n    Object.defineProperty(exports, "__esModule", { value: true });\n    exports.SPECIAL_HEADERS = exports.HEADER_STATE = exports.MINOR = exports.MAJOR = exports.CONNECTION_TOKEN_CHARS = exports.HEADER_CHARS = exports.TOKEN = exports.STRICT_TOKEN = exports.HEX = exports.URL_CHAR = exports.STRICT_URL_CHAR = exports.USERINFO_CHARS = exports.MARK = exports.ALPHANUM = exports.NUM = exports.HEX_MAP = exports.NUM_MAP = exports.ALPHA = exports.FINISH = exports.H_METHOD_MAP = exports.METHOD_MAP = exports.METHODS_RTSP = exports.METHODS_ICE = exports.METHODS_HTTP = exports.METHODS = exports.LENIENT_FLAGS = exports.FLAGS = exports.TYPE = exports.ERROR = void 0;\n    var utils_1 = require_utils2();\n    var ERROR;\n    (function(ERROR2) {\n      ERROR2[ERROR2["OK"] = 0] = "OK";\n      ERROR2[ERROR2["INTERNAL"] = 1] = "INTERNAL";\n      ERROR2[ERROR2["STRICT"] = 2] = "STRICT";\n      ERROR2[ERROR2["LF_EXPECTED"] = 3] = "LF_EXPECTED";\n      ERROR2[ERROR2["UNEXPECTED_CONTENT_LENGTH"] = 4] = "UNEXPECTED_CONTENT_LENGTH";\n      ERROR2[ERROR2["CLOSED_CONNECTION"] = 5] = "CLOSED_CONNECTION";\n      ERROR2[ERROR2["INVALID_METHOD"] = 6] = "INVALID_METHOD";\n      ERROR2[ERROR2["INVALID_URL"] = 7] = "INVALID_URL";\n      ERROR2[ERROR2["INVALID_CONSTANT"] = 8] = "INVALID_CONSTANT";\n      ERROR2[ERROR2["INVALID_VERSION"] = 9] = "INVALID_VERSION";\n      ERROR2[ERROR2["INVALID_HEADER_TOKEN"] = 10] = "INVALID_HEADER_TOKEN";\n      ERROR2[ERROR2["INVALID_CONTENT_LENGTH"] = 11] = "INVALID_CONTENT_LENGTH";\n      ERROR2[ERROR2["INVALID_CHUNK_SIZE"] = 12] = "INVALID_CHUNK_SIZE";\n      ERROR2[ERROR2["INVALID_STATUS"] = 13] = "INVALID_STATUS";\n      ERROR2[ERROR2["INVALID_EOF_STATE"] = 14] = "INVALID_EOF_STATE";\n      ERROR2[ERROR2["INVALID_TRANSFER_ENCODING"] = 15] = "INVALID_TRANSFER_ENCODING";\n      ERROR2[ERROR2["CB_MESSAGE_BEGIN"] = 16] = "CB_MESSAGE_BEGIN";\n      ERROR2[ERROR2["CB_HEADERS_COMPLETE"] = 17] = "CB_HEADERS_COMPLETE";\n      ERROR2[ERROR2["CB_MESSAGE_COMPLETE"] = 18] = "CB_MESSAGE_COMPLETE";\n      ERROR2[ERROR2["CB_CHUNK_HEADER"] = 19] = "CB_CHUNK_HEADER";\n      ERROR2[ERROR2["CB_CHUNK_COMPLETE"] = 20] = "CB_CHUNK_COMPLETE";\n      ERROR2[ERROR2["PAUSED"] = 21] = "PAUSED";\n      ERROR2[ERROR2["PAUSED_UPGRADE"] = 22] = "PAUSED_UPGRADE";\n      ERROR2[ERROR2["PAUSED_H2_UPGRADE"] = 23] = "PAUSED_H2_UPGRADE";\n      ERROR2[ERROR2["USER"] = 24] = "USER";\n    })(ERROR = exports.ERROR || (exports.ERROR = {}));\n    var TYPE;\n    (function(TYPE2) {\n      TYPE2[TYPE2["BOTH"] = 0] = "BOTH";\n      TYPE2[TYPE2["REQUEST"] = 1] = "REQUEST";\n      TYPE2[TYPE2["RESPONSE"] = 2] = "RESPONSE";\n    })(TYPE = exports.TYPE || (exports.TYPE = {}));\n    var FLAGS;\n    (function(FLAGS2) {\n      FLAGS2[FLAGS2["CONNECTION_KEEP_ALIVE"] = 1] = "CONNECTION_KEEP_ALIVE";\n      FLAGS2[FLAGS2["CONNECTION_CLOSE"] = 2] = "CONNECTION_CLOSE";\n      FLAGS2[FLAGS2["CONNECTION_UPGRADE"] = 4] = "CONNECTION_UPGRADE";\n      FLAGS2[FLAGS2["CHUNKED"] = 8] = "CHUNKED";\n      FLAGS2[FLAGS2["UPGRADE"] = 16] = "UPGRADE";\n      FLAGS2[FLAGS2["CONTENT_LENGTH"] = 32] = "CONTENT_LENGTH";\n      FLAGS2[FLAGS2["SKIPBODY"] = 64] = "SKIPBODY";\n      FLAGS2[FLAGS2["TRAILING"] = 128] = "TRAILING";\n      FLAGS2[FLAGS2["TRANSFER_ENCODING"] = 512] = "TRANSFER_ENCODING";\n    })(FLAGS = exports.FLAGS || (exports.FLAGS = {}));\n    var LENIENT_FLAGS;\n    (function(LENIENT_FLAGS2) {\n      LENIENT_FLAGS2[LENIENT_FLAGS2["HEADERS"] = 1] = "HEADERS";\n      LENIENT_FLAGS2[LENIENT_FLAGS2["CHUNKED_LENGTH"] = 2] = "CHUNKED_LENGTH";\n      LENIENT_FLAGS2[LENIENT_FLAGS2["KEEP_ALIVE"] = 4] = "KEEP_ALIVE";\n    })(LENIENT_FLAGS = exports.LENIENT_FLAGS || (exports.LENIENT_FLAGS = {}));\n    var METHODS;\n    (function(METHODS2) {\n      METHODS2[METHODS2["DELETE"] = 0] = "DELETE";\n      METHODS2[METHODS2["GET"] = 1] = "GET";\n      METHODS2[METHODS2["HEAD"] = 2] = "HEAD";\n      METHODS2[METHODS2["POST"] = 3] = "POST";\n      METHODS2[METHODS2["PUT"] = 4] = "PUT";\n      METHODS2[METHODS2["CONNECT"] = 5] = "CONNECT";\n      METHODS2[METHODS2["OPTIONS"] = 6] = "OPTIONS";\n      METHODS2[METHODS2["TRACE"] = 7] = "TRACE";\n      METHODS2[METHODS2["COPY"] = 8] = "COPY";\n      METHODS2[METHODS2["LOCK"] = 9] = "LOCK";\n      METHODS2[METHODS2["MKCOL"] = 10] = "MKCOL";\n      METHODS2[METHODS2["MOVE"] = 11] = "MOVE";\n      METHODS2[METHODS2["PROPFIND"] = 12] = "PROPFIND";\n      METHODS2[METHODS2["PROPPATCH"] = 13] = "PROPPATCH";\n      METHODS2[METHODS2["SEARCH"] = 14] = "SEARCH";\n      METHODS2[METHODS2["UNLOCK"] = 15] = "UNLOCK";\n      METHODS2[METHODS2["BIND"] = 16] = "BIND";\n      METHODS2[METHODS2["REBIND"] = 17] = "REBIND";\n      METHODS2[METHODS2["UNBIND"] = 18] = "UNBIND";\n      METHODS2[METHODS2["ACL"] = 19] = "ACL";\n      METHODS2[METHODS2["REPORT"] = 20] = "REPORT";\n      METHODS2[METHODS2["MKACTIVITY"] = 21] = "MKACTIVITY";\n      METHODS2[METHODS2["CHECKOUT"] = 22] = "CHECKOUT";\n      METHODS2[METHODS2["MERGE"] = 23] = "MERGE";\n      METHODS2[METHODS2["M-SEARCH"] = 24] = "M-SEARCH";\n      METHODS2[METHODS2["NOTIFY"] = 25] = "NOTIFY";\n      METHODS2[METHODS2["SUBSCRIBE"] = 26] = "SUBSCRIBE";\n      METHODS2[METHODS2["UNSUBSCRIBE"] = 27] = "UNSUBSCRIBE";\n      METHODS2[METHODS2["PATCH"] = 28] = "PATCH";\n      METHODS2[METHODS2["PURGE"] = 29] = "PURGE";\n      METHODS2[METHODS2["MKCALENDAR"] = 30] = "MKCALENDAR";\n      METHODS2[METHODS2["LINK"] = 31] = "LINK";\n      METHODS2[METHODS2["UNLINK"] = 32] = "UNLINK";\n      METHODS2[METHODS2["SOURCE"] = 33] = "SOURCE";\n      METHODS2[METHODS2["PRI"] = 34] = "PRI";\n      METHODS2[METHODS2["DESCRIBE"] = 35] = "DESCRIBE";\n      METHODS2[METHODS2["ANNOUNCE"] = 36] = "ANNOUNCE";\n      METHODS2[METHODS2["SETUP"] = 37] = "SETUP";\n      METHODS2[METHODS2["PLAY"] = 38] = "PLAY";\n      METHODS2[METHODS2["PAUSE"] = 39] = "PAUSE";\n      METHODS2[METHODS2["TEARDOWN"] = 40] = "TEARDOWN";\n      METHODS2[METHODS2["GET_PARAMETER"] = 41] = "GET_PARAMETER";\n      METHODS2[METHODS2["SET_PARAMETER"] = 42] = "SET_PARAMETER";\n      METHODS2[METHODS2["REDIRECT"] = 43] = "REDIRECT";\n      METHODS2[METHODS2["RECORD"] = 44] = "RECORD";\n      METHODS2[METHODS2["FLUSH"] = 45] = "FLUSH";\n    })(METHODS = exports.METHODS || (exports.METHODS = {}));\n    exports.METHODS_HTTP = [\n      METHODS.DELETE,\n      METHODS.GET,\n      METHODS.HEAD,\n      METHODS.POST,\n      METHODS.PUT,\n      METHODS.CONNECT,\n      METHODS.OPTIONS,\n      METHODS.TRACE,\n      METHODS.COPY,\n      METHODS.LOCK,\n      METHODS.MKCOL,\n      METHODS.MOVE,\n      METHODS.PROPFIND,\n      METHODS.PROPPATCH,\n      METHODS.SEARCH,\n      METHODS.UNLOCK,\n      METHODS.BIND,\n      METHODS.REBIND,\n      METHODS.UNBIND,\n      METHODS.ACL,\n      METHODS.REPORT,\n      METHODS.MKACTIVITY,\n      METHODS.CHECKOUT,\n      METHODS.MERGE,\n      METHODS["M-SEARCH"],\n      METHODS.NOTIFY,\n      METHODS.SUBSCRIBE,\n      METHODS.UNSUBSCRIBE,\n      METHODS.PATCH,\n      METHODS.PURGE,\n      METHODS.MKCALENDAR,\n      METHODS.LINK,\n      METHODS.UNLINK,\n      METHODS.PRI,\n      // TODO(indutny): should we allow it with HTTP?\n      METHODS.SOURCE\n    ];\n    exports.METHODS_ICE = [\n      METHODS.SOURCE\n    ];\n    exports.METHODS_RTSP = [\n      METHODS.OPTIONS,\n      METHODS.DESCRIBE,\n      METHODS.ANNOUNCE,\n      METHODS.SETUP,\n      METHODS.PLAY,\n      METHODS.PAUSE,\n      METHODS.TEARDOWN,\n      METHODS.GET_PARAMETER,\n      METHODS.SET_PARAMETER,\n      METHODS.REDIRECT,\n      METHODS.RECORD,\n      METHODS.FLUSH,\n      // For AirPlay\n      METHODS.GET,\n      METHODS.POST\n    ];\n    exports.METHOD_MAP = utils_1.enumToMap(METHODS);\n    exports.H_METHOD_MAP = {};\n    Object.keys(exports.METHOD_MAP).forEach((key) => {\n      if (/^H/.test(key)) {\n        exports.H_METHOD_MAP[key] = exports.METHOD_MAP[key];\n      }\n    });\n    var FINISH;\n    (function(FINISH2) {\n      FINISH2[FINISH2["SAFE"] = 0] = "SAFE";\n      FINISH2[FINISH2["SAFE_WITH_CB"] = 1] = "SAFE_WITH_CB";\n      FINISH2[FINISH2["UNSAFE"] = 2] = "UNSAFE";\n    })(FINISH = exports.FINISH || (exports.FINISH = {}));\n    exports.ALPHA = [];\n    for (let i = "A".charCodeAt(0); i <= "Z".charCodeAt(0); i++) {\n      exports.ALPHA.push(String.fromCharCode(i));\n      exports.ALPHA.push(String.fromCharCode(i + 32));\n    }\n    exports.NUM_MAP = {\n      0: 0,\n      1: 1,\n      2: 2,\n      3: 3,\n      4: 4,\n      5: 5,\n      6: 6,\n      7: 7,\n      8: 8,\n      9: 9\n    };\n    exports.HEX_MAP = {\n      0: 0,\n      1: 1,\n      2: 2,\n      3: 3,\n      4: 4,\n      5: 5,\n      6: 6,\n      7: 7,\n      8: 8,\n      9: 9,\n      A: 10,\n      B: 11,\n      C: 12,\n      D: 13,\n      E: 14,\n      F: 15,\n      a: 10,\n      b: 11,\n      c: 12,\n      d: 13,\n      e: 14,\n      f: 15\n    };\n    exports.NUM = [\n      "0",\n      "1",\n      "2",\n      "3",\n      "4",\n      "5",\n      "6",\n      "7",\n      "8",\n      "9"\n    ];\n    exports.ALPHANUM = exports.ALPHA.concat(exports.NUM);\n    exports.MARK = ["-", "_", ".", "!", "~", "*", "\'", "(", ")"];\n    exports.USERINFO_CHARS = exports.ALPHANUM.concat(exports.MARK).concat(["%", ";", ":", "&", "=", "+", "$", ","]);\n    exports.STRICT_URL_CHAR = [\n      "!",\n      \'"\',\n      "$",\n      "%",\n      "&",\n      "\'",\n      "(",\n      ")",\n      "*",\n      "+",\n      ",",\n      "-",\n      ".",\n      "/",\n      ":",\n      ";",\n      "<",\n      "=",\n      ">",\n      "@",\n      "[",\n      "\\\\",\n      "]",\n      "^",\n      "_",\n      "`",\n      "{",\n      "|",\n      "}",\n      "~"\n    ].concat(exports.ALPHANUM);\n    exports.URL_CHAR = exports.STRICT_URL_CHAR.concat(["	", "\\f"]);\n    for (let i = 128; i <= 255; i++) {\n      exports.URL_CHAR.push(i);\n    }\n    exports.HEX = exports.NUM.concat(["a", "b", "c", "d", "e", "f", "A", "B", "C", "D", "E", "F"]);\n    exports.STRICT_TOKEN = [\n      "!",\n      "#",\n      "$",\n      "%",\n      "&",\n      "\'",\n      "*",\n      "+",\n      "-",\n      ".",\n      "^",\n      "_",\n      "`",\n      "|",\n      "~"\n    ].concat(exports.ALPHANUM);\n    exports.TOKEN = exports.STRICT_TOKEN.concat([" "]);\n    exports.HEADER_CHARS = ["	"];\n    for (let i = 32; i <= 255; i++) {\n      if (i !== 127) {\n        exports.HEADER_CHARS.push(i);\n      }\n    }\n    exports.CONNECTION_TOKEN_CHARS = exports.HEADER_CHARS.filter((c) => c !== 44);\n    exports.MAJOR = exports.NUM_MAP;\n    exports.MINOR = exports.MAJOR;\n    var HEADER_STATE;\n    (function(HEADER_STATE2) {\n      HEADER_STATE2[HEADER_STATE2["GENERAL"] = 0] = "GENERAL";\n      HEADER_STATE2[HEADER_STATE2["CONNECTION"] = 1] = "CONNECTION";\n      HEADER_STATE2[HEADER_STATE2["CONTENT_LENGTH"] = 2] = "CONTENT_LENGTH";\n      HEADER_STATE2[HEADER_STATE2["TRANSFER_ENCODING"] = 3] = "TRANSFER_ENCODING";\n      HEADER_STATE2[HEADER_STATE2["UPGRADE"] = 4] = "UPGRADE";\n      HEADER_STATE2[HEADER_STATE2["CONNECTION_KEEP_ALIVE"] = 5] = "CONNECTION_KEEP_ALIVE";\n      HEADER_STATE2[HEADER_STATE2["CONNECTION_CLOSE"] = 6] = "CONNECTION_CLOSE";\n      HEADER_STATE2[HEADER_STATE2["CONNECTION_UPGRADE"] = 7] = "CONNECTION_UPGRADE";\n      HEADER_STATE2[HEADER_STATE2["TRANSFER_ENCODING_CHUNKED"] = 8] = "TRANSFER_ENCODING_CHUNKED";\n    })(HEADER_STATE = exports.HEADER_STATE || (exports.HEADER_STATE = {}));\n    exports.SPECIAL_HEADERS = {\n      "connection": HEADER_STATE.CONNECTION,\n      "content-length": HEADER_STATE.CONTENT_LENGTH,\n      "proxy-connection": HEADER_STATE.CONNECTION,\n      "transfer-encoding": HEADER_STATE.TRANSFER_ENCODING,\n      "upgrade": HEADER_STATE.UPGRADE\n    };\n  }\n});\n\n// ../../node_modules/.pnpm/undici@5.23.0/node_modules/undici/lib/handler/RedirectHandler.js\nvar require_RedirectHandler = __commonJS({\n  "../../node_modules/.pnpm/undici@5.23.0/node_modules/undici/lib/handler/RedirectHandler.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    var util = require_util();\n    var { kBodyUsed } = require_symbols2();\n    var assert = require("assert");\n    var { InvalidArgumentError: InvalidArgumentError2 } = require_errors();\n    var EE = require("events");\n    var redirectableStatusCodes = [300, 301, 302, 303, 307, 308];\n    var kBody = Symbol("body");\n    var _BodyAsyncIterable = class _BodyAsyncIterable {\n      constructor(body) {\n        this[kBody] = body;\n        this[kBodyUsed] = false;\n      }\n      async *[Symbol.asyncIterator]() {\n        assert(!this[kBodyUsed], "disturbed");\n        this[kBodyUsed] = true;\n        yield* this[kBody];\n      }\n    };\n    __name(_BodyAsyncIterable, "BodyAsyncIterable");\n    var BodyAsyncIterable = _BodyAsyncIterable;\n    var _RedirectHandler = class _RedirectHandler {\n      constructor(dispatch, maxRedirections, opts, handler) {\n        if (maxRedirections != null && (!Number.isInteger(maxRedirections) || maxRedirections < 0)) {\n          throw new InvalidArgumentError2("maxRedirections must be a positive number");\n        }\n        util.validateHandler(handler, opts.method, opts.upgrade);\n        this.dispatch = dispatch;\n        this.location = null;\n        this.abort = null;\n        this.opts = { ...opts, maxRedirections: 0 };\n        this.maxRedirections = maxRedirections;\n        this.handler = handler;\n        this.history = [];\n        if (util.isStream(this.opts.body)) {\n          if (util.bodyLength(this.opts.body) === 0) {\n            this.opts.body.on("data", function() {\n              assert(false);\n            });\n          }\n          if (typeof this.opts.body.readableDidRead !== "boolean") {\n            this.opts.body[kBodyUsed] = false;\n            EE.prototype.on.call(this.opts.body, "data", function() {\n              this[kBodyUsed] = true;\n            });\n          }\n        } else if (this.opts.body && typeof this.opts.body.pipeTo === "function") {\n          this.opts.body = new BodyAsyncIterable(this.opts.body);\n        } else if (this.opts.body && typeof this.opts.body !== "string" && !ArrayBuffer.isView(this.opts.body) && util.isIterable(this.opts.body)) {\n          this.opts.body = new BodyAsyncIterable(this.opts.body);\n        }\n      }\n      onConnect(abort) {\n        this.abort = abort;\n        this.handler.onConnect(abort, { history: this.history });\n      }\n      onUpgrade(statusCode, headers, socket) {\n        this.handler.onUpgrade(statusCode, headers, socket);\n      }\n      onError(error) {\n        this.handler.onError(error);\n      }\n      onHeaders(statusCode, headers, resume, statusText) {\n        this.location = this.history.length >= this.maxRedirections || util.isDisturbed(this.opts.body) ? null : parseLocation(statusCode, headers);\n        if (this.opts.origin) {\n          this.history.push(new URL(this.opts.path, this.opts.origin));\n        }\n        if (!this.location) {\n          return this.handler.onHeaders(statusCode, headers, resume, statusText);\n        }\n        const { origin, pathname, search } = util.parseURL(new URL(this.location, this.opts.origin && new URL(this.opts.path, this.opts.origin)));\n        const path = search ? `${pathname}${search}` : pathname;\n        this.opts.headers = cleanRequestHeaders(this.opts.headers, statusCode === 303, this.opts.origin !== origin);\n        this.opts.path = path;\n        this.opts.origin = origin;\n        this.opts.maxRedirections = 0;\n        this.opts.query = null;\n        if (statusCode === 303 && this.opts.method !== "HEAD") {\n          this.opts.method = "GET";\n          this.opts.body = null;\n        }\n      }\n      onData(chunk) {\n        if (this.location) {\n        } else {\n          return this.handler.onData(chunk);\n        }\n      }\n      onComplete(trailers) {\n        if (this.location) {\n          this.location = null;\n          this.abort = null;\n          this.dispatch(this.opts, this);\n        } else {\n          this.handler.onComplete(trailers);\n        }\n      }\n      onBodySent(chunk) {\n        if (this.handler.onBodySent) {\n          this.handler.onBodySent(chunk);\n        }\n      }\n    };\n    __name(_RedirectHandler, "RedirectHandler");\n    var RedirectHandler = _RedirectHandler;\n    function parseLocation(statusCode, headers) {\n      if (redirectableStatusCodes.indexOf(statusCode) === -1) {\n        return null;\n      }\n      for (let i = 0; i < headers.length; i += 2) {\n        if (headers[i].toString().toLowerCase() === "location") {\n          return headers[i + 1];\n        }\n      }\n    }\n    __name(parseLocation, "parseLocation");\n    function shouldRemoveHeader(header, removeContent, unknownOrigin) {\n      return header.length === 4 && header.toString().toLowerCase() === "host" || removeContent && header.toString().toLowerCase().indexOf("content-") === 0 || unknownOrigin && header.length === 13 && header.toString().toLowerCase() === "authorization" || unknownOrigin && header.length === 6 && header.toString().toLowerCase() === "cookie";\n    }\n    __name(shouldRemoveHeader, "shouldRemoveHeader");\n    function cleanRequestHeaders(headers, removeContent, unknownOrigin) {\n      const ret = [];\n      if (Array.isArray(headers)) {\n        for (let i = 0; i < headers.length; i += 2) {\n          if (!shouldRemoveHeader(headers[i], removeContent, unknownOrigin)) {\n            ret.push(headers[i], headers[i + 1]);\n          }\n        }\n      } else if (headers && typeof headers === "object") {\n        for (const key of Object.keys(headers)) {\n          if (!shouldRemoveHeader(key, removeContent, unknownOrigin)) {\n            ret.push(key, headers[key]);\n          }\n        }\n      } else {\n        assert(headers == null, "headers must be an object or an array");\n      }\n      return ret;\n    }\n    __name(cleanRequestHeaders, "cleanRequestHeaders");\n    module2.exports = RedirectHandler;\n  }\n});\n\n// ../../node_modules/.pnpm/undici@5.23.0/node_modules/undici/lib/interceptor/redirectInterceptor.js\nvar require_redirectInterceptor = __commonJS({\n  "../../node_modules/.pnpm/undici@5.23.0/node_modules/undici/lib/interceptor/redirectInterceptor.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    var RedirectHandler = require_RedirectHandler();\n    function createRedirectInterceptor({ maxRedirections: defaultMaxRedirections }) {\n      return (dispatch) => {\n        return /* @__PURE__ */ __name(function Intercept(opts, handler) {\n          const { maxRedirections = defaultMaxRedirections } = opts;\n          if (!maxRedirections) {\n            return dispatch(opts, handler);\n          }\n          const redirectHandler = new RedirectHandler(dispatch, maxRedirections, opts, handler);\n          opts = { ...opts, maxRedirections: 0 };\n          return dispatch(opts, redirectHandler);\n        }, "Intercept");\n      };\n    }\n    __name(createRedirectInterceptor, "createRedirectInterceptor");\n    module2.exports = createRedirectInterceptor;\n  }\n});\n\n// ../../node_modules/.pnpm/undici@5.23.0/node_modules/undici/lib/llhttp/llhttp-wasm.js\nvar require_llhttp_wasm = __commonJS({\n  "../../node_modules/.pnpm/undici@5.23.0/node_modules/undici/lib/llhttp/llhttp-wasm.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    module2.exports = "";\n  }\n});\n\n// ../../node_modules/.pnpm/undici@5.23.0/node_modules/undici/lib/llhttp/llhttp_simd-wasm.js\nvar require_llhttp_simd_wasm = __commonJS({\n  "../../node_modules/.pnpm/undici@5.23.0/node_modules/undici/lib/llhttp/llhttp_simd-wasm.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    module2.exports = "";\n  }\n});\n\n// ../../node_modules/.pnpm/undici@5.23.0/node_modules/undici/lib/client.js\nvar require_client = __commonJS({\n  "../../node_modules/.pnpm/undici@5.23.0/node_modules/undici/lib/client.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    var assert = require("assert");\n    var net = require("net");\n    var util = require_util();\n    var timers = require_timers();\n    var Request2 = require_undici_core_request();\n    var DispatcherBase = require_dispatcher_base();\n    var {\n      RequestContentLengthMismatchError,\n      ResponseContentLengthMismatchError,\n      InvalidArgumentError: InvalidArgumentError2,\n      RequestAbortedError,\n      HeadersTimeoutError,\n      HeadersOverflowError,\n      SocketError,\n      InformationalError,\n      BodyTimeoutError,\n      HTTPParserError,\n      ResponseExceededMaxSizeError,\n      ClientDestroyedError\n    } = require_errors();\n    var buildConnector = require_connect();\n    var {\n      kUrl,\n      kReset,\n      kServerName,\n      kClient,\n      kBusy,\n      kParser,\n      kConnect,\n      kBlocking,\n      kResuming,\n      kRunning,\n      kPending,\n      kSize,\n      kWriting,\n      kQueue,\n      kConnected,\n      kConnecting,\n      kNeedDrain,\n      kNoRef,\n      kKeepAliveDefaultTimeout,\n      kHostHeader,\n      kPendingIdx,\n      kRunningIdx,\n      kError,\n      kPipelining,\n      kSocket,\n      kKeepAliveTimeoutValue,\n      kMaxHeadersSize,\n      kKeepAliveMaxTimeout,\n      kKeepAliveTimeoutThreshold,\n      kHeadersTimeout,\n      kBodyTimeout,\n      kStrictContentLength,\n      kConnector,\n      kMaxRedirections,\n      kMaxRequests,\n      kCounter,\n      kClose,\n      kDestroy,\n      kDispatch,\n      kInterceptors,\n      kLocalAddress,\n      kMaxResponseSize\n    } = require_symbols2();\n    var FastBuffer = Buffer[Symbol.species];\n    var kClosedResolve = Symbol("kClosedResolve");\n    var channels = {};\n    try {\n      const diagnosticsChannel = require("diagnostics_channel");\n      channels.sendHeaders = diagnosticsChannel.channel("undici:client:sendHeaders");\n      channels.beforeConnect = diagnosticsChannel.channel("undici:client:beforeConnect");\n      channels.connectError = diagnosticsChannel.channel("undici:client:connectError");\n      channels.connected = diagnosticsChannel.channel("undici:client:connected");\n    } catch {\n      channels.sendHeaders = { hasSubscribers: false };\n      channels.beforeConnect = { hasSubscribers: false };\n      channels.connectError = { hasSubscribers: false };\n      channels.connected = { hasSubscribers: false };\n    }\n    var _Client = class _Client extends DispatcherBase {\n      /**\n       *\n       * @param {string|URL} url\n       * @param {import(\'../types/client\').Client.Options} options\n       */\n      constructor(url, {\n        interceptors,\n        maxHeaderSize,\n        headersTimeout,\n        socketTimeout,\n        requestTimeout,\n        connectTimeout,\n        bodyTimeout,\n        idleTimeout,\n        keepAlive,\n        keepAliveTimeout,\n        maxKeepAliveTimeout,\n        keepAliveMaxTimeout,\n        keepAliveTimeoutThreshold,\n        socketPath,\n        pipelining,\n        tls,\n        strictContentLength,\n        maxCachedSessions,\n        maxRedirections,\n        connect: connect2,\n        maxRequestsPerClient,\n        localAddress,\n        maxResponseSize,\n        autoSelectFamily,\n        autoSelectFamilyAttemptTimeout\n      } = {}) {\n        super();\n        if (keepAlive !== void 0) {\n          throw new InvalidArgumentError2("unsupported keepAlive, use pipelining=0 instead");\n        }\n        if (socketTimeout !== void 0) {\n          throw new InvalidArgumentError2("unsupported socketTimeout, use headersTimeout & bodyTimeout instead");\n        }\n        if (requestTimeout !== void 0) {\n          throw new InvalidArgumentError2("unsupported requestTimeout, use headersTimeout & bodyTimeout instead");\n        }\n        if (idleTimeout !== void 0) {\n          throw new InvalidArgumentError2("unsupported idleTimeout, use keepAliveTimeout instead");\n        }\n        if (maxKeepAliveTimeout !== void 0) {\n          throw new InvalidArgumentError2("unsupported maxKeepAliveTimeout, use keepAliveMaxTimeout instead");\n        }\n        if (maxHeaderSize != null && !Number.isFinite(maxHeaderSize)) {\n          throw new InvalidArgumentError2("invalid maxHeaderSize");\n        }\n        if (socketPath != null && typeof socketPath !== "string") {\n          throw new InvalidArgumentError2("invalid socketPath");\n        }\n        if (connectTimeout != null && (!Number.isFinite(connectTimeout) || connectTimeout < 0)) {\n          throw new InvalidArgumentError2("invalid connectTimeout");\n        }\n        if (keepAliveTimeout != null && (!Number.isFinite(keepAliveTimeout) || keepAliveTimeout <= 0)) {\n          throw new InvalidArgumentError2("invalid keepAliveTimeout");\n        }\n        if (keepAliveMaxTimeout != null && (!Number.isFinite(keepAliveMaxTimeout) || keepAliveMaxTimeout <= 0)) {\n          throw new InvalidArgumentError2("invalid keepAliveMaxTimeout");\n        }\n        if (keepAliveTimeoutThreshold != null && !Number.isFinite(keepAliveTimeoutThreshold)) {\n          throw new InvalidArgumentError2("invalid keepAliveTimeoutThreshold");\n        }\n        if (headersTimeout != null && (!Number.isInteger(headersTimeout) || headersTimeout < 0)) {\n          throw new InvalidArgumentError2("headersTimeout must be a positive integer or zero");\n        }\n        if (bodyTimeout != null && (!Number.isInteger(bodyTimeout) || bodyTimeout < 0)) {\n          throw new InvalidArgumentError2("bodyTimeout must be a positive integer or zero");\n        }\n        if (connect2 != null && typeof connect2 !== "function" && typeof connect2 !== "object") {\n          throw new InvalidArgumentError2("connect must be a function or an object");\n        }\n        if (maxRedirections != null && (!Number.isInteger(maxRedirections) || maxRedirections < 0)) {\n          throw new InvalidArgumentError2("maxRedirections must be a positive number");\n        }\n        if (maxRequestsPerClient != null && (!Number.isInteger(maxRequestsPerClient) || maxRequestsPerClient < 0)) {\n          throw new InvalidArgumentError2("maxRequestsPerClient must be a positive number");\n        }\n        if (localAddress != null && (typeof localAddress !== "string" || net.isIP(localAddress) === 0)) {\n          throw new InvalidArgumentError2("localAddress must be valid string IP address");\n        }\n        if (maxResponseSize != null && (!Number.isInteger(maxResponseSize) || maxResponseSize < -1)) {\n          throw new InvalidArgumentError2("maxResponseSize must be a positive number");\n        }\n        if (autoSelectFamilyAttemptTimeout != null && (!Number.isInteger(autoSelectFamilyAttemptTimeout) || autoSelectFamilyAttemptTimeout < -1)) {\n          throw new InvalidArgumentError2("autoSelectFamilyAttemptTimeout must be a positive number");\n        }\n        if (typeof connect2 !== "function") {\n          connect2 = buildConnector({\n            ...tls,\n            maxCachedSessions,\n            socketPath,\n            timeout: connectTimeout,\n            ...util.nodeHasAutoSelectFamily && autoSelectFamily ? { autoSelectFamily, autoSelectFamilyAttemptTimeout } : void 0,\n            ...connect2\n          });\n        }\n        this[kInterceptors] = interceptors && interceptors.Client && Array.isArray(interceptors.Client) ? interceptors.Client : [createRedirectInterceptor({ maxRedirections })];\n        this[kUrl] = util.parseOrigin(url);\n        this[kConnector] = connect2;\n        this[kSocket] = null;\n        this[kPipelining] = pipelining != null ? pipelining : 1;\n        this[kMaxHeadersSize] = maxHeaderSize || 16384;\n        this[kKeepAliveDefaultTimeout] = keepAliveTimeout == null ? 4e3 : keepAliveTimeout;\n        this[kKeepAliveMaxTimeout] = keepAliveMaxTimeout == null ? 6e5 : keepAliveMaxTimeout;\n        this[kKeepAliveTimeoutThreshold] = keepAliveTimeoutThreshold == null ? 1e3 : keepAliveTimeoutThreshold;\n        this[kKeepAliveTimeoutValue] = this[kKeepAliveDefaultTimeout];\n        this[kServerName] = null;\n        this[kLocalAddress] = localAddress != null ? localAddress : null;\n        this[kResuming] = 0;\n        this[kNeedDrain] = 0;\n        this[kHostHeader] = `host: ${this[kUrl].hostname}${this[kUrl].port ? `:${this[kUrl].port}` : ""}\\r\n`;\n        this[kBodyTimeout] = bodyTimeout != null ? bodyTimeout : 3e5;\n        this[kHeadersTimeout] = headersTimeout != null ? headersTimeout : 3e5;\n        this[kStrictContentLength] = strictContentLength == null ? true : strictContentLength;\n        this[kMaxRedirections] = maxRedirections;\n        this[kMaxRequests] = maxRequestsPerClient;\n        this[kClosedResolve] = null;\n        this[kMaxResponseSize] = maxResponseSize > -1 ? maxResponseSize : -1;\n        this[kQueue] = [];\n        this[kRunningIdx] = 0;\n        this[kPendingIdx] = 0;\n      }\n      get pipelining() {\n        return this[kPipelining];\n      }\n      set pipelining(value) {\n        this[kPipelining] = value;\n        resume(this, true);\n      }\n      get [kPending]() {\n        return this[kQueue].length - this[kPendingIdx];\n      }\n      get [kRunning]() {\n        return this[kPendingIdx] - this[kRunningIdx];\n      }\n      get [kSize]() {\n        return this[kQueue].length - this[kRunningIdx];\n      }\n      get [kConnected]() {\n        return !!this[kSocket] && !this[kConnecting] && !this[kSocket].destroyed;\n      }\n      get [kBusy]() {\n        const socket = this[kSocket];\n        return socket && (socket[kReset] || socket[kWriting] || socket[kBlocking]) || this[kSize] >= (this[kPipelining] || 1) || this[kPending] > 0;\n      }\n      /* istanbul ignore: only used for test */\n      [kConnect](cb) {\n        connect(this);\n        this.once("connect", cb);\n      }\n      [kDispatch](opts, handler) {\n        const origin = opts.origin || this[kUrl].origin;\n        const request = new Request2(origin, opts, handler);\n        this[kQueue].push(request);\n        if (this[kResuming]) {\n        } else if (util.bodyLength(request.body) == null && util.isIterable(request.body)) {\n          this[kResuming] = 1;\n          define_process_default.nextTick(resume, this);\n        } else {\n          resume(this, true);\n        }\n        if (this[kResuming] && this[kNeedDrain] !== 2 && this[kBusy]) {\n          this[kNeedDrain] = 2;\n        }\n        return this[kNeedDrain] < 2;\n      }\n      async [kClose]() {\n        return new Promise((resolve) => {\n          if (!this[kSize]) {\n            resolve(null);\n          } else {\n            this[kClosedResolve] = resolve;\n          }\n        });\n      }\n      async [kDestroy](err) {\n        return new Promise((resolve) => {\n          const requests = this[kQueue].splice(this[kPendingIdx]);\n          for (let i = 0; i < requests.length; i++) {\n            const request = requests[i];\n            errorRequest(this, request, err);\n          }\n          const callback = /* @__PURE__ */ __name(() => {\n            if (this[kClosedResolve]) {\n              this[kClosedResolve]();\n              this[kClosedResolve] = null;\n            }\n            resolve();\n          }, "callback");\n          if (!this[kSocket]) {\n            queueMicrotask(callback);\n          } else {\n            util.destroy(this[kSocket].on("close", callback), err);\n          }\n          resume(this);\n        });\n      }\n    };\n    __name(_Client, "Client");\n    var Client = _Client;\n    var constants = require_constants2();\n    var createRedirectInterceptor = require_redirectInterceptor();\n    var EMPTY_BUF = Buffer.alloc(0);\n    async function lazyllhttp() {\n      const llhttpWasmData = define_process_default.env.JEST_WORKER_ID ? require_llhttp_wasm() : void 0;\n      let mod;\n      try {\n        mod = await WebAssembly.compile(Buffer.from(require_llhttp_simd_wasm(), "base64"));\n      } catch (e) {\n        mod = await WebAssembly.compile(Buffer.from(llhttpWasmData || require_llhttp_wasm(), "base64"));\n      }\n      return await WebAssembly.instantiate(mod, {\n        env: {\n          /* eslint-disable camelcase */\n          wasm_on_url: (p, at, len) => {\n            return 0;\n          },\n          wasm_on_status: (p, at, len) => {\n            assert.strictEqual(currentParser.ptr, p);\n            const start = at - currentBufferPtr + currentBufferRef.byteOffset;\n            return currentParser.onStatus(new FastBuffer(currentBufferRef.buffer, start, len)) || 0;\n          },\n          wasm_on_message_begin: (p) => {\n            assert.strictEqual(currentParser.ptr, p);\n            return currentParser.onMessageBegin() || 0;\n          },\n          wasm_on_header_field: (p, at, len) => {\n            assert.strictEqual(currentParser.ptr, p);\n            const start = at - currentBufferPtr + currentBufferRef.byteOffset;\n            return currentParser.onHeaderField(new FastBuffer(currentBufferRef.buffer, start, len)) || 0;\n          },\n          wasm_on_header_value: (p, at, len) => {\n            assert.strictEqual(currentParser.ptr, p);\n            const start = at - currentBufferPtr + currentBufferRef.byteOffset;\n            return currentParser.onHeaderValue(new FastBuffer(currentBufferRef.buffer, start, len)) || 0;\n          },\n          wasm_on_headers_complete: (p, statusCode, upgrade, shouldKeepAlive) => {\n            assert.strictEqual(currentParser.ptr, p);\n            return currentParser.onHeadersComplete(statusCode, Boolean(upgrade), Boolean(shouldKeepAlive)) || 0;\n          },\n          wasm_on_body: (p, at, len) => {\n            assert.strictEqual(currentParser.ptr, p);\n            const start = at - currentBufferPtr + currentBufferRef.byteOffset;\n            return currentParser.onBody(new FastBuffer(currentBufferRef.buffer, start, len)) || 0;\n          },\n          wasm_on_message_complete: (p) => {\n            assert.strictEqual(currentParser.ptr, p);\n            return currentParser.onMessageComplete() || 0;\n          }\n          /* eslint-enable camelcase */\n        }\n      });\n    }\n    __name(lazyllhttp, "lazyllhttp");\n    var llhttpInstance = null;\n    var llhttpPromise = lazyllhttp();\n    llhttpPromise.catch();\n    var currentParser = null;\n    var currentBufferRef = null;\n    var currentBufferSize = 0;\n    var currentBufferPtr = null;\n    var TIMEOUT_HEADERS = 1;\n    var TIMEOUT_BODY = 2;\n    var TIMEOUT_IDLE = 3;\n    var _Parser = class _Parser {\n      constructor(client, socket, { exports: exports2 }) {\n        assert(Number.isFinite(client[kMaxHeadersSize]) && client[kMaxHeadersSize] > 0);\n        this.llhttp = exports2;\n        this.ptr = this.llhttp.llhttp_alloc(constants.TYPE.RESPONSE);\n        this.client = client;\n        this.socket = socket;\n        this.timeout = null;\n        this.timeoutValue = null;\n        this.timeoutType = null;\n        this.statusCode = null;\n        this.statusText = "";\n        this.upgrade = false;\n        this.headers = [];\n        this.headersSize = 0;\n        this.headersMaxSize = client[kMaxHeadersSize];\n        this.shouldKeepAlive = false;\n        this.paused = false;\n        this.resume = this.resume.bind(this);\n        this.bytesRead = 0;\n        this.keepAlive = "";\n        this.contentLength = "";\n        this.connection = "";\n        this.maxResponseSize = client[kMaxResponseSize];\n      }\n      setTimeout(value, type) {\n        this.timeoutType = type;\n        if (value !== this.timeoutValue) {\n          timers.clearTimeout(this.timeout);\n          if (value) {\n            this.timeout = timers.setTimeout(onParserTimeout, value, this);\n            if (this.timeout.unref) {\n              this.timeout.unref();\n            }\n          } else {\n            this.timeout = null;\n          }\n          this.timeoutValue = value;\n        } else if (this.timeout) {\n          if (this.timeout.refresh) {\n            this.timeout.refresh();\n          }\n        }\n      }\n      resume() {\n        if (this.socket.destroyed || !this.paused) {\n          return;\n        }\n        assert(this.ptr != null);\n        assert(currentParser == null);\n        this.llhttp.llhttp_resume(this.ptr);\n        assert(this.timeoutType === TIMEOUT_BODY);\n        if (this.timeout) {\n          if (this.timeout.refresh) {\n            this.timeout.refresh();\n          }\n        }\n        this.paused = false;\n        this.execute(this.socket.read() || EMPTY_BUF);\n        this.readMore();\n      }\n      readMore() {\n        while (!this.paused && this.ptr) {\n          const chunk = this.socket.read();\n          if (chunk === null) {\n            break;\n          }\n          this.execute(chunk);\n        }\n      }\n      execute(data) {\n        assert(this.ptr != null);\n        assert(currentParser == null);\n        assert(!this.paused);\n        const { socket, llhttp } = this;\n        if (data.length > currentBufferSize) {\n          if (currentBufferPtr) {\n            llhttp.free(currentBufferPtr);\n          }\n          currentBufferSize = Math.ceil(data.length / 4096) * 4096;\n          currentBufferPtr = llhttp.malloc(currentBufferSize);\n        }\n        new Uint8Array(llhttp.memory.buffer, currentBufferPtr, currentBufferSize).set(data);\n        try {\n          let ret;\n          try {\n            currentBufferRef = data;\n            currentParser = this;\n            ret = llhttp.llhttp_execute(this.ptr, currentBufferPtr, data.length);\n          } catch (err) {\n            throw err;\n          } finally {\n            currentParser = null;\n            currentBufferRef = null;\n          }\n          const offset = llhttp.llhttp_get_error_pos(this.ptr) - currentBufferPtr;\n          if (ret === constants.ERROR.PAUSED_UPGRADE) {\n            this.onUpgrade(data.slice(offset));\n          } else if (ret === constants.ERROR.PAUSED) {\n            this.paused = true;\n            socket.unshift(data.slice(offset));\n          } else if (ret !== constants.ERROR.OK) {\n            const ptr = llhttp.llhttp_get_error_reason(this.ptr);\n            let message = "";\n            if (ptr) {\n              const len = new Uint8Array(llhttp.memory.buffer, ptr).indexOf(0);\n              message = "Response does not match the HTTP/1.1 protocol (" + Buffer.from(llhttp.memory.buffer, ptr, len).toString() + ")";\n            }\n            throw new HTTPParserError(message, constants.ERROR[ret], data.slice(offset));\n          }\n        } catch (err) {\n          util.destroy(socket, err);\n        }\n      }\n      destroy() {\n        assert(this.ptr != null);\n        assert(currentParser == null);\n        this.llhttp.llhttp_free(this.ptr);\n        this.ptr = null;\n        timers.clearTimeout(this.timeout);\n        this.timeout = null;\n        this.timeoutValue = null;\n        this.timeoutType = null;\n        this.paused = false;\n      }\n      onStatus(buf) {\n        this.statusText = buf.toString();\n      }\n      onMessageBegin() {\n        const { socket, client } = this;\n        if (socket.destroyed) {\n          return -1;\n        }\n        const request = client[kQueue][client[kRunningIdx]];\n        if (!request) {\n          return -1;\n        }\n      }\n      onHeaderField(buf) {\n        const len = this.headers.length;\n        if ((len & 1) === 0) {\n          this.headers.push(buf);\n        } else {\n          this.headers[len - 1] = Buffer.concat([this.headers[len - 1], buf]);\n        }\n        this.trackHeader(buf.length);\n      }\n      onHeaderValue(buf) {\n        let len = this.headers.length;\n        if ((len & 1) === 1) {\n          this.headers.push(buf);\n          len += 1;\n        } else {\n          this.headers[len - 1] = Buffer.concat([this.headers[len - 1], buf]);\n        }\n        const key = this.headers[len - 2];\n        if (key.length === 10 && key.toString().toLowerCase() === "keep-alive") {\n          this.keepAlive += buf.toString();\n        } else if (key.length === 10 && key.toString().toLowerCase() === "connection") {\n          this.connection += buf.toString();\n        } else if (key.length === 14 && key.toString().toLowerCase() === "content-length") {\n          this.contentLength += buf.toString();\n        }\n        this.trackHeader(buf.length);\n      }\n      trackHeader(len) {\n        this.headersSize += len;\n        if (this.headersSize >= this.headersMaxSize) {\n          util.destroy(this.socket, new HeadersOverflowError());\n        }\n      }\n      onUpgrade(head) {\n        const { upgrade, client, socket, headers, statusCode } = this;\n        assert(upgrade);\n        const request = client[kQueue][client[kRunningIdx]];\n        assert(request);\n        assert(!socket.destroyed);\n        assert(socket === client[kSocket]);\n        assert(!this.paused);\n        assert(request.upgrade || request.method === "CONNECT");\n        this.statusCode = null;\n        this.statusText = "";\n        this.shouldKeepAlive = null;\n        assert(this.headers.length % 2 === 0);\n        this.headers = [];\n        this.headersSize = 0;\n        socket.unshift(head);\n        socket[kParser].destroy();\n        socket[kParser] = null;\n        socket[kClient] = null;\n        socket[kError] = null;\n        socket.removeListener("error", onSocketError).removeListener("readable", onSocketReadable).removeListener("end", onSocketEnd).removeListener("close", onSocketClose);\n        client[kSocket] = null;\n        client[kQueue][client[kRunningIdx]++] = null;\n        client.emit("disconnect", client[kUrl], [client], new InformationalError("upgrade"));\n        try {\n          request.onUpgrade(statusCode, headers, socket);\n        } catch (err) {\n          util.destroy(socket, err);\n        }\n        resume(client);\n      }\n      onHeadersComplete(statusCode, upgrade, shouldKeepAlive) {\n        const { client, socket, headers, statusText } = this;\n        if (socket.destroyed) {\n          return -1;\n        }\n        const request = client[kQueue][client[kRunningIdx]];\n        if (!request) {\n          return -1;\n        }\n        assert(!this.upgrade);\n        assert(this.statusCode < 200);\n        if (statusCode === 100) {\n          util.destroy(socket, new SocketError("bad response", util.getSocketInfo(socket)));\n          return -1;\n        }\n        if (upgrade && !request.upgrade) {\n          util.destroy(socket, new SocketError("bad upgrade", util.getSocketInfo(socket)));\n          return -1;\n        }\n        assert.strictEqual(this.timeoutType, TIMEOUT_HEADERS);\n        this.statusCode = statusCode;\n        this.shouldKeepAlive = shouldKeepAlive || // Override llhttp value which does not allow keepAlive for HEAD.\n        request.method === "HEAD" && !socket[kReset] && this.connection.toLowerCase() === "keep-alive";\n        if (this.statusCode >= 200) {\n          const bodyTimeout = request.bodyTimeout != null ? request.bodyTimeout : client[kBodyTimeout];\n          this.setTimeout(bodyTimeout, TIMEOUT_BODY);\n        } else if (this.timeout) {\n          if (this.timeout.refresh) {\n            this.timeout.refresh();\n          }\n        }\n        if (request.method === "CONNECT") {\n          assert(client[kRunning] === 1);\n          this.upgrade = true;\n          return 2;\n        }\n        if (upgrade) {\n          assert(client[kRunning] === 1);\n          this.upgrade = true;\n          return 2;\n        }\n        assert(this.headers.length % 2 === 0);\n        this.headers = [];\n        this.headersSize = 0;\n        if (this.shouldKeepAlive && client[kPipelining]) {\n          const keepAliveTimeout = this.keepAlive ? util.parseKeepAliveTimeout(this.keepAlive) : null;\n          if (keepAliveTimeout != null) {\n            const timeout = Math.min(\n              keepAliveTimeout - client[kKeepAliveTimeoutThreshold],\n              client[kKeepAliveMaxTimeout]\n            );\n            if (timeout <= 0) {\n              socket[kReset] = true;\n            } else {\n              client[kKeepAliveTimeoutValue] = timeout;\n            }\n          } else {\n            client[kKeepAliveTimeoutValue] = client[kKeepAliveDefaultTimeout];\n          }\n        } else {\n          socket[kReset] = true;\n        }\n        let pause;\n        try {\n          pause = request.onHeaders(statusCode, headers, this.resume, statusText) === false;\n        } catch (err) {\n          util.destroy(socket, err);\n          return -1;\n        }\n        if (request.method === "HEAD") {\n          return 1;\n        }\n        if (statusCode < 200) {\n          return 1;\n        }\n        if (socket[kBlocking]) {\n          socket[kBlocking] = false;\n          resume(client);\n        }\n        return pause ? constants.ERROR.PAUSED : 0;\n      }\n      onBody(buf) {\n        const { client, socket, statusCode, maxResponseSize } = this;\n        if (socket.destroyed) {\n          return -1;\n        }\n        const request = client[kQueue][client[kRunningIdx]];\n        assert(request);\n        assert.strictEqual(this.timeoutType, TIMEOUT_BODY);\n        if (this.timeout) {\n          if (this.timeout.refresh) {\n            this.timeout.refresh();\n          }\n        }\n        assert(statusCode >= 200);\n        if (maxResponseSize > -1 && this.bytesRead + buf.length > maxResponseSize) {\n          util.destroy(socket, new ResponseExceededMaxSizeError());\n          return -1;\n        }\n        this.bytesRead += buf.length;\n        try {\n          if (request.onData(buf) === false) {\n            return constants.ERROR.PAUSED;\n          }\n        } catch (err) {\n          util.destroy(socket, err);\n          return -1;\n        }\n      }\n      onMessageComplete() {\n        const { client, socket, statusCode, upgrade, headers, contentLength, bytesRead, shouldKeepAlive } = this;\n        if (socket.destroyed && (!statusCode || shouldKeepAlive)) {\n          return -1;\n        }\n        if (upgrade) {\n          return;\n        }\n        const request = client[kQueue][client[kRunningIdx]];\n        assert(request);\n        assert(statusCode >= 100);\n        this.statusCode = null;\n        this.statusText = "";\n        this.bytesRead = 0;\n        this.contentLength = "";\n        this.keepAlive = "";\n        this.connection = "";\n        assert(this.headers.length % 2 === 0);\n        this.headers = [];\n        this.headersSize = 0;\n        if (statusCode < 200) {\n          return;\n        }\n        if (request.method !== "HEAD" && contentLength && bytesRead !== parseInt(contentLength, 10)) {\n          util.destroy(socket, new ResponseContentLengthMismatchError());\n          return -1;\n        }\n        try {\n          request.onComplete(headers);\n        } catch (err) {\n          errorRequest(client, request, err);\n        }\n        client[kQueue][client[kRunningIdx]++] = null;\n        if (socket[kWriting]) {\n          assert.strictEqual(client[kRunning], 0);\n          util.destroy(socket, new InformationalError("reset"));\n          return constants.ERROR.PAUSED;\n        } else if (!shouldKeepAlive) {\n          util.destroy(socket, new InformationalError("reset"));\n          return constants.ERROR.PAUSED;\n        } else if (socket[kReset] && client[kRunning] === 0) {\n          util.destroy(socket, new InformationalError("reset"));\n          return constants.ERROR.PAUSED;\n        } else if (client[kPipelining] === 1) {\n          setImmediate(resume, client);\n        } else {\n          resume(client);\n        }\n      }\n    };\n    __name(_Parser, "Parser");\n    var Parser = _Parser;\n    function onParserTimeout(parser) {\n      const { socket, timeoutType, client } = parser;\n      if (timeoutType === TIMEOUT_HEADERS) {\n        if (!socket[kWriting] || socket.writableNeedDrain || client[kRunning] > 1) {\n          assert(!parser.paused, "cannot be paused while waiting for headers");\n          util.destroy(socket, new HeadersTimeoutError());\n        }\n      } else if (timeoutType === TIMEOUT_BODY) {\n        if (!parser.paused) {\n          util.destroy(socket, new BodyTimeoutError());\n        }\n      } else if (timeoutType === TIMEOUT_IDLE) {\n        assert(client[kRunning] === 0 && client[kKeepAliveTimeoutValue]);\n        util.destroy(socket, new InformationalError("socket idle timeout"));\n      }\n    }\n    __name(onParserTimeout, "onParserTimeout");\n    function onSocketReadable() {\n      const { [kParser]: parser } = this;\n      parser.readMore();\n    }\n    __name(onSocketReadable, "onSocketReadable");\n    function onSocketError(err) {\n      const { [kParser]: parser } = this;\n      assert(err.code !== "ERR_TLS_CERT_ALTNAME_INVALID");\n      if (err.code === "ECONNRESET" && parser.statusCode && !parser.shouldKeepAlive) {\n        parser.onMessageComplete();\n        return;\n      }\n      this[kError] = err;\n      onError(this[kClient], err);\n    }\n    __name(onSocketError, "onSocketError");\n    function onError(client, err) {\n      if (client[kRunning] === 0 && err.code !== "UND_ERR_INFO" && err.code !== "UND_ERR_SOCKET") {\n        assert(client[kPendingIdx] === client[kRunningIdx]);\n        const requests = client[kQueue].splice(client[kRunningIdx]);\n        for (let i = 0; i < requests.length; i++) {\n          const request = requests[i];\n          errorRequest(client, request, err);\n        }\n        assert(client[kSize] === 0);\n      }\n    }\n    __name(onError, "onError");\n    function onSocketEnd() {\n      const { [kParser]: parser } = this;\n      if (parser.statusCode && !parser.shouldKeepAlive) {\n        parser.onMessageComplete();\n        return;\n      }\n      util.destroy(this, new SocketError("other side closed", util.getSocketInfo(this)));\n    }\n    __name(onSocketEnd, "onSocketEnd");\n    function onSocketClose() {\n      const { [kClient]: client } = this;\n      if (!this[kError] && this[kParser].statusCode && !this[kParser].shouldKeepAlive) {\n        this[kParser].onMessageComplete();\n      }\n      this[kParser].destroy();\n      this[kParser] = null;\n      const err = this[kError] || new SocketError("closed", util.getSocketInfo(this));\n      client[kSocket] = null;\n      if (client.destroyed) {\n        assert(client[kPending] === 0);\n        const requests = client[kQueue].splice(client[kRunningIdx]);\n        for (let i = 0; i < requests.length; i++) {\n          const request = requests[i];\n          errorRequest(client, request, err);\n        }\n      } else if (client[kRunning] > 0 && err.code !== "UND_ERR_INFO") {\n        const request = client[kQueue][client[kRunningIdx]];\n        client[kQueue][client[kRunningIdx]++] = null;\n        errorRequest(client, request, err);\n      }\n      client[kPendingIdx] = client[kRunningIdx];\n      assert(client[kRunning] === 0);\n      client.emit("disconnect", client[kUrl], [client], err);\n      resume(client);\n    }\n    __name(onSocketClose, "onSocketClose");\n    async function connect(client) {\n      assert(!client[kConnecting]);\n      assert(!client[kSocket]);\n      let { host, hostname, protocol, port } = client[kUrl];\n      if (hostname[0] === "[") {\n        const idx = hostname.indexOf("]");\n        assert(idx !== -1);\n        const ip = hostname.substr(1, idx - 1);\n        assert(net.isIP(ip));\n        hostname = ip;\n      }\n      client[kConnecting] = true;\n      if (channels.beforeConnect.hasSubscribers) {\n        channels.beforeConnect.publish({\n          connectParams: {\n            host,\n            hostname,\n            protocol,\n            port,\n            servername: client[kServerName],\n            localAddress: client[kLocalAddress]\n          },\n          connector: client[kConnector]\n        });\n      }\n      try {\n        const socket = await new Promise((resolve, reject) => {\n          client[kConnector]({\n            host,\n            hostname,\n            protocol,\n            port,\n            servername: client[kServerName],\n            localAddress: client[kLocalAddress]\n          }, (err, socket2) => {\n            if (err) {\n              reject(err);\n            } else {\n              resolve(socket2);\n            }\n          });\n        });\n        if (client.destroyed) {\n          util.destroy(socket.on("error", () => {\n          }), new ClientDestroyedError());\n          return;\n        }\n        if (!llhttpInstance) {\n          llhttpInstance = await llhttpPromise;\n          llhttpPromise = null;\n        }\n        client[kConnecting] = false;\n        assert(socket);\n        socket[kNoRef] = false;\n        socket[kWriting] = false;\n        socket[kReset] = false;\n        socket[kBlocking] = false;\n        socket[kError] = null;\n        socket[kParser] = new Parser(client, socket, llhttpInstance);\n        socket[kClient] = client;\n        socket[kCounter] = 0;\n        socket[kMaxRequests] = client[kMaxRequests];\n        socket.on("error", onSocketError).on("readable", onSocketReadable).on("end", onSocketEnd).on("close", onSocketClose);\n        client[kSocket] = socket;\n        if (channels.connected.hasSubscribers) {\n          channels.connected.publish({\n            connectParams: {\n              host,\n              hostname,\n              protocol,\n              port,\n              servername: client[kServerName],\n              localAddress: client[kLocalAddress]\n            },\n            connector: client[kConnector],\n            socket\n          });\n        }\n        client.emit("connect", client[kUrl], [client]);\n      } catch (err) {\n        if (client.destroyed) {\n          return;\n        }\n        client[kConnecting] = false;\n        if (channels.connectError.hasSubscribers) {\n          channels.connectError.publish({\n            connectParams: {\n              host,\n              hostname,\n              protocol,\n              port,\n              servername: client[kServerName],\n              localAddress: client[kLocalAddress]\n            },\n            connector: client[kConnector],\n            error: err\n          });\n        }\n        if (err.code === "ERR_TLS_CERT_ALTNAME_INVALID") {\n          assert(client[kRunning] === 0);\n          while (client[kPending] > 0 && client[kQueue][client[kPendingIdx]].servername === client[kServerName]) {\n            const request = client[kQueue][client[kPendingIdx]++];\n            errorRequest(client, request, err);\n          }\n        } else {\n          onError(client, err);\n        }\n        client.emit("connectionError", client[kUrl], [client], err);\n      }\n      resume(client);\n    }\n    __name(connect, "connect");\n    function emitDrain(client) {\n      client[kNeedDrain] = 0;\n      client.emit("drain", client[kUrl], [client]);\n    }\n    __name(emitDrain, "emitDrain");\n    function resume(client, sync) {\n      if (client[kResuming] === 2) {\n        return;\n      }\n      client[kResuming] = 2;\n      _resume(client, sync);\n      client[kResuming] = 0;\n      if (client[kRunningIdx] > 256) {\n        client[kQueue].splice(0, client[kRunningIdx]);\n        client[kPendingIdx] -= client[kRunningIdx];\n        client[kRunningIdx] = 0;\n      }\n    }\n    __name(resume, "resume");\n    function _resume(client, sync) {\n      while (true) {\n        if (client.destroyed) {\n          assert(client[kPending] === 0);\n          return;\n        }\n        if (client[kClosedResolve] && !client[kSize]) {\n          client[kClosedResolve]();\n          client[kClosedResolve] = null;\n          return;\n        }\n        const socket = client[kSocket];\n        if (socket && !socket.destroyed) {\n          if (client[kSize] === 0) {\n            if (!socket[kNoRef] && socket.unref) {\n              socket.unref();\n              socket[kNoRef] = true;\n            }\n          } else if (socket[kNoRef] && socket.ref) {\n            socket.ref();\n            socket[kNoRef] = false;\n          }\n          if (client[kSize] === 0) {\n            if (socket[kParser].timeoutType !== TIMEOUT_IDLE) {\n              socket[kParser].setTimeout(client[kKeepAliveTimeoutValue], TIMEOUT_IDLE);\n            }\n          } else if (client[kRunning] > 0 && socket[kParser].statusCode < 200) {\n            if (socket[kParser].timeoutType !== TIMEOUT_HEADERS) {\n              const request2 = client[kQueue][client[kRunningIdx]];\n              const headersTimeout = request2.headersTimeout != null ? request2.headersTimeout : client[kHeadersTimeout];\n              socket[kParser].setTimeout(headersTimeout, TIMEOUT_HEADERS);\n            }\n          }\n        }\n        if (client[kBusy]) {\n          client[kNeedDrain] = 2;\n        } else if (client[kNeedDrain] === 2) {\n          if (sync) {\n            client[kNeedDrain] = 1;\n            define_process_default.nextTick(emitDrain, client);\n          } else {\n            emitDrain(client);\n          }\n          continue;\n        }\n        if (client[kPending] === 0) {\n          return;\n        }\n        if (client[kRunning] >= (client[kPipelining] || 1)) {\n          return;\n        }\n        const request = client[kQueue][client[kPendingIdx]];\n        if (client[kUrl].protocol === "https:" && client[kServerName] !== request.servername) {\n          if (client[kRunning] > 0) {\n            return;\n          }\n          client[kServerName] = request.servername;\n          if (socket && socket.servername !== request.servername) {\n            util.destroy(socket, new InformationalError("servername changed"));\n            return;\n          }\n        }\n        if (client[kConnecting]) {\n          return;\n        }\n        if (!socket) {\n          connect(client);\n          return;\n        }\n        if (socket.destroyed || socket[kWriting] || socket[kReset] || socket[kBlocking]) {\n          return;\n        }\n        if (client[kRunning] > 0 && !request.idempotent) {\n          return;\n        }\n        if (client[kRunning] > 0 && (request.upgrade || request.method === "CONNECT")) {\n          return;\n        }\n        if (util.isStream(request.body) && util.bodyLength(request.body) === 0) {\n          request.body.on(\n            "data",\n            /* istanbul ignore next */\n            function() {\n              assert(false);\n            }\n          ).on("error", function(err) {\n            errorRequest(client, request, err);\n          }).on("end", function() {\n            util.destroy(this);\n          });\n          request.body = null;\n        }\n        if (client[kRunning] > 0 && (util.isStream(request.body) || util.isAsyncIterable(request.body))) {\n          return;\n        }\n        if (!request.aborted && write(client, request)) {\n          client[kPendingIdx]++;\n        } else {\n          client[kQueue].splice(client[kPendingIdx], 1);\n        }\n      }\n    }\n    __name(_resume, "_resume");\n    function write(client, request) {\n      const { body, method, path, host, upgrade, headers, blocking, reset } = request;\n      const expectsPayload = method === "PUT" || method === "POST" || method === "PATCH";\n      if (body && typeof body.read === "function") {\n        body.read(0);\n      }\n      let contentLength = util.bodyLength(body);\n      if (contentLength === null) {\n        contentLength = request.contentLength;\n      }\n      if (contentLength === 0 && !expectsPayload) {\n        contentLength = null;\n      }\n      if (request.contentLength !== null && request.contentLength !== contentLength) {\n        if (client[kStrictContentLength]) {\n          errorRequest(client, request, new RequestContentLengthMismatchError());\n          return false;\n        }\n        define_process_default.emitWarning(new RequestContentLengthMismatchError());\n      }\n      const socket = client[kSocket];\n      try {\n        request.onConnect((err) => {\n          if (request.aborted || request.completed) {\n            return;\n          }\n          errorRequest(client, request, err || new RequestAbortedError());\n          util.destroy(socket, new InformationalError("aborted"));\n        });\n      } catch (err) {\n        errorRequest(client, request, err);\n      }\n      if (request.aborted) {\n        return false;\n      }\n      if (method === "HEAD") {\n        socket[kReset] = true;\n      }\n      if (upgrade || method === "CONNECT") {\n        socket[kReset] = true;\n      }\n      if (reset != null) {\n        socket[kReset] = reset;\n      }\n      if (client[kMaxRequests] && socket[kCounter]++ >= client[kMaxRequests]) {\n        socket[kReset] = true;\n      }\n      if (blocking) {\n        socket[kBlocking] = true;\n      }\n      let header = `${method} ${path} HTTP/1.1\\r\n`;\n      if (typeof host === "string") {\n        header += `host: ${host}\\r\n`;\n      } else {\n        header += client[kHostHeader];\n      }\n      if (upgrade) {\n        header += `connection: upgrade\\r\nupgrade: ${upgrade}\\r\n`;\n      } else if (client[kPipelining] && !socket[kReset]) {\n        header += "connection: keep-alive\\r\\n";\n      } else {\n        header += "connection: close\\r\\n";\n      }\n      if (headers) {\n        header += headers;\n      }\n      if (channels.sendHeaders.hasSubscribers) {\n        channels.sendHeaders.publish({ request, headers: header, socket });\n      }\n      if (!body) {\n        if (contentLength === 0) {\n          socket.write(`${header}content-length: 0\\r\n\\r\n`, "latin1");\n        } else {\n          assert(contentLength === null, "no body must not have content length");\n          socket.write(`${header}\\r\n`, "latin1");\n        }\n        request.onRequestSent();\n      } else if (util.isBuffer(body)) {\n        assert(contentLength === body.byteLength, "buffer body must have content length");\n        socket.cork();\n        socket.write(`${header}content-length: ${contentLength}\\r\n\\r\n`, "latin1");\n        socket.write(body);\n        socket.uncork();\n        request.onBodySent(body);\n        request.onRequestSent();\n        if (!expectsPayload) {\n          socket[kReset] = true;\n        }\n      } else if (util.isBlobLike(body)) {\n        if (typeof body.stream === "function") {\n          writeIterable({ body: body.stream(), client, request, socket, contentLength, header, expectsPayload });\n        } else {\n          writeBlob({ body, client, request, socket, contentLength, header, expectsPayload });\n        }\n      } else if (util.isStream(body)) {\n        writeStream({ body, client, request, socket, contentLength, header, expectsPayload });\n      } else if (util.isIterable(body)) {\n        writeIterable({ body, client, request, socket, contentLength, header, expectsPayload });\n      } else {\n        assert(false);\n      }\n      return true;\n    }\n    __name(write, "write");\n    function writeStream({ body, client, request, socket, contentLength, header, expectsPayload }) {\n      assert(contentLength !== 0 || client[kRunning] === 0, "stream body cannot be pipelined");\n      let finished = false;\n      const writer = new AsyncWriter({ socket, request, contentLength, client, expectsPayload, header });\n      const onData = /* @__PURE__ */ __name(function(chunk) {\n        if (finished) {\n          return;\n        }\n        try {\n          if (!writer.write(chunk) && this.pause) {\n            this.pause();\n          }\n        } catch (err) {\n          util.destroy(this, err);\n        }\n      }, "onData");\n      const onDrain = /* @__PURE__ */ __name(function() {\n        if (finished) {\n          return;\n        }\n        if (body.resume) {\n          body.resume();\n        }\n      }, "onDrain");\n      const onAbort = /* @__PURE__ */ __name(function() {\n        onFinished(new RequestAbortedError());\n      }, "onAbort");\n      const onFinished = /* @__PURE__ */ __name(function(err) {\n        if (finished) {\n          return;\n        }\n        finished = true;\n        assert(socket.destroyed || socket[kWriting] && client[kRunning] <= 1);\n        socket.off("drain", onDrain).off("error", onFinished);\n        body.removeListener("data", onData).removeListener("end", onFinished).removeListener("error", onFinished).removeListener("close", onAbort);\n        if (!err) {\n          try {\n            writer.end();\n          } catch (er) {\n            err = er;\n          }\n        }\n        writer.destroy(err);\n        if (err && (err.code !== "UND_ERR_INFO" || err.message !== "reset")) {\n          util.destroy(body, err);\n        } else {\n          util.destroy(body);\n        }\n      }, "onFinished");\n      body.on("data", onData).on("end", onFinished).on("error", onFinished).on("close", onAbort);\n      if (body.resume) {\n        body.resume();\n      }\n      socket.on("drain", onDrain).on("error", onFinished);\n    }\n    __name(writeStream, "writeStream");\n    async function writeBlob({ body, client, request, socket, contentLength, header, expectsPayload }) {\n      assert(contentLength === body.size, "blob body must have content length");\n      try {\n        if (contentLength != null && contentLength !== body.size) {\n          throw new RequestContentLengthMismatchError();\n        }\n        const buffer = Buffer.from(await body.arrayBuffer());\n        socket.cork();\n        socket.write(`${header}content-length: ${contentLength}\\r\n\\r\n`, "latin1");\n        socket.write(buffer);\n        socket.uncork();\n        request.onBodySent(buffer);\n        request.onRequestSent();\n        if (!expectsPayload) {\n          socket[kReset] = true;\n        }\n        resume(client);\n      } catch (err) {\n        util.destroy(socket, err);\n      }\n    }\n    __name(writeBlob, "writeBlob");\n    async function writeIterable({ body, client, request, socket, contentLength, header, expectsPayload }) {\n      assert(contentLength !== 0 || client[kRunning] === 0, "iterator body cannot be pipelined");\n      let callback = null;\n      function onDrain() {\n        if (callback) {\n          const cb = callback;\n          callback = null;\n          cb();\n        }\n      }\n      __name(onDrain, "onDrain");\n      const waitForDrain = /* @__PURE__ */ __name(() => new Promise((resolve, reject) => {\n        assert(callback === null);\n        if (socket[kError]) {\n          reject(socket[kError]);\n        } else {\n          callback = resolve;\n        }\n      }), "waitForDrain");\n      socket.on("close", onDrain).on("drain", onDrain);\n      const writer = new AsyncWriter({ socket, request, contentLength, client, expectsPayload, header });\n      try {\n        for await (const chunk of body) {\n          if (socket[kError]) {\n            throw socket[kError];\n          }\n          if (!writer.write(chunk)) {\n            await waitForDrain();\n          }\n        }\n        writer.end();\n      } catch (err) {\n        writer.destroy(err);\n      } finally {\n        socket.off("close", onDrain).off("drain", onDrain);\n      }\n    }\n    __name(writeIterable, "writeIterable");\n    var _AsyncWriter = class _AsyncWriter {\n      constructor({ socket, request, contentLength, client, expectsPayload, header }) {\n        this.socket = socket;\n        this.request = request;\n        this.contentLength = contentLength;\n        this.client = client;\n        this.bytesWritten = 0;\n        this.expectsPayload = expectsPayload;\n        this.header = header;\n        socket[kWriting] = true;\n      }\n      write(chunk) {\n        const { socket, request, contentLength, client, bytesWritten, expectsPayload, header } = this;\n        if (socket[kError]) {\n          throw socket[kError];\n        }\n        if (socket.destroyed) {\n          return false;\n        }\n        const len = Buffer.byteLength(chunk);\n        if (!len) {\n          return true;\n        }\n        if (contentLength !== null && bytesWritten + len > contentLength) {\n          if (client[kStrictContentLength]) {\n            throw new RequestContentLengthMismatchError();\n          }\n          define_process_default.emitWarning(new RequestContentLengthMismatchError());\n        }\n        socket.cork();\n        if (bytesWritten === 0) {\n          if (!expectsPayload) {\n            socket[kReset] = true;\n          }\n          if (contentLength === null) {\n            socket.write(`${header}transfer-encoding: chunked\\r\n`, "latin1");\n          } else {\n            socket.write(`${header}content-length: ${contentLength}\\r\n\\r\n`, "latin1");\n          }\n        }\n        if (contentLength === null) {\n          socket.write(`\\r\n${len.toString(16)}\\r\n`, "latin1");\n        }\n        this.bytesWritten += len;\n        const ret = socket.write(chunk);\n        socket.uncork();\n        request.onBodySent(chunk);\n        if (!ret) {\n          if (socket[kParser].timeout && socket[kParser].timeoutType === TIMEOUT_HEADERS) {\n            if (socket[kParser].timeout.refresh) {\n              socket[kParser].timeout.refresh();\n            }\n          }\n        }\n        return ret;\n      }\n      end() {\n        const { socket, contentLength, client, bytesWritten, expectsPayload, header, request } = this;\n        request.onRequestSent();\n        socket[kWriting] = false;\n        if (socket[kError]) {\n          throw socket[kError];\n        }\n        if (socket.destroyed) {\n          return;\n        }\n        if (bytesWritten === 0) {\n          if (expectsPayload) {\n            socket.write(`${header}content-length: 0\\r\n\\r\n`, "latin1");\n          } else {\n            socket.write(`${header}\\r\n`, "latin1");\n          }\n        } else if (contentLength === null) {\n          socket.write("\\r\\n0\\r\\n\\r\\n", "latin1");\n        }\n        if (contentLength !== null && bytesWritten !== contentLength) {\n          if (client[kStrictContentLength]) {\n            throw new RequestContentLengthMismatchError();\n          } else {\n            define_process_default.emitWarning(new RequestContentLengthMismatchError());\n          }\n        }\n        if (socket[kParser].timeout && socket[kParser].timeoutType === TIMEOUT_HEADERS) {\n          if (socket[kParser].timeout.refresh) {\n            socket[kParser].timeout.refresh();\n          }\n        }\n        resume(client);\n      }\n      destroy(err) {\n        const { socket, client } = this;\n        socket[kWriting] = false;\n        if (err) {\n          assert(client[kRunning] <= 1, "pipeline should only contain this request");\n          util.destroy(socket, err);\n        }\n      }\n    };\n    __name(_AsyncWriter, "AsyncWriter");\n    var AsyncWriter = _AsyncWriter;\n    function errorRequest(client, request, err) {\n      try {\n        request.onError(err);\n        assert(request.aborted);\n      } catch (err2) {\n        client.emit("error", err2);\n      }\n    }\n    __name(errorRequest, "errorRequest");\n    module2.exports = Client;\n  }\n});\n\n// ../../node_modules/.pnpm/undici@5.23.0/node_modules/undici/lib/pool.js\nvar require_pool = __commonJS({\n  "../../node_modules/.pnpm/undici@5.23.0/node_modules/undici/lib/pool.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    var {\n      PoolBase,\n      kClients,\n      kNeedDrain,\n      kAddClient,\n      kGetDispatcher\n    } = require_pool_base();\n    var Client = require_client();\n    var {\n      InvalidArgumentError: InvalidArgumentError2\n    } = require_errors();\n    var util = require_util();\n    var { kUrl, kInterceptors } = require_symbols2();\n    var buildConnector = require_connect();\n    var kOptions = Symbol("options");\n    var kConnections = Symbol("connections");\n    var kFactory = Symbol("factory");\n    function defaultFactory(origin, opts) {\n      return new Client(origin, opts);\n    }\n    __name(defaultFactory, "defaultFactory");\n    var _Pool = class _Pool extends PoolBase {\n      constructor(origin, {\n        connections,\n        factory = defaultFactory,\n        connect,\n        connectTimeout,\n        tls,\n        maxCachedSessions,\n        socketPath,\n        autoSelectFamily,\n        autoSelectFamilyAttemptTimeout,\n        ...options\n      } = {}) {\n        super();\n        if (connections != null && (!Number.isFinite(connections) || connections < 0)) {\n          throw new InvalidArgumentError2("invalid connections");\n        }\n        if (typeof factory !== "function") {\n          throw new InvalidArgumentError2("factory must be a function.");\n        }\n        if (connect != null && typeof connect !== "function" && typeof connect !== "object") {\n          throw new InvalidArgumentError2("connect must be a function or an object");\n        }\n        if (typeof connect !== "function") {\n          connect = buildConnector({\n            ...tls,\n            maxCachedSessions,\n            socketPath,\n            timeout: connectTimeout == null ? 1e4 : connectTimeout,\n            ...util.nodeHasAutoSelectFamily && autoSelectFamily ? { autoSelectFamily, autoSelectFamilyAttemptTimeout } : void 0,\n            ...connect\n          });\n        }\n        this[kInterceptors] = options.interceptors && options.interceptors.Pool && Array.isArray(options.interceptors.Pool) ? options.interceptors.Pool : [];\n        this[kConnections] = connections || null;\n        this[kUrl] = util.parseOrigin(origin);\n        this[kOptions] = { ...util.deepClone(options), connect };\n        this[kOptions].interceptors = options.interceptors ? { ...options.interceptors } : void 0;\n        this[kFactory] = factory;\n      }\n      [kGetDispatcher]() {\n        let dispatcher = this[kClients].find((dispatcher2) => !dispatcher2[kNeedDrain]);\n        if (dispatcher) {\n          return dispatcher;\n        }\n        if (!this[kConnections] || this[kClients].length < this[kConnections]) {\n          dispatcher = this[kFactory](this[kUrl], this[kOptions]);\n          this[kAddClient](dispatcher);\n        }\n        return dispatcher;\n      }\n    };\n    __name(_Pool, "Pool");\n    var Pool = _Pool;\n    module2.exports = Pool;\n  }\n});\n\n// ../../node_modules/.pnpm/undici@5.23.0/node_modules/undici/lib/agent.js\nvar require_agent = __commonJS({\n  "../../node_modules/.pnpm/undici@5.23.0/node_modules/undici/lib/agent.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    var { InvalidArgumentError: InvalidArgumentError2 } = require_errors();\n    var { kClients, kRunning, kClose, kDestroy, kDispatch, kInterceptors } = require_symbols2();\n    var DispatcherBase = require_dispatcher_base();\n    var Pool = require_pool();\n    var Client = require_client();\n    var util = require_util();\n    var createRedirectInterceptor = require_redirectInterceptor();\n    var { WeakRef: WeakRef2, FinalizationRegistry } = require_dispatcher_weakref()();\n    var kOnConnect = Symbol("onConnect");\n    var kOnDisconnect = Symbol("onDisconnect");\n    var kOnConnectionError = Symbol("onConnectionError");\n    var kMaxRedirections = Symbol("maxRedirections");\n    var kOnDrain = Symbol("onDrain");\n    var kFactory = Symbol("factory");\n    var kFinalizer = Symbol("finalizer");\n    var kOptions = Symbol("options");\n    function defaultFactory(origin, opts) {\n      return opts && opts.connections === 1 ? new Client(origin, opts) : new Pool(origin, opts);\n    }\n    __name(defaultFactory, "defaultFactory");\n    var _Agent = class _Agent extends DispatcherBase {\n      constructor({ factory = defaultFactory, maxRedirections = 0, connect, ...options } = {}) {\n        super();\n        if (typeof factory !== "function") {\n          throw new InvalidArgumentError2("factory must be a function.");\n        }\n        if (connect != null && typeof connect !== "function" && typeof connect !== "object") {\n          throw new InvalidArgumentError2("connect must be a function or an object");\n        }\n        if (!Number.isInteger(maxRedirections) || maxRedirections < 0) {\n          throw new InvalidArgumentError2("maxRedirections must be a positive number");\n        }\n        if (connect && typeof connect !== "function") {\n          connect = { ...connect };\n        }\n        this[kInterceptors] = options.interceptors && options.interceptors.Agent && Array.isArray(options.interceptors.Agent) ? options.interceptors.Agent : [createRedirectInterceptor({ maxRedirections })];\n        this[kOptions] = { ...util.deepClone(options), connect };\n        this[kOptions].interceptors = options.interceptors ? { ...options.interceptors } : void 0;\n        this[kMaxRedirections] = maxRedirections;\n        this[kFactory] = factory;\n        this[kClients] = /* @__PURE__ */ new Map();\n        this[kFinalizer] = new FinalizationRegistry(\n          /* istanbul ignore next: gc is undeterministic */\n          (key) => {\n            const ref = this[kClients].get(key);\n            if (ref !== void 0 && ref.deref() === void 0) {\n              this[kClients].delete(key);\n            }\n          }\n        );\n        const agent = this;\n        this[kOnDrain] = (origin, targets) => {\n          agent.emit("drain", origin, [agent, ...targets]);\n        };\n        this[kOnConnect] = (origin, targets) => {\n          agent.emit("connect", origin, [agent, ...targets]);\n        };\n        this[kOnDisconnect] = (origin, targets, err) => {\n          agent.emit("disconnect", origin, [agent, ...targets], err);\n        };\n        this[kOnConnectionError] = (origin, targets, err) => {\n          agent.emit("connectionError", origin, [agent, ...targets], err);\n        };\n      }\n      get [kRunning]() {\n        let ret = 0;\n        for (const ref of this[kClients].values()) {\n          const client = ref.deref();\n          if (client) {\n            ret += client[kRunning];\n          }\n        }\n        return ret;\n      }\n      [kDispatch](opts, handler) {\n        let key;\n        if (opts.origin && (typeof opts.origin === "string" || opts.origin instanceof URL)) {\n          key = String(opts.origin);\n        } else {\n          throw new InvalidArgumentError2("opts.origin must be a non-empty string or URL.");\n        }\n        const ref = this[kClients].get(key);\n        let dispatcher = ref ? ref.deref() : null;\n        if (!dispatcher) {\n          dispatcher = this[kFactory](opts.origin, this[kOptions]).on("drain", this[kOnDrain]).on("connect", this[kOnConnect]).on("disconnect", this[kOnDisconnect]).on("connectionError", this[kOnConnectionError]);\n          this[kClients].set(key, new WeakRef2(dispatcher));\n          this[kFinalizer].register(dispatcher, key);\n        }\n        return dispatcher.dispatch(opts, handler);\n      }\n      async [kClose]() {\n        const closePromises = [];\n        for (const ref of this[kClients].values()) {\n          const client = ref.deref();\n          if (client) {\n            closePromises.push(client.close());\n          }\n        }\n        await Promise.all(closePromises);\n      }\n      async [kDestroy](err) {\n        const destroyPromises = [];\n        for (const ref of this[kClients].values()) {\n          const client = ref.deref();\n          if (client) {\n            destroyPromises.push(client.destroy(err));\n          }\n        }\n        await Promise.all(destroyPromises);\n      }\n    };\n    __name(_Agent, "Agent");\n    var Agent2 = _Agent;\n    module2.exports = Agent2;\n  }\n});\n\n// ../../node_modules/.pnpm/undici@5.23.0/node_modules/undici/lib/global.js\nvar require_global2 = __commonJS({\n  "../../node_modules/.pnpm/undici@5.23.0/node_modules/undici/lib/global.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    var globalDispatcher2 = Symbol.for("undici.globalDispatcher.1");\n    var { InvalidArgumentError: InvalidArgumentError2 } = require_errors();\n    var Agent2 = require_agent();\n    if (getGlobalDispatcher2() === void 0) {\n      setGlobalDispatcher2(new Agent2());\n    }\n    function setGlobalDispatcher2(agent) {\n      if (!agent || typeof agent.dispatch !== "function") {\n        throw new InvalidArgumentError2("Argument agent must implement Agent");\n      }\n      Object.defineProperty(globalThis, globalDispatcher2, {\n        value: agent,\n        writable: true,\n        enumerable: false,\n        configurable: false\n      });\n    }\n    __name(setGlobalDispatcher2, "setGlobalDispatcher");\n    function getGlobalDispatcher2() {\n      return globalThis[globalDispatcher2];\n    }\n    __name(getGlobalDispatcher2, "getGlobalDispatcher");\n    module2.exports = {\n      setGlobalDispatcher: setGlobalDispatcher2,\n      getGlobalDispatcher: getGlobalDispatcher2\n    };\n  }\n});\n\n// ../../node_modules/.pnpm/undici@5.23.0/node_modules/undici/lib/fetch/index.js\nvar require_fetch = __commonJS({\n  "../../node_modules/.pnpm/undici@5.23.0/node_modules/undici/lib/fetch/index.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    var {\n      Response: Response3,\n      makeNetworkError,\n      makeAppropriateNetworkError,\n      filterResponse,\n      makeResponse\n    } = require_response();\n    var { Headers: Headers3 } = require_headers();\n    var { Request: Request2, makeRequest } = require_request();\n    var zlib = require("zlib");\n    var {\n      bytesMatch,\n      makePolicyContainer,\n      clonePolicyContainer,\n      requestBadPort,\n      TAOCheck,\n      appendRequestOriginHeader,\n      responseLocationURL,\n      requestCurrentURL,\n      setRequestReferrerPolicyOnRedirect,\n      tryUpgradeRequestToAPotentiallyTrustworthyURL,\n      createOpaqueTimingInfo,\n      appendFetchMetadata,\n      corsCheck,\n      crossOriginResourcePolicyCheck,\n      determineRequestsReferrer,\n      coarsenedSharedCurrentTime,\n      createDeferredPromise,\n      isBlobLike,\n      sameOrigin,\n      isCancelled,\n      isAborted,\n      isErrorLike,\n      fullyReadBody,\n      readableStreamClose,\n      isomorphicEncode,\n      urlIsLocal,\n      urlIsHttpHttpsScheme,\n      urlHasHttpsScheme\n    } = require_util2();\n    var { kState, kHeaders: kHeaders2, kGuard: kGuard2, kRealm } = require_symbols();\n    var assert = require("assert");\n    var { safelyExtractBody } = require_body();\n    var {\n      redirectStatus,\n      nullBodyStatus,\n      safeMethods,\n      requestBodyHeader,\n      subresource,\n      DOMException\n    } = require_constants();\n    var { kHeadersList } = require_symbols2();\n    var EE = require("events");\n    var { Readable, pipeline } = require("stream");\n    var { addAbortListener, isErrored, isReadable, nodeMajor, nodeMinor } = require_util();\n    var { dataURLProcessor, serializeAMimeType } = require_dataURL();\n    var { TransformStream } = require("./streams");\n    var { getGlobalDispatcher: getGlobalDispatcher2 } = require_global2();\n    var { webidl } = require_webidl();\n    var { STATUS_CODES } = require("http");\n    var resolveObjectURL;\n    var ReadableStream = globalThis.ReadableStream;\n    var _Fetch = class _Fetch extends EE {\n      constructor(dispatcher) {\n        super();\n        this.dispatcher = dispatcher;\n        this.connection = null;\n        this.dump = false;\n        this.state = "ongoing";\n        this.setMaxListeners(21);\n      }\n      terminate(reason) {\n        if (this.state !== "ongoing") {\n          return;\n        }\n        this.state = "terminated";\n        this.connection?.destroy(reason);\n        this.emit("terminated", reason);\n      }\n      // https://fetch.spec.whatwg.org/#fetch-controller-abort\n      abort(error) {\n        if (this.state !== "ongoing") {\n          return;\n        }\n        this.state = "aborted";\n        if (!error) {\n          error = new DOMException("The operation was aborted.", "AbortError");\n        }\n        this.serializedAbortReason = error;\n        this.connection?.destroy(error);\n        this.emit("terminated", error);\n      }\n    };\n    __name(_Fetch, "Fetch");\n    var Fetch = _Fetch;\n    async function fetch2(input, init = {}) {\n      webidl.argumentLengthCheck(arguments, 1, { header: "globalThis.fetch" });\n      const p = createDeferredPromise();\n      let requestObject;\n      try {\n        requestObject = new Request2(input, init);\n      } catch (e) {\n        p.reject(e);\n        return p.promise;\n      }\n      const request = requestObject[kState];\n      if (requestObject.signal.aborted) {\n        abortFetch(p, request, null, requestObject.signal.reason);\n        return p.promise;\n      }\n      const globalObject = request.client.globalObject;\n      if (globalObject?.constructor?.name === "ServiceWorkerGlobalScope") {\n        request.serviceWorkers = "none";\n      }\n      let responseObject = null;\n      const relevantRealm = null;\n      let locallyAborted = false;\n      let controller = null;\n      addAbortListener(\n        requestObject.signal,\n        () => {\n          locallyAborted = true;\n          assert(controller != null);\n          controller.abort(requestObject.signal.reason);\n          abortFetch(p, request, responseObject, requestObject.signal.reason);\n        }\n      );\n      const handleFetchDone = /* @__PURE__ */ __name((response) => finalizeAndReportTiming(response, "fetch"), "handleFetchDone");\n      const processResponse = /* @__PURE__ */ __name((response) => {\n        if (locallyAborted) {\n          return;\n        }\n        if (response.aborted) {\n          abortFetch(p, request, responseObject, controller.serializedAbortReason);\n          return;\n        }\n        if (response.type === "error") {\n          p.reject(\n            Object.assign(new TypeError("fetch failed"), { cause: response.error })\n          );\n          return;\n        }\n        responseObject = new Response3();\n        responseObject[kState] = response;\n        responseObject[kRealm] = relevantRealm;\n        responseObject[kHeaders2][kHeadersList] = response.headersList;\n        responseObject[kHeaders2][kGuard2] = "immutable";\n        responseObject[kHeaders2][kRealm] = relevantRealm;\n        p.resolve(responseObject);\n      }, "processResponse");\n      controller = fetching({\n        request,\n        processResponseEndOfBody: handleFetchDone,\n        processResponse,\n        dispatcher: init.dispatcher ?? getGlobalDispatcher2()\n        // undici\n      });\n      return p.promise;\n    }\n    __name(fetch2, "fetch");\n    function finalizeAndReportTiming(response, initiatorType = "other") {\n      if (response.type === "error" && response.aborted) {\n        return;\n      }\n      if (!response.urlList?.length) {\n        return;\n      }\n      const originalURL = response.urlList[0];\n      let timingInfo = response.timingInfo;\n      let cacheState = response.cacheState;\n      if (!urlIsHttpHttpsScheme(originalURL)) {\n        return;\n      }\n      if (timingInfo === null) {\n        return;\n      }\n      if (!timingInfo.timingAllowPassed) {\n        timingInfo = createOpaqueTimingInfo({\n          startTime: timingInfo.startTime\n        });\n        cacheState = "";\n      }\n      timingInfo.endTime = coarsenedSharedCurrentTime();\n      response.timingInfo = timingInfo;\n      markResourceTiming(\n        timingInfo,\n        originalURL,\n        initiatorType,\n        globalThis,\n        cacheState\n      );\n    }\n    __name(finalizeAndReportTiming, "finalizeAndReportTiming");\n    function markResourceTiming(timingInfo, originalURL, initiatorType, globalThis2, cacheState) {\n      if (nodeMajor > 18 || nodeMajor === 18 && nodeMinor >= 2) {\n        performance.markResourceTiming(timingInfo, originalURL.href, initiatorType, globalThis2, cacheState);\n      }\n    }\n    __name(markResourceTiming, "markResourceTiming");\n    function abortFetch(p, request, responseObject, error) {\n      if (!error) {\n        error = new DOMException("The operation was aborted.", "AbortError");\n      }\n      p.reject(error);\n      if (request.body != null && isReadable(request.body?.stream)) {\n        request.body.stream.cancel(error).catch((err) => {\n          if (err.code === "ERR_INVALID_STATE") {\n            return;\n          }\n          throw err;\n        });\n      }\n      if (responseObject == null) {\n        return;\n      }\n      const response = responseObject[kState];\n      if (response.body != null && isReadable(response.body?.stream)) {\n        response.body.stream.cancel(error).catch((err) => {\n          if (err.code === "ERR_INVALID_STATE") {\n            return;\n          }\n          throw err;\n        });\n      }\n    }\n    __name(abortFetch, "abortFetch");\n    function fetching({\n      request,\n      processRequestBodyChunkLength,\n      processRequestEndOfBody,\n      processResponse,\n      processResponseEndOfBody,\n      processResponseConsumeBody,\n      useParallelQueue = false,\n      dispatcher\n      // undici\n    }) {\n      let taskDestination = null;\n      let crossOriginIsolatedCapability = false;\n      if (request.client != null) {\n        taskDestination = request.client.globalObject;\n        crossOriginIsolatedCapability = request.client.crossOriginIsolatedCapability;\n      }\n      const currenTime = coarsenedSharedCurrentTime(crossOriginIsolatedCapability);\n      const timingInfo = createOpaqueTimingInfo({\n        startTime: currenTime\n      });\n      const fetchParams = {\n        controller: new Fetch(dispatcher),\n        request,\n        timingInfo,\n        processRequestBodyChunkLength,\n        processRequestEndOfBody,\n        processResponse,\n        processResponseConsumeBody,\n        processResponseEndOfBody,\n        taskDestination,\n        crossOriginIsolatedCapability\n      };\n      assert(!request.body || request.body.stream);\n      if (request.window === "client") {\n        request.window = request.client?.globalObject?.constructor?.name === "Window" ? request.client : "no-window";\n      }\n      if (request.origin === "client") {\n        request.origin = request.client?.origin;\n      }\n      if (request.policyContainer === "client") {\n        if (request.client != null) {\n          request.policyContainer = clonePolicyContainer(\n            request.client.policyContainer\n          );\n        } else {\n          request.policyContainer = makePolicyContainer();\n        }\n      }\n      if (!request.headersList.contains("accept")) {\n        const value = "*/*";\n        request.headersList.append("accept", value);\n      }\n      if (!request.headersList.contains("accept-language")) {\n        request.headersList.append("accept-language", "*");\n      }\n      if (request.priority === null) {\n      }\n      if (subresource.includes(request.destination)) {\n      }\n      mainFetch(fetchParams).catch((err) => {\n        fetchParams.controller.terminate(err);\n      });\n      return fetchParams.controller;\n    }\n    __name(fetching, "fetching");\n    async function mainFetch(fetchParams, recursive = false) {\n      const request = fetchParams.request;\n      let response = null;\n      if (request.localURLsOnly && !urlIsLocal(requestCurrentURL(request))) {\n        response = makeNetworkError("local URLs only");\n      }\n      tryUpgradeRequestToAPotentiallyTrustworthyURL(request);\n      if (requestBadPort(request) === "blocked") {\n        response = makeNetworkError("bad port");\n      }\n      if (request.referrerPolicy === "") {\n        request.referrerPolicy = request.policyContainer.referrerPolicy;\n      }\n      if (request.referrer !== "no-referrer") {\n        request.referrer = determineRequestsReferrer(request);\n      }\n      if (response === null) {\n        response = await (async () => {\n          const currentURL = requestCurrentURL(request);\n          if (\n            // - request’s current URL’s origin is same origin with request’s origin,\n            //   and request’s response tainting is "basic"\n            sameOrigin(currentURL, request.url) && request.responseTainting === "basic" || // request’s current URL’s scheme is "data"\n            currentURL.protocol === "data:" || // - request’s mode is "navigate" or "websocket"\n            (request.mode === "navigate" || request.mode === "websocket")\n          ) {\n            request.responseTainting = "basic";\n            return await schemeFetch(fetchParams);\n          }\n          if (request.mode === "same-origin") {\n            return makeNetworkError(\'request mode cannot be "same-origin"\');\n          }\n          if (request.mode === "no-cors") {\n            if (request.redirect !== "follow") {\n              return makeNetworkError(\n                \'redirect mode cannot be "follow" for "no-cors" request\'\n              );\n            }\n            request.responseTainting = "opaque";\n            return await schemeFetch(fetchParams);\n          }\n          if (!urlIsHttpHttpsScheme(requestCurrentURL(request))) {\n            return makeNetworkError("URL scheme must be a HTTP(S) scheme");\n          }\n          request.responseTainting = "cors";\n          return await httpFetch(fetchParams);\n        })();\n      }\n      if (recursive) {\n        return response;\n      }\n      if (response.status !== 0 && !response.internalResponse) {\n        if (request.responseTainting === "cors") {\n        }\n        if (request.responseTainting === "basic") {\n          response = filterResponse(response, "basic");\n        } else if (request.responseTainting === "cors") {\n          response = filterResponse(response, "cors");\n        } else if (request.responseTainting === "opaque") {\n          response = filterResponse(response, "opaque");\n        } else {\n          assert(false);\n        }\n      }\n      let internalResponse = response.status === 0 ? response : response.internalResponse;\n      if (internalResponse.urlList.length === 0) {\n        internalResponse.urlList.push(...request.urlList);\n      }\n      if (!request.timingAllowFailed) {\n        response.timingAllowPassed = true;\n      }\n      if (response.type === "opaque" && internalResponse.status === 206 && internalResponse.rangeRequested && !request.headers.contains("range")) {\n        response = internalResponse = makeNetworkError();\n      }\n      if (response.status !== 0 && (request.method === "HEAD" || request.method === "CONNECT" || nullBodyStatus.includes(internalResponse.status))) {\n        internalResponse.body = null;\n        fetchParams.controller.dump = true;\n      }\n      if (request.integrity) {\n        const processBodyError = /* @__PURE__ */ __name((reason) => fetchFinale(fetchParams, makeNetworkError(reason)), "processBodyError");\n        if (request.responseTainting === "opaque" || response.body == null) {\n          processBodyError(response.error);\n          return;\n        }\n        const processBody = /* @__PURE__ */ __name((bytes) => {\n          if (!bytesMatch(bytes, request.integrity)) {\n            processBodyError("integrity mismatch");\n            return;\n          }\n          response.body = safelyExtractBody(bytes)[0];\n          fetchFinale(fetchParams, response);\n        }, "processBody");\n        await fullyReadBody(response.body, processBody, processBodyError);\n      } else {\n        fetchFinale(fetchParams, response);\n      }\n    }\n    __name(mainFetch, "mainFetch");\n    async function schemeFetch(fetchParams) {\n      if (isCancelled(fetchParams) && fetchParams.request.redirectCount === 0) {\n        return makeAppropriateNetworkError(fetchParams);\n      }\n      const { request } = fetchParams;\n      const { protocol: scheme } = requestCurrentURL(request);\n      switch (scheme) {\n        case "about:": {\n          return makeNetworkError("about scheme is not supported");\n        }\n        case "blob:": {\n          if (!resolveObjectURL) {\n            resolveObjectURL = require("buffer").resolveObjectURL;\n          }\n          const blobURLEntry = requestCurrentURL(request);\n          if (blobURLEntry.search.length !== 0) {\n            return makeNetworkError("NetworkError when attempting to fetch resource.");\n          }\n          const blobURLEntryObject = resolveObjectURL(blobURLEntry.toString());\n          if (request.method !== "GET" || !isBlobLike(blobURLEntryObject)) {\n            return makeNetworkError("invalid method");\n          }\n          const bodyWithType = safelyExtractBody(blobURLEntryObject);\n          const body = bodyWithType[0];\n          const length = isomorphicEncode(`${body.length}`);\n          const type = bodyWithType[1] ?? "";\n          const response = makeResponse({\n            statusText: "OK",\n            headersList: [\n              ["content-length", { name: "Content-Length", value: length }],\n              ["content-type", { name: "Content-Type", value: type }]\n            ]\n          });\n          response.body = body;\n          return response;\n        }\n        case "data:": {\n          const currentURL = requestCurrentURL(request);\n          const dataURLStruct = dataURLProcessor(currentURL);\n          if (dataURLStruct === "failure") {\n            return makeNetworkError("failed to fetch the data URL");\n          }\n          const mimeType = serializeAMimeType(dataURLStruct.mimeType);\n          return makeResponse({\n            statusText: "OK",\n            headersList: [\n              ["content-type", { name: "Content-Type", value: mimeType }]\n            ],\n            body: safelyExtractBody(dataURLStruct.body)[0]\n          });\n        }\n        case "file:": {\n          return makeNetworkError("not implemented... yet...");\n        }\n        case "http:":\n        case "https:": {\n          return await httpFetch(fetchParams).catch((err) => makeNetworkError(err));\n        }\n        default: {\n          return makeNetworkError("unknown scheme");\n        }\n      }\n    }\n    __name(schemeFetch, "schemeFetch");\n    function finalizeResponse(fetchParams, response) {\n      fetchParams.request.done = true;\n      if (fetchParams.processResponseDone != null) {\n        queueMicrotask(() => fetchParams.processResponseDone(response));\n      }\n    }\n    __name(finalizeResponse, "finalizeResponse");\n    async function fetchFinale(fetchParams, response) {\n      if (response.type === "error") {\n        response.urlList = [fetchParams.request.urlList[0]];\n        response.timingInfo = createOpaqueTimingInfo({\n          startTime: fetchParams.timingInfo.startTime\n        });\n      }\n      const processResponseEndOfBody = /* @__PURE__ */ __name(() => {\n        fetchParams.request.done = true;\n        if (fetchParams.processResponseEndOfBody != null) {\n          queueMicrotask(() => fetchParams.processResponseEndOfBody(response));\n        }\n      }, "processResponseEndOfBody");\n      if (fetchParams.processResponse != null) {\n        queueMicrotask(() => fetchParams.processResponse(response));\n      }\n      if (response.body == null) {\n        processResponseEndOfBody();\n      } else {\n        const identityTransformAlgorithm = /* @__PURE__ */ __name((chunk, controller) => {\n          controller.enqueue(chunk);\n        }, "identityTransformAlgorithm");\n        const transformStream = new TransformStream({\n          start() {\n          },\n          transform: identityTransformAlgorithm,\n          flush: processResponseEndOfBody\n        }, {\n          size() {\n            return 1;\n          }\n        }, {\n          size() {\n            return 1;\n          }\n        });\n        response.body = { stream: response.body.stream.pipeThrough(transformStream) };\n      }\n      if (fetchParams.processResponseConsumeBody != null) {\n        const processBody = /* @__PURE__ */ __name((nullOrBytes) => fetchParams.processResponseConsumeBody(response, nullOrBytes), "processBody");\n        const processBodyError = /* @__PURE__ */ __name((failure) => fetchParams.processResponseConsumeBody(response, failure), "processBodyError");\n        if (response.body == null) {\n          queueMicrotask(() => processBody(null));\n        } else {\n          await fullyReadBody(response.body, processBody, processBodyError);\n        }\n      }\n    }\n    __name(fetchFinale, "fetchFinale");\n    async function httpFetch(fetchParams) {\n      const request = fetchParams.request;\n      let response = null;\n      let actualResponse = null;\n      const timingInfo = fetchParams.timingInfo;\n      if (request.serviceWorkers === "all") {\n      }\n      if (response === null) {\n        if (request.redirect === "follow") {\n          request.serviceWorkers = "none";\n        }\n        actualResponse = response = await httpNetworkOrCacheFetch(fetchParams);\n        if (request.responseTainting === "cors" && corsCheck(request, response) === "failure") {\n          return makeNetworkError("cors failure");\n        }\n        if (TAOCheck(request, response) === "failure") {\n          request.timingAllowFailed = true;\n        }\n      }\n      if ((request.responseTainting === "opaque" || response.type === "opaque") && crossOriginResourcePolicyCheck(\n        request.origin,\n        request.client,\n        request.destination,\n        actualResponse\n      ) === "blocked") {\n        return makeNetworkError("blocked");\n      }\n      if (redirectStatus.includes(actualResponse.status)) {\n        if (request.redirect !== "manual") {\n          fetchParams.controller.connection.destroy();\n        }\n        if (request.redirect === "error") {\n          response = makeNetworkError("unexpected redirect");\n        } else if (request.redirect === "manual") {\n          response = actualResponse;\n        } else if (request.redirect === "follow") {\n          response = await httpRedirectFetch(fetchParams, response);\n        } else {\n          assert(false);\n        }\n      }\n      response.timingInfo = timingInfo;\n      return response;\n    }\n    __name(httpFetch, "httpFetch");\n    async function httpRedirectFetch(fetchParams, response) {\n      const request = fetchParams.request;\n      const actualResponse = response.internalResponse ? response.internalResponse : response;\n      let locationURL;\n      try {\n        locationURL = responseLocationURL(\n          actualResponse,\n          requestCurrentURL(request).hash\n        );\n        if (locationURL == null) {\n          return response;\n        }\n      } catch (err) {\n        return makeNetworkError(err);\n      }\n      if (!urlIsHttpHttpsScheme(locationURL)) {\n        return makeNetworkError("URL scheme must be a HTTP(S) scheme");\n      }\n      if (request.redirectCount === 20) {\n        return makeNetworkError("redirect count exceeded");\n      }\n      request.redirectCount += 1;\n      if (request.mode === "cors" && (locationURL.username || locationURL.password) && !sameOrigin(request, locationURL)) {\n        return makeNetworkError(\'cross origin not allowed for request mode "cors"\');\n      }\n      if (request.responseTainting === "cors" && (locationURL.username || locationURL.password)) {\n        return makeNetworkError(\n          \'URL cannot contain credentials for request mode "cors"\'\n        );\n      }\n      if (actualResponse.status !== 303 && request.body != null && request.body.source == null) {\n        return makeNetworkError();\n      }\n      if ([301, 302].includes(actualResponse.status) && request.method === "POST" || actualResponse.status === 303 && !["GET", "HEAD"].includes(request.method)) {\n        request.method = "GET";\n        request.body = null;\n        for (const headerName of requestBodyHeader) {\n          request.headersList.delete(headerName);\n        }\n      }\n      if (!sameOrigin(requestCurrentURL(request), locationURL)) {\n        request.headersList.delete("authorization");\n      }\n      if (request.body != null) {\n        assert(request.body.source != null);\n        request.body = safelyExtractBody(request.body.source)[0];\n      }\n      const timingInfo = fetchParams.timingInfo;\n      timingInfo.redirectEndTime = timingInfo.postRedirectStartTime = coarsenedSharedCurrentTime(fetchParams.crossOriginIsolatedCapability);\n      if (timingInfo.redirectStartTime === 0) {\n        timingInfo.redirectStartTime = timingInfo.startTime;\n      }\n      request.urlList.push(locationURL);\n      setRequestReferrerPolicyOnRedirect(request, actualResponse);\n      return mainFetch(fetchParams, true);\n    }\n    __name(httpRedirectFetch, "httpRedirectFetch");\n    async function httpNetworkOrCacheFetch(fetchParams, isAuthenticationFetch = false, isNewConnectionFetch = false) {\n      const request = fetchParams.request;\n      let httpFetchParams = null;\n      let httpRequest = null;\n      let response = null;\n      const httpCache = null;\n      const revalidatingFlag = false;\n      if (request.window === "no-window" && request.redirect === "error") {\n        httpFetchParams = fetchParams;\n        httpRequest = request;\n      } else {\n        httpRequest = makeRequest(request);\n        httpFetchParams = { ...fetchParams };\n        httpFetchParams.request = httpRequest;\n      }\n      const includeCredentials = request.credentials === "include" || request.credentials === "same-origin" && request.responseTainting === "basic";\n      const contentLength = httpRequest.body ? httpRequest.body.length : null;\n      let contentLengthHeaderValue = null;\n      if (httpRequest.body == null && ["POST", "PUT"].includes(httpRequest.method)) {\n        contentLengthHeaderValue = "0";\n      }\n      if (contentLength != null) {\n        contentLengthHeaderValue = isomorphicEncode(`${contentLength}`);\n      }\n      if (contentLengthHeaderValue != null) {\n        httpRequest.headersList.append("content-length", contentLengthHeaderValue);\n      }\n      if (contentLength != null && httpRequest.keepalive) {\n      }\n      if (httpRequest.referrer instanceof URL) {\n        httpRequest.headersList.append("referer", isomorphicEncode(httpRequest.referrer.href));\n      }\n      appendRequestOriginHeader(httpRequest);\n      appendFetchMetadata(httpRequest);\n      if (!httpRequest.headersList.contains("user-agent")) {\n        httpRequest.headersList.append("user-agent", "undici");\n      }\n      if (httpRequest.cache === "default" && (httpRequest.headersList.contains("if-modified-since") || httpRequest.headersList.contains("if-none-match") || httpRequest.headersList.contains("if-unmodified-since") || httpRequest.headersList.contains("if-match") || httpRequest.headersList.contains("if-range"))) {\n        httpRequest.cache = "no-store";\n      }\n      if (httpRequest.cache === "no-cache" && !httpRequest.preventNoCacheCacheControlHeaderModification && !httpRequest.headersList.contains("cache-control")) {\n        httpRequest.headersList.append("cache-control", "max-age=0");\n      }\n      if (httpRequest.cache === "no-store" || httpRequest.cache === "reload") {\n        if (!httpRequest.headersList.contains("pragma")) {\n          httpRequest.headersList.append("pragma", "no-cache");\n        }\n        if (!httpRequest.headersList.contains("cache-control")) {\n          httpRequest.headersList.append("cache-control", "no-cache");\n        }\n      }\n      if (httpRequest.headersList.contains("range")) {\n        httpRequest.headersList.append("accept-encoding", "identity");\n      }\n      if (!httpRequest.headersList.contains("accept-encoding")) {\n        if (urlHasHttpsScheme(requestCurrentURL(httpRequest))) {\n          httpRequest.headersList.append("accept-encoding", "br, gzip, deflate");\n        } else {\n          httpRequest.headersList.append("accept-encoding", "gzip, deflate");\n        }\n      }\n      if (includeCredentials) {\n      }\n      if (httpCache == null) {\n        httpRequest.cache = "no-store";\n      }\n      if (httpRequest.mode !== "no-store" && httpRequest.mode !== "reload") {\n      }\n      if (response == null) {\n        if (httpRequest.mode === "only-if-cached") {\n          return makeNetworkError("only if cached");\n        }\n        const forwardResponse = await httpNetworkFetch(\n          httpFetchParams,\n          includeCredentials,\n          isNewConnectionFetch\n        );\n        if (!safeMethods.includes(httpRequest.method) && forwardResponse.status >= 200 && forwardResponse.status <= 399) {\n        }\n        if (revalidatingFlag && forwardResponse.status === 304) {\n        }\n        if (response == null) {\n          response = forwardResponse;\n        }\n      }\n      response.urlList = [...httpRequest.urlList];\n      if (httpRequest.headersList.contains("range")) {\n        response.rangeRequested = true;\n      }\n      response.requestIncludesCredentials = includeCredentials;\n      if (response.status === 407) {\n        if (request.window === "no-window") {\n          return makeNetworkError();\n        }\n        if (isCancelled(fetchParams)) {\n          return makeAppropriateNetworkError(fetchParams);\n        }\n        return makeNetworkError("proxy authentication required");\n      }\n      if (\n        // response’s status is 421\n        response.status === 421 && // isNewConnectionFetch is false\n        !isNewConnectionFetch && // request’s body is null, or request’s body is non-null and request’s body’s source is non-null\n        (request.body == null || request.body.source != null)\n      ) {\n        if (isCancelled(fetchParams)) {\n          return makeAppropriateNetworkError(fetchParams);\n        }\n        fetchParams.controller.connection.destroy();\n        response = await httpNetworkOrCacheFetch(\n          fetchParams,\n          isAuthenticationFetch,\n          true\n        );\n      }\n      if (isAuthenticationFetch) {\n      }\n      return response;\n    }\n    __name(httpNetworkOrCacheFetch, "httpNetworkOrCacheFetch");\n    async function httpNetworkFetch(fetchParams, includeCredentials = false, forceNewConnection = false) {\n      assert(!fetchParams.controller.connection || fetchParams.controller.connection.destroyed);\n      fetchParams.controller.connection = {\n        abort: null,\n        destroyed: false,\n        destroy(err) {\n          if (!this.destroyed) {\n            this.destroyed = true;\n            this.abort?.(err ?? new DOMException("The operation was aborted.", "AbortError"));\n          }\n        }\n      };\n      const request = fetchParams.request;\n      let response = null;\n      const timingInfo = fetchParams.timingInfo;\n      const httpCache = null;\n      if (httpCache == null) {\n        request.cache = "no-store";\n      }\n      const newConnection = forceNewConnection ? "yes" : "no";\n      if (request.mode === "websocket") {\n      } else {\n      }\n      let requestBody = null;\n      if (request.body == null && fetchParams.processRequestEndOfBody) {\n        queueMicrotask(() => fetchParams.processRequestEndOfBody());\n      } else if (request.body != null) {\n        const processBodyChunk = /* @__PURE__ */ __name(async function* (bytes) {\n          if (isCancelled(fetchParams)) {\n            return;\n          }\n          yield bytes;\n          fetchParams.processRequestBodyChunkLength?.(bytes.byteLength);\n        }, "processBodyChunk");\n        const processEndOfBody = /* @__PURE__ */ __name(() => {\n          if (isCancelled(fetchParams)) {\n            return;\n          }\n          if (fetchParams.processRequestEndOfBody) {\n            fetchParams.processRequestEndOfBody();\n          }\n        }, "processEndOfBody");\n        const processBodyError = /* @__PURE__ */ __name((e) => {\n          if (isCancelled(fetchParams)) {\n            return;\n          }\n          if (e.name === "AbortError") {\n            fetchParams.controller.abort();\n          } else {\n            fetchParams.controller.terminate(e);\n          }\n        }, "processBodyError");\n        requestBody = async function* () {\n          try {\n            for await (const bytes of request.body.stream) {\n              yield* processBodyChunk(bytes);\n            }\n            processEndOfBody();\n          } catch (err) {\n            processBodyError(err);\n          }\n        }();\n      }\n      try {\n        const { body, status, statusText, headersList, socket } = await dispatch({ body: requestBody });\n        if (socket) {\n          response = makeResponse({ status, statusText, headersList, socket });\n        } else {\n          const iterator = body[Symbol.asyncIterator]();\n          fetchParams.controller.next = () => iterator.next();\n          response = makeResponse({ status, statusText, headersList });\n        }\n      } catch (err) {\n        if (err.name === "AbortError") {\n          fetchParams.controller.connection.destroy();\n          return makeAppropriateNetworkError(fetchParams);\n        }\n        return makeNetworkError(err);\n      }\n      const pullAlgorithm = /* @__PURE__ */ __name(() => {\n        fetchParams.controller.resume();\n      }, "pullAlgorithm");\n      const cancelAlgorithm = /* @__PURE__ */ __name((reason) => {\n        fetchParams.controller.abort(reason);\n      }, "cancelAlgorithm");\n      if (!ReadableStream) {\n        ReadableStream = require("./streams").ReadableStream;\n      }\n      const stream = new ReadableStream(\n        {\n          async start(controller) {\n            fetchParams.controller.controller = controller;\n          },\n          async pull(controller) {\n            await pullAlgorithm(controller);\n          },\n          async cancel(reason) {\n            await cancelAlgorithm(reason);\n          }\n        },\n        {\n          highWaterMark: 0,\n          size() {\n            return 1;\n          }\n        }\n      );\n      response.body = { stream };\n      fetchParams.controller.on("terminated", onAborted);\n      fetchParams.controller.resume = async () => {\n        while (true) {\n          let bytes;\n          let isFailure;\n          try {\n            const { done, value } = await fetchParams.controller.next();\n            if (isAborted(fetchParams)) {\n              break;\n            }\n            bytes = done ? void 0 : value;\n          } catch (err) {\n            if (fetchParams.controller.ended && !timingInfo.encodedBodySize) {\n              bytes = void 0;\n            } else {\n              bytes = err;\n              isFailure = true;\n            }\n          }\n          if (bytes === void 0) {\n            readableStreamClose(fetchParams.controller.controller);\n            finalizeResponse(fetchParams, response);\n            return;\n          }\n          timingInfo.decodedBodySize += bytes?.byteLength ?? 0;\n          if (isFailure) {\n            fetchParams.controller.terminate(bytes);\n            return;\n          }\n          fetchParams.controller.controller.enqueue(new Uint8Array(bytes));\n          if (isErrored(stream)) {\n            fetchParams.controller.terminate();\n            return;\n          }\n          if (!fetchParams.controller.controller.desiredSize) {\n            return;\n          }\n        }\n      };\n      function onAborted(reason) {\n        if (isAborted(fetchParams)) {\n          response.aborted = true;\n          if (isReadable(stream)) {\n            fetchParams.controller.controller.error(\n              fetchParams.controller.serializedAbortReason\n            );\n          }\n        } else {\n          if (isReadable(stream)) {\n            fetchParams.controller.controller.error(new TypeError("terminated", {\n              cause: isErrorLike(reason) ? reason : void 0\n            }));\n          }\n        }\n        fetchParams.controller.connection.destroy();\n      }\n      __name(onAborted, "onAborted");\n      return response;\n      async function dispatch({ body }) {\n        const url = requestCurrentURL(request);\n        const agent = fetchParams.controller.dispatcher;\n        return new Promise((resolve, reject) => agent.dispatch(\n          {\n            path: url.pathname + url.search,\n            origin: url.origin,\n            method: request.method,\n            body: fetchParams.controller.dispatcher.isMockActive ? request.body && request.body.source : body,\n            headers: request.headersList.entries,\n            maxRedirections: 0,\n            upgrade: request.mode === "websocket" ? "websocket" : void 0\n          },\n          {\n            body: null,\n            abort: null,\n            onConnect(abort) {\n              const { connection } = fetchParams.controller;\n              if (connection.destroyed) {\n                abort(new DOMException("The operation was aborted.", "AbortError"));\n              } else {\n                fetchParams.controller.on("terminated", abort);\n                this.abort = connection.abort = abort;\n              }\n            },\n            onHeaders(status, headersList, resume, statusText) {\n              if (status < 200) {\n                return;\n              }\n              let codings = [];\n              let location = "";\n              const headers = new Headers3();\n              for (let n = 0; n < headersList.length; n += 2) {\n                const key = headersList[n + 0].toString("latin1");\n                const val = headersList[n + 1].toString("latin1");\n                if (key.toLowerCase() === "content-encoding") {\n                  codings = val.toLowerCase().split(",").map((x) => x.trim()).reverse();\n                } else if (key.toLowerCase() === "location") {\n                  location = val;\n                }\n                headers.append(key, val);\n              }\n              this.body = new Readable({ read: resume });\n              const decoders = [];\n              const willFollow = request.redirect === "follow" && location && redirectStatus.includes(status);\n              if (request.method !== "HEAD" && request.method !== "CONNECT" && !nullBodyStatus.includes(status) && !willFollow) {\n                for (const coding of codings) {\n                  if (coding === "x-gzip" || coding === "gzip") {\n                    decoders.push(zlib.createGunzip({\n                      // Be less strict when decoding compressed responses, since sometimes\n                      // servers send slightly invalid responses that are still accepted\n                      // by common browsers.\n                      // Always using Z_SYNC_FLUSH is what cURL does.\n                      flush: zlib.constants.Z_SYNC_FLUSH,\n                      finishFlush: zlib.constants.Z_SYNC_FLUSH\n                    }));\n                  } else if (coding === "deflate") {\n                    decoders.push(zlib.createInflate());\n                  } else if (coding === "br") {\n                    decoders.push(zlib.createBrotliDecompress());\n                  } else {\n                    decoders.length = 0;\n                    break;\n                  }\n                }\n              }\n              resolve({\n                status,\n                statusText,\n                headersList: headers[kHeadersList],\n                body: decoders.length ? pipeline(this.body, ...decoders, () => {\n                }) : this.body.on("error", () => {\n                })\n              });\n              return true;\n            },\n            onData(chunk) {\n              if (fetchParams.controller.dump) {\n                return;\n              }\n              const bytes = chunk;\n              timingInfo.encodedBodySize += bytes.byteLength;\n              return this.body.push(bytes);\n            },\n            onComplete() {\n              if (this.abort) {\n                fetchParams.controller.off("terminated", this.abort);\n              }\n              fetchParams.controller.ended = true;\n              this.body.push(null);\n            },\n            onError(error) {\n              if (this.abort) {\n                fetchParams.controller.off("terminated", this.abort);\n              }\n              this.body?.destroy(error);\n              fetchParams.controller.terminate(error);\n              reject(error);\n            },\n            onUpgrade(status, headersList, socket) {\n              if (status !== 101) {\n                return;\n              }\n              const headers = new Headers3();\n              for (let n = 0; n < headersList.length; n += 2) {\n                const key = headersList[n + 0].toString("latin1");\n                const val = headersList[n + 1].toString("latin1");\n                headers.append(key, val);\n              }\n              resolve({\n                status,\n                statusText: STATUS_CODES[status],\n                headersList: headers[kHeadersList],\n                socket\n              });\n              return true;\n            }\n          }\n        ));\n      }\n      __name(dispatch, "dispatch");\n    }\n    __name(httpNetworkFetch, "httpNetworkFetch");\n    module2.exports = {\n      fetch: fetch2,\n      Fetch,\n      fetching,\n      finalizeAndReportTiming\n    };\n  }\n});\n\n// ../../node_modules/.pnpm/undici@5.23.0/node_modules/undici/lib/websocket/constants.js\nvar require_constants3 = __commonJS({\n  "../../node_modules/.pnpm/undici@5.23.0/node_modules/undici/lib/websocket/constants.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    var uid = "258EAFA5-E914-47DA-95CA-C5AB0DC85B11";\n    var staticPropertyDescriptors = {\n      enumerable: true,\n      writable: false,\n      configurable: false\n    };\n    var states = {\n      CONNECTING: 0,\n      OPEN: 1,\n      CLOSING: 2,\n      CLOSED: 3\n    };\n    var opcodes = {\n      CONTINUATION: 0,\n      TEXT: 1,\n      BINARY: 2,\n      CLOSE: 8,\n      PING: 9,\n      PONG: 10\n    };\n    var maxUnsigned16Bit = 2 ** 16 - 1;\n    var parserStates = {\n      INFO: 0,\n      PAYLOADLENGTH_16: 2,\n      PAYLOADLENGTH_64: 3,\n      READ_DATA: 4\n    };\n    var emptyBuffer = Buffer.allocUnsafe(0);\n    module2.exports = {\n      uid,\n      staticPropertyDescriptors,\n      states,\n      opcodes,\n      maxUnsigned16Bit,\n      parserStates,\n      emptyBuffer\n    };\n  }\n});\n\n// ../../node_modules/.pnpm/undici@5.23.0/node_modules/undici/lib/websocket/symbols.js\nvar require_symbols3 = __commonJS({\n  "../../node_modules/.pnpm/undici@5.23.0/node_modules/undici/lib/websocket/symbols.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    module2.exports = {\n      kWebSocketURL: Symbol("url"),\n      kReadyState: Symbol("ready state"),\n      kController: Symbol("controller"),\n      kResponse: Symbol("response"),\n      kBinaryType: Symbol("binary type"),\n      kSentClose: Symbol("sent close"),\n      kReceivedClose: Symbol("received close"),\n      kByteParser: Symbol("byte parser")\n    };\n  }\n});\n\n// ../../node_modules/.pnpm/undici@5.23.0/node_modules/undici/lib/websocket/events.js\nvar require_events = __commonJS({\n  "../../node_modules/.pnpm/undici@5.23.0/node_modules/undici/lib/websocket/events.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    var { webidl } = require_webidl();\n    var { kEnumerableProperty } = require_util();\n    var { MessagePort } = require("worker_threads");\n    var _eventInit;\n    var _MessageEvent = class _MessageEvent extends Event {\n      constructor(type, eventInitDict = {}) {\n        webidl.argumentLengthCheck(arguments, 1, { header: "MessageEvent constructor" });\n        type = webidl.converters.DOMString(type);\n        eventInitDict = webidl.converters.MessageEventInit(eventInitDict);\n        super(type, eventInitDict);\n        __privateAdd(this, _eventInit, void 0);\n        __privateSet(this, _eventInit, eventInitDict);\n      }\n      get data() {\n        webidl.brandCheck(this, _MessageEvent);\n        return __privateGet(this, _eventInit).data;\n      }\n      get origin() {\n        webidl.brandCheck(this, _MessageEvent);\n        return __privateGet(this, _eventInit).origin;\n      }\n      get lastEventId() {\n        webidl.brandCheck(this, _MessageEvent);\n        return __privateGet(this, _eventInit).lastEventId;\n      }\n      get source() {\n        webidl.brandCheck(this, _MessageEvent);\n        return __privateGet(this, _eventInit).source;\n      }\n      get ports() {\n        webidl.brandCheck(this, _MessageEvent);\n        if (!Object.isFrozen(__privateGet(this, _eventInit).ports)) {\n          Object.freeze(__privateGet(this, _eventInit).ports);\n        }\n        return __privateGet(this, _eventInit).ports;\n      }\n      initMessageEvent(type, bubbles = false, cancelable = false, data = null, origin = "", lastEventId = "", source = null, ports = []) {\n        webidl.brandCheck(this, _MessageEvent);\n        webidl.argumentLengthCheck(arguments, 1, { header: "MessageEvent.initMessageEvent" });\n        return new _MessageEvent(type, {\n          bubbles,\n          cancelable,\n          data,\n          origin,\n          lastEventId,\n          source,\n          ports\n        });\n      }\n    };\n    _eventInit = new WeakMap();\n    __name(_MessageEvent, "MessageEvent");\n    var MessageEvent = _MessageEvent;\n    var _eventInit2;\n    var _CloseEvent = class _CloseEvent extends Event {\n      constructor(type, eventInitDict = {}) {\n        webidl.argumentLengthCheck(arguments, 1, { header: "CloseEvent constructor" });\n        type = webidl.converters.DOMString(type);\n        eventInitDict = webidl.converters.CloseEventInit(eventInitDict);\n        super(type, eventInitDict);\n        __privateAdd(this, _eventInit2, void 0);\n        __privateSet(this, _eventInit2, eventInitDict);\n      }\n      get wasClean() {\n        webidl.brandCheck(this, _CloseEvent);\n        return __privateGet(this, _eventInit2).wasClean;\n      }\n      get code() {\n        webidl.brandCheck(this, _CloseEvent);\n        return __privateGet(this, _eventInit2).code;\n      }\n      get reason() {\n        webidl.brandCheck(this, _CloseEvent);\n        return __privateGet(this, _eventInit2).reason;\n      }\n    };\n    _eventInit2 = new WeakMap();\n    __name(_CloseEvent, "CloseEvent");\n    var CloseEvent = _CloseEvent;\n    var _eventInit3;\n    var _ErrorEvent = class _ErrorEvent extends Event {\n      constructor(type, eventInitDict) {\n        webidl.argumentLengthCheck(arguments, 1, { header: "ErrorEvent constructor" });\n        super(type, eventInitDict);\n        __privateAdd(this, _eventInit3, void 0);\n        type = webidl.converters.DOMString(type);\n        eventInitDict = webidl.converters.ErrorEventInit(eventInitDict ?? {});\n        __privateSet(this, _eventInit3, eventInitDict);\n      }\n      get message() {\n        webidl.brandCheck(this, _ErrorEvent);\n        return __privateGet(this, _eventInit3).message;\n      }\n      get filename() {\n        webidl.brandCheck(this, _ErrorEvent);\n        return __privateGet(this, _eventInit3).filename;\n      }\n      get lineno() {\n        webidl.brandCheck(this, _ErrorEvent);\n        return __privateGet(this, _eventInit3).lineno;\n      }\n      get colno() {\n        webidl.brandCheck(this, _ErrorEvent);\n        return __privateGet(this, _eventInit3).colno;\n      }\n      get error() {\n        webidl.brandCheck(this, _ErrorEvent);\n        return __privateGet(this, _eventInit3).error;\n      }\n    };\n    _eventInit3 = new WeakMap();\n    __name(_ErrorEvent, "ErrorEvent");\n    var ErrorEvent = _ErrorEvent;\n    Object.defineProperties(MessageEvent.prototype, {\n      [Symbol.toStringTag]: {\n        value: "MessageEvent",\n        configurable: true\n      },\n      data: kEnumerableProperty,\n      origin: kEnumerableProperty,\n      lastEventId: kEnumerableProperty,\n      source: kEnumerableProperty,\n      ports: kEnumerableProperty,\n      initMessageEvent: kEnumerableProperty\n    });\n    Object.defineProperties(CloseEvent.prototype, {\n      [Symbol.toStringTag]: {\n        value: "CloseEvent",\n        configurable: true\n      },\n      reason: kEnumerableProperty,\n      code: kEnumerableProperty,\n      wasClean: kEnumerableProperty\n    });\n    Object.defineProperties(ErrorEvent.prototype, {\n      [Symbol.toStringTag]: {\n        value: "ErrorEvent",\n        configurable: true\n      },\n      message: kEnumerableProperty,\n      filename: kEnumerableProperty,\n      lineno: kEnumerableProperty,\n      colno: kEnumerableProperty,\n      error: kEnumerableProperty\n    });\n    webidl.converters.MessagePort = webidl.interfaceConverter(MessagePort);\n    webidl.converters["sequence<MessagePort>"] = webidl.sequenceConverter(\n      webidl.converters.MessagePort\n    );\n    var eventInit = [\n      {\n        key: "bubbles",\n        converter: webidl.converters.boolean,\n        defaultValue: false\n      },\n      {\n        key: "cancelable",\n        converter: webidl.converters.boolean,\n        defaultValue: false\n      },\n      {\n        key: "composed",\n        converter: webidl.converters.boolean,\n        defaultValue: false\n      }\n    ];\n    webidl.converters.MessageEventInit = webidl.dictionaryConverter([\n      ...eventInit,\n      {\n        key: "data",\n        converter: webidl.converters.any,\n        defaultValue: null\n      },\n      {\n        key: "origin",\n        converter: webidl.converters.USVString,\n        defaultValue: ""\n      },\n      {\n        key: "lastEventId",\n        converter: webidl.converters.DOMString,\n        defaultValue: ""\n      },\n      {\n        key: "source",\n        // Node doesn\'t implement WindowProxy or ServiceWorker, so the only\n        // valid value for source is a MessagePort.\n        converter: webidl.nullableConverter(webidl.converters.MessagePort),\n        defaultValue: null\n      },\n      {\n        key: "ports",\n        converter: webidl.converters["sequence<MessagePort>"],\n        get defaultValue() {\n          return [];\n        }\n      }\n    ]);\n    webidl.converters.CloseEventInit = webidl.dictionaryConverter([\n      ...eventInit,\n      {\n        key: "wasClean",\n        converter: webidl.converters.boolean,\n        defaultValue: false\n      },\n      {\n        key: "code",\n        converter: webidl.converters["unsigned short"],\n        defaultValue: 0\n      },\n      {\n        key: "reason",\n        converter: webidl.converters.USVString,\n        defaultValue: ""\n      }\n    ]);\n    webidl.converters.ErrorEventInit = webidl.dictionaryConverter([\n      ...eventInit,\n      {\n        key: "message",\n        converter: webidl.converters.DOMString,\n        defaultValue: ""\n      },\n      {\n        key: "filename",\n        converter: webidl.converters.USVString,\n        defaultValue: ""\n      },\n      {\n        key: "lineno",\n        converter: webidl.converters["unsigned long"],\n        defaultValue: 0\n      },\n      {\n        key: "colno",\n        converter: webidl.converters["unsigned long"],\n        defaultValue: 0\n      },\n      {\n        key: "error",\n        converter: webidl.converters.any\n      }\n    ]);\n    module2.exports = {\n      MessageEvent,\n      CloseEvent,\n      ErrorEvent\n    };\n  }\n});\n\n// ../../node_modules/.pnpm/undici@5.23.0/node_modules/undici/lib/websocket/util.js\nvar require_util3 = __commonJS({\n  "../../node_modules/.pnpm/undici@5.23.0/node_modules/undici/lib/websocket/util.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    var { kReadyState, kController, kResponse, kBinaryType, kWebSocketURL } = require_symbols3();\n    var { states, opcodes } = require_constants3();\n    var { MessageEvent, ErrorEvent } = require_events();\n    function isEstablished(ws) {\n      return ws[kReadyState] === states.OPEN;\n    }\n    __name(isEstablished, "isEstablished");\n    function isClosing(ws) {\n      return ws[kReadyState] === states.CLOSING;\n    }\n    __name(isClosing, "isClosing");\n    function isClosed(ws) {\n      return ws[kReadyState] === states.CLOSED;\n    }\n    __name(isClosed, "isClosed");\n    function fireEvent(e, target, eventConstructor = Event, eventInitDict) {\n      const event = new eventConstructor(e, eventInitDict);\n      target.dispatchEvent(event);\n    }\n    __name(fireEvent, "fireEvent");\n    function websocketMessageReceived(ws, type, data) {\n      if (ws[kReadyState] !== states.OPEN) {\n        return;\n      }\n      let dataForEvent;\n      if (type === opcodes.TEXT) {\n        try {\n          dataForEvent = new TextDecoder("utf-8", { fatal: true }).decode(data);\n        } catch {\n          failWebsocketConnection(ws, "Received invalid UTF-8 in text frame.");\n          return;\n        }\n      } else if (type === opcodes.BINARY) {\n        if (ws[kBinaryType] === "blob") {\n          dataForEvent = new Blob([data]);\n        } else {\n          dataForEvent = new Uint8Array(data).buffer;\n        }\n      }\n      fireEvent("message", ws, MessageEvent, {\n        origin: ws[kWebSocketURL].origin,\n        data: dataForEvent\n      });\n    }\n    __name(websocketMessageReceived, "websocketMessageReceived");\n    function isValidSubprotocol(protocol) {\n      if (protocol.length === 0) {\n        return false;\n      }\n      for (const char of protocol) {\n        const code = char.charCodeAt(0);\n        if (code < 33 || code > 126 || char === "(" || char === ")" || char === "<" || char === ">" || char === "@" || char === "," || char === ";" || char === ":" || char === "\\\\" || char === \'"\' || char === "/" || char === "[" || char === "]" || char === "?" || char === "=" || char === "{" || char === "}" || code === 32 || // SP\n        code === 9) {\n          return false;\n        }\n      }\n      return true;\n    }\n    __name(isValidSubprotocol, "isValidSubprotocol");\n    function isValidStatusCode(code) {\n      if (code >= 1e3 && code < 1015) {\n        return code !== 1004 && // reserved\n        code !== 1005 && // "MUST NOT be set as a status code"\n        code !== 1006;\n      }\n      return code >= 3e3 && code <= 4999;\n    }\n    __name(isValidStatusCode, "isValidStatusCode");\n    function failWebsocketConnection(ws, reason) {\n      const { [kController]: controller, [kResponse]: response } = ws;\n      controller.abort();\n      if (response?.socket && !response.socket.destroyed) {\n        response.socket.destroy();\n      }\n      if (reason) {\n        fireEvent("error", ws, ErrorEvent, {\n          error: new Error(reason)\n        });\n      }\n    }\n    __name(failWebsocketConnection, "failWebsocketConnection");\n    module2.exports = {\n      isEstablished,\n      isClosing,\n      isClosed,\n      fireEvent,\n      isValidSubprotocol,\n      isValidStatusCode,\n      failWebsocketConnection,\n      websocketMessageReceived\n    };\n  }\n});\n\n// ../../node_modules/.pnpm/undici@5.23.0/node_modules/undici/lib/websocket/connection.js\nvar require_connection = __commonJS({\n  "../../node_modules/.pnpm/undici@5.23.0/node_modules/undici/lib/websocket/connection.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    var { randomBytes, createHash } = require("crypto");\n    var diagnosticsChannel = require("diagnostics_channel");\n    var { uid, states } = require_constants3();\n    var {\n      kReadyState,\n      kSentClose,\n      kByteParser,\n      kReceivedClose\n    } = require_symbols3();\n    var { fireEvent, failWebsocketConnection } = require_util3();\n    var { CloseEvent } = require_events();\n    var { makeRequest } = require_request();\n    var { fetching } = require_fetch();\n    var { Headers: Headers3 } = require_headers();\n    var { getGlobalDispatcher: getGlobalDispatcher2 } = require_global2();\n    var { kHeadersList } = require_symbols2();\n    var channels = {};\n    channels.open = diagnosticsChannel.channel("undici:websocket:open");\n    channels.close = diagnosticsChannel.channel("undici:websocket:close");\n    channels.socketError = diagnosticsChannel.channel("undici:websocket:socket_error");\n    function establishWebSocketConnection(url, protocols, ws, onEstablish, options) {\n      const requestURL = url;\n      requestURL.protocol = url.protocol === "ws:" ? "http:" : "https:";\n      const request = makeRequest({\n        urlList: [requestURL],\n        serviceWorkers: "none",\n        referrer: "no-referrer",\n        mode: "websocket",\n        credentials: "include",\n        cache: "no-store",\n        redirect: "error"\n      });\n      if (options.headers) {\n        const headersList = new Headers3(options.headers)[kHeadersList];\n        request.headersList = headersList;\n      }\n      const keyValue = randomBytes(16).toString("base64");\n      request.headersList.append("sec-websocket-key", keyValue);\n      request.headersList.append("sec-websocket-version", "13");\n      for (const protocol of protocols) {\n        request.headersList.append("sec-websocket-protocol", protocol);\n      }\n      const permessageDeflate = "";\n      const controller = fetching({\n        request,\n        useParallelQueue: true,\n        dispatcher: options.dispatcher ?? getGlobalDispatcher2(),\n        processResponse(response) {\n          if (response.type === "error" || response.status !== 101) {\n            failWebsocketConnection(ws, "Received network error or non-101 status code.");\n            return;\n          }\n          if (protocols.length !== 0 && !response.headersList.get("Sec-WebSocket-Protocol")) {\n            failWebsocketConnection(ws, "Server did not respond with sent protocols.");\n            return;\n          }\n          if (response.headersList.get("Upgrade")?.toLowerCase() !== "websocket") {\n            failWebsocketConnection(ws, \'Server did not set Upgrade header to "websocket".\');\n            return;\n          }\n          if (response.headersList.get("Connection")?.toLowerCase() !== "upgrade") {\n            failWebsocketConnection(ws, \'Server did not set Connection header to "upgrade".\');\n            return;\n          }\n          const secWSAccept = response.headersList.get("Sec-WebSocket-Accept");\n          const digest = createHash("sha1").update(keyValue + uid).digest("base64");\n          if (secWSAccept !== digest) {\n            failWebsocketConnection(ws, "Incorrect hash received in Sec-WebSocket-Accept header.");\n            return;\n          }\n          const secExtension = response.headersList.get("Sec-WebSocket-Extensions");\n          if (secExtension !== null && secExtension !== permessageDeflate) {\n            failWebsocketConnection(ws, "Received different permessage-deflate than the one set.");\n            return;\n          }\n          const secProtocol = response.headersList.get("Sec-WebSocket-Protocol");\n          if (secProtocol !== null && secProtocol !== request.headersList.get("Sec-WebSocket-Protocol")) {\n            failWebsocketConnection(ws, "Protocol was not set in the opening handshake.");\n            return;\n          }\n          response.socket.on("data", onSocketData);\n          response.socket.on("close", onSocketClose);\n          response.socket.on("error", onSocketError);\n          if (channels.open.hasSubscribers) {\n            channels.open.publish({\n              address: response.socket.address(),\n              protocol: secProtocol,\n              extensions: secExtension\n            });\n          }\n          onEstablish(response);\n        }\n      });\n      return controller;\n    }\n    __name(establishWebSocketConnection, "establishWebSocketConnection");\n    function onSocketData(chunk) {\n      if (!this.ws[kByteParser].write(chunk)) {\n        this.pause();\n      }\n    }\n    __name(onSocketData, "onSocketData");\n    function onSocketClose() {\n      const { ws } = this;\n      const wasClean = ws[kSentClose] && ws[kReceivedClose];\n      let code = 1005;\n      let reason = "";\n      const result = ws[kByteParser].closingInfo;\n      if (result) {\n        code = result.code ?? 1005;\n        reason = result.reason;\n      } else if (!ws[kSentClose]) {\n        code = 1006;\n      }\n      ws[kReadyState] = states.CLOSED;\n      fireEvent("close", ws, CloseEvent, {\n        wasClean,\n        code,\n        reason\n      });\n      if (channels.close.hasSubscribers) {\n        channels.close.publish({\n          websocket: ws,\n          code,\n          reason\n        });\n      }\n    }\n    __name(onSocketClose, "onSocketClose");\n    function onSocketError(error) {\n      const { ws } = this;\n      ws[kReadyState] = states.CLOSING;\n      if (channels.socketError.hasSubscribers) {\n        channels.socketError.publish(error);\n      }\n      this.destroy();\n    }\n    __name(onSocketError, "onSocketError");\n    module2.exports = {\n      establishWebSocketConnection\n    };\n  }\n});\n\n// ../../node_modules/.pnpm/undici@5.23.0/node_modules/undici/lib/websocket/frame.js\nvar require_frame = __commonJS({\n  "../../node_modules/.pnpm/undici@5.23.0/node_modules/undici/lib/websocket/frame.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    var { randomBytes } = require("crypto");\n    var { maxUnsigned16Bit } = require_constants3();\n    var _WebsocketFrameSend = class _WebsocketFrameSend {\n      /**\n       * @param {Buffer|undefined} data\n       */\n      constructor(data) {\n        this.frameData = data;\n        this.maskKey = randomBytes(4);\n      }\n      createFrame(opcode) {\n        const bodyLength = this.frameData?.byteLength ?? 0;\n        let payloadLength = bodyLength;\n        let offset = 6;\n        if (bodyLength > maxUnsigned16Bit) {\n          offset += 8;\n          payloadLength = 127;\n        } else if (bodyLength > 125) {\n          offset += 2;\n          payloadLength = 126;\n        }\n        const buffer = Buffer.allocUnsafe(bodyLength + offset);\n        buffer[0] = buffer[1] = 0;\n        buffer[0] |= 128;\n        buffer[0] = (buffer[0] & 240) + opcode;\n        buffer[offset - 4] = this.maskKey[0];\n        buffer[offset - 3] = this.maskKey[1];\n        buffer[offset - 2] = this.maskKey[2];\n        buffer[offset - 1] = this.maskKey[3];\n        buffer[1] = payloadLength;\n        if (payloadLength === 126) {\n          buffer.writeUInt16BE(bodyLength, 2);\n        } else if (payloadLength === 127) {\n          buffer[2] = buffer[3] = 0;\n          buffer.writeUIntBE(bodyLength, 4, 6);\n        }\n        buffer[1] |= 128;\n        for (let i = 0; i < bodyLength; i++) {\n          buffer[offset + i] = this.frameData[i] ^ this.maskKey[i % 4];\n        }\n        return buffer;\n      }\n    };\n    __name(_WebsocketFrameSend, "WebsocketFrameSend");\n    var WebsocketFrameSend = _WebsocketFrameSend;\n    module2.exports = {\n      WebsocketFrameSend\n    };\n  }\n});\n\n// ../../node_modules/.pnpm/undici@5.23.0/node_modules/undici/lib/websocket/receiver.js\nvar require_receiver = __commonJS({\n  "../../node_modules/.pnpm/undici@5.23.0/node_modules/undici/lib/websocket/receiver.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    var { Writable } = require("stream");\n    var diagnosticsChannel = require("diagnostics_channel");\n    var { parserStates, opcodes, states, emptyBuffer } = require_constants3();\n    var { kReadyState, kSentClose, kResponse, kReceivedClose } = require_symbols3();\n    var { isValidStatusCode, failWebsocketConnection, websocketMessageReceived } = require_util3();\n    var { WebsocketFrameSend } = require_frame();\n    var channels = {};\n    channels.ping = diagnosticsChannel.channel("undici:websocket:ping");\n    channels.pong = diagnosticsChannel.channel("undici:websocket:pong");\n    var _buffers, _byteOffset, _state, _info, _fragments;\n    var _ByteParser = class _ByteParser extends Writable {\n      constructor(ws) {\n        super();\n        __privateAdd(this, _buffers, []);\n        __privateAdd(this, _byteOffset, 0);\n        __privateAdd(this, _state, parserStates.INFO);\n        __privateAdd(this, _info, {});\n        __privateAdd(this, _fragments, []);\n        this.ws = ws;\n      }\n      /**\n       * @param {Buffer} chunk\n       * @param {() => void} callback\n       */\n      _write(chunk, _, callback) {\n        __privateGet(this, _buffers).push(chunk);\n        __privateSet(this, _byteOffset, __privateGet(this, _byteOffset) + chunk.length);\n        this.run(callback);\n      }\n      /**\n       * Runs whenever a new chunk is received.\n       * Callback is called whenever there are no more chunks buffering,\n       * or not enough bytes are buffered to parse.\n       */\n      run(callback) {\n        while (true) {\n          if (__privateGet(this, _state) === parserStates.INFO) {\n            if (__privateGet(this, _byteOffset) < 2) {\n              return callback();\n            }\n            const buffer = this.consume(2);\n            __privateGet(this, _info).fin = (buffer[0] & 128) !== 0;\n            __privateGet(this, _info).opcode = buffer[0] & 15;\n            __privateGet(this, _info).originalOpcode ??= __privateGet(this, _info).opcode;\n            __privateGet(this, _info).fragmented = !__privateGet(this, _info).fin && __privateGet(this, _info).opcode !== opcodes.CONTINUATION;\n            if (__privateGet(this, _info).fragmented && __privateGet(this, _info).opcode !== opcodes.BINARY && __privateGet(this, _info).opcode !== opcodes.TEXT) {\n              failWebsocketConnection(this.ws, "Invalid frame type was fragmented.");\n              return;\n            }\n            const payloadLength = buffer[1] & 127;\n            if (payloadLength <= 125) {\n              __privateGet(this, _info).payloadLength = payloadLength;\n              __privateSet(this, _state, parserStates.READ_DATA);\n            } else if (payloadLength === 126) {\n              __privateSet(this, _state, parserStates.PAYLOADLENGTH_16);\n            } else if (payloadLength === 127) {\n              __privateSet(this, _state, parserStates.PAYLOADLENGTH_64);\n            }\n            if (__privateGet(this, _info).fragmented && payloadLength > 125) {\n              failWebsocketConnection(this.ws, "Fragmented frame exceeded 125 bytes.");\n              return;\n            } else if ((__privateGet(this, _info).opcode === opcodes.PING || __privateGet(this, _info).opcode === opcodes.PONG || __privateGet(this, _info).opcode === opcodes.CLOSE) && payloadLength > 125) {\n              failWebsocketConnection(this.ws, "Payload length for control frame exceeded 125 bytes.");\n              return;\n            } else if (__privateGet(this, _info).opcode === opcodes.CLOSE) {\n              if (payloadLength === 1) {\n                failWebsocketConnection(this.ws, "Received close frame with a 1-byte body.");\n                return;\n              }\n              const body = this.consume(payloadLength);\n              __privateGet(this, _info).closeInfo = this.parseCloseBody(false, body);\n              if (!this.ws[kSentClose]) {\n                const body2 = Buffer.allocUnsafe(2);\n                body2.writeUInt16BE(__privateGet(this, _info).closeInfo.code, 0);\n                const closeFrame = new WebsocketFrameSend(body2);\n                this.ws[kResponse].socket.write(\n                  closeFrame.createFrame(opcodes.CLOSE),\n                  (err) => {\n                    if (!err) {\n                      this.ws[kSentClose] = true;\n                    }\n                  }\n                );\n              }\n              this.ws[kReadyState] = states.CLOSING;\n              this.ws[kReceivedClose] = true;\n              this.end();\n              return;\n            } else if (__privateGet(this, _info).opcode === opcodes.PING) {\n              const body = this.consume(payloadLength);\n              if (!this.ws[kReceivedClose]) {\n                const frame = new WebsocketFrameSend(body);\n                this.ws[kResponse].socket.write(frame.createFrame(opcodes.PONG));\n                if (channels.ping.hasSubscribers) {\n                  channels.ping.publish({\n                    payload: body\n                  });\n                }\n              }\n              __privateSet(this, _state, parserStates.INFO);\n              if (__privateGet(this, _byteOffset) > 0) {\n                continue;\n              } else {\n                callback();\n                return;\n              }\n            } else if (__privateGet(this, _info).opcode === opcodes.PONG) {\n              const body = this.consume(payloadLength);\n              if (channels.pong.hasSubscribers) {\n                channels.pong.publish({\n                  payload: body\n                });\n              }\n              if (__privateGet(this, _byteOffset) > 0) {\n                continue;\n              } else {\n                callback();\n                return;\n              }\n            }\n          } else if (__privateGet(this, _state) === parserStates.PAYLOADLENGTH_16) {\n            if (__privateGet(this, _byteOffset) < 2) {\n              return callback();\n            }\n            const buffer = this.consume(2);\n            __privateGet(this, _info).payloadLength = buffer.readUInt16BE(0);\n            __privateSet(this, _state, parserStates.READ_DATA);\n          } else if (__privateGet(this, _state) === parserStates.PAYLOADLENGTH_64) {\n            if (__privateGet(this, _byteOffset) < 8) {\n              return callback();\n            }\n            const buffer = this.consume(8);\n            const upper = buffer.readUInt32BE(0);\n            if (upper > 2 ** 31 - 1) {\n              failWebsocketConnection(this.ws, "Received payload length > 2^31 bytes.");\n              return;\n            }\n            const lower = buffer.readUInt32BE(4);\n            __privateGet(this, _info).payloadLength = (upper << 8) + lower;\n            __privateSet(this, _state, parserStates.READ_DATA);\n          } else if (__privateGet(this, _state) === parserStates.READ_DATA) {\n            if (__privateGet(this, _byteOffset) < __privateGet(this, _info).payloadLength) {\n              return callback();\n            } else if (__privateGet(this, _byteOffset) >= __privateGet(this, _info).payloadLength) {\n              const body = this.consume(__privateGet(this, _info).payloadLength);\n              __privateGet(this, _fragments).push(body);\n              if (!__privateGet(this, _info).fragmented || __privateGet(this, _info).fin && __privateGet(this, _info).opcode === opcodes.CONTINUATION) {\n                const fullMessage = Buffer.concat(__privateGet(this, _fragments));\n                websocketMessageReceived(this.ws, __privateGet(this, _info).originalOpcode, fullMessage);\n                __privateSet(this, _info, {});\n                __privateGet(this, _fragments).length = 0;\n              }\n              __privateSet(this, _state, parserStates.INFO);\n            }\n          }\n          if (__privateGet(this, _byteOffset) > 0) {\n            continue;\n          } else {\n            callback();\n            break;\n          }\n        }\n      }\n      /**\n       * Take n bytes from the buffered Buffers\n       * @param {number} n\n       * @returns {Buffer|null}\n       */\n      consume(n) {\n        if (n > __privateGet(this, _byteOffset)) {\n          return null;\n        } else if (n === 0) {\n          return emptyBuffer;\n        }\n        if (__privateGet(this, _buffers)[0].length === n) {\n          __privateSet(this, _byteOffset, __privateGet(this, _byteOffset) - __privateGet(this, _buffers)[0].length);\n          return __privateGet(this, _buffers).shift();\n        }\n        const buffer = Buffer.allocUnsafe(n);\n        let offset = 0;\n        while (offset !== n) {\n          const next = __privateGet(this, _buffers)[0];\n          const { length } = next;\n          if (length + offset === n) {\n            buffer.set(__privateGet(this, _buffers).shift(), offset);\n            break;\n          } else if (length + offset > n) {\n            buffer.set(next.subarray(0, n - offset), offset);\n            __privateGet(this, _buffers)[0] = next.subarray(n - offset);\n            break;\n          } else {\n            buffer.set(__privateGet(this, _buffers).shift(), offset);\n            offset += next.length;\n          }\n        }\n        __privateSet(this, _byteOffset, __privateGet(this, _byteOffset) - n);\n        return buffer;\n      }\n      parseCloseBody(onlyCode, data) {\n        let code;\n        if (data.length >= 2) {\n          code = data.readUInt16BE(0);\n        }\n        if (onlyCode) {\n          if (!isValidStatusCode(code)) {\n            return null;\n          }\n          return { code };\n        }\n        let reason = data.subarray(2);\n        if (reason[0] === 239 && reason[1] === 187 && reason[2] === 191) {\n          reason = reason.subarray(3);\n        }\n        if (code !== void 0 && !isValidStatusCode(code)) {\n          return null;\n        }\n        try {\n          reason = new TextDecoder("utf-8", { fatal: true }).decode(reason);\n        } catch {\n          return null;\n        }\n        return { code, reason };\n      }\n      get closingInfo() {\n        return __privateGet(this, _info).closeInfo;\n      }\n    };\n    _buffers = new WeakMap();\n    _byteOffset = new WeakMap();\n    _state = new WeakMap();\n    _info = new WeakMap();\n    _fragments = new WeakMap();\n    __name(_ByteParser, "ByteParser");\n    var ByteParser = _ByteParser;\n    module2.exports = {\n      ByteParser\n    };\n  }\n});\n\n// ../../node_modules/.pnpm/undici@5.23.0/node_modules/undici/lib/websocket/websocket.js\nvar require_websocket = __commonJS({\n  "../../node_modules/.pnpm/undici@5.23.0/node_modules/undici/lib/websocket/websocket.js"(exports, module2) {\n    "use strict";\n    init_define_process();\n    var { webidl } = require_webidl();\n    var { DOMException } = require_constants();\n    var { URLSerializer } = require_dataURL();\n    var { staticPropertyDescriptors, states, opcodes, emptyBuffer } = require_constants3();\n    var {\n      kWebSocketURL,\n      kReadyState,\n      kController,\n      kBinaryType,\n      kResponse,\n      kSentClose,\n      kByteParser\n    } = require_symbols3();\n    var { isEstablished, isClosing, isValidSubprotocol, failWebsocketConnection, fireEvent } = require_util3();\n    var { establishWebSocketConnection } = require_connection();\n    var { WebsocketFrameSend } = require_frame();\n    var { ByteParser } = require_receiver();\n    var { kEnumerableProperty, isBlobLike } = require_util();\n    var { getGlobalDispatcher: getGlobalDispatcher2 } = require_global2();\n    var { types } = require("util");\n    var experimentalWarned = false;\n    var _events, _bufferedAmount, _protocol, _extensions, _onConnectionEstablished, onConnectionEstablished_fn;\n    var _WebSocket = class _WebSocket extends EventTarget {\n      /**\n       * @param {string} url\n       * @param {string|string[]} protocols\n       */\n      constructor(url, protocols = []) {\n        super();\n        /**\n         * @see https://websockets.spec.whatwg.org/#feedback-from-the-protocol\n         */\n        __privateAdd(this, _onConnectionEstablished);\n        __privateAdd(this, _events, {\n          open: null,\n          error: null,\n          close: null,\n          message: null\n        });\n        __privateAdd(this, _bufferedAmount, 0);\n        __privateAdd(this, _protocol, "");\n        __privateAdd(this, _extensions, "");\n        webidl.argumentLengthCheck(arguments, 1, { header: "WebSocket constructor" });\n        if (!experimentalWarned) {\n          experimentalWarned = true;\n          define_process_default.emitWarning("WebSockets are experimental, expect them to change at any time.", {\n            code: "UNDICI-WS"\n          });\n        }\n        const options = webidl.converters["DOMString or sequence<DOMString> or WebSocketInit"](protocols);\n        url = webidl.converters.USVString(url);\n        protocols = options.protocols;\n        let urlRecord;\n        try {\n          urlRecord = new URL(url);\n        } catch (e) {\n          throw new DOMException(e, "SyntaxError");\n        }\n        if (urlRecord.protocol !== "ws:" && urlRecord.protocol !== "wss:") {\n          throw new DOMException(\n            `Expected a ws: or wss: protocol, got ${urlRecord.protocol}`,\n            "SyntaxError"\n          );\n        }\n        if (urlRecord.hash) {\n          throw new DOMException("Got fragment", "SyntaxError");\n        }\n        if (typeof protocols === "string") {\n          protocols = [protocols];\n        }\n        if (protocols.length !== new Set(protocols.map((p) => p.toLowerCase())).size) {\n          throw new DOMException("Invalid Sec-WebSocket-Protocol value", "SyntaxError");\n        }\n        if (protocols.length > 0 && !protocols.every((p) => isValidSubprotocol(p))) {\n          throw new DOMException("Invalid Sec-WebSocket-Protocol value", "SyntaxError");\n        }\n        this[kWebSocketURL] = urlRecord;\n        this[kController] = establishWebSocketConnection(\n          urlRecord,\n          protocols,\n          this,\n          (response) => __privateMethod(this, _onConnectionEstablished, onConnectionEstablished_fn).call(this, response),\n          options\n        );\n        this[kReadyState] = _WebSocket.CONNECTING;\n        this[kBinaryType] = "blob";\n      }\n      /**\n       * @see https://websockets.spec.whatwg.org/#dom-websocket-close\n       * @param {number|undefined} code\n       * @param {string|undefined} reason\n       */\n      close(code = void 0, reason = void 0) {\n        webidl.brandCheck(this, _WebSocket);\n        if (code !== void 0) {\n          code = webidl.converters["unsigned short"](code, { clamp: true });\n        }\n        if (reason !== void 0) {\n          reason = webidl.converters.USVString(reason);\n        }\n        if (code !== void 0) {\n          if (code !== 1e3 && (code < 3e3 || code > 4999)) {\n            throw new DOMException("invalid code", "InvalidAccessError");\n          }\n        }\n        let reasonByteLength = 0;\n        if (reason !== void 0) {\n          reasonByteLength = Buffer.byteLength(reason);\n          if (reasonByteLength > 123) {\n            throw new DOMException(\n              `Reason must be less than 123 bytes; received ${reasonByteLength}`,\n              "SyntaxError"\n            );\n          }\n        }\n        if (this[kReadyState] === _WebSocket.CLOSING || this[kReadyState] === _WebSocket.CLOSED) {\n        } else if (!isEstablished(this)) {\n          failWebsocketConnection(this, "Connection was closed before it was established.");\n          this[kReadyState] = _WebSocket.CLOSING;\n        } else if (!isClosing(this)) {\n          const frame = new WebsocketFrameSend();\n          if (code !== void 0 && reason === void 0) {\n            frame.frameData = Buffer.allocUnsafe(2);\n            frame.frameData.writeUInt16BE(code, 0);\n          } else if (code !== void 0 && reason !== void 0) {\n            frame.frameData = Buffer.allocUnsafe(2 + reasonByteLength);\n            frame.frameData.writeUInt16BE(code, 0);\n            frame.frameData.write(reason, 2, "utf-8");\n          } else {\n            frame.frameData = emptyBuffer;\n          }\n          const socket = this[kResponse].socket;\n          socket.write(frame.createFrame(opcodes.CLOSE), (err) => {\n            if (!err) {\n              this[kSentClose] = true;\n            }\n          });\n          this[kReadyState] = states.CLOSING;\n        } else {\n          this[kReadyState] = _WebSocket.CLOSING;\n        }\n      }\n      /**\n       * @see https://websockets.spec.whatwg.org/#dom-websocket-send\n       * @param {NodeJS.TypedArray|ArrayBuffer|Blob|string} data\n       */\n      send(data) {\n        webidl.brandCheck(this, _WebSocket);\n        webidl.argumentLengthCheck(arguments, 1, { header: "WebSocket.send" });\n        data = webidl.converters.WebSocketSendData(data);\n        if (this[kReadyState] === _WebSocket.CONNECTING) {\n          throw new DOMException("Sent before connected.", "InvalidStateError");\n        }\n        if (!isEstablished(this) || isClosing(this)) {\n          return;\n        }\n        const socket = this[kResponse].socket;\n        if (typeof data === "string") {\n          const value = Buffer.from(data);\n          const frame = new WebsocketFrameSend(value);\n          const buffer = frame.createFrame(opcodes.TEXT);\n          __privateSet(this, _bufferedAmount, __privateGet(this, _bufferedAmount) + value.byteLength);\n          socket.write(buffer, () => {\n            __privateSet(this, _bufferedAmount, __privateGet(this, _bufferedAmount) - value.byteLength);\n          });\n        } else if (types.isArrayBuffer(data)) {\n          const value = Buffer.from(data);\n          const frame = new WebsocketFrameSend(value);\n          const buffer = frame.createFrame(opcodes.BINARY);\n          __privateSet(this, _bufferedAmount, __privateGet(this, _bufferedAmount) + value.byteLength);\n          socket.write(buffer, () => {\n            __privateSet(this, _bufferedAmount, __privateGet(this, _bufferedAmount) - value.byteLength);\n          });\n        } else if (ArrayBuffer.isView(data)) {\n          const ab = Buffer.from(data, data.byteOffset, data.byteLength);\n          const frame = new WebsocketFrameSend(ab);\n          const buffer = frame.createFrame(opcodes.BINARY);\n          __privateSet(this, _bufferedAmount, __privateGet(this, _bufferedAmount) + ab.byteLength);\n          socket.write(buffer, () => {\n            __privateSet(this, _bufferedAmount, __privateGet(this, _bufferedAmount) - ab.byteLength);\n          });\n        } else if (isBlobLike(data)) {\n          const frame = new WebsocketFrameSend();\n          data.arrayBuffer().then((ab) => {\n            const value = Buffer.from(ab);\n            frame.frameData = value;\n            const buffer = frame.createFrame(opcodes.BINARY);\n            __privateSet(this, _bufferedAmount, __privateGet(this, _bufferedAmount) + value.byteLength);\n            socket.write(buffer, () => {\n              __privateSet(this, _bufferedAmount, __privateGet(this, _bufferedAmount) - value.byteLength);\n            });\n          });\n        }\n      }\n      get readyState() {\n        webidl.brandCheck(this, _WebSocket);\n        return this[kReadyState];\n      }\n      get bufferedAmount() {\n        webidl.brandCheck(this, _WebSocket);\n        return __privateGet(this, _bufferedAmount);\n      }\n      get url() {\n        webidl.brandCheck(this, _WebSocket);\n        return URLSerializer(this[kWebSocketURL]);\n      }\n      get extensions() {\n        webidl.brandCheck(this, _WebSocket);\n        return __privateGet(this, _extensions);\n      }\n      get protocol() {\n        webidl.brandCheck(this, _WebSocket);\n        return __privateGet(this, _protocol);\n      }\n      get onopen() {\n        webidl.brandCheck(this, _WebSocket);\n        return __privateGet(this, _events).open;\n      }\n      set onopen(fn) {\n        webidl.brandCheck(this, _WebSocket);\n        if (__privateGet(this, _events).open) {\n          this.removeEventListener("open", __privateGet(this, _events).open);\n        }\n        if (typeof fn === "function") {\n          __privateGet(this, _events).open = fn;\n          this.addEventListener("open", fn);\n        } else {\n          __privateGet(this, _events).open = null;\n        }\n      }\n      get onerror() {\n        webidl.brandCheck(this, _WebSocket);\n        return __privateGet(this, _events).error;\n      }\n      set onerror(fn) {\n        webidl.brandCheck(this, _WebSocket);\n        if (__privateGet(this, _events).error) {\n          this.removeEventListener("error", __privateGet(this, _events).error);\n        }\n        if (typeof fn === "function") {\n          __privateGet(this, _events).error = fn;\n          this.addEventListener("error", fn);\n        } else {\n          __privateGet(this, _events).error = null;\n        }\n      }\n      get onclose() {\n        webidl.brandCheck(this, _WebSocket);\n        return __privateGet(this, _events).close;\n      }\n      set onclose(fn) {\n        webidl.brandCheck(this, _WebSocket);\n        if (__privateGet(this, _events).close) {\n          this.removeEventListener("close", __privateGet(this, _events).close);\n        }\n        if (typeof fn === "function") {\n          __privateGet(this, _events).close = fn;\n          this.addEventListener("close", fn);\n        } else {\n          __privateGet(this, _events).close = null;\n        }\n      }\n      get onmessage() {\n        webidl.brandCheck(this, _WebSocket);\n        return __privateGet(this, _events).message;\n      }\n      set onmessage(fn) {\n        webidl.brandCheck(this, _WebSocket);\n        if (__privateGet(this, _events).message) {\n          this.removeEventListener("message", __privateGet(this, _events).message);\n        }\n        if (typeof fn === "function") {\n          __privateGet(this, _events).message = fn;\n          this.addEventListener("message", fn);\n        } else {\n          __privateGet(this, _events).message = null;\n        }\n      }\n      get binaryType() {\n        webidl.brandCheck(this, _WebSocket);\n        return this[kBinaryType];\n      }\n      set binaryType(type) {\n        webidl.brandCheck(this, _WebSocket);\n        if (type !== "blob" && type !== "arraybuffer") {\n          this[kBinaryType] = "blob";\n        } else {\n          this[kBinaryType] = type;\n        }\n      }\n    };\n    _events = new WeakMap();\n    _bufferedAmount = new WeakMap();\n    _protocol = new WeakMap();\n    _extensions = new WeakMap();\n    _onConnectionEstablished = new WeakSet();\n    onConnectionEstablished_fn = /* @__PURE__ */ __name(function(response) {\n      this[kResponse] = response;\n      const parser = new ByteParser(this);\n      parser.on("drain", /* @__PURE__ */ __name(function onParserDrain() {\n        this.ws[kResponse].socket.resume();\n      }, "onParserDrain"));\n      response.socket.ws = this;\n      this[kByteParser] = parser;\n      this[kReadyState] = states.OPEN;\n      const extensions = response.headersList.get("sec-websocket-extensions");\n      if (extensions !== null) {\n        __privateSet(this, _extensions, extensions);\n      }\n      const protocol = response.headersList.get("sec-websocket-protocol");\n      if (protocol !== null) {\n        __privateSet(this, _protocol, protocol);\n      }\n      fireEvent("open", this);\n    }, "#onConnectionEstablished");\n    __name(_WebSocket, "WebSocket");\n    var WebSocket2 = _WebSocket;\n    WebSocket2.CONNECTING = WebSocket2.prototype.CONNECTING = states.CONNECTING;\n    WebSocket2.OPEN = WebSocket2.prototype.OPEN = states.OPEN;\n    WebSocket2.CLOSING = WebSocket2.prototype.CLOSING = states.CLOSING;\n    WebSocket2.CLOSED = WebSocket2.prototype.CLOSED = states.CLOSED;\n    Object.defineProperties(WebSocket2.prototype, {\n      CONNECTING: staticPropertyDescriptors,\n      OPEN: staticPropertyDescriptors,\n      CLOSING: staticPropertyDescriptors,\n      CLOSED: staticPropertyDescriptors,\n      url: kEnumerableProperty,\n      readyState: kEnumerableProperty,\n      bufferedAmount: kEnumerableProperty,\n      onopen: kEnumerableProperty,\n      onerror: kEnumerableProperty,\n      onclose: kEnumerableProperty,\n      close: kEnumerableProperty,\n      onmessage: kEnumerableProperty,\n      binaryType: kEnumerableProperty,\n      send: kEnumerableProperty,\n      extensions: kEnumerableProperty,\n      protocol: kEnumerableProperty,\n      [Symbol.toStringTag]: {\n        value: "WebSocket",\n        writable: false,\n        enumerable: false,\n        configurable: true\n      }\n    });\n    Object.defineProperties(WebSocket2, {\n      CONNECTING: staticPropertyDescriptors,\n      OPEN: staticPropertyDescriptors,\n      CLOSING: staticPropertyDescriptors,\n      CLOSED: staticPropertyDescriptors\n    });\n    webidl.converters["sequence<DOMString>"] = webidl.sequenceConverter(\n      webidl.converters.DOMString\n    );\n    webidl.converters["DOMString or sequence<DOMString>"] = function(V) {\n      if (webidl.util.Type(V) === "Object" && Symbol.iterator in V) {\n        return webidl.converters["sequence<DOMString>"](V);\n      }\n      return webidl.converters.DOMString(V);\n    };\n    webidl.converters.WebSocketInit = webidl.dictionaryConverter([\n      {\n        key: "protocols",\n        converter: webidl.converters["DOMString or sequence<DOMString>"],\n        get defaultValue() {\n          return [];\n        }\n      },\n      {\n        key: "dispatcher",\n        converter: (V) => V,\n        get defaultValue() {\n          return getGlobalDispatcher2();\n        }\n      },\n      {\n        key: "headers",\n        converter: webidl.nullableConverter(webidl.converters.HeadersInit)\n      }\n    ]);\n    webidl.converters["DOMString or sequence<DOMString> or WebSocketInit"] = function(V) {\n      if (webidl.util.Type(V) === "Object" && !(Symbol.iterator in V)) {\n        return webidl.converters.WebSocketInit(V);\n      }\n      return { protocols: webidl.converters["DOMString or sequence<DOMString>"](V) };\n    };\n    webidl.converters.WebSocketSendData = function(V) {\n      if (webidl.util.Type(V) === "Object") {\n        if (isBlobLike(V)) {\n          return webidl.converters.Blob(V, { strict: false });\n        }\n        if (ArrayBuffer.isView(V) || types.isAnyArrayBuffer(V)) {\n          return webidl.converters.BufferSource(V);\n        }\n      }\n      return webidl.converters.USVString(V);\n    };\n    module2.exports = {\n      WebSocket: WebSocket2\n    };\n  }\n});\n\n// src/primitives/fetch.js\nvar fetch_exports = {};\n__export(fetch_exports, {\n  File: () => import_file.File,\n  FormData: () => import_formdata.FormData,\n  Headers: () => Headers2,\n  Request: () => Request,\n  Response: () => Response2,\n  WebSocket: () => import_websocket.WebSocket,\n  fetch: () => fetch,\n  getGlobalDispatcher: () => getGlobalDispatcher,\n  setGlobalDispatcher: () => setGlobalDispatcher\n});\nmodule.exports = __toCommonJS(fetch_exports);\ninit_define_process();\nvar FetchSymbols = __toESM(require_symbols());\nvar HeadersModule = __toESM(require_headers());\nvar ResponseModule = __toESM(require_response());\nvar UtilModule = __toESM(require_util2());\nvar WebIDLModule = __toESM(require_webidl());\nvar import_request = __toESM(require_request());\nvar import_fetch = __toESM(require_fetch());\nvar import_agent = __toESM(require_agent());\nvar import_formdata = __toESM(require_formdata());\nvar import_file = __toESM(require_file());\nvar import_websocket = __toESM(require_websocket());\ndefine_process_default.nextTick = setImmediate;\ndefine_process_default.emitWarning = () => {\n};\nvar _Request = class _Request extends import_request.Request {\n  constructor(input, init) {\n    super(input, addDuplexToInit(init));\n  }\n};\n__name(_Request, "Request");\nvar Request = _Request;\nvar __entries = HeadersModule.Headers.prototype.entries;\nHeadersModule.Headers.prototype.entries = function* () {\n  let sentSetCookie = false;\n  for (const [key, value] of __entries.call(this)) {\n    if (key === "set-cookie") {\n      if (sentSetCookie) {\n        continue;\n      }\n      sentSetCookie = true;\n      const cookies = this.getSetCookie();\n      yield [key, cookies.join(", ")];\n    } else {\n      yield [key, value];\n    }\n  }\n};\nHeadersModule.Headers.prototype[Symbol.iterator] = HeadersModule.Headers.prototype.entries;\nHeadersModule.Headers.prototype.values = function* () {\n  for (const [, value] of __entries.call(this)) {\n    yield value;\n  }\n};\nHeadersModule.Headers.prototype.getAll = function(name) {\n  const _name = normalizeAndValidateHeaderName(name, "Headers.getAll");\n  if (_name !== "set-cookie") {\n    throw new Error(`getAll can only be used with \'set-cookie\'`);\n  }\n  return this.getSetCookie();\n};\nvar __error = ResponseModule.Response.error;\nResponseModule.Response.error = function(...args) {\n  const response = __error.call(this, ...args);\n  response[FetchSymbols.kHeaders][FetchSymbols.kGuard] = "response";\n  return response;\n};\nfunction normalizeAndValidateHeaderName(potentialName, errorPrefix) {\n  const normalizedName = potentialName.toLowerCase();\n  if (UtilModule.isValidHeaderName(normalizedName)) {\n    return normalizedName;\n  }\n  WebIDLModule.errors.invalidArgument({\n    prefix: errorPrefix,\n    value: normalizedName,\n    type: "header name"\n  });\n}\n__name(normalizeAndValidateHeaderName, "normalizeAndValidateHeaderName");\nvar globalDispatcher = new import_agent.default();\nfunction getGlobalDispatcher() {\n  return globalDispatcher;\n}\n__name(getGlobalDispatcher, "getGlobalDispatcher");\nfunction setGlobalDispatcher(agent) {\n  if (!agent || typeof agent.dispatch !== "function") {\n    throw new InvalidArgumentError("Argument agent must implement Agent");\n  }\n  globalDispatcher = agent;\n}\n__name(setGlobalDispatcher, "setGlobalDispatcher");\nfunction addDuplexToInit(init) {\n  return typeof init === "undefined" || typeof init === "object" && init.duplex === void 0 ? { duplex: "half", ...init } : init;\n}\n__name(addDuplexToInit, "addDuplexToInit");\nasync function fetch(info, init) {\n  init = addDuplexToInit(init);\n  const res = await import_fetch.fetch.call(getGlobalDispatcher(), info, init);\n  const response = new Response2(res.body, res);\n  Object.defineProperty(response, "url", { value: res.url });\n  return response;\n}\n__name(fetch, "fetch");\nvar Headers2 = HeadersModule.Headers;\nvar Response2 = ResponseModule.Response;\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  File,\n  FormData,\n  Headers,\n  Request,\n  Response,\n  WebSocket,\n  fetch,\n  getGlobalDispatcher,\n  setGlobalDispatcher\n});\n';
      }, 373: (module, __unused_webpack_exports, __nccwpck_require__) => {
        "use strict";
        var __create = Object.create;
        var __defProp = Object.defineProperty;
        var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
        var __getOwnPropNames = Object.getOwnPropertyNames;
        var __getProtoOf = Object.getPrototypeOf;
        var __hasOwnProp = Object.prototype.hasOwnProperty;
        var __name = (e, n) => __defProp(e, "name", { value: n, configurable: true });
        var __export = (e, n) => {
          for (var A in n)
            __defProp(e, A, { get: n[A], enumerable: true });
        };
        var __copyProps = (e, n, A, t) => {
          if (n && typeof n === "object" || typeof n === "function") {
            for (let r of __getOwnPropNames(n))
              if (!__hasOwnProp.call(e, r) && r !== A)
                __defProp(e, r, { get: () => n[r], enumerable: !(t = __getOwnPropDesc(n, r)) || t.enumerable });
          }
          return e;
        };
        var __toESM = (e, n, A) => (A = e != null ? __create(__getProtoOf(e)) : {}, __copyProps(n || !e || !e.__esModule ? __defProp(A, "default", { value: e, enumerable: true }) : A, e));
        var __toCommonJS = (e) => __copyProps(__defProp({}, "__esModule", { value: true }), e);
        var load_exports = {};
        __export(load_exports, { load: () => load });
        module.exports = __toCommonJS(load_exports);
        var import_module = __toESM(__nccwpck_require__(188));
        var import_crypto = __toESM(__nccwpck_require__(113));
        var import_web = __nccwpck_require__(356);
        function requireWithFakeGlobalScope(params) {
          const getModuleCode = `(function(module,exports,require,globalThis,${Object.keys(params.scopedContext).join(",")}) {${params.sourceCode}
})`;
          const module = { exports: {}, loaded: false, id: params.id };
          const moduleRequire = (import_module.default.createRequire || import_module.default.createRequireFromPath)(__filename);
          function throwingRequire(e) {
            if (e.startsWith("./")) {
              const n = e.replace(/^\.\//, "");
              if (!params.cache || !params.cache.has(n)) {
                throw new Error(`Cannot find module '${n}'`);
              }
              return params.cache.get(n).exports;
            }
            return moduleRequire(e);
          }
          __name(throwingRequire, "throwingRequire");
          throwingRequire.resolve = moduleRequire.resolve.bind(moduleRequire);
          eval(getModuleCode)(module, module.exports, throwingRequire, params.context, ...Object.values(params.scopedContext));
          return module.exports;
        }
        __name(requireWithFakeGlobalScope, "requireWithFakeGlobalScope");
        function load(e = {}) {
          const n = {};
          const A = requireWithFakeGlobalScope({ context: n, id: "encoding.js", sourceCode: __nccwpck_require__(319), scopedContext: e });
          assign(n, { TextDecoder, TextEncoder, TextEncoderStream: import_web.TextEncoderStream, TextDecoderStream: import_web.TextDecoderStream, atob: A.atob, btoa: A.btoa });
          const t = requireWithFakeGlobalScope({ context: n, id: "console.js", sourceCode: __nccwpck_require__(638), scopedContext: e });
          assign(n, { console: t.console });
          const r = requireWithFakeGlobalScope({ context: n, id: "timers.js", sourceCode: __nccwpck_require__(66), scopedContext: e });
          assign(n, { setTimeout: r.setTimeout, setInterval: r.setInterval });
          const s = requireWithFakeGlobalScope({ context: n, id: "events.js", sourceCode: __nccwpck_require__(921), scopedContext: e });
          assign(n, { Event, EventTarget, FetchEvent: s.FetchEvent, PromiseRejectionEvent: s.PromiseRejectionEvent });
          const o = { ReadableStream: import_web.ReadableStream, ReadableStreamBYOBReader: import_web.ReadableStreamBYOBReader, ReadableStreamDefaultReader: import_web.ReadableStreamDefaultReader, TransformStream: import_web.TransformStream, WritableStream: import_web.WritableStream, WritableStreamDefaultWriter: import_web.WritableStreamDefaultWriter };
          assign(n, o);
          const i = requireWithFakeGlobalScope({ context: n, id: "abort-controller.js", sourceCode: __nccwpck_require__(45), scopedContext: { ...e } });
          assign(n, { AbortController: i.AbortController, AbortSignal: i.AbortSignal, DOMException: i.DOMException });
          const a = requireWithFakeGlobalScope({ context: n, id: "url.js", sourceCode: __nccwpck_require__(537), scopedContext: { ...e } });
          assign(n, { URL, URLSearchParams, URLPattern: a.URLPattern });
          const l = (() => {
            if (typeof e.Blob === "function") {
              return { Blob: e.Blob };
            }
            if (typeof Blob === "function") {
              return { Blob };
            }
            const A2 = { ...o, ...e };
            const t2 = { ...A2, Blob: void 0 };
            Object.setPrototypeOf(t2, globalThis);
            A2.global = t2;
            return requireWithFakeGlobalScope({ context: n, id: "blob.js", sourceCode: __nccwpck_require__(153), scopedContext: A2 });
          })();
          assign(n, { Blob: l.Blob });
          const c = requireWithFakeGlobalScope({ id: "structured-clone.js", context: n, sourceCode: __nccwpck_require__(402), scopedContext: { ...o, ...e } });
          assign(n, { structuredClone: c.structuredClone });
          const E = requireWithFakeGlobalScope({ context: n, id: "fetch.js", sourceCode: __nccwpck_require__(634), cache: /* @__PURE__ */ new Map([["abort-controller", { exports: i }], ["streams", { exports: o }]]), scopedContext: { global: { ...e }, ...e, ...a, ...i, ...s, ...o, structuredClone: n.structuredClone } });
          assign(n, { fetch: E.fetch, File: E.File, FormData: E.FormData, Headers: E.Headers, Request: E.Request, Response: E.Response, WebSocket: E.WebSocket });
          const g = getCrypto(n, e);
          assign(n, { crypto: g.crypto, Crypto: g.Crypto, CryptoKey: g.CryptoKey, SubtleCrypto: g.SubtleCrypto });
          return n;
        }
        __name(load, "load");
        function getCrypto(e, n) {
          if (typeof SubtleCrypto !== "undefined" || n.SubtleCrypto) {
            return { crypto: n.crypto || globalThis.crypto, Crypto: n.Crypto || globalThis.Crypto, CryptoKey: n.CryptoKey || globalThis.CryptoKey, SubtleCrypto: n.SubtleCrypto || globalThis.SubtleCrypto };
          } else if (import_crypto.default.webcrypto) {
            const e2 = import_crypto.default.webcrypto;
            return { crypto: e2, Crypto: e2.constructor, CryptoKey: e2.CryptoKey, SubtleCrypto: e2.subtle.constructor };
          }
          return requireWithFakeGlobalScope({ context: e, id: "crypto.js", sourceCode: __nccwpck_require__(827), scopedContext: { ...n } });
        }
        __name(getCrypto, "getCrypto");
        function assign(e, n) {
          Object.assign(e, n);
        }
        __name(assign, "assign");
      }, 402: (e) => {
        e.exports = '"use strict";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value) => __defProp(target, "name", { value, configurable: true });\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === "object" || typeof from === "function") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);\n\n// src/primitives/structured-clone.js\nvar structured_clone_exports = {};\n__export(structured_clone_exports, {\n  structuredClone: () => structuredClone2\n});\nmodule.exports = __toCommonJS(structured_clone_exports);\n\n// ../../node_modules/.pnpm/@ungap+structured-clone@1.2.0/node_modules/@ungap/structured-clone/esm/types.js\nvar VOID = -1;\nvar PRIMITIVE = 0;\nvar ARRAY = 1;\nvar OBJECT = 2;\nvar DATE = 3;\nvar REGEXP = 4;\nvar MAP = 5;\nvar SET = 6;\nvar ERROR = 7;\nvar BIGINT = 8;\n\n// ../../node_modules/.pnpm/@ungap+structured-clone@1.2.0/node_modules/@ungap/structured-clone/esm/deserialize.js\nvar env = typeof self === "object" ? self : globalThis;\nvar deserializer = /* @__PURE__ */ __name(($, _) => {\n  const as = /* @__PURE__ */ __name((out, index) => {\n    $.set(index, out);\n    return out;\n  }, "as");\n  const unpair = /* @__PURE__ */ __name((index) => {\n    if ($.has(index))\n      return $.get(index);\n    const [type, value] = _[index];\n    switch (type) {\n      case PRIMITIVE:\n      case VOID:\n        return as(value, index);\n      case ARRAY: {\n        const arr = as([], index);\n        for (const index2 of value)\n          arr.push(unpair(index2));\n        return arr;\n      }\n      case OBJECT: {\n        const object = as({}, index);\n        for (const [key, index2] of value)\n          object[unpair(key)] = unpair(index2);\n        return object;\n      }\n      case DATE:\n        return as(new Date(value), index);\n      case REGEXP: {\n        const { source, flags } = value;\n        return as(new RegExp(source, flags), index);\n      }\n      case MAP: {\n        const map = as(/* @__PURE__ */ new Map(), index);\n        for (const [key, index2] of value)\n          map.set(unpair(key), unpair(index2));\n        return map;\n      }\n      case SET: {\n        const set = as(/* @__PURE__ */ new Set(), index);\n        for (const index2 of value)\n          set.add(unpair(index2));\n        return set;\n      }\n      case ERROR: {\n        const { name, message } = value;\n        return as(new env[name](message), index);\n      }\n      case BIGINT:\n        return as(BigInt(value), index);\n      case "BigInt":\n        return as(Object(BigInt(value)), index);\n    }\n    return as(new env[type](value), index);\n  }, "unpair");\n  return unpair;\n}, "deserializer");\nvar deserialize = /* @__PURE__ */ __name((serialized) => deserializer(/* @__PURE__ */ new Map(), serialized)(0), "deserialize");\n\n// ../../node_modules/.pnpm/@ungap+structured-clone@1.2.0/node_modules/@ungap/structured-clone/esm/serialize.js\nvar EMPTY = "";\nvar { toString } = {};\nvar { keys } = Object;\nvar typeOf = /* @__PURE__ */ __name((value) => {\n  const type = typeof value;\n  if (type !== "object" || !value)\n    return [PRIMITIVE, type];\n  const asString = toString.call(value).slice(8, -1);\n  switch (asString) {\n    case "Array":\n      return [ARRAY, EMPTY];\n    case "Object":\n      return [OBJECT, EMPTY];\n    case "Date":\n      return [DATE, EMPTY];\n    case "RegExp":\n      return [REGEXP, EMPTY];\n    case "Map":\n      return [MAP, EMPTY];\n    case "Set":\n      return [SET, EMPTY];\n  }\n  if (asString.includes("Array"))\n    return [ARRAY, asString];\n  if (asString.includes("Error"))\n    return [ERROR, asString];\n  return [OBJECT, asString];\n}, "typeOf");\nvar shouldSkip = /* @__PURE__ */ __name(([TYPE, type]) => TYPE === PRIMITIVE && (type === "function" || type === "symbol"), "shouldSkip");\nvar serializer = /* @__PURE__ */ __name((strict, json, $, _) => {\n  const as = /* @__PURE__ */ __name((out, value) => {\n    const index = _.push(out) - 1;\n    $.set(value, index);\n    return index;\n  }, "as");\n  const pair = /* @__PURE__ */ __name((value) => {\n    if ($.has(value))\n      return $.get(value);\n    let [TYPE, type] = typeOf(value);\n    switch (TYPE) {\n      case PRIMITIVE: {\n        let entry = value;\n        switch (type) {\n          case "bigint":\n            TYPE = BIGINT;\n            entry = value.toString();\n            break;\n          case "function":\n          case "symbol":\n            if (strict)\n              throw new TypeError("unable to serialize " + type);\n            entry = null;\n            break;\n          case "undefined":\n            return as([VOID], value);\n        }\n        return as([TYPE, entry], value);\n      }\n      case ARRAY: {\n        if (type)\n          return as([type, [...value]], value);\n        const arr = [];\n        const index = as([TYPE, arr], value);\n        for (const entry of value)\n          arr.push(pair(entry));\n        return index;\n      }\n      case OBJECT: {\n        if (type) {\n          switch (type) {\n            case "BigInt":\n              return as([type, value.toString()], value);\n            case "Boolean":\n            case "Number":\n            case "String":\n              return as([type, value.valueOf()], value);\n          }\n        }\n        if (json && "toJSON" in value)\n          return pair(value.toJSON());\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const key of keys(value)) {\n          if (strict || !shouldSkip(typeOf(value[key])))\n            entries.push([pair(key), pair(value[key])]);\n        }\n        return index;\n      }\n      case DATE:\n        return as([TYPE, value.toISOString()], value);\n      case REGEXP: {\n        const { source, flags } = value;\n        return as([TYPE, { source, flags }], value);\n      }\n      case MAP: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const [key, entry] of value) {\n          if (strict || !(shouldSkip(typeOf(key)) || shouldSkip(typeOf(entry))))\n            entries.push([pair(key), pair(entry)]);\n        }\n        return index;\n      }\n      case SET: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const entry of value) {\n          if (strict || !shouldSkip(typeOf(entry)))\n            entries.push(pair(entry));\n        }\n        return index;\n      }\n    }\n    const { message } = value;\n    return as([TYPE, { name: type, message }], value);\n  }, "pair");\n  return pair;\n}, "serializer");\nvar serialize = /* @__PURE__ */ __name((value, { json, lossy } = {}) => {\n  const _ = [];\n  return serializer(!(json || lossy), !!json, /* @__PURE__ */ new Map(), _)(value), _;\n}, "serialize");\n\n// ../../node_modules/.pnpm/@ungap+structured-clone@1.2.0/node_modules/@ungap/structured-clone/esm/index.js\nvar esm_default = typeof structuredClone === "function" ? (\n  /* c8 ignore start */\n  (any, options) => options && ("json" in options || "lossy" in options) ? deserialize(serialize(any, options)) : structuredClone(any)\n) : (any, options) => deserialize(serialize(any, options));\n\n// src/primitives/structured-clone.js\nfunction structuredClone2(value, options) {\n  if (value instanceof ReadableStream) {\n    const transform = new TransformStream({});\n    value.pipeTo(transform.writable);\n    return transform.readable;\n  }\n  return esm_default(value, options);\n}\n__name(structuredClone2, "structuredClone");\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  structuredClone\n});\n';
      }, 66: (e) => {
        e.exports = '"use strict";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === "object" || typeof from === "function") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);\n\n// src/primitives/timers.js\nvar timers_exports = {};\n__export(timers_exports, {\n  setInterval: () => setIntervalProxy,\n  setTimeout: () => setTimeoutProxy\n});\nmodule.exports = __toCommonJS(timers_exports);\nvar setTimeoutProxy = new Proxy(setTimeout, {\n  apply: (target, thisArg, args) => {\n    const timeout = Reflect.apply(target, thisArg, args);\n    return timeout[Symbol.toPrimitive]();\n  }\n});\nvar setIntervalProxy = new Proxy(setInterval, {\n  apply: (target, thisArg, args) => {\n    const timeout = Reflect.apply(target, thisArg, args);\n    return timeout[Symbol.toPrimitive]();\n  }\n});\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  setInterval,\n  setTimeout\n});\n';
      }, 537: (e) => {
        e.exports = '"use strict";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value) => __defProp(target, "name", { value, configurable: true });\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === "object" || typeof from === "function") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);\nvar __accessCheck = (obj, member, msg) => {\n  if (!member.has(obj))\n    throw TypeError("Cannot " + msg);\n};\nvar __privateGet = (obj, member, getter) => {\n  __accessCheck(obj, member, "read from private field");\n  return getter ? getter.call(obj) : member.get(obj);\n};\nvar __privateAdd = (obj, member, value) => {\n  if (member.has(obj))\n    throw TypeError("Cannot add the same private member more than once");\n  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n};\nvar __privateSet = (obj, member, value, setter) => {\n  __accessCheck(obj, member, "write to private field");\n  setter ? setter.call(obj, value) : member.set(obj, value);\n  return value;\n};\nvar __privateMethod = (obj, member, method) => {\n  __accessCheck(obj, member, "access private method");\n  return method;\n};\n\n// src/primitives/url.js\nvar url_exports = {};\n__export(url_exports, {\n  URLPattern: () => me\n});\nmodule.exports = __toCommonJS(url_exports);\n\n// ../../node_modules/.pnpm/urlpattern-polyfill@9.0.0/node_modules/urlpattern-polyfill/dist/urlpattern.js\nvar _a;\nvar k = (_a = class {\n  type = 3;\n  name = "";\n  prefix = "";\n  value = "";\n  suffix = "";\n  modifier = 3;\n  constructor(t, r, n, o, c, l) {\n    this.type = t, this.name = r, this.prefix = n, this.value = o, this.suffix = c, this.modifier = l;\n  }\n  hasCustomName() {\n    return this.name !== "" && typeof this.name != "number";\n  }\n}, __name(_a, "k"), _a);\nvar Pe = /[$_\\p{ID_Start}]/u;\nvar Se = /[$_\\u200C\\u200D\\p{ID_Continue}]/u;\nvar M = ".*";\nfunction ke(e, t) {\n  return (t ? /^[\\x00-\\xFF]*$/ : /^[\\x00-\\x7F]*$/).test(e);\n}\n__name(ke, "ke");\nfunction v(e, t = false) {\n  let r = [], n = 0;\n  for (; n < e.length; ) {\n    let o = e[n], c = /* @__PURE__ */ __name(function(l) {\n      if (!t)\n        throw new TypeError(l);\n      r.push({ type: "INVALID_CHAR", index: n, value: e[n++] });\n    }, "c");\n    if (o === "*") {\n      r.push({ type: "ASTERISK", index: n, value: e[n++] });\n      continue;\n    }\n    if (o === "+" || o === "?") {\n      r.push({ type: "OTHER_MODIFIER", index: n, value: e[n++] });\n      continue;\n    }\n    if (o === "\\\\") {\n      r.push({ type: "ESCAPED_CHAR", index: n++, value: e[n++] });\n      continue;\n    }\n    if (o === "{") {\n      r.push({ type: "OPEN", index: n, value: e[n++] });\n      continue;\n    }\n    if (o === "}") {\n      r.push({ type: "CLOSE", index: n, value: e[n++] });\n      continue;\n    }\n    if (o === ":") {\n      let l = "", s = n + 1;\n      for (; s < e.length; ) {\n        let i = e.substr(s, 1);\n        if (s === n + 1 && Pe.test(i) || s !== n + 1 && Se.test(i)) {\n          l += e[s++];\n          continue;\n        }\n        break;\n      }\n      if (!l) {\n        c(`Missing parameter name at ${n}`);\n        continue;\n      }\n      r.push({ type: "NAME", index: n, value: l }), n = s;\n      continue;\n    }\n    if (o === "(") {\n      let l = 1, s = "", i = n + 1, a = false;\n      if (e[i] === "?") {\n        c(`Pattern cannot start with "?" at ${i}`);\n        continue;\n      }\n      for (; i < e.length; ) {\n        if (!ke(e[i], false)) {\n          c(`Invalid character \'${e[i]}\' at ${i}.`), a = true;\n          break;\n        }\n        if (e[i] === "\\\\") {\n          s += e[i++] + e[i++];\n          continue;\n        }\n        if (e[i] === ")") {\n          if (l--, l === 0) {\n            i++;\n            break;\n          }\n        } else if (e[i] === "(" && (l++, e[i + 1] !== "?")) {\n          c(`Capturing groups are not allowed at ${i}`), a = true;\n          break;\n        }\n        s += e[i++];\n      }\n      if (a)\n        continue;\n      if (l) {\n        c(`Unbalanced pattern at ${n}`);\n        continue;\n      }\n      if (!s) {\n        c(`Missing pattern at ${n}`);\n        continue;\n      }\n      r.push({ type: "REGEX", index: n, value: s }), n = i;\n      continue;\n    }\n    r.push({ type: "CHAR", index: n, value: e[n++] });\n  }\n  return r.push({ type: "END", index: n, value: "" }), r;\n}\n__name(v, "v");\nfunction D(e, t = {}) {\n  let r = v(e);\n  t.delimiter ??= "/#?", t.prefixes ??= "./";\n  let n = `[^${x(t.delimiter)}]+?`, o = [], c = 0, l = 0, s = "", i = /* @__PURE__ */ new Set(), a = /* @__PURE__ */ __name((f) => {\n    if (l < r.length && r[l].type === f)\n      return r[l++].value;\n  }, "a"), h = /* @__PURE__ */ __name(() => a("OTHER_MODIFIER") ?? a("ASTERISK"), "h"), p = /* @__PURE__ */ __name((f) => {\n    let u = a(f);\n    if (u !== void 0)\n      return u;\n    let { type: d, index: T } = r[l];\n    throw new TypeError(`Unexpected ${d} at ${T}, expected ${f}`);\n  }, "p"), O = /* @__PURE__ */ __name(() => {\n    let f = "", u;\n    for (; u = a("CHAR") ?? a("ESCAPED_CHAR"); )\n      f += u;\n    return f;\n  }, "O"), xe = /* @__PURE__ */ __name((f) => f, "xe"), L = t.encodePart || xe, I = "", H = /* @__PURE__ */ __name((f) => {\n    I += f;\n  }, "H"), $ = /* @__PURE__ */ __name(() => {\n    I.length && (o.push(new k(3, "", "", L(I), "", 3)), I = "");\n  }, "$"), G = /* @__PURE__ */ __name((f, u, d, T, Y) => {\n    let g = 3;\n    switch (Y) {\n      case "?":\n        g = 1;\n        break;\n      case "*":\n        g = 0;\n        break;\n      case "+":\n        g = 2;\n        break;\n    }\n    if (!u && !d && g === 3) {\n      H(f);\n      return;\n    }\n    if ($(), !u && !d) {\n      if (!f)\n        return;\n      o.push(new k(3, "", "", L(f), "", g));\n      return;\n    }\n    let m;\n    d ? d === "*" ? m = M : m = d : m = n;\n    let R = 2;\n    m === n ? (R = 1, m = "") : m === M && (R = 0, m = "");\n    let S;\n    if (u ? S = u : d && (S = c++), i.has(S))\n      throw new TypeError(`Duplicate name \'${S}\'.`);\n    i.add(S), o.push(new k(R, S, L(f), m, L(T), g));\n  }, "G");\n  for (; l < r.length; ) {\n    let f = a("CHAR"), u = a("NAME"), d = a("REGEX");\n    if (!u && !d && (d = a("ASTERISK")), u || d) {\n      let g = f ?? "";\n      t.prefixes.indexOf(g) === -1 && (H(g), g = ""), $();\n      let m = h();\n      G(g, u, d, "", m);\n      continue;\n    }\n    let T = f ?? a("ESCAPED_CHAR");\n    if (T) {\n      H(T);\n      continue;\n    }\n    if (a("OPEN")) {\n      let g = O(), m = a("NAME"), R = a("REGEX");\n      !m && !R && (R = a("ASTERISK"));\n      let S = O();\n      p("CLOSE");\n      let be = h();\n      G(g, m, R, S, be);\n      continue;\n    }\n    $(), p("END");\n  }\n  return o;\n}\n__name(D, "D");\nfunction x(e) {\n  return e.replace(/([.+*?^${}()[\\]|/\\\\])/g, "\\\\$1");\n}\n__name(x, "x");\nfunction X(e) {\n  return e && e.ignoreCase ? "ui" : "u";\n}\n__name(X, "X");\nfunction Z(e, t, r) {\n  return F(D(e, r), t, r);\n}\n__name(Z, "Z");\nfunction y(e) {\n  switch (e) {\n    case 0:\n      return "*";\n    case 1:\n      return "?";\n    case 2:\n      return "+";\n    case 3:\n      return "";\n  }\n}\n__name(y, "y");\nfunction F(e, t, r = {}) {\n  r.delimiter ??= "/#?", r.prefixes ??= "./", r.sensitive ??= false, r.strict ??= false, r.end ??= true, r.start ??= true, r.endsWith = "";\n  let n = r.start ? "^" : "";\n  for (let s of e) {\n    if (s.type === 3) {\n      s.modifier === 3 ? n += x(s.value) : n += `(?:${x(s.value)})${y(s.modifier)}`;\n      continue;\n    }\n    t && t.push(s.name);\n    let i = `[^${x(r.delimiter)}]+?`, a = s.value;\n    if (s.type === 1 ? a = i : s.type === 0 && (a = M), !s.prefix.length && !s.suffix.length) {\n      s.modifier === 3 || s.modifier === 1 ? n += `(${a})${y(s.modifier)}` : n += `((?:${a})${y(s.modifier)})`;\n      continue;\n    }\n    if (s.modifier === 3 || s.modifier === 1) {\n      n += `(?:${x(s.prefix)}(${a})${x(s.suffix)})`, n += y(s.modifier);\n      continue;\n    }\n    n += `(?:${x(s.prefix)}`, n += `((?:${a})(?:`, n += x(s.suffix), n += x(s.prefix), n += `(?:${a}))*)${x(s.suffix)})`, s.modifier === 0 && (n += "?");\n  }\n  let o = `[${x(r.endsWith)}]|$`, c = `[${x(r.delimiter)}]`;\n  if (r.end)\n    return r.strict || (n += `${c}?`), r.endsWith.length ? n += `(?=${o})` : n += "$", new RegExp(n, X(r));\n  r.strict || (n += `(?:${c}(?=${o}))?`);\n  let l = false;\n  if (e.length) {\n    let s = e[e.length - 1];\n    s.type === 3 && s.modifier === 3 && (l = r.delimiter.indexOf(s) > -1);\n  }\n  return l || (n += `(?=${c}|${o})`), new RegExp(n, X(r));\n}\n__name(F, "F");\nvar b = { delimiter: "", prefixes: "", sensitive: true, strict: true };\nvar B = { delimiter: ".", prefixes: "", sensitive: true, strict: true };\nvar q = { delimiter: "/", prefixes: "/", sensitive: true, strict: true };\nfunction J(e, t) {\n  return e.length ? e[0] === "/" ? true : !t || e.length < 2 ? false : (e[0] == "\\\\" || e[0] == "{") && e[1] == "/" : false;\n}\n__name(J, "J");\nfunction Q(e, t) {\n  return e.startsWith(t) ? e.substring(t.length, e.length) : e;\n}\n__name(Q, "Q");\nfunction Ee(e, t) {\n  return e.endsWith(t) ? e.substr(0, e.length - t.length) : e;\n}\n__name(Ee, "Ee");\nfunction W(e) {\n  return !e || e.length < 2 ? false : e[0] === "[" || (e[0] === "\\\\" || e[0] === "{") && e[1] === "[";\n}\n__name(W, "W");\nvar ee = ["ftp", "file", "http", "https", "ws", "wss"];\nfunction N(e) {\n  if (!e)\n    return true;\n  for (let t of ee)\n    if (e.test(t))\n      return true;\n  return false;\n}\n__name(N, "N");\nfunction te(e, t) {\n  if (e = Q(e, "#"), t || e === "")\n    return e;\n  let r = new URL("https://example.com");\n  return r.hash = e, r.hash ? r.hash.substring(1, r.hash.length) : "";\n}\n__name(te, "te");\nfunction re(e, t) {\n  if (e = Q(e, "?"), t || e === "")\n    return e;\n  let r = new URL("https://example.com");\n  return r.search = e, r.search ? r.search.substring(1, r.search.length) : "";\n}\n__name(re, "re");\nfunction ne(e, t) {\n  return t || e === "" ? e : W(e) ? j(e) : z(e);\n}\n__name(ne, "ne");\nfunction se(e, t) {\n  if (t || e === "")\n    return e;\n  let r = new URL("https://example.com");\n  return r.password = e, r.password;\n}\n__name(se, "se");\nfunction ie(e, t) {\n  if (t || e === "")\n    return e;\n  let r = new URL("https://example.com");\n  return r.username = e, r.username;\n}\n__name(ie, "ie");\nfunction ae(e, t, r) {\n  if (r || e === "")\n    return e;\n  if (t && !ee.includes(t))\n    return new URL(`${t}:${e}`).pathname;\n  let n = e[0] == "/";\n  return e = new URL(n ? e : "/-" + e, "https://example.com").pathname, n || (e = e.substring(2, e.length)), e;\n}\n__name(ae, "ae");\nfunction oe(e, t, r) {\n  return _(t) === e && (e = ""), r || e === "" ? e : K(e);\n}\n__name(oe, "oe");\nfunction ce(e, t) {\n  return e = Ee(e, ":"), t || e === "" ? e : A(e);\n}\n__name(ce, "ce");\nfunction _(e) {\n  switch (e) {\n    case "ws":\n    case "http":\n      return "80";\n    case "wws":\n    case "https":\n      return "443";\n    case "ftp":\n      return "21";\n    default:\n      return "";\n  }\n}\n__name(_, "_");\nfunction A(e) {\n  if (e === "")\n    return e;\n  if (/^[-+.A-Za-z0-9]*$/.test(e))\n    return e.toLowerCase();\n  throw new TypeError(`Invalid protocol \'${e}\'.`);\n}\n__name(A, "A");\nfunction le(e) {\n  if (e === "")\n    return e;\n  let t = new URL("https://example.com");\n  return t.username = e, t.username;\n}\n__name(le, "le");\nfunction he(e) {\n  if (e === "")\n    return e;\n  let t = new URL("https://example.com");\n  return t.password = e, t.password;\n}\n__name(he, "he");\nfunction z(e) {\n  if (e === "")\n    return e;\n  if (/[\\t\\n\\r #%/:<>?@[\\]^\\\\|]/g.test(e))\n    throw new TypeError(`Invalid hostname \'${e}\'`);\n  let t = new URL("https://example.com");\n  return t.hostname = e, t.hostname;\n}\n__name(z, "z");\nfunction j(e) {\n  if (e === "")\n    return e;\n  if (/[^0-9a-fA-F[\\]:]/g.test(e))\n    throw new TypeError(`Invalid IPv6 hostname \'${e}\'`);\n  return e.toLowerCase();\n}\n__name(j, "j");\nfunction K(e) {\n  if (e === "" || /^[0-9]*$/.test(e) && parseInt(e) <= 65535)\n    return e;\n  throw new TypeError(`Invalid port \'${e}\'.`);\n}\n__name(K, "K");\nfunction fe(e) {\n  if (e === "")\n    return e;\n  let t = new URL("https://example.com");\n  return t.pathname = e[0] !== "/" ? "/-" + e : e, e[0] !== "/" ? t.pathname.substring(2, t.pathname.length) : t.pathname;\n}\n__name(fe, "fe");\nfunction ue(e) {\n  return e === "" ? e : new URL(`data:${e}`).pathname;\n}\n__name(ue, "ue");\nfunction pe(e) {\n  if (e === "")\n    return e;\n  let t = new URL("https://example.com");\n  return t.search = e, t.search.substring(1, t.search.length);\n}\n__name(pe, "pe");\nfunction de(e) {\n  if (e === "")\n    return e;\n  let t = new URL("https://example.com");\n  return t.hash = e, t.hash.substring(1, t.hash.length);\n}\n__name(de, "de");\nvar _i, _n, _t, _e, _s, _u, _c, _p, _d, _g, _r, r_fn, _k, k_fn, _P, P_fn, _f, f_fn, _m, m_fn, _a2, a_fn, _S, S_fn, _E, E_fn, _x, x_fn, _R, R_fn, _y, y_fn, _b, b_fn, _h, h_fn, _l, l_fn, _O, O_fn, _T, T_fn, _A, A_fn, _w, w_fn, _o, o_fn, _C, C_fn, _a3;\nvar U = (_a3 = class {\n  constructor(t) {\n    __privateAdd(this, _r);\n    __privateAdd(this, _k);\n    __privateAdd(this, _P);\n    __privateAdd(this, _f);\n    __privateAdd(this, _m);\n    __privateAdd(this, _a2);\n    __privateAdd(this, _S);\n    __privateAdd(this, _E);\n    __privateAdd(this, _x);\n    __privateAdd(this, _R);\n    __privateAdd(this, _y);\n    __privateAdd(this, _b);\n    __privateAdd(this, _h);\n    __privateAdd(this, _l);\n    __privateAdd(this, _O);\n    __privateAdd(this, _T);\n    __privateAdd(this, _A);\n    __privateAdd(this, _w);\n    __privateAdd(this, _o);\n    __privateAdd(this, _C);\n    __privateAdd(this, _i, void 0);\n    __privateAdd(this, _n, []);\n    __privateAdd(this, _t, {});\n    __privateAdd(this, _e, 0);\n    __privateAdd(this, _s, 1);\n    __privateAdd(this, _u, 0);\n    __privateAdd(this, _c, 0);\n    __privateAdd(this, _p, 0);\n    __privateAdd(this, _d, 0);\n    __privateAdd(this, _g, false);\n    __privateSet(this, _i, t);\n  }\n  get result() {\n    return __privateGet(this, _t);\n  }\n  parse() {\n    for (__privateSet(this, _n, v(__privateGet(this, _i), true)); __privateGet(this, _e) < __privateGet(this, _n).length; __privateSet(this, _e, __privateGet(this, _e) + __privateGet(this, _s))) {\n      if (__privateSet(this, _s, 1), __privateGet(this, _n)[__privateGet(this, _e)].type === "END") {\n        if (__privateGet(this, _c) === 0) {\n          __privateMethod(this, _P, P_fn).call(this), __privateMethod(this, _l, l_fn).call(this) ? __privateMethod(this, _r, r_fn).call(this, 9, 1) : __privateMethod(this, _h, h_fn).call(this) ? (__privateMethod(this, _r, r_fn).call(this, 8, 1), __privateGet(this, _t).hash = "") : (__privateMethod(this, _r, r_fn).call(this, 7, 0), __privateGet(this, _t).search = "", __privateGet(this, _t).hash = "");\n          continue;\n        } else if (__privateGet(this, _c) === 2) {\n          __privateMethod(this, _f, f_fn).call(this, 5);\n          continue;\n        }\n        __privateMethod(this, _r, r_fn).call(this, 10, 0);\n        break;\n      }\n      if (__privateGet(this, _p) > 0)\n        if (__privateMethod(this, _T, T_fn).call(this))\n          __privateSet(this, _p, __privateGet(this, _p) - 1);\n        else\n          continue;\n      if (__privateMethod(this, _O, O_fn).call(this)) {\n        __privateSet(this, _p, __privateGet(this, _p) + 1);\n        continue;\n      }\n      switch (__privateGet(this, _c)) {\n        case 0:\n          __privateMethod(this, _S, S_fn).call(this) && (__privateGet(this, _t).username = "", __privateGet(this, _t).password = "", __privateGet(this, _t).hostname = "", __privateGet(this, _t).port = "", __privateGet(this, _t).pathname = "", __privateGet(this, _t).search = "", __privateGet(this, _t).hash = "", __privateMethod(this, _f, f_fn).call(this, 1));\n          break;\n        case 1:\n          if (__privateMethod(this, _S, S_fn).call(this)) {\n            __privateMethod(this, _C, C_fn).call(this);\n            let t = 7, r = 1;\n            __privateGet(this, _g) && (__privateGet(this, _t).pathname = "/"), __privateMethod(this, _E, E_fn).call(this) ? (t = 2, r = 3) : __privateGet(this, _g) && (t = 2), __privateMethod(this, _r, r_fn).call(this, t, r);\n          }\n          break;\n        case 2:\n          __privateMethod(this, _x, x_fn).call(this) ? __privateMethod(this, _f, f_fn).call(this, 3) : (__privateMethod(this, _b, b_fn).call(this) || __privateMethod(this, _h, h_fn).call(this) || __privateMethod(this, _l, l_fn).call(this)) && __privateMethod(this, _f, f_fn).call(this, 5);\n          break;\n        case 3:\n          __privateMethod(this, _R, R_fn).call(this) ? __privateMethod(this, _r, r_fn).call(this, 4, 1) : __privateMethod(this, _x, x_fn).call(this) && __privateMethod(this, _r, r_fn).call(this, 5, 1);\n          break;\n        case 4:\n          __privateMethod(this, _x, x_fn).call(this) && __privateMethod(this, _r, r_fn).call(this, 5, 1);\n          break;\n        case 5:\n          __privateMethod(this, _A, A_fn).call(this) ? __privateSet(this, _d, __privateGet(this, _d) + 1) : __privateMethod(this, _w, w_fn).call(this) && __privateSet(this, _d, __privateGet(this, _d) - 1), __privateMethod(this, _y, y_fn).call(this) && !__privateGet(this, _d) ? __privateMethod(this, _r, r_fn).call(this, 6, 1) : __privateMethod(this, _b, b_fn).call(this) ? __privateMethod(this, _r, r_fn).call(this, 7, 0) : __privateMethod(this, _h, h_fn).call(this) ? __privateMethod(this, _r, r_fn).call(this, 8, 1) : __privateMethod(this, _l, l_fn).call(this) && __privateMethod(this, _r, r_fn).call(this, 9, 1);\n          break;\n        case 6:\n          __privateMethod(this, _b, b_fn).call(this) ? __privateMethod(this, _r, r_fn).call(this, 7, 0) : __privateMethod(this, _h, h_fn).call(this) ? __privateMethod(this, _r, r_fn).call(this, 8, 1) : __privateMethod(this, _l, l_fn).call(this) && __privateMethod(this, _r, r_fn).call(this, 9, 1);\n          break;\n        case 7:\n          __privateMethod(this, _h, h_fn).call(this) ? __privateMethod(this, _r, r_fn).call(this, 8, 1) : __privateMethod(this, _l, l_fn).call(this) && __privateMethod(this, _r, r_fn).call(this, 9, 1);\n          break;\n        case 8:\n          __privateMethod(this, _l, l_fn).call(this) && __privateMethod(this, _r, r_fn).call(this, 9, 1);\n          break;\n        case 9:\n          break;\n        case 10:\n          break;\n      }\n    }\n  }\n}, _i = new WeakMap(), _n = new WeakMap(), _t = new WeakMap(), _e = new WeakMap(), _s = new WeakMap(), _u = new WeakMap(), _c = new WeakMap(), _p = new WeakMap(), _d = new WeakMap(), _g = new WeakMap(), _r = new WeakSet(), r_fn = /* @__PURE__ */ __name(function(t, r) {\n  switch (__privateGet(this, _c)) {\n    case 0:\n      break;\n    case 1:\n      __privateGet(this, _t).protocol = __privateMethod(this, _o, o_fn).call(this);\n      break;\n    case 2:\n      break;\n    case 3:\n      __privateGet(this, _t).username = __privateMethod(this, _o, o_fn).call(this);\n      break;\n    case 4:\n      __privateGet(this, _t).password = __privateMethod(this, _o, o_fn).call(this);\n      break;\n    case 5:\n      __privateGet(this, _t).hostname = __privateMethod(this, _o, o_fn).call(this);\n      break;\n    case 6:\n      __privateGet(this, _t).port = __privateMethod(this, _o, o_fn).call(this);\n      break;\n    case 7:\n      __privateGet(this, _t).pathname = __privateMethod(this, _o, o_fn).call(this);\n      break;\n    case 8:\n      __privateGet(this, _t).search = __privateMethod(this, _o, o_fn).call(this);\n      break;\n    case 9:\n      __privateGet(this, _t).hash = __privateMethod(this, _o, o_fn).call(this);\n      break;\n    case 10:\n      break;\n  }\n  __privateMethod(this, _k, k_fn).call(this, t, r);\n}, "#r"), _k = new WeakSet(), k_fn = /* @__PURE__ */ __name(function(t, r) {\n  __privateSet(this, _c, t), __privateSet(this, _u, __privateGet(this, _e) + r), __privateSet(this, _e, __privateGet(this, _e) + r), __privateSet(this, _s, 0);\n}, "#k"), _P = new WeakSet(), P_fn = /* @__PURE__ */ __name(function() {\n  __privateSet(this, _e, __privateGet(this, _u)), __privateSet(this, _s, 0);\n}, "#P"), _f = new WeakSet(), f_fn = /* @__PURE__ */ __name(function(t) {\n  __privateMethod(this, _P, P_fn).call(this), __privateSet(this, _c, t);\n}, "#f"), _m = new WeakSet(), m_fn = /* @__PURE__ */ __name(function(t) {\n  return t < 0 && (t = __privateGet(this, _n).length - t), t < __privateGet(this, _n).length ? __privateGet(this, _n)[t] : __privateGet(this, _n)[__privateGet(this, _n).length - 1];\n}, "#m"), _a2 = new WeakSet(), a_fn = /* @__PURE__ */ __name(function(t, r) {\n  let n = __privateMethod(this, _m, m_fn).call(this, t);\n  return n.value === r && (n.type === "CHAR" || n.type === "ESCAPED_CHAR" || n.type === "INVALID_CHAR");\n}, "#a"), _S = new WeakSet(), S_fn = /* @__PURE__ */ __name(function() {\n  return __privateMethod(this, _a2, a_fn).call(this, __privateGet(this, _e), ":");\n}, "#S"), _E = new WeakSet(), E_fn = /* @__PURE__ */ __name(function() {\n  return __privateMethod(this, _a2, a_fn).call(this, __privateGet(this, _e) + 1, "/") && __privateMethod(this, _a2, a_fn).call(this, __privateGet(this, _e) + 2, "/");\n}, "#E"), _x = new WeakSet(), x_fn = /* @__PURE__ */ __name(function() {\n  return __privateMethod(this, _a2, a_fn).call(this, __privateGet(this, _e), "@");\n}, "#x"), _R = new WeakSet(), R_fn = /* @__PURE__ */ __name(function() {\n  return __privateMethod(this, _a2, a_fn).call(this, __privateGet(this, _e), ":");\n}, "#R"), _y = new WeakSet(), y_fn = /* @__PURE__ */ __name(function() {\n  return __privateMethod(this, _a2, a_fn).call(this, __privateGet(this, _e), ":");\n}, "#y"), _b = new WeakSet(), b_fn = /* @__PURE__ */ __name(function() {\n  return __privateMethod(this, _a2, a_fn).call(this, __privateGet(this, _e), "/");\n}, "#b"), _h = new WeakSet(), h_fn = /* @__PURE__ */ __name(function() {\n  if (__privateMethod(this, _a2, a_fn).call(this, __privateGet(this, _e), "?"))\n    return true;\n  if (__privateGet(this, _n)[__privateGet(this, _e)].value !== "?")\n    return false;\n  let t = __privateMethod(this, _m, m_fn).call(this, __privateGet(this, _e) - 1);\n  return t.type !== "NAME" && t.type !== "REGEX" && t.type !== "CLOSE" && t.type !== "ASTERISK";\n}, "#h"), _l = new WeakSet(), l_fn = /* @__PURE__ */ __name(function() {\n  return __privateMethod(this, _a2, a_fn).call(this, __privateGet(this, _e), "#");\n}, "#l"), _O = new WeakSet(), O_fn = /* @__PURE__ */ __name(function() {\n  return __privateGet(this, _n)[__privateGet(this, _e)].type == "OPEN";\n}, "#O"), _T = new WeakSet(), T_fn = /* @__PURE__ */ __name(function() {\n  return __privateGet(this, _n)[__privateGet(this, _e)].type == "CLOSE";\n}, "#T"), _A = new WeakSet(), A_fn = /* @__PURE__ */ __name(function() {\n  return __privateMethod(this, _a2, a_fn).call(this, __privateGet(this, _e), "[");\n}, "#A"), _w = new WeakSet(), w_fn = /* @__PURE__ */ __name(function() {\n  return __privateMethod(this, _a2, a_fn).call(this, __privateGet(this, _e), "]");\n}, "#w"), _o = new WeakSet(), o_fn = /* @__PURE__ */ __name(function() {\n  let t = __privateGet(this, _n)[__privateGet(this, _e)], r = __privateMethod(this, _m, m_fn).call(this, __privateGet(this, _u)).index;\n  return __privateGet(this, _i).substring(r, t.index);\n}, "#o"), _C = new WeakSet(), C_fn = /* @__PURE__ */ __name(function() {\n  let t = {};\n  Object.assign(t, b), t.encodePart = A;\n  let r = Z(__privateMethod(this, _o, o_fn).call(this), void 0, t);\n  __privateSet(this, _g, N(r));\n}, "#C"), __name(_a3, "U"), _a3);\nvar V = ["protocol", "username", "password", "hostname", "port", "pathname", "search", "hash"];\nvar E = "*";\nfunction ge(e, t) {\n  if (typeof e != "string")\n    throw new TypeError("parameter 1 is not of type \'string\'.");\n  let r = new URL(e, t);\n  return { protocol: r.protocol.substring(0, r.protocol.length - 1), username: r.username, password: r.password, hostname: r.hostname, port: r.port, pathname: r.pathname, search: r.search !== "" ? r.search.substring(1, r.search.length) : void 0, hash: r.hash !== "" ? r.hash.substring(1, r.hash.length) : void 0 };\n}\n__name(ge, "ge");\nfunction P(e, t) {\n  return t ? C(e) : e;\n}\n__name(P, "P");\nfunction w(e, t, r) {\n  let n;\n  if (typeof t.baseURL == "string")\n    try {\n      n = new URL(t.baseURL), e.protocol = P(n.protocol.substring(0, n.protocol.length - 1), r), e.username = P(n.username, r), e.password = P(n.password, r), e.hostname = P(n.hostname, r), e.port = P(n.port, r), e.pathname = P(n.pathname, r), e.search = P(n.search.substring(1, n.search.length), r), e.hash = P(n.hash.substring(1, n.hash.length), r);\n    } catch {\n      throw new TypeError(`invalid baseURL \'${t.baseURL}\'.`);\n    }\n  if (typeof t.protocol == "string" && (e.protocol = ce(t.protocol, r)), typeof t.username == "string" && (e.username = ie(t.username, r)), typeof t.password == "string" && (e.password = se(t.password, r)), typeof t.hostname == "string" && (e.hostname = ne(t.hostname, r)), typeof t.port == "string" && (e.port = oe(t.port, e.protocol, r)), typeof t.pathname == "string") {\n    if (e.pathname = t.pathname, n && !J(e.pathname, r)) {\n      let o = n.pathname.lastIndexOf("/");\n      o >= 0 && (e.pathname = P(n.pathname.substring(0, o + 1), r) + e.pathname);\n    }\n    e.pathname = ae(e.pathname, e.protocol, r);\n  }\n  return typeof t.search == "string" && (e.search = re(t.search, r)), typeof t.hash == "string" && (e.hash = te(t.hash, r)), e;\n}\n__name(w, "w");\nfunction C(e) {\n  return e.replace(/([+*?:{}()\\\\])/g, "\\\\$1");\n}\n__name(C, "C");\nfunction Re(e) {\n  return e.replace(/([.+*?^${}()[\\]|/\\\\])/g, "\\\\$1");\n}\n__name(Re, "Re");\nfunction ye(e, t) {\n  t.delimiter ??= "/#?", t.prefixes ??= "./", t.sensitive ??= false, t.strict ??= false, t.end ??= true, t.start ??= true, t.endsWith = "";\n  let r = ".*", n = `[^${Re(t.delimiter)}]+?`, o = /[$_\\u200C\\u200D\\p{ID_Continue}]/u, c = "";\n  for (let l = 0; l < e.length; ++l) {\n    let s = e[l];\n    if (s.type === 3) {\n      if (s.modifier === 3) {\n        c += C(s.value);\n        continue;\n      }\n      c += `{${C(s.value)}}${y(s.modifier)}`;\n      continue;\n    }\n    let i = s.hasCustomName(), a = !!s.suffix.length || !!s.prefix.length && (s.prefix.length !== 1 || !t.prefixes.includes(s.prefix)), h = l > 0 ? e[l - 1] : null, p = l < e.length - 1 ? e[l + 1] : null;\n    if (!a && i && s.type === 1 && s.modifier === 3 && p && !p.prefix.length && !p.suffix.length)\n      if (p.type === 3) {\n        let O = p.value.length > 0 ? p.value[0] : "";\n        a = o.test(O);\n      } else\n        a = !p.hasCustomName();\n    if (!a && !s.prefix.length && h && h.type === 3) {\n      let O = h.value[h.value.length - 1];\n      a = t.prefixes.includes(O);\n    }\n    a && (c += "{"), c += C(s.prefix), i && (c += `:${s.name}`), s.type === 2 ? c += `(${s.value})` : s.type === 1 ? i || (c += `(${n})`) : s.type === 0 && (!i && (!h || h.type === 3 || h.modifier !== 3 || a || s.prefix !== "") ? c += "*" : c += `(${r})`), s.type === 1 && i && s.suffix.length && o.test(s.suffix[0]) && (c += "\\\\"), c += C(s.suffix), a && (c += "}"), s.modifier !== 3 && (c += y(s.modifier));\n  }\n  return c;\n}\n__name(ye, "ye");\nvar _i2, _n2, _t2, _e2, _s2, _a4;\nvar me = (_a4 = class {\n  constructor(t = {}, r, n) {\n    __privateAdd(this, _i2, void 0);\n    __privateAdd(this, _n2, {});\n    __privateAdd(this, _t2, {});\n    __privateAdd(this, _e2, {});\n    __privateAdd(this, _s2, {});\n    try {\n      let o;\n      if (typeof r == "string" ? o = r : n = r, typeof t == "string") {\n        let i = new U(t);\n        if (i.parse(), t = i.result, o === void 0 && typeof t.protocol != "string")\n          throw new TypeError("A base URL must be provided for a relative constructor string.");\n        t.baseURL = o;\n      } else {\n        if (!t || typeof t != "object")\n          throw new TypeError("parameter 1 is not of type \'string\' and cannot convert to dictionary.");\n        if (o)\n          throw new TypeError("parameter 1 is not of type \'string\'.");\n      }\n      typeof n > "u" && (n = { ignoreCase: false });\n      let c = { ignoreCase: n.ignoreCase === true }, l = { pathname: E, protocol: E, username: E, password: E, hostname: E, port: E, search: E, hash: E };\n      __privateSet(this, _i2, w(l, t, true)), _(__privateGet(this, _i2).protocol) === __privateGet(this, _i2).port && (__privateGet(this, _i2).port = "");\n      let s;\n      for (s of V) {\n        if (!(s in __privateGet(this, _i2)))\n          continue;\n        let i = {}, a = __privateGet(this, _i2)[s];\n        switch (__privateGet(this, _t2)[s] = [], s) {\n          case "protocol":\n            Object.assign(i, b), i.encodePart = A;\n            break;\n          case "username":\n            Object.assign(i, b), i.encodePart = le;\n            break;\n          case "password":\n            Object.assign(i, b), i.encodePart = he;\n            break;\n          case "hostname":\n            Object.assign(i, B), W(a) ? i.encodePart = j : i.encodePart = z;\n            break;\n          case "port":\n            Object.assign(i, b), i.encodePart = K;\n            break;\n          case "pathname":\n            N(__privateGet(this, _n2).protocol) ? (Object.assign(i, q, c), i.encodePart = fe) : (Object.assign(i, b, c), i.encodePart = ue);\n            break;\n          case "search":\n            Object.assign(i, b, c), i.encodePart = pe;\n            break;\n          case "hash":\n            Object.assign(i, b, c), i.encodePart = de;\n            break;\n        }\n        try {\n          __privateGet(this, _s2)[s] = D(a, i), __privateGet(this, _n2)[s] = F(__privateGet(this, _s2)[s], __privateGet(this, _t2)[s], i), __privateGet(this, _e2)[s] = ye(__privateGet(this, _s2)[s], i);\n        } catch {\n          throw new TypeError(`invalid ${s} pattern \'${__privateGet(this, _i2)[s]}\'.`);\n        }\n      }\n    } catch (o) {\n      throw new TypeError(`Failed to construct \'URLPattern\': ${o.message}`);\n    }\n  }\n  test(t = {}, r) {\n    let n = { pathname: "", protocol: "", username: "", password: "", hostname: "", port: "", search: "", hash: "" };\n    if (typeof t != "string" && r)\n      throw new TypeError("parameter 1 is not of type \'string\'.");\n    if (typeof t > "u")\n      return false;\n    try {\n      typeof t == "object" ? n = w(n, t, false) : n = w(n, ge(t, r), false);\n    } catch {\n      return false;\n    }\n    let o;\n    for (o of V)\n      if (!__privateGet(this, _n2)[o].exec(n[o]))\n        return false;\n    return true;\n  }\n  exec(t = {}, r) {\n    let n = { pathname: "", protocol: "", username: "", password: "", hostname: "", port: "", search: "", hash: "" };\n    if (typeof t != "string" && r)\n      throw new TypeError("parameter 1 is not of type \'string\'.");\n    if (typeof t > "u")\n      return;\n    try {\n      typeof t == "object" ? n = w(n, t, false) : n = w(n, ge(t, r), false);\n    } catch {\n      return null;\n    }\n    let o = {};\n    r ? o.inputs = [t, r] : o.inputs = [t];\n    let c;\n    for (c of V) {\n      let l = __privateGet(this, _n2)[c].exec(n[c]);\n      if (!l)\n        return null;\n      let s = {};\n      for (let [i, a] of __privateGet(this, _t2)[c].entries())\n        if (typeof a == "string" || typeof a == "number") {\n          let h = l[i + 1];\n          s[a] = h;\n        }\n      o[c] = { input: n[c] ?? "", groups: s };\n    }\n    return o;\n  }\n  static compareComponent(t, r, n) {\n    let o = /* @__PURE__ */ __name((i, a) => {\n      for (let h of ["type", "modifier", "prefix", "value", "suffix"]) {\n        if (i[h] < a[h])\n          return -1;\n        if (i[h] === a[h])\n          continue;\n        return 1;\n      }\n      return 0;\n    }, "o"), c = new k(3, "", "", "", "", 3), l = new k(0, "", "", "", "", 3), s = /* @__PURE__ */ __name((i, a) => {\n      let h = 0;\n      for (; h < Math.min(i.length, a.length); ++h) {\n        let p = o(i[h], a[h]);\n        if (p)\n          return p;\n      }\n      return i.length === a.length ? 0 : o(i[h] ?? c, a[h] ?? c);\n    }, "s");\n    return !__privateGet(r, _e2)[t] && !__privateGet(n, _e2)[t] ? 0 : __privateGet(r, _e2)[t] && !__privateGet(n, _e2)[t] ? s(__privateGet(r, _s2)[t], [l]) : !__privateGet(r, _e2)[t] && __privateGet(n, _e2)[t] ? s([l], __privateGet(n, _s2)[t]) : s(__privateGet(r, _s2)[t], __privateGet(n, _s2)[t]);\n  }\n  get protocol() {\n    return __privateGet(this, _e2).protocol;\n  }\n  get username() {\n    return __privateGet(this, _e2).username;\n  }\n  get password() {\n    return __privateGet(this, _e2).password;\n  }\n  get hostname() {\n    return __privateGet(this, _e2).hostname;\n  }\n  get port() {\n    return __privateGet(this, _e2).port;\n  }\n  get pathname() {\n    return __privateGet(this, _e2).pathname;\n  }\n  get search() {\n    return __privateGet(this, _e2).search;\n  }\n  get hash() {\n    return __privateGet(this, _e2).hash;\n  }\n}, _i2 = new WeakMap(), _n2 = new WeakMap(), _t2 = new WeakMap(), _e2 = new WeakMap(), _s2 = new WeakMap(), __name(_a4, "me"), _a4);\n\n// ../../node_modules/.pnpm/urlpattern-polyfill@9.0.0/node_modules/urlpattern-polyfill/index.js\nif (!globalThis.URLPattern) {\n  globalThis.URLPattern = me;\n}\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  URLPattern\n});\n';
      }, 673: (__unused_webpack_module, exports, __nccwpck_require__) => {
        "use strict";
        Object.defineProperty(exports, "__esModule", { value: true });
        exports.EdgeVM = void 0;
        const load_1 = __nccwpck_require__(373);
        const vm_1 = __nccwpck_require__(144);
        const vm_2 = __nccwpck_require__(422);
        let unhandledRejectionHandlers;
        let uncaughtExceptionHandlers;
        class EdgeVM extends vm_2.VM {
          constructor(e) {
            super({ ...e, extend: (n) => (e === null || e === void 0 ? void 0 : e.extend) ? e.extend(addPrimitives(n)) : addPrimitives(n) });
            Object.defineProperty(this.context, "__onUnhandledRejectionHandlers", { set: registerUnhandledRejectionHandlers, configurable: false, enumerable: false });
            Object.defineProperty(this, "__rejectionHandlers", { get: () => unhandledRejectionHandlers, configurable: false, enumerable: false });
            Object.defineProperty(this.context, "__onErrorHandlers", { set: registerUncaughtExceptionHandlers, configurable: false, enumerable: false });
            Object.defineProperty(this, "__errorHandlers", { get: () => uncaughtExceptionHandlers, configurable: false, enumerable: false });
            this.evaluate(getDefineEventListenersCode());
            this.dispatchFetch = this.evaluate(getDispatchFetchCode());
            for (const e2 of transferableConstructors) {
              patchInstanceOf(e2, this.context);
            }
            if (e === null || e === void 0 ? void 0 : e.initialCode) {
              this.evaluate(e.initialCode);
            }
          }
        }
        exports.EdgeVM = EdgeVM;
        const transferableConstructors = ["Object", "Array", "RegExp", "Uint8Array", "ArrayBuffer", "Error", "SyntaxError", "TypeError"];
        function patchInstanceOf(item, ctx) {
          ctx[Symbol.for(`node:${item}`)] = eval(item);
          return (0, vm_1.runInContext)(`
      globalThis.${item} = new Proxy(${item}, {
        get(target, prop, receiver) {
          if (prop === Symbol.hasInstance && receiver === globalThis.${item}) {
            const nodeTarget = globalThis[Symbol.for('node:${item}')];
            if (nodeTarget) {
              return function(instance) {
                return instance instanceof target || instance instanceof nodeTarget;
              };
            } else {
              throw new Error('node target must exist')
            }
          }

          return Reflect.get(target, prop, receiver);
        }
      })
    `, ctx);
        }
        function registerUnhandledRejectionHandlers(e) {
          if (!unhandledRejectionHandlers) {
            process.on("unhandledRejection", function invokeRejectionHandlers(e2, n) {
              unhandledRejectionHandlers.forEach((A) => A({ reason: e2, promise: n }));
            });
          }
          unhandledRejectionHandlers = e;
        }
        function registerUncaughtExceptionHandlers(e) {
          if (!uncaughtExceptionHandlers) {
            process.on("uncaughtException", function invokeErrorHandlers(e2) {
              uncaughtExceptionHandlers.forEach((n) => n(e2));
            });
          }
          uncaughtExceptionHandlers = e;
        }
        function getDefineEventListenersCode() {
          return `
    Object.defineProperty(self, '__listeners', {
      configurable: false,
      enumerable: false,
      value: {},
      writable: true,
    })

    function __conditionallyUpdatesHandlerList(eventType) {
      if (eventType === 'unhandledrejection') {
        self.__onUnhandledRejectionHandlers = self.__listeners[eventType];
      } else if (eventType === 'error') {
        self.__onErrorHandlers = self.__listeners[eventType];
      }
    }

    function addEventListener(type, handler) {
      const eventType = type.toLowerCase();
      if (eventType === 'fetch' && self.__listeners.fetch) {
        throw new TypeError('You can register just one "fetch" event listener');
      }

      self.__listeners[eventType] = self.__listeners[eventType] || [];
      self.__listeners[eventType].push(handler);
      __conditionallyUpdatesHandlerList(eventType);
    }

    function removeEventListener(type, handler) {
      const eventType = type.toLowerCase();
      if (self.__listeners[eventType]) {
        self.__listeners[eventType] = self.__listeners[eventType].filter(item => {
          return item !== handler;
        });

        if (self.__listeners[eventType].length === 0) {
          delete self.__listeners[eventType];
        }
      }
      __conditionallyUpdatesHandlerList(eventType);
    }
  `;
        }
        function getDispatchFetchCode() {
          return `(async function dispatchFetch(input, init) {
    const request = new Request(input, init);
    const event = new FetchEvent(request);
    if (!self.__listeners.fetch) {
      throw new Error("No fetch event listeners found");
    }

    const getResponse = ({ response, error }) => {
     if (error || !response || !(response instanceof Response)) {
        console.error(error ? error.toString() : 'The event listener did not respond')
        response = new Response(null, {
          statusText: 'Internal Server Error',
          status: 500
        })
      }

      response.waitUntil = () => Promise.all(event.awaiting);

      if (response.status < 300 || response.status >= 400 ) {
        response.headers.delete('content-encoding');
        response.headers.delete('transform-encoding');
        response.headers.delete('content-length');
      }

      return response;
    }

    try {
      await self.__listeners.fetch[0].call(event, event)
    } catch (error) {
      return getResponse({ error })
    }

    return Promise.resolve(event.response)
      .then(response => getResponse({ response }))
      .catch(error => getResponse({ error }))
  })`;
        }
        function addPrimitives(e) {
          defineProperty(e, "self", { enumerable: true, value: e });
          defineProperty(e, "globalThis", { value: e });
          defineProperty(e, "Symbol", { value: Symbol });
          defineProperty(e, "clearInterval", { value: clearInterval });
          defineProperty(e, "clearTimeout", { value: clearTimeout });
          defineProperty(e, "queueMicrotask", { value: queueMicrotask });
          defineProperty(e, "EdgeRuntime", { value: "edge-runtime" });
          const n = getTransferablePrimitivesFromContext(e);
          defineProperties(e, { exports: (0, load_1.load)({ ...n, WeakRef: (0, vm_1.runInContext)(`WeakRef`, e) }), enumerable: ["crypto"], nonenumerable: ["Crypto", "CryptoKey", "SubtleCrypto", "fetch", "File", "FormData", "Headers", "Request", "Response", "WebSocket", "structuredClone", "Blob", "URL", "URLSearchParams", "URLPattern", "AbortController", "AbortSignal", "DOMException", "ReadableStream", "ReadableStreamBYOBReader", "ReadableStreamDefaultReader", "TextDecoderStream", "TextEncoderStream", "TransformStream", "WritableStream", "WritableStreamDefaultWriter", "atob", "btoa", "TextEncoder", "TextDecoder", "Event", "EventTarget", "FetchEvent", "PromiseRejectionEvent", "console", "setTimeout", "setInterval"] });
          return e;
        }
        function defineProperty(e, n, A) {
          var t, r, s;
          Object.defineProperty(e, n, { configurable: (t = A.configurable) !== null && t !== void 0 ? t : false, enumerable: (r = A.enumerable) !== null && r !== void 0 ? r : false, value: A.value, writable: (s = A.writable) !== null && s !== void 0 ? s : true });
        }
        function defineProperties(e, n) {
          var A, t;
          for (const t2 of (A = n.enumerable) !== null && A !== void 0 ? A : []) {
            if (!n.exports[t2]) {
              throw new Error(`Attempt to export a nullable value for "${t2}"`);
            }
            defineProperty(e, t2, { enumerable: true, value: n.exports[t2] });
          }
          for (const A2 of (t = n.nonenumerable) !== null && t !== void 0 ? t : []) {
            if (!n.exports[A2]) {
              throw new Error(`Attempt to export a nullable value for "${A2}"`);
            }
            defineProperty(e, A2, { value: n.exports[A2] });
          }
        }
        function getTransferablePrimitivesFromContext(e) {
          const n = transferableConstructors.join(",");
          const A = `({${n}})`;
          return (0, vm_1.runInContext)(A, e);
        }
      }, 171: (e, n, A) => {
        "use strict";
        Object.defineProperty(n, "__esModule", { value: true });
        n.VM = n.EdgeVM = void 0;
        var t = A(673);
        Object.defineProperty(n, "EdgeVM", { enumerable: true, get: function() {
          return t.EdgeVM;
        } });
        var r = A(422);
        Object.defineProperty(n, "VM", { enumerable: true, get: function() {
          return r.VM;
        } });
      }, 422: (e, n, A) => {
        "use strict";
        Object.defineProperty(n, "__esModule", { value: true });
        n.VM = void 0;
        const t = A(144);
        class VM {
          constructor(e2 = {}) {
            var n2, A2, r;
            const s = (0, t.createContext)({}, { name: "Edge Runtime", codeGeneration: (n2 = e2.codeGeneration) !== null && n2 !== void 0 ? n2 : { strings: false, wasm: true } });
            this.context = (r = (A2 = e2.extend) === null || A2 === void 0 ? void 0 : A2.call(e2, s)) !== null && r !== void 0 ? r : s;
          }
          evaluate(e2) {
            return (0, t.runInContext)(e2, this.context);
          }
        }
        n.VM = VM;
      }, 41: (e, n, A) => {
        "use strict";
        Object.defineProperty(n, "__esModule", { value: true });
        n.listen = void 0;
        const t = A(685);
        const r = A(687);
        const s = A(17);
        const o = A(361);
        const getProtocol = (e2) => {
          if (typeof e2.protocol === "string")
            return e2.protocol;
          if (e2 instanceof t.Server)
            return "http";
          if (e2 instanceof r.Server)
            return "https";
        };
        async function listen(e2, ...n2) {
          e2.listen(...n2, () => {
          });
          await (0, o.once)(e2, "listening");
          const A2 = e2.address();
          if (!A2) {
            throw new Error("Server not listening");
          }
          let t2;
          let r2 = getProtocol(e2);
          if (typeof A2 === "string") {
            t2 = encodeURIComponent((0, s.resolve)(A2));
            if (r2) {
              r2 += "+unix";
            } else {
              r2 = "unix";
            }
          } else {
            const { address: e3, port: n3, family: s2 } = A2;
            t2 = s2 === "IPv6" ? `[${e3}]` : e3;
            t2 += `:${n3}`;
            if (!r2) {
              r2 = "tcp";
            }
          }
          return new URL(`${r2}://${t2}`);
        }
        n.listen = listen;
        n["default"] = listen;
      }, 162: (e) => {
        "use strict";
        e.exports = (e2) => {
          const n = e2[0] * 1e9 + e2[1];
          const A = n / 1e6;
          const t = n / 1e9;
          return { seconds: t, milliseconds: A, nanoseconds: n };
        };
      }, 985: (e, n, A) => {
        "use strict";
        Object.defineProperty(n, "__esModule", { value: true });
        n.EdgeRuntime = void 0;
        var t = A(171);
        Object.defineProperty(n, "EdgeRuntime", { enumerable: true, get: function() {
          return t.EdgeVM;
        } });
      }, 237: (e, n, A) => {
        "use strict";
        Object.defineProperty(n, "__esModule", { value: true });
        n.pipeBodyStreamToResponse = n.consumeUint8ArrayReadableStream = n.getClonableBodyStream = void 0;
        const t = A(781);
        function getClonableBodyStream(e2, n2, A2) {
          let t2 = null;
          return { finalize() {
            if (t2) {
              replaceRequestBody(e2, bodyStreamToNodeStream(t2));
            }
          }, cloneBodyStream() {
            const r = t2 !== null && t2 !== void 0 ? t2 : requestToBodyStream(e2, n2, A2);
            const [s, o] = r.tee();
            t2 = s;
            return o;
          } };
        }
        n.getClonableBodyStream = getClonableBodyStream;
        function requestToBodyStream(e2, n2, A2) {
          const t2 = new A2({ start(A3) {
            e2.on("data", (e3) => A3.enqueue(new n2([...new Uint8Array(e3)])));
            e2.on("end", () => A3.terminate());
            e2.on("error", (e3) => A3.error(e3));
          } });
          return t2.readable;
        }
        function bodyStreamToNodeStream(e2) {
          const n2 = e2.getReader();
          return t.Readable.from(async function* () {
            while (true) {
              const { done: e3, value: A2 } = await n2.read();
              if (e3) {
                return;
              }
              yield A2;
            }
          }());
        }
        function replaceRequestBody(e2, n2) {
          for (const A2 in n2) {
            let t2 = n2[A2];
            if (typeof t2 === "function") {
              t2 = t2.bind(n2);
            }
            e2[A2] = t2;
          }
          return e2;
        }
        function isUint8ArrayChunk(e2) {
          var n2;
          return ((n2 = e2 === null || e2 === void 0 ? void 0 : e2.constructor) === null || n2 === void 0 ? void 0 : n2.name) == "Uint8Array";
        }
        async function* consumeUint8ArrayReadableStream(e2) {
          const n2 = e2 === null || e2 === void 0 ? void 0 : e2.getReader();
          if (n2) {
            let e3;
            try {
              while (true) {
                const { done: A2, value: t2 } = await n2.read();
                if (A2) {
                  return;
                }
                if (!isUint8ArrayChunk(t2)) {
                  e3 = new TypeError("This ReadableStream did not return bytes.");
                  break;
                }
                yield t2;
              }
            } finally {
              if (e3) {
                n2.cancel(e3);
                throw e3;
              } else {
                n2.cancel();
              }
            }
          }
        }
        n.consumeUint8ArrayReadableStream = consumeUint8ArrayReadableStream;
        async function pipeBodyStreamToResponse(e2, n2) {
          if (!e2)
            return;
          if (n2.destroyed)
            return e2.cancel();
          let A2;
          n2.on("drain", () => A2 === null || A2 === void 0 ? void 0 : A2());
          let t2 = true;
          n2.on("close", () => {
            t2 = false;
            A2 === null || A2 === void 0 ? void 0 : A2();
          });
          const r = e2.getReader();
          while (t2) {
            const { done: e3, value: s } = await r.read();
            if (e3)
              break;
            if (!isUint8ArrayChunk(s)) {
              const e4 = new TypeError("This ReadableStream did not return bytes.");
              r.cancel(e4);
              throw e4;
            }
            if (t2) {
              const e4 = n2.write(s);
              if (!e4) {
                await new Promise((e5) => {
                  A2 = e5;
                });
              }
            }
            if (!t2) {
              return r.cancel();
            }
          }
        }
        n.pipeBodyStreamToResponse = pipeBodyStreamToResponse;
      }, 917: function(e, n, A) {
        "use strict";
        var t = this && this.__importDefault || function(e2) {
          return e2 && e2.__esModule ? e2 : { default: e2 };
        };
        Object.defineProperty(n, "__esModule", { value: true });
        n.createHandler = void 0;
        const r = A(237);
        const s = t(A(606));
        const o = t(A(943));
        const i = A(685);
        function createHandler(e2) {
          const n2 = /* @__PURE__ */ new Set();
          return { handler: async (A2, t2) => {
            var a, l;
            try {
              const c = (0, o.default)();
              const E = A2.method !== "GET" && A2.method !== "HEAD" ? (0, r.getClonableBodyStream)(A2, e2.runtime.evaluate("Uint8Array"), e2.runtime.context.TransformStream) : void 0;
              const g = await e2.runtime.dispatchFetch(String(getURL(A2)), { headers: toRequestInitHeaders(A2), method: A2.method, body: E === null || E === void 0 ? void 0 : E.cloneBodyStream() });
              const Q = g.waitUntil();
              n2.add(Q);
              Q.finally(() => n2.delete(Q));
              t2.statusCode = g.status;
              t2.statusMessage = g.statusText;
              for (const [e3, n3] of Object.entries(toNodeHeaders(g.headers))) {
                if (n3 !== void 0) {
                  t2.setHeader(e3, n3);
                }
              }
              await (0, r.pipeBodyStreamToResponse)(g.body, t2);
              const u = `${A2.socket.remoteAddress} ${A2.method} ${A2.url}`;
              const B = `${(a = (0, s.default)(c()).match(/[a-zA-Z]+|[0-9]+/g)) === null || a === void 0 ? void 0 : a.join(" ")}`;
              const C = `${t2.statusCode} ${i.STATUS_CODES[t2.statusCode]}`;
              (l = e2.logger) === null || l === void 0 ? void 0 : l.debug(`${u} → ${C} in ${B}`);
              t2.end();
            } finally {
              if (!t2.writableEnded) {
                t2.end();
              }
            }
          }, waitUntil: () => Promise.all(n2) };
        }
        n.createHandler = createHandler;
        function getURL(e2) {
          var n2;
          const A2 = ((n2 = e2.socket) === null || n2 === void 0 ? void 0 : n2.encrypted) ? "https" : "http";
          return new URL(String(e2.url), `${A2}://${String(e2.headers.host)}`);
        }
        function toRequestInitHeaders(e2) {
          return Object.keys(e2.headers).map((n2) => {
            const A2 = e2.headers[n2];
            return [n2, Array.isArray(A2) ? A2.join(", ") : A2 !== null && A2 !== void 0 ? A2 : ""];
          });
        }
        function toNodeHeaders(e2) {
          const n2 = {};
          if (e2) {
            for (const [A2, t2] of e2.entries()) {
              n2[A2] = A2 === "set-cookie" ? e2.getSetCookie() : t2;
            }
          }
          return n2;
        }
      }, 654: (e, n, A) => {
        "use strict";
        Object.defineProperty(n, "__esModule", { value: true });
        n.runServer = n.createHandler = n.pipeBodyStreamToResponse = n.consumeUint8ArrayReadableStream = void 0;
        var t = A(237);
        Object.defineProperty(n, "consumeUint8ArrayReadableStream", { enumerable: true, get: function() {
          return t.consumeUint8ArrayReadableStream;
        } });
        Object.defineProperty(n, "pipeBodyStreamToResponse", { enumerable: true, get: function() {
          return t.pipeBodyStreamToResponse;
        } });
        var r = A(917);
        Object.defineProperty(n, "createHandler", { enumerable: true, get: function() {
          return r.createHandler;
        } });
        var s = A(145);
        Object.defineProperty(n, "runServer", { enumerable: true, get: function() {
          return s.runServer;
        } });
      }, 145: function(e, n, A) {
        "use strict";
        var t = this && this.__importDefault || function(e2) {
          return e2 && e2.__esModule ? e2 : { default: e2 };
        };
        Object.defineProperty(n, "__esModule", { value: true });
        n.runServer = void 0;
        const r = A(917);
        const s = t(A(41));
        const o = t(A(685));
        async function runServer(e2) {
          if (e2.port === void 0)
            e2.port = 0;
          const { handler: n2, waitUntil: A2 } = (0, r.createHandler)(e2);
          const t2 = o.default.createServer(n2);
          const i = await (0, s.default)(t2, e2);
          return { url: String(i), close: async () => {
            await A2();
            await new Promise((e3, n3) => t2.close((A3) => {
              if (A3)
                n3(A3);
              e3();
            }));
          }, waitUntil: A2 };
        }
        n.runServer = runServer;
      }, 523: (e) => {
        "use strict";
        e.exports = (e2) => {
          if (typeof e2 !== "number") {
            throw new TypeError("Expected a number");
          }
          const n = e2 > 0 ? Math.floor : Math.ceil;
          return { days: n(e2 / 864e5), hours: n(e2 / 36e5) % 24, minutes: n(e2 / 6e4) % 60, seconds: n(e2 / 1e3) % 60, milliseconds: n(e2) % 1e3, microseconds: n(e2 * 1e3) % 1e3, nanoseconds: n(e2 * 1e6) % 1e3 };
        };
      }, 606: (e, n, A) => {
        "use strict";
        const t = A(523);
        const pluralize = (e2, n2) => n2 === 1 ? e2 : `${e2}s`;
        const r = 1e-7;
        e.exports = (e2, n2 = {}) => {
          if (!Number.isFinite(e2)) {
            throw new TypeError("Expected a finite number");
          }
          if (n2.colonNotation) {
            n2.compact = false;
            n2.formatSubMilliseconds = false;
            n2.separateMilliseconds = false;
            n2.verbose = false;
          }
          if (n2.compact) {
            n2.secondsDecimalDigits = 0;
            n2.millisecondsDecimalDigits = 0;
          }
          const A2 = [];
          const floorDecimals = (e3, n3) => {
            const A3 = Math.floor(e3 * 10 ** n3 + r);
            const t2 = Math.round(A3) / 10 ** n3;
            return t2.toFixed(n3);
          };
          const add = (e3, t2, r2, s2) => {
            if ((A2.length === 0 || !n2.colonNotation) && e3 === 0 && !(n2.colonNotation && r2 === "m")) {
              return;
            }
            s2 = (s2 || e3 || "0").toString();
            let o;
            let i;
            if (n2.colonNotation) {
              o = A2.length > 0 ? ":" : "";
              i = "";
              const e4 = s2.includes(".") ? s2.split(".")[0].length : s2.length;
              const n3 = A2.length > 0 ? 2 : 1;
              s2 = "0".repeat(Math.max(0, n3 - e4)) + s2;
            } else {
              o = "";
              i = n2.verbose ? " " + pluralize(t2, e3) : r2;
            }
            A2.push(o + s2 + i);
          };
          const s = t(e2);
          add(Math.trunc(s.days / 365), "year", "y");
          add(s.days % 365, "day", "d");
          add(s.hours, "hour", "h");
          add(s.minutes, "minute", "m");
          if (n2.separateMilliseconds || n2.formatSubMilliseconds || !n2.colonNotation && e2 < 1e3) {
            add(s.seconds, "second", "s");
            if (n2.formatSubMilliseconds) {
              add(s.milliseconds, "millisecond", "ms");
              add(s.microseconds, "microsecond", "µs");
              add(s.nanoseconds, "nanosecond", "ns");
            } else {
              const e3 = s.milliseconds + s.microseconds / 1e3 + s.nanoseconds / 1e6;
              const A3 = typeof n2.millisecondsDecimalDigits === "number" ? n2.millisecondsDecimalDigits : 0;
              const t2 = e3 >= 1 ? Math.round(e3) : Math.ceil(e3);
              const r2 = A3 ? e3.toFixed(A3) : t2;
              add(Number.parseFloat(r2, 10), "millisecond", "ms", r2);
            }
          } else {
            const A3 = e2 / 1e3 % 60;
            const t2 = typeof n2.secondsDecimalDigits === "number" ? n2.secondsDecimalDigits : 1;
            const r2 = floorDecimals(A3, t2);
            const s2 = n2.keepDecimalsOnWholeSeconds ? r2 : r2.replace(/\.0+$/, "");
            add(Number.parseFloat(s2, 10), "second", "s", s2);
          }
          if (A2.length === 0) {
            return "0" + (n2.verbose ? " milliseconds" : "ms");
          }
          if (n2.compact) {
            return A2[0];
          }
          if (typeof n2.unitCount === "number") {
            const e3 = n2.colonNotation ? "" : " ";
            return A2.slice(0, Math.max(n2.unitCount, 1)).join(e3);
          }
          return n2.colonNotation ? A2.join("") : A2.join(" ");
        };
      }, 943: (e, n, A) => {
        "use strict";
        const t = A(162);
        e.exports = () => {
          const e2 = process.hrtime();
          const end = (n2) => t(process.hrtime(e2))[n2];
          const returnValue = () => end("milliseconds");
          returnValue.rounded = () => Math.round(end("milliseconds"));
          returnValue.seconds = () => end("seconds");
          returnValue.nanoseconds = () => end("nanoseconds");
          return returnValue;
        };
      }, 113: (e) => {
        "use strict";
        e.exports = require_crypto();
      }, 361: (e) => {
        "use strict";
        e.exports = require_events();
      }, 685: (e) => {
        "use strict";
        e.exports = require_http();
      }, 687: (e) => {
        "use strict";
        e.exports = require_https();
      }, 188: (e) => {
        "use strict";
        e.exports = require_module();
      }, 17: (e) => {
        "use strict";
        e.exports = require_path();
      }, 781: (e) => {
        "use strict";
        e.exports = require_stream();
      }, 356: (e) => {
        "use strict";
        e.exports = require_web();
      }, 144: (e) => {
        "use strict";
        e.exports = require_vm();
      } };
      var __webpack_module_cache__ = {};
      function __nccwpck_require__(e) {
        var n = __webpack_module_cache__[e];
        if (n !== void 0) {
          return n.exports;
        }
        var A = __webpack_module_cache__[e] = { exports: {} };
        var t = true;
        try {
          __webpack_modules__[e].call(A.exports, A, A.exports, __nccwpck_require__);
          t = false;
        } finally {
          if (t)
            delete __webpack_module_cache__[e];
        }
        return A.exports;
      }
      if (typeof __nccwpck_require__ !== "undefined")
        __nccwpck_require__.ab = __dirname + "/";
      var __webpack_exports__ = {};
      (() => {
        "use strict";
        var e = __webpack_exports__;
        Object.defineProperty(e, "__esModule", { value: true });
        e.EdgeRuntime = e.runServer = e.createHandler = e.pipeBodyStreamToResponse = e.consumeUint8ArrayReadableStream = void 0;
        var n = __nccwpck_require__(654);
        Object.defineProperty(e, "consumeUint8ArrayReadableStream", { enumerable: true, get: function() {
          return n.consumeUint8ArrayReadableStream;
        } });
        Object.defineProperty(e, "pipeBodyStreamToResponse", { enumerable: true, get: function() {
          return n.pipeBodyStreamToResponse;
        } });
        Object.defineProperty(e, "createHandler", { enumerable: true, get: function() {
          return n.createHandler;
        } });
        Object.defineProperty(e, "runServer", { enumerable: true, get: function() {
          return n.runServer;
        } });
        var A = __nccwpck_require__(985);
        Object.defineProperty(e, "EdgeRuntime", { enumerable: true, get: function() {
          return A.EdgeRuntime;
        } });
      })();
      module.exports = __webpack_exports__;
    })();
  }
});

// ../../../node_modules/next/dist/server/web/utils.js
var require_utils3 = __commonJS({
  "../../../node_modules/next/dist/server/web/utils.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name2 in all)
        Object.defineProperty(target, name2, {
          enumerable: true,
          get: all[name2]
        });
    }
    _export(exports2, {
      fromNodeOutgoingHttpHeaders: function() {
        return fromNodeOutgoingHttpHeaders;
      },
      splitCookiesString: function() {
        return splitCookiesString;
      },
      toNodeOutgoingHttpHeaders: function() {
        return toNodeOutgoingHttpHeaders;
      },
      validateURL: function() {
        return validateURL;
      }
    });
    function fromNodeOutgoingHttpHeaders(nodeHeaders) {
      const headers = new Headers();
      for (let [key, value] of Object.entries(nodeHeaders)) {
        const values = Array.isArray(value) ? value : [
          value
        ];
        for (let v of values) {
          if (typeof v === "undefined")
            continue;
          if (typeof v === "number") {
            v = v.toString();
          }
          headers.append(key, v);
        }
      }
      return headers;
    }
    function splitCookiesString(cookiesString) {
      var cookiesStrings = [];
      var pos = 0;
      var start;
      var ch;
      var lastComma;
      var nextStart;
      var cookiesSeparatorFound;
      function skipWhitespace() {
        while (pos < cookiesString.length && /\s/.test(cookiesString.charAt(pos))) {
          pos += 1;
        }
        return pos < cookiesString.length;
      }
      function notSpecialChar() {
        ch = cookiesString.charAt(pos);
        return ch !== "=" && ch !== ";" && ch !== ",";
      }
      while (pos < cookiesString.length) {
        start = pos;
        cookiesSeparatorFound = false;
        while (skipWhitespace()) {
          ch = cookiesString.charAt(pos);
          if (ch === ",") {
            lastComma = pos;
            pos += 1;
            skipWhitespace();
            nextStart = pos;
            while (pos < cookiesString.length && notSpecialChar()) {
              pos += 1;
            }
            if (pos < cookiesString.length && cookiesString.charAt(pos) === "=") {
              cookiesSeparatorFound = true;
              pos = nextStart;
              cookiesStrings.push(cookiesString.substring(start, lastComma));
              start = pos;
            } else {
              pos = lastComma + 1;
            }
          } else {
            pos += 1;
          }
        }
        if (!cookiesSeparatorFound || pos >= cookiesString.length) {
          cookiesStrings.push(cookiesString.substring(start, cookiesString.length));
        }
      }
      return cookiesStrings;
    }
    function toNodeOutgoingHttpHeaders(headers) {
      const nodeHeaders = {};
      const cookies = [];
      if (headers) {
        for (const [key, value] of headers.entries()) {
          if (key.toLowerCase() === "set-cookie") {
            cookies.push(...splitCookiesString(value));
            nodeHeaders[key] = cookies.length === 1 ? cookies[0] : cookies;
          } else {
            nodeHeaders[key] = value;
          }
        }
      }
      return nodeHeaders;
    }
    function validateURL(url) {
      try {
        return String(new URL(String(url)));
      } catch (error) {
        throw new Error(`URL is malformed "${String(url)}". Please use only absolute URLs - https://nextjs.org/docs/messages/middleware-relative-urls`, {
          cause: error
        });
      }
    }
  }
});

// ../../../node_modules/next/dist/lib/pick.js
var require_pick = __commonJS({
  "../../../node_modules/next/dist/lib/pick.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    Object.defineProperty(exports2, "pick", {
      enumerable: true,
      get: function() {
        return pick;
      }
    });
    function pick(obj, keys) {
      const newObj = {};
      for (const key of keys) {
        newObj[key] = obj[key];
      }
      return newObj;
    }
  }
});

// ../../../node_modules/next/dist/server/body-streams.js
var require_body_streams = __commonJS({
  "../../../node_modules/next/dist/server/body-streams.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name2 in all)
        Object.defineProperty(target, name2, {
          enumerable: true,
          get: all[name2]
        });
    }
    _export(exports2, {
      requestToBodyStream: function() {
        return requestToBodyStream;
      },
      getCloneableBody: function() {
        return getCloneableBody;
      }
    });
    var _stream = require_stream();
    function requestToBodyStream(context, KUint8Array, stream) {
      return new context.ReadableStream({
        start: async (controller) => {
          for await (const chunk of stream) {
            controller.enqueue(new KUint8Array(chunk));
          }
          controller.close();
        }
      });
    }
    function replaceRequestBody(base, stream) {
      for (const key in stream) {
        let v = stream[key];
        if (typeof v === "function") {
          v = v.bind(base);
        }
        base[key] = v;
      }
      return base;
    }
    function getCloneableBody(readable) {
      let buffered = null;
      const endPromise = new Promise((resolve, reject) => {
        readable.on("end", resolve);
        readable.on("error", reject);
      }).catch((error) => {
        return {
          error
        };
      });
      return {
        /**
        * Replaces the original request body if necessary.
        * This is done because once we read the body from the original request,
        * we can't read it again.
        */
        async finalize() {
          if (buffered) {
            const res = await endPromise;
            if (res && typeof res === "object" && res.error) {
              throw res.error;
            }
            replaceRequestBody(readable, buffered);
            buffered = readable;
          }
        },
        /**
        * Clones the body stream
        * to pass into a middleware
        */
        cloneBodyStream() {
          const input = buffered ?? readable;
          const p1 = new _stream.PassThrough();
          const p2 = new _stream.PassThrough();
          input.on("data", (chunk) => {
            p1.push(chunk);
            p2.push(chunk);
          });
          input.on("end", () => {
            p1.push(null);
            p2.push(null);
          });
          buffered = p2;
          return p1;
        }
      };
    }
  }
});

// ../../../node_modules/next/dist/server/web/sandbox/fetch-inline-assets.js
var require_fetch_inline_assets = __commonJS({
  "../../../node_modules/next/dist/server/web/sandbox/fetch-inline-assets.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    Object.defineProperty(exports2, "fetchInlineAsset", {
      enumerable: true,
      get: function() {
        return fetchInlineAsset;
      }
    });
    var _fs = require_fs();
    var _bodystreams = require_body_streams();
    var _path = require_path();
    async function fetchInlineAsset(options) {
      var _options_assets;
      const inputString = String(options.input);
      if (!inputString.startsWith("blob:")) {
        return;
      }
      const hash = inputString.replace("blob:", "");
      const asset = (_options_assets = options.assets) == null ? void 0 : _options_assets.find((x) => x.name === hash);
      if (!asset) {
        return;
      }
      const filePath = (0, _path.resolve)(options.distDir, asset.filePath);
      const fileIsReadable = await _fs.promises.access(filePath).then(() => true, () => false);
      if (fileIsReadable) {
        const readStream = (0, _fs.createReadStream)(filePath);
        return new options.context.Response((0, _bodystreams.requestToBodyStream)(options.context, Uint8Array, readStream));
      }
    }
  }
});

// browser-external:node:buffer
var require_node_buffer = __commonJS({
  "browser-external:node:buffer"(exports2, module2) {
    module2.exports = Object.create(new Proxy({}, {
      get(_, key) {
        if (key !== "__esModule" && key !== "__proto__" && key !== "constructor" && key !== "splice") {
          console.warn(`Module "node:buffer" has been externalized for browser compatibility. Cannot access "node:buffer.${key}" in client code. See https://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`);
        }
      }
    }));
  }
});

// browser-external:node:events
var require_node_events = __commonJS({
  "browser-external:node:events"(exports2, module2) {
    module2.exports = Object.create(new Proxy({}, {
      get(_, key) {
        if (key !== "__esModule" && key !== "__proto__" && key !== "constructor" && key !== "splice") {
          console.warn(`Module "node:events" has been externalized for browser compatibility. Cannot access "node:events.${key}" in client code. See https://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`);
        }
      }
    }));
  }
});

// browser-external:node:assert
var require_node_assert = __commonJS({
  "browser-external:node:assert"(exports2, module2) {
    module2.exports = Object.create(new Proxy({}, {
      get(_, key) {
        if (key !== "__esModule" && key !== "__proto__" && key !== "constructor" && key !== "splice") {
          console.warn(`Module "node:assert" has been externalized for browser compatibility. Cannot access "node:assert.${key}" in client code. See https://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`);
        }
      }
    }));
  }
});

// browser-external:node:util
var require_node_util = __commonJS({
  "browser-external:node:util"(exports2, module2) {
    module2.exports = Object.create(new Proxy({}, {
      get(_, key) {
        if (key !== "__esModule" && key !== "__proto__" && key !== "constructor" && key !== "splice") {
          console.warn(`Module "node:util" has been externalized for browser compatibility. Cannot access "node:util.${key}" in client code. See https://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`);
        }
      }
    }));
  }
});

// browser-external:node:async_hooks
var require_node_async_hooks = __commonJS({
  "browser-external:node:async_hooks"(exports2, module2) {
    module2.exports = Object.create(new Proxy({}, {
      get(_, key) {
        if (key !== "__esModule" && key !== "__proto__" && key !== "constructor" && key !== "splice") {
          console.warn(`Module "node:async_hooks" has been externalized for browser compatibility. Cannot access "node:async_hooks.${key}" in client code. See https://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`);
        }
      }
    }));
  }
});

// ../../../node_modules/next/dist/server/web/sandbox/resource-managers.js
var require_resource_managers = __commonJS({
  "../../../node_modules/next/dist/server/web/sandbox/resource-managers.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name2 in all)
        Object.defineProperty(target, name2, {
          enumerable: true,
          get: all[name2]
        });
    }
    _export(exports2, {
      intervalsManager: function() {
        return intervalsManager;
      },
      timeoutsManager: function() {
        return timeoutsManager;
      }
    });
    var ResourceManager = class {
      add(resourceArgs) {
        const resource = this.create(resourceArgs);
        this.resources.push(resource);
        return resource;
      }
      remove(resource) {
        this.resources = this.resources.filter((r) => r !== resource);
        this.destroy(resource);
      }
      removeAll() {
        this.resources.forEach(this.destroy);
        this.resources = [];
      }
      constructor() {
        this.resources = [];
      }
    };
    var IntervalsManager = class extends ResourceManager {
      create(args) {
        return setInterval(...args)[Symbol.toPrimitive]();
      }
      destroy(interval) {
        clearInterval(interval);
      }
    };
    var TimeoutsManager = class extends ResourceManager {
      create(args) {
        return setTimeout(...args)[Symbol.toPrimitive]();
      }
      destroy(timeout) {
        clearTimeout(timeout);
      }
    };
    var intervalsManager = new IntervalsManager();
    var timeoutsManager = new TimeoutsManager();
  }
});

// browser-external:child_process
var require_child_process = __commonJS({
  "browser-external:child_process"(exports2, module2) {
    module2.exports = Object.create(new Proxy({}, {
      get(_, key) {
        if (key !== "__esModule" && key !== "__proto__" && key !== "constructor" && key !== "splice") {
          console.warn(`Module "child_process" has been externalized for browser compatibility. Cannot access "child_process.${key}" in client code. See https://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`);
        }
      }
    }));
  }
});

// ../../../node_modules/next/dist/compiled/data-uri-to-buffer/index.js
var require_data_uri_to_buffer = __commonJS({
  "../../../node_modules/next/dist/compiled/data-uri-to-buffer/index.js"(exports2, module2) {
    (() => {
      "use strict";
      var e = { 151: (e2) => {
        function dataUriToBuffer(e3) {
          if (!/^data:/i.test(e3)) {
            throw new TypeError('`uri` does not appear to be a Data URI (must begin with "data:")');
          }
          e3 = e3.replace(/\r?\n/g, "");
          const r2 = e3.indexOf(",");
          if (r2 === -1 || r2 <= 4) {
            throw new TypeError("malformed data: URI");
          }
          const t2 = e3.substring(5, r2).split(";");
          let a = "";
          let i = false;
          const s = t2[0] || "text/plain";
          let n = s;
          for (let e4 = 1; e4 < t2.length; e4++) {
            if (t2[e4] === "base64") {
              i = true;
            } else {
              n += `;${t2[e4]}`;
              if (t2[e4].indexOf("charset=") === 0) {
                a = t2[e4].substring(8);
              }
            }
          }
          if (!t2[0] && !a.length) {
            n += ";charset=US-ASCII";
            a = "US-ASCII";
          }
          const o = i ? "base64" : "ascii";
          const f = unescape(e3.substring(r2 + 1));
          const _ = Buffer.from(f, o);
          _.type = s;
          _.typeFull = n;
          _.charset = a;
          return _;
        }
        e2.exports = dataUriToBuffer;
      } };
      var r = {};
      function __nccwpck_require__2(t2) {
        var a = r[t2];
        if (a !== void 0) {
          return a.exports;
        }
        var i = r[t2] = { exports: {} };
        var s = true;
        try {
          e[t2](i, i.exports, __nccwpck_require__2);
          s = false;
        } finally {
          if (s)
            delete r[t2];
        }
        return i.exports;
      }
      if (typeof __nccwpck_require__2 !== "undefined")
        __nccwpck_require__2.ab = __dirname + "/";
      var t = __nccwpck_require__2(151);
      module2.exports = t;
    })();
  }
});

// ../../../node_modules/next/dist/compiled/shell-quote/index.js
var require_shell_quote = __commonJS({
  "../../../node_modules/next/dist/compiled/shell-quote/index.js"(exports2, module2) {
    (() => {
      if (typeof __nccwpck_require__ !== "undefined")
        __nccwpck_require__.ab = __dirname + "/";
      var e = {};
      (() => {
        var r = e;
        r.quote = function(e2) {
          return e2.map(function(e3) {
            if (e3 && typeof e3 === "object") {
              return e3.op.replace(/(.)/g, "\\$1");
            } else if (/["\s]/.test(e3) && !/'/.test(e3)) {
              return "'" + e3.replace(/(['\\])/g, "\\$1") + "'";
            } else if (/["'\s]/.test(e3)) {
              return '"' + e3.replace(/(["\\$`!])/g, "\\$1") + '"';
            } else {
              return String(e3).replace(/([A-Za-z]:)?([#!"$&'()*,:;<=>?@\[\\\]^`{|}])/g, "$1\\$2");
            }
          }).join(" ");
        };
        var t = "(?:" + ["\\|\\|", "\\&\\&", ";;", "\\|\\&", "\\<\\(", ">>", ">\\&", "[&;()|<>]"].join("|") + ")";
        var n = "|&;()<> \\t";
        var i = `(\\\\['"` + n + `]|[^\\s'"` + n + "])+";
        var a = '"((\\\\"|[^"])*?)"';
        var f = "'((\\\\'|[^'])*?)'";
        var s = "";
        for (var u = 0; u < 4; u++) {
          s += (Math.pow(16, 8) * Math.random()).toString(16);
        }
        r.parse = function(e2, r2, t2) {
          var n2 = parse(e2, r2, t2);
          if (typeof r2 !== "function")
            return n2;
          return n2.reduce(function(e3, r3) {
            if (typeof r3 === "object")
              return e3.concat(r3);
            var t3 = r3.split(RegExp("(" + s + ".*?" + s + ")", "g"));
            if (t3.length === 1)
              return e3.concat(t3[0]);
            return e3.concat(t3.filter(Boolean).map(function(e4) {
              if (RegExp("^" + s).test(e4)) {
                return JSON.parse(e4.split(s)[1]);
              } else
                return e4;
            }));
          }, []);
        };
        function parse(e2, r2, n2) {
          var u2 = new RegExp(["(" + t + ")", "(" + i + "|" + a + "|" + f + ")*"].join("|"), "g");
          var o = e2.match(u2).filter(Boolean);
          var l = false;
          if (!o)
            return [];
          if (!r2)
            r2 = {};
          if (!n2)
            n2 = {};
          return o.map(function(e3, r3) {
            if (l) {
              return;
            }
            if (RegExp("^" + t + "$").test(e3)) {
              return { op: e3 };
            }
            var i2 = "'";
            var a2 = '"';
            var f2 = "$";
            var s2 = n2.escape || "\\";
            var u3 = false;
            var c = false;
            var p = "";
            var v = false;
            for (var g = 0, d = e3.length; g < d; g++) {
              var h = e3.charAt(g);
              v = v || !u3 && (h === "*" || h === "?");
              if (c) {
                p += h;
                c = false;
              } else if (u3) {
                if (h === u3) {
                  u3 = false;
                } else if (u3 == i2) {
                  p += h;
                } else {
                  if (h === s2) {
                    g += 1;
                    h = e3.charAt(g);
                    if (h === a2 || h === s2 || h === f2) {
                      p += h;
                    } else {
                      p += s2 + h;
                    }
                  } else if (h === f2) {
                    p += parseEnvVar();
                  } else {
                    p += h;
                  }
                }
              } else if (h === a2 || h === i2) {
                u3 = h;
              } else if (RegExp("^" + t + "$").test(h)) {
                return { op: e3 };
              } else if (RegExp("^#$").test(h)) {
                l = true;
                if (p.length) {
                  return [p, { comment: e3.slice(g + 1) + o.slice(r3 + 1).join(" ") }];
                }
                return [{ comment: e3.slice(g + 1) + o.slice(r3 + 1).join(" ") }];
              } else if (h === s2) {
                c = true;
              } else if (h === f2) {
                p += parseEnvVar();
              } else
                p += h;
            }
            if (v)
              return { op: "glob", pattern: p };
            return p;
            function parseEnvVar() {
              g += 1;
              var r4, t2;
              if (e3.charAt(g) === "{") {
                g += 1;
                if (e3.charAt(g) === "}") {
                  throw new Error("Bad substitution: " + e3.substr(g - 2, 3));
                }
                r4 = e3.indexOf("}", g);
                if (r4 < 0) {
                  throw new Error("Bad substitution: " + e3.substr(g));
                }
                t2 = e3.substr(g, r4 - g);
                g = r4;
              } else if (/[*@#?$!_\-]/.test(e3.charAt(g))) {
                t2 = e3.charAt(g);
                g += 1;
              } else {
                r4 = e3.substr(g).match(/[^\w\d_]/);
                if (!r4) {
                  t2 = e3.substr(g);
                  g = e3.length;
                } else {
                  t2 = e3.substr(g, r4.index);
                  g += r4.index - 1;
                }
              }
              return getVar(null, "", t2);
            }
          }).reduce(function(e3, r3) {
            if (r3 === void 0) {
              return e3;
            }
            return e3.concat(r3);
          }, []);
          function getVar(e3, t2, n3) {
            var i2 = typeof r2 === "function" ? r2(n3) : r2[n3];
            if (i2 === void 0 && n3 != "")
              i2 = "";
            else if (i2 === void 0)
              i2 = "$";
            if (typeof i2 === "object") {
              return t2 + s + JSON.stringify(i2) + s;
            } else
              return t2 + i2;
          }
        }
      })();
      module2.exports = e;
    })();
  }
});

// ../../../node_modules/next/dist/compiled/stacktrace-parser/stack-trace-parser.cjs.js
var require_stack_trace_parser_cjs = __commonJS({
  "../../../node_modules/next/dist/compiled/stacktrace-parser/stack-trace-parser.cjs.js"(exports2, module2) {
    (() => {
      "use strict";
      if (typeof __nccwpck_require__ !== "undefined")
        __nccwpck_require__.ab = __dirname + "/";
      var e = {};
      (() => {
        var r = e;
        Object.defineProperty(r, "__esModule", { value: true });
        var n = "<unknown>";
        function parse(e2) {
          var r2 = e2.split("\n");
          return r2.reduce(function(e3, r3) {
            var n2 = parseChrome(r3) || parseWinjs(r3) || parseGecko(r3) || parseNode(r3) || parseJSC(r3);
            if (n2) {
              e3.push(n2);
            }
            return e3;
          }, []);
        }
        var a = /^\s*at (.*?) ?\(((?:file|https?|blob|chrome-extension|native|eval|webpack|<anonymous>|\/|[a-z]:\\|\\\\).*?)(?::(\d+))?(?::(\d+))?\)?\s*$/i;
        var l = /\((\S*)(?::(\d+))(?::(\d+))\)/;
        function parseChrome(e2) {
          var r2 = a.exec(e2);
          if (!r2) {
            return null;
          }
          var u2 = r2[2] && r2[2].indexOf("native") === 0;
          var t2 = r2[2] && r2[2].indexOf("eval") === 0;
          var i2 = l.exec(r2[2]);
          if (t2 && i2 != null) {
            r2[2] = i2[1];
            r2[3] = i2[2];
            r2[4] = i2[3];
          }
          return { file: !u2 ? r2[2] : null, methodName: r2[1] || n, arguments: u2 ? [r2[2]] : [], lineNumber: r2[3] ? +r2[3] : null, column: r2[4] ? +r2[4] : null };
        }
        var u = /^\s*at (?:((?:\[object object\])?.+) )?\(?((?:file|ms-appx|https?|webpack|blob):.*?):(\d+)(?::(\d+))?\)?\s*$/i;
        function parseWinjs(e2) {
          var r2 = u.exec(e2);
          if (!r2) {
            return null;
          }
          return { file: r2[2], methodName: r2[1] || n, arguments: [], lineNumber: +r2[3], column: r2[4] ? +r2[4] : null };
        }
        var t = /^\s*(.*?)(?:\((.*?)\))?(?:^|@)((?:file|https?|blob|chrome|webpack|resource|\[native).*?|[^@]*bundle)(?::(\d+))?(?::(\d+))?\s*$/i;
        var i = /(\S+) line (\d+)(?: > eval line \d+)* > eval/i;
        function parseGecko(e2) {
          var r2 = t.exec(e2);
          if (!r2) {
            return null;
          }
          var a2 = r2[3] && r2[3].indexOf(" > eval") > -1;
          var l2 = i.exec(r2[3]);
          if (a2 && l2 != null) {
            r2[3] = l2[1];
            r2[4] = l2[2];
            r2[5] = null;
          }
          return { file: r2[3], methodName: r2[1] || n, arguments: r2[2] ? r2[2].split(",") : [], lineNumber: r2[4] ? +r2[4] : null, column: r2[5] ? +r2[5] : null };
        }
        var s = /^\s*(?:([^@]*)(?:\((.*?)\))?@)?(\S.*?):(\d+)(?::(\d+))?\s*$/i;
        function parseJSC(e2) {
          var r2 = s.exec(e2);
          if (!r2) {
            return null;
          }
          return { file: r2[3], methodName: r2[1] || n, arguments: [], lineNumber: +r2[4], column: r2[5] ? +r2[5] : null };
        }
        var o = /^\s*at (?:((?:\[object object\])?[^\\/]+(?: \[as \S+\])?) )?\(?(.*?):(\d+)(?::(\d+))?\)?\s*$/i;
        function parseNode(e2) {
          var r2 = o.exec(e2);
          if (!r2) {
            return null;
          }
          return { file: r2[2], methodName: r2[1] || n, arguments: [], lineNumber: +r2[3], column: r2[4] ? +r2[4] : null };
        }
        r.parse = parse;
      })();
      module2.exports = e;
    })();
  }
});

// browser-external:os
var require_os = __commonJS({
  "browser-external:os"(exports2, module2) {
    module2.exports = Object.create(new Proxy({}, {
      get(_, key) {
        if (key !== "__esModule" && key !== "__proto__" && key !== "constructor" && key !== "splice") {
          console.warn(`Module "os" has been externalized for browser compatibility. Cannot access "os.${key}" in client code. See https://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`);
        }
      }
    }));
  }
});

// browser-external:tty
var require_tty = __commonJS({
  "browser-external:tty"(exports2, module2) {
    module2.exports = Object.create(new Proxy({}, {
      get(_, key) {
        if (key !== "__esModule" && key !== "__proto__" && key !== "constructor" && key !== "splice") {
          console.warn(`Module "tty" has been externalized for browser compatibility. Cannot access "tty.${key}" in client code. See https://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`);
        }
      }
    }));
  }
});

// ../../../node_modules/next/dist/compiled/@next/react-dev-overlay/dist/middleware.js
var require_middleware = __commonJS({
  "../../../node_modules/next/dist/compiled/@next/react-dev-overlay/dist/middleware.js"(exports2, module2) {
    (function() {
      var e = { 535: function(e2, t2, r2) {
        "use strict";
        e2 = r2.nmd(e2);
        const n = r2(54);
        const wrapAnsi16 = (e3, t3) => function() {
          const r3 = e3.apply(n, arguments);
          return `\x1B[${r3 + t3}m`;
        };
        const wrapAnsi256 = (e3, t3) => function() {
          const r3 = e3.apply(n, arguments);
          return `\x1B[${38 + t3};5;${r3}m`;
        };
        const wrapAnsi16m = (e3, t3) => function() {
          const r3 = e3.apply(n, arguments);
          return `\x1B[${38 + t3};2;${r3[0]};${r3[1]};${r3[2]}m`;
        };
        function assembleStyles() {
          const e3 = /* @__PURE__ */ new Map();
          const t3 = { modifier: { reset: [0, 0], bold: [1, 22], dim: [2, 22], italic: [3, 23], underline: [4, 24], inverse: [7, 27], hidden: [8, 28], strikethrough: [9, 29] }, color: { black: [30, 39], red: [31, 39], green: [32, 39], yellow: [33, 39], blue: [34, 39], magenta: [35, 39], cyan: [36, 39], white: [37, 39], gray: [90, 39], redBright: [91, 39], greenBright: [92, 39], yellowBright: [93, 39], blueBright: [94, 39], magentaBright: [95, 39], cyanBright: [96, 39], whiteBright: [97, 39] }, bgColor: { bgBlack: [40, 49], bgRed: [41, 49], bgGreen: [42, 49], bgYellow: [43, 49], bgBlue: [44, 49], bgMagenta: [45, 49], bgCyan: [46, 49], bgWhite: [47, 49], bgBlackBright: [100, 49], bgRedBright: [101, 49], bgGreenBright: [102, 49], bgYellowBright: [103, 49], bgBlueBright: [104, 49], bgMagentaBright: [105, 49], bgCyanBright: [106, 49], bgWhiteBright: [107, 49] } };
          t3.color.grey = t3.color.gray;
          for (const r3 of Object.keys(t3)) {
            const n2 = t3[r3];
            for (const r4 of Object.keys(n2)) {
              const u = n2[r4];
              t3[r4] = { open: `\x1B[${u[0]}m`, close: `\x1B[${u[1]}m` };
              n2[r4] = t3[r4];
              e3.set(u[0], u[1]);
            }
            Object.defineProperty(t3, r3, { value: n2, enumerable: false });
            Object.defineProperty(t3, "codes", { value: e3, enumerable: false });
          }
          const ansi2ansi = (e4) => e4;
          const rgb2rgb = (e4, t4, r3) => [e4, t4, r3];
          t3.color.close = "\x1B[39m";
          t3.bgColor.close = "\x1B[49m";
          t3.color.ansi = { ansi: wrapAnsi16(ansi2ansi, 0) };
          t3.color.ansi256 = { ansi256: wrapAnsi256(ansi2ansi, 0) };
          t3.color.ansi16m = { rgb: wrapAnsi16m(rgb2rgb, 0) };
          t3.bgColor.ansi = { ansi: wrapAnsi16(ansi2ansi, 10) };
          t3.bgColor.ansi256 = { ansi256: wrapAnsi256(ansi2ansi, 10) };
          t3.bgColor.ansi16m = { rgb: wrapAnsi16m(rgb2rgb, 10) };
          for (let e4 of Object.keys(n)) {
            if (typeof n[e4] !== "object") {
              continue;
            }
            const r3 = n[e4];
            if (e4 === "ansi16") {
              e4 = "ansi";
            }
            if ("ansi16" in r3) {
              t3.color.ansi[e4] = wrapAnsi16(r3.ansi16, 0);
              t3.bgColor.ansi[e4] = wrapAnsi16(r3.ansi16, 10);
            }
            if ("ansi256" in r3) {
              t3.color.ansi256[e4] = wrapAnsi256(r3.ansi256, 0);
              t3.bgColor.ansi256[e4] = wrapAnsi256(r3.ansi256, 10);
            }
            if ("rgb" in r3) {
              t3.color.ansi16m[e4] = wrapAnsi16m(r3.rgb, 0);
              t3.bgColor.ansi16m[e4] = wrapAnsi16m(r3.rgb, 10);
            }
          }
          return t3;
        }
        Object.defineProperty(e2, "exports", { enumerable: true, get: assembleStyles });
      }, 148: function(e2, t2, r2) {
        "use strict";
        const n = r2(379);
        const u = r2(535);
        const o = r2(220).stdout;
        const i = r2(299);
        const s = process.platform === "win32" && !(process.env.TERM || "").toLowerCase().startsWith("xterm");
        const a = ["ansi", "ansi", "ansi256", "ansi16m"];
        const l = /* @__PURE__ */ new Set(["gray"]);
        const c = /* @__PURE__ */ Object.create(null);
        function applyOptions(e3, t3) {
          t3 = t3 || {};
          const r3 = o ? o.level : 0;
          e3.level = t3.level === void 0 ? r3 : t3.level;
          e3.enabled = "enabled" in t3 ? t3.enabled : e3.level > 0;
        }
        function Chalk(e3) {
          if (!this || !(this instanceof Chalk) || this.template) {
            const t3 = {};
            applyOptions(t3, e3);
            t3.template = function() {
              const e4 = [].slice.call(arguments);
              return chalkTag.apply(null, [t3.template].concat(e4));
            };
            Object.setPrototypeOf(t3, Chalk.prototype);
            Object.setPrototypeOf(t3.template, t3);
            t3.template.constructor = Chalk;
            return t3.template;
          }
          applyOptions(this, e3);
        }
        if (s) {
          u.blue.open = "\x1B[94m";
        }
        for (const e3 of Object.keys(u)) {
          u[e3].closeRe = new RegExp(n(u[e3].close), "g");
          c[e3] = { get() {
            const t3 = u[e3];
            return build.call(this, this._styles ? this._styles.concat(t3) : [t3], this._empty, e3);
          } };
        }
        c.visible = { get() {
          return build.call(this, this._styles || [], true, "visible");
        } };
        u.color.closeRe = new RegExp(n(u.color.close), "g");
        for (const e3 of Object.keys(u.color.ansi)) {
          if (l.has(e3)) {
            continue;
          }
          c[e3] = { get() {
            const t3 = this.level;
            return function() {
              const r3 = u.color[a[t3]][e3].apply(null, arguments);
              const n2 = { open: r3, close: u.color.close, closeRe: u.color.closeRe };
              return build.call(this, this._styles ? this._styles.concat(n2) : [n2], this._empty, e3);
            };
          } };
        }
        u.bgColor.closeRe = new RegExp(n(u.bgColor.close), "g");
        for (const e3 of Object.keys(u.bgColor.ansi)) {
          if (l.has(e3)) {
            continue;
          }
          const t3 = "bg" + e3[0].toUpperCase() + e3.slice(1);
          c[t3] = { get() {
            const t4 = this.level;
            return function() {
              const r3 = u.bgColor[a[t4]][e3].apply(null, arguments);
              const n2 = { open: r3, close: u.bgColor.close, closeRe: u.bgColor.closeRe };
              return build.call(this, this._styles ? this._styles.concat(n2) : [n2], this._empty, e3);
            };
          } };
        }
        const f = Object.defineProperties(() => {
        }, c);
        function build(e3, t3, r3) {
          const builder = function() {
            return applyStyle.apply(builder, arguments);
          };
          builder._styles = e3;
          builder._empty = t3;
          const n2 = this;
          Object.defineProperty(builder, "level", { enumerable: true, get() {
            return n2.level;
          }, set(e4) {
            n2.level = e4;
          } });
          Object.defineProperty(builder, "enabled", { enumerable: true, get() {
            return n2.enabled;
          }, set(e4) {
            n2.enabled = e4;
          } });
          builder.hasGrey = this.hasGrey || r3 === "gray" || r3 === "grey";
          builder.__proto__ = f;
          return builder;
        }
        function applyStyle() {
          const e3 = arguments;
          const t3 = e3.length;
          let r3 = String(arguments[0]);
          if (t3 === 0) {
            return "";
          }
          if (t3 > 1) {
            for (let n3 = 1; n3 < t3; n3++) {
              r3 += " " + e3[n3];
            }
          }
          if (!this.enabled || this.level <= 0 || !r3) {
            return this._empty ? "" : r3;
          }
          const n2 = u.dim.open;
          if (s && this.hasGrey) {
            u.dim.open = "";
          }
          for (const e4 of this._styles.slice().reverse()) {
            r3 = e4.open + r3.replace(e4.closeRe, e4.open) + e4.close;
            r3 = r3.replace(/\r?\n/g, `${e4.close}$&${e4.open}`);
          }
          u.dim.open = n2;
          return r3;
        }
        function chalkTag(e3, t3) {
          if (!Array.isArray(t3)) {
            return [].slice.call(arguments, 1).join(" ");
          }
          const r3 = [].slice.call(arguments, 2);
          const n2 = [t3.raw[0]];
          for (let e4 = 1; e4 < t3.length; e4++) {
            n2.push(String(r3[e4 - 1]).replace(/[{}\\]/g, "\\$&"));
            n2.push(String(t3.raw[e4]));
          }
          return i(e3, n2.join(""));
        }
        Object.defineProperties(Chalk.prototype, c);
        e2.exports = Chalk();
        e2.exports.supportsColor = o;
        e2.exports["default"] = e2.exports;
      }, 299: function(e2) {
        "use strict";
        const t2 = /(?:\\(u[a-f\d]{4}|x[a-f\d]{2}|.))|(?:\{(~)?(\w+(?:\([^)]*\))?(?:\.\w+(?:\([^)]*\))?)*)(?:[ \t]|(?=\r?\n)))|(\})|((?:.|[\r\n\f])+?)/gi;
        const r2 = /(?:^|\.)(\w+)(?:\(([^)]*)\))?/g;
        const n = /^(['"])((?:\\.|(?!\1)[^\\])*)\1$/;
        const u = /\\(u[a-f\d]{4}|x[a-f\d]{2}|.)|([^\\])/gi;
        const o = /* @__PURE__ */ new Map([["n", "\n"], ["r", "\r"], ["t", "	"], ["b", "\b"], ["f", "\f"], ["v", "\v"], ["0", "\0"], ["\\", "\\"], ["e", "\x1B"], ["a", "\x07"]]);
        function unescape2(e3) {
          if (e3[0] === "u" && e3.length === 5 || e3[0] === "x" && e3.length === 3) {
            return String.fromCharCode(parseInt(e3.slice(1), 16));
          }
          return o.get(e3) || e3;
        }
        function parseArguments(e3, t3) {
          const r3 = [];
          const o2 = t3.trim().split(/\s*,\s*/g);
          let i;
          for (const t4 of o2) {
            if (!isNaN(t4)) {
              r3.push(Number(t4));
            } else if (i = t4.match(n)) {
              r3.push(i[2].replace(u, (e4, t5, r4) => t5 ? unescape2(t5) : r4));
            } else {
              throw new Error(`Invalid Chalk template style argument: ${t4} (in style '${e3}')`);
            }
          }
          return r3;
        }
        function parseStyle(e3) {
          r2.lastIndex = 0;
          const t3 = [];
          let n2;
          while ((n2 = r2.exec(e3)) !== null) {
            const e4 = n2[1];
            if (n2[2]) {
              const r3 = parseArguments(e4, n2[2]);
              t3.push([e4].concat(r3));
            } else {
              t3.push([e4]);
            }
          }
          return t3;
        }
        function buildStyle(e3, t3) {
          const r3 = {};
          for (const e4 of t3) {
            for (const t4 of e4.styles) {
              r3[t4[0]] = e4.inverse ? null : t4.slice(1);
            }
          }
          let n2 = e3;
          for (const e4 of Object.keys(r3)) {
            if (Array.isArray(r3[e4])) {
              if (!(e4 in n2)) {
                throw new Error(`Unknown Chalk style: ${e4}`);
              }
              if (r3[e4].length > 0) {
                n2 = n2[e4].apply(n2, r3[e4]);
              } else {
                n2 = n2[e4];
              }
            }
          }
          return n2;
        }
        e2.exports = (e3, r3) => {
          const n2 = [];
          const u2 = [];
          let o2 = [];
          r3.replace(t2, (t3, r4, i, s, a, l) => {
            if (r4) {
              o2.push(unescape2(r4));
            } else if (s) {
              const t4 = o2.join("");
              o2 = [];
              u2.push(n2.length === 0 ? t4 : buildStyle(e3, n2)(t4));
              n2.push({ inverse: i, styles: parseStyle(s) });
            } else if (a) {
              if (n2.length === 0) {
                throw new Error("Found extraneous } in Chalk template literal");
              }
              u2.push(buildStyle(e3, n2)(o2.join("")));
              o2 = [];
              n2.pop();
            } else {
              o2.push(l);
            }
          });
          u2.push(o2.join(""));
          if (n2.length > 0) {
            const e4 = `Chalk template literal is missing ${n2.length} closing bracket${n2.length === 1 ? "" : "s"} (\`}\`)`;
            throw new Error(e4);
          }
          return u2.join("");
        };
      }, 117: function(e2, t2, r2) {
        var n = r2(251);
        var u = {};
        for (var o in n) {
          if (n.hasOwnProperty(o)) {
            u[n[o]] = o;
          }
        }
        var i = e2.exports = { rgb: { channels: 3, labels: "rgb" }, hsl: { channels: 3, labels: "hsl" }, hsv: { channels: 3, labels: "hsv" }, hwb: { channels: 3, labels: "hwb" }, cmyk: { channels: 4, labels: "cmyk" }, xyz: { channels: 3, labels: "xyz" }, lab: { channels: 3, labels: "lab" }, lch: { channels: 3, labels: "lch" }, hex: { channels: 1, labels: ["hex"] }, keyword: { channels: 1, labels: ["keyword"] }, ansi16: { channels: 1, labels: ["ansi16"] }, ansi256: { channels: 1, labels: ["ansi256"] }, hcg: { channels: 3, labels: ["h", "c", "g"] }, apple: { channels: 3, labels: ["r16", "g16", "b16"] }, gray: { channels: 1, labels: ["gray"] } };
        for (var s in i) {
          if (i.hasOwnProperty(s)) {
            if (!("channels" in i[s])) {
              throw new Error("missing channels property: " + s);
            }
            if (!("labels" in i[s])) {
              throw new Error("missing channel labels property: " + s);
            }
            if (i[s].labels.length !== i[s].channels) {
              throw new Error("channel and label counts mismatch: " + s);
            }
            var a = i[s].channels;
            var l = i[s].labels;
            delete i[s].channels;
            delete i[s].labels;
            Object.defineProperty(i[s], "channels", { value: a });
            Object.defineProperty(i[s], "labels", { value: l });
          }
        }
        i.rgb.hsl = function(e3) {
          var t3 = e3[0] / 255;
          var r3 = e3[1] / 255;
          var n2 = e3[2] / 255;
          var u2 = Math.min(t3, r3, n2);
          var o2 = Math.max(t3, r3, n2);
          var i2 = o2 - u2;
          var s2;
          var a2;
          var l2;
          if (o2 === u2) {
            s2 = 0;
          } else if (t3 === o2) {
            s2 = (r3 - n2) / i2;
          } else if (r3 === o2) {
            s2 = 2 + (n2 - t3) / i2;
          } else if (n2 === o2) {
            s2 = 4 + (t3 - r3) / i2;
          }
          s2 = Math.min(s2 * 60, 360);
          if (s2 < 0) {
            s2 += 360;
          }
          l2 = (u2 + o2) / 2;
          if (o2 === u2) {
            a2 = 0;
          } else if (l2 <= 0.5) {
            a2 = i2 / (o2 + u2);
          } else {
            a2 = i2 / (2 - o2 - u2);
          }
          return [s2, a2 * 100, l2 * 100];
        };
        i.rgb.hsv = function(e3) {
          var t3;
          var r3;
          var n2;
          var u2;
          var o2;
          var i2 = e3[0] / 255;
          var s2 = e3[1] / 255;
          var a2 = e3[2] / 255;
          var l2 = Math.max(i2, s2, a2);
          var c = l2 - Math.min(i2, s2, a2);
          var diffc = function(e4) {
            return (l2 - e4) / 6 / c + 1 / 2;
          };
          if (c === 0) {
            u2 = o2 = 0;
          } else {
            o2 = c / l2;
            t3 = diffc(i2);
            r3 = diffc(s2);
            n2 = diffc(a2);
            if (i2 === l2) {
              u2 = n2 - r3;
            } else if (s2 === l2) {
              u2 = 1 / 3 + t3 - n2;
            } else if (a2 === l2) {
              u2 = 2 / 3 + r3 - t3;
            }
            if (u2 < 0) {
              u2 += 1;
            } else if (u2 > 1) {
              u2 -= 1;
            }
          }
          return [u2 * 360, o2 * 100, l2 * 100];
        };
        i.rgb.hwb = function(e3) {
          var t3 = e3[0];
          var r3 = e3[1];
          var n2 = e3[2];
          var u2 = i.rgb.hsl(e3)[0];
          var o2 = 1 / 255 * Math.min(t3, Math.min(r3, n2));
          n2 = 1 - 1 / 255 * Math.max(t3, Math.max(r3, n2));
          return [u2, o2 * 100, n2 * 100];
        };
        i.rgb.cmyk = function(e3) {
          var t3 = e3[0] / 255;
          var r3 = e3[1] / 255;
          var n2 = e3[2] / 255;
          var u2;
          var o2;
          var i2;
          var s2;
          s2 = Math.min(1 - t3, 1 - r3, 1 - n2);
          u2 = (1 - t3 - s2) / (1 - s2) || 0;
          o2 = (1 - r3 - s2) / (1 - s2) || 0;
          i2 = (1 - n2 - s2) / (1 - s2) || 0;
          return [u2 * 100, o2 * 100, i2 * 100, s2 * 100];
        };
        function comparativeDistance(e3, t3) {
          return Math.pow(e3[0] - t3[0], 2) + Math.pow(e3[1] - t3[1], 2) + Math.pow(e3[2] - t3[2], 2);
        }
        i.rgb.keyword = function(e3) {
          var t3 = u[e3];
          if (t3) {
            return t3;
          }
          var r3 = Infinity;
          var o2;
          for (var i2 in n) {
            if (n.hasOwnProperty(i2)) {
              var s2 = n[i2];
              var a2 = comparativeDistance(e3, s2);
              if (a2 < r3) {
                r3 = a2;
                o2 = i2;
              }
            }
          }
          return o2;
        };
        i.keyword.rgb = function(e3) {
          return n[e3];
        };
        i.rgb.xyz = function(e3) {
          var t3 = e3[0] / 255;
          var r3 = e3[1] / 255;
          var n2 = e3[2] / 255;
          t3 = t3 > 0.04045 ? Math.pow((t3 + 0.055) / 1.055, 2.4) : t3 / 12.92;
          r3 = r3 > 0.04045 ? Math.pow((r3 + 0.055) / 1.055, 2.4) : r3 / 12.92;
          n2 = n2 > 0.04045 ? Math.pow((n2 + 0.055) / 1.055, 2.4) : n2 / 12.92;
          var u2 = t3 * 0.4124 + r3 * 0.3576 + n2 * 0.1805;
          var o2 = t3 * 0.2126 + r3 * 0.7152 + n2 * 0.0722;
          var i2 = t3 * 0.0193 + r3 * 0.1192 + n2 * 0.9505;
          return [u2 * 100, o2 * 100, i2 * 100];
        };
        i.rgb.lab = function(e3) {
          var t3 = i.rgb.xyz(e3);
          var r3 = t3[0];
          var n2 = t3[1];
          var u2 = t3[2];
          var o2;
          var s2;
          var a2;
          r3 /= 95.047;
          n2 /= 100;
          u2 /= 108.883;
          r3 = r3 > 8856e-6 ? Math.pow(r3, 1 / 3) : 7.787 * r3 + 16 / 116;
          n2 = n2 > 8856e-6 ? Math.pow(n2, 1 / 3) : 7.787 * n2 + 16 / 116;
          u2 = u2 > 8856e-6 ? Math.pow(u2, 1 / 3) : 7.787 * u2 + 16 / 116;
          o2 = 116 * n2 - 16;
          s2 = 500 * (r3 - n2);
          a2 = 200 * (n2 - u2);
          return [o2, s2, a2];
        };
        i.hsl.rgb = function(e3) {
          var t3 = e3[0] / 360;
          var r3 = e3[1] / 100;
          var n2 = e3[2] / 100;
          var u2;
          var o2;
          var i2;
          var s2;
          var a2;
          if (r3 === 0) {
            a2 = n2 * 255;
            return [a2, a2, a2];
          }
          if (n2 < 0.5) {
            o2 = n2 * (1 + r3);
          } else {
            o2 = n2 + r3 - n2 * r3;
          }
          u2 = 2 * n2 - o2;
          s2 = [0, 0, 0];
          for (var l2 = 0; l2 < 3; l2++) {
            i2 = t3 + 1 / 3 * -(l2 - 1);
            if (i2 < 0) {
              i2++;
            }
            if (i2 > 1) {
              i2--;
            }
            if (6 * i2 < 1) {
              a2 = u2 + (o2 - u2) * 6 * i2;
            } else if (2 * i2 < 1) {
              a2 = o2;
            } else if (3 * i2 < 2) {
              a2 = u2 + (o2 - u2) * (2 / 3 - i2) * 6;
            } else {
              a2 = u2;
            }
            s2[l2] = a2 * 255;
          }
          return s2;
        };
        i.hsl.hsv = function(e3) {
          var t3 = e3[0];
          var r3 = e3[1] / 100;
          var n2 = e3[2] / 100;
          var u2 = r3;
          var o2 = Math.max(n2, 0.01);
          var i2;
          var s2;
          n2 *= 2;
          r3 *= n2 <= 1 ? n2 : 2 - n2;
          u2 *= o2 <= 1 ? o2 : 2 - o2;
          s2 = (n2 + r3) / 2;
          i2 = n2 === 0 ? 2 * u2 / (o2 + u2) : 2 * r3 / (n2 + r3);
          return [t3, i2 * 100, s2 * 100];
        };
        i.hsv.rgb = function(e3) {
          var t3 = e3[0] / 60;
          var r3 = e3[1] / 100;
          var n2 = e3[2] / 100;
          var u2 = Math.floor(t3) % 6;
          var o2 = t3 - Math.floor(t3);
          var i2 = 255 * n2 * (1 - r3);
          var s2 = 255 * n2 * (1 - r3 * o2);
          var a2 = 255 * n2 * (1 - r3 * (1 - o2));
          n2 *= 255;
          switch (u2) {
            case 0:
              return [n2, a2, i2];
            case 1:
              return [s2, n2, i2];
            case 2:
              return [i2, n2, a2];
            case 3:
              return [i2, s2, n2];
            case 4:
              return [a2, i2, n2];
            case 5:
              return [n2, i2, s2];
          }
        };
        i.hsv.hsl = function(e3) {
          var t3 = e3[0];
          var r3 = e3[1] / 100;
          var n2 = e3[2] / 100;
          var u2 = Math.max(n2, 0.01);
          var o2;
          var i2;
          var s2;
          s2 = (2 - r3) * n2;
          o2 = (2 - r3) * u2;
          i2 = r3 * u2;
          i2 /= o2 <= 1 ? o2 : 2 - o2;
          i2 = i2 || 0;
          s2 /= 2;
          return [t3, i2 * 100, s2 * 100];
        };
        i.hwb.rgb = function(e3) {
          var t3 = e3[0] / 360;
          var r3 = e3[1] / 100;
          var n2 = e3[2] / 100;
          var u2 = r3 + n2;
          var o2;
          var i2;
          var s2;
          var a2;
          if (u2 > 1) {
            r3 /= u2;
            n2 /= u2;
          }
          o2 = Math.floor(6 * t3);
          i2 = 1 - n2;
          s2 = 6 * t3 - o2;
          if ((o2 & 1) !== 0) {
            s2 = 1 - s2;
          }
          a2 = r3 + s2 * (i2 - r3);
          var l2;
          var c;
          var f;
          switch (o2) {
            default:
            case 6:
            case 0:
              l2 = i2;
              c = a2;
              f = r3;
              break;
            case 1:
              l2 = a2;
              c = i2;
              f = r3;
              break;
            case 2:
              l2 = r3;
              c = i2;
              f = a2;
              break;
            case 3:
              l2 = r3;
              c = a2;
              f = i2;
              break;
            case 4:
              l2 = a2;
              c = r3;
              f = i2;
              break;
            case 5:
              l2 = i2;
              c = r3;
              f = a2;
              break;
          }
          return [l2 * 255, c * 255, f * 255];
        };
        i.cmyk.rgb = function(e3) {
          var t3 = e3[0] / 100;
          var r3 = e3[1] / 100;
          var n2 = e3[2] / 100;
          var u2 = e3[3] / 100;
          var o2;
          var i2;
          var s2;
          o2 = 1 - Math.min(1, t3 * (1 - u2) + u2);
          i2 = 1 - Math.min(1, r3 * (1 - u2) + u2);
          s2 = 1 - Math.min(1, n2 * (1 - u2) + u2);
          return [o2 * 255, i2 * 255, s2 * 255];
        };
        i.xyz.rgb = function(e3) {
          var t3 = e3[0] / 100;
          var r3 = e3[1] / 100;
          var n2 = e3[2] / 100;
          var u2;
          var o2;
          var i2;
          u2 = t3 * 3.2406 + r3 * -1.5372 + n2 * -0.4986;
          o2 = t3 * -0.9689 + r3 * 1.8758 + n2 * 0.0415;
          i2 = t3 * 0.0557 + r3 * -0.204 + n2 * 1.057;
          u2 = u2 > 31308e-7 ? 1.055 * Math.pow(u2, 1 / 2.4) - 0.055 : u2 * 12.92;
          o2 = o2 > 31308e-7 ? 1.055 * Math.pow(o2, 1 / 2.4) - 0.055 : o2 * 12.92;
          i2 = i2 > 31308e-7 ? 1.055 * Math.pow(i2, 1 / 2.4) - 0.055 : i2 * 12.92;
          u2 = Math.min(Math.max(0, u2), 1);
          o2 = Math.min(Math.max(0, o2), 1);
          i2 = Math.min(Math.max(0, i2), 1);
          return [u2 * 255, o2 * 255, i2 * 255];
        };
        i.xyz.lab = function(e3) {
          var t3 = e3[0];
          var r3 = e3[1];
          var n2 = e3[2];
          var u2;
          var o2;
          var i2;
          t3 /= 95.047;
          r3 /= 100;
          n2 /= 108.883;
          t3 = t3 > 8856e-6 ? Math.pow(t3, 1 / 3) : 7.787 * t3 + 16 / 116;
          r3 = r3 > 8856e-6 ? Math.pow(r3, 1 / 3) : 7.787 * r3 + 16 / 116;
          n2 = n2 > 8856e-6 ? Math.pow(n2, 1 / 3) : 7.787 * n2 + 16 / 116;
          u2 = 116 * r3 - 16;
          o2 = 500 * (t3 - r3);
          i2 = 200 * (r3 - n2);
          return [u2, o2, i2];
        };
        i.lab.xyz = function(e3) {
          var t3 = e3[0];
          var r3 = e3[1];
          var n2 = e3[2];
          var u2;
          var o2;
          var i2;
          o2 = (t3 + 16) / 116;
          u2 = r3 / 500 + o2;
          i2 = o2 - n2 / 200;
          var s2 = Math.pow(o2, 3);
          var a2 = Math.pow(u2, 3);
          var l2 = Math.pow(i2, 3);
          o2 = s2 > 8856e-6 ? s2 : (o2 - 16 / 116) / 7.787;
          u2 = a2 > 8856e-6 ? a2 : (u2 - 16 / 116) / 7.787;
          i2 = l2 > 8856e-6 ? l2 : (i2 - 16 / 116) / 7.787;
          u2 *= 95.047;
          o2 *= 100;
          i2 *= 108.883;
          return [u2, o2, i2];
        };
        i.lab.lch = function(e3) {
          var t3 = e3[0];
          var r3 = e3[1];
          var n2 = e3[2];
          var u2;
          var o2;
          var i2;
          u2 = Math.atan2(n2, r3);
          o2 = u2 * 360 / 2 / Math.PI;
          if (o2 < 0) {
            o2 += 360;
          }
          i2 = Math.sqrt(r3 * r3 + n2 * n2);
          return [t3, i2, o2];
        };
        i.lch.lab = function(e3) {
          var t3 = e3[0];
          var r3 = e3[1];
          var n2 = e3[2];
          var u2;
          var o2;
          var i2;
          i2 = n2 / 360 * 2 * Math.PI;
          u2 = r3 * Math.cos(i2);
          o2 = r3 * Math.sin(i2);
          return [t3, u2, o2];
        };
        i.rgb.ansi16 = function(e3) {
          var t3 = e3[0];
          var r3 = e3[1];
          var n2 = e3[2];
          var u2 = 1 in arguments ? arguments[1] : i.rgb.hsv(e3)[2];
          u2 = Math.round(u2 / 50);
          if (u2 === 0) {
            return 30;
          }
          var o2 = 30 + (Math.round(n2 / 255) << 2 | Math.round(r3 / 255) << 1 | Math.round(t3 / 255));
          if (u2 === 2) {
            o2 += 60;
          }
          return o2;
        };
        i.hsv.ansi16 = function(e3) {
          return i.rgb.ansi16(i.hsv.rgb(e3), e3[2]);
        };
        i.rgb.ansi256 = function(e3) {
          var t3 = e3[0];
          var r3 = e3[1];
          var n2 = e3[2];
          if (t3 === r3 && r3 === n2) {
            if (t3 < 8) {
              return 16;
            }
            if (t3 > 248) {
              return 231;
            }
            return Math.round((t3 - 8) / 247 * 24) + 232;
          }
          var u2 = 16 + 36 * Math.round(t3 / 255 * 5) + 6 * Math.round(r3 / 255 * 5) + Math.round(n2 / 255 * 5);
          return u2;
        };
        i.ansi16.rgb = function(e3) {
          var t3 = e3 % 10;
          if (t3 === 0 || t3 === 7) {
            if (e3 > 50) {
              t3 += 3.5;
            }
            t3 = t3 / 10.5 * 255;
            return [t3, t3, t3];
          }
          var r3 = (~~(e3 > 50) + 1) * 0.5;
          var n2 = (t3 & 1) * r3 * 255;
          var u2 = (t3 >> 1 & 1) * r3 * 255;
          var o2 = (t3 >> 2 & 1) * r3 * 255;
          return [n2, u2, o2];
        };
        i.ansi256.rgb = function(e3) {
          if (e3 >= 232) {
            var t3 = (e3 - 232) * 10 + 8;
            return [t3, t3, t3];
          }
          e3 -= 16;
          var r3;
          var n2 = Math.floor(e3 / 36) / 5 * 255;
          var u2 = Math.floor((r3 = e3 % 36) / 6) / 5 * 255;
          var o2 = r3 % 6 / 5 * 255;
          return [n2, u2, o2];
        };
        i.rgb.hex = function(e3) {
          var t3 = ((Math.round(e3[0]) & 255) << 16) + ((Math.round(e3[1]) & 255) << 8) + (Math.round(e3[2]) & 255);
          var r3 = t3.toString(16).toUpperCase();
          return "000000".substring(r3.length) + r3;
        };
        i.hex.rgb = function(e3) {
          var t3 = e3.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);
          if (!t3) {
            return [0, 0, 0];
          }
          var r3 = t3[0];
          if (t3[0].length === 3) {
            r3 = r3.split("").map(function(e4) {
              return e4 + e4;
            }).join("");
          }
          var n2 = parseInt(r3, 16);
          var u2 = n2 >> 16 & 255;
          var o2 = n2 >> 8 & 255;
          var i2 = n2 & 255;
          return [u2, o2, i2];
        };
        i.rgb.hcg = function(e3) {
          var t3 = e3[0] / 255;
          var r3 = e3[1] / 255;
          var n2 = e3[2] / 255;
          var u2 = Math.max(Math.max(t3, r3), n2);
          var o2 = Math.min(Math.min(t3, r3), n2);
          var i2 = u2 - o2;
          var s2;
          var a2;
          if (i2 < 1) {
            s2 = o2 / (1 - i2);
          } else {
            s2 = 0;
          }
          if (i2 <= 0) {
            a2 = 0;
          } else if (u2 === t3) {
            a2 = (r3 - n2) / i2 % 6;
          } else if (u2 === r3) {
            a2 = 2 + (n2 - t3) / i2;
          } else {
            a2 = 4 + (t3 - r3) / i2 + 4;
          }
          a2 /= 6;
          a2 %= 1;
          return [a2 * 360, i2 * 100, s2 * 100];
        };
        i.hsl.hcg = function(e3) {
          var t3 = e3[1] / 100;
          var r3 = e3[2] / 100;
          var n2 = 1;
          var u2 = 0;
          if (r3 < 0.5) {
            n2 = 2 * t3 * r3;
          } else {
            n2 = 2 * t3 * (1 - r3);
          }
          if (n2 < 1) {
            u2 = (r3 - 0.5 * n2) / (1 - n2);
          }
          return [e3[0], n2 * 100, u2 * 100];
        };
        i.hsv.hcg = function(e3) {
          var t3 = e3[1] / 100;
          var r3 = e3[2] / 100;
          var n2 = t3 * r3;
          var u2 = 0;
          if (n2 < 1) {
            u2 = (r3 - n2) / (1 - n2);
          }
          return [e3[0], n2 * 100, u2 * 100];
        };
        i.hcg.rgb = function(e3) {
          var t3 = e3[0] / 360;
          var r3 = e3[1] / 100;
          var n2 = e3[2] / 100;
          if (r3 === 0) {
            return [n2 * 255, n2 * 255, n2 * 255];
          }
          var u2 = [0, 0, 0];
          var o2 = t3 % 1 * 6;
          var i2 = o2 % 1;
          var s2 = 1 - i2;
          var a2 = 0;
          switch (Math.floor(o2)) {
            case 0:
              u2[0] = 1;
              u2[1] = i2;
              u2[2] = 0;
              break;
            case 1:
              u2[0] = s2;
              u2[1] = 1;
              u2[2] = 0;
              break;
            case 2:
              u2[0] = 0;
              u2[1] = 1;
              u2[2] = i2;
              break;
            case 3:
              u2[0] = 0;
              u2[1] = s2;
              u2[2] = 1;
              break;
            case 4:
              u2[0] = i2;
              u2[1] = 0;
              u2[2] = 1;
              break;
            default:
              u2[0] = 1;
              u2[1] = 0;
              u2[2] = s2;
          }
          a2 = (1 - r3) * n2;
          return [(r3 * u2[0] + a2) * 255, (r3 * u2[1] + a2) * 255, (r3 * u2[2] + a2) * 255];
        };
        i.hcg.hsv = function(e3) {
          var t3 = e3[1] / 100;
          var r3 = e3[2] / 100;
          var n2 = t3 + r3 * (1 - t3);
          var u2 = 0;
          if (n2 > 0) {
            u2 = t3 / n2;
          }
          return [e3[0], u2 * 100, n2 * 100];
        };
        i.hcg.hsl = function(e3) {
          var t3 = e3[1] / 100;
          var r3 = e3[2] / 100;
          var n2 = r3 * (1 - t3) + 0.5 * t3;
          var u2 = 0;
          if (n2 > 0 && n2 < 0.5) {
            u2 = t3 / (2 * n2);
          } else if (n2 >= 0.5 && n2 < 1) {
            u2 = t3 / (2 * (1 - n2));
          }
          return [e3[0], u2 * 100, n2 * 100];
        };
        i.hcg.hwb = function(e3) {
          var t3 = e3[1] / 100;
          var r3 = e3[2] / 100;
          var n2 = t3 + r3 * (1 - t3);
          return [e3[0], (n2 - t3) * 100, (1 - n2) * 100];
        };
        i.hwb.hcg = function(e3) {
          var t3 = e3[1] / 100;
          var r3 = e3[2] / 100;
          var n2 = 1 - r3;
          var u2 = n2 - t3;
          var o2 = 0;
          if (u2 < 1) {
            o2 = (n2 - u2) / (1 - u2);
          }
          return [e3[0], u2 * 100, o2 * 100];
        };
        i.apple.rgb = function(e3) {
          return [e3[0] / 65535 * 255, e3[1] / 65535 * 255, e3[2] / 65535 * 255];
        };
        i.rgb.apple = function(e3) {
          return [e3[0] / 255 * 65535, e3[1] / 255 * 65535, e3[2] / 255 * 65535];
        };
        i.gray.rgb = function(e3) {
          return [e3[0] / 100 * 255, e3[0] / 100 * 255, e3[0] / 100 * 255];
        };
        i.gray.hsl = i.gray.hsv = function(e3) {
          return [0, 0, e3[0]];
        };
        i.gray.hwb = function(e3) {
          return [0, 100, e3[0]];
        };
        i.gray.cmyk = function(e3) {
          return [0, 0, 0, e3[0]];
        };
        i.gray.lab = function(e3) {
          return [e3[0], 0, 0];
        };
        i.gray.hex = function(e3) {
          var t3 = Math.round(e3[0] / 100 * 255) & 255;
          var r3 = (t3 << 16) + (t3 << 8) + t3;
          var n2 = r3.toString(16).toUpperCase();
          return "000000".substring(n2.length) + n2;
        };
        i.rgb.gray = function(e3) {
          var t3 = (e3[0] + e3[1] + e3[2]) / 3;
          return [t3 / 255 * 100];
        };
      }, 54: function(e2, t2, r2) {
        var n = r2(117);
        var u = r2(528);
        var o = {};
        var i = Object.keys(n);
        function wrapRaw(e3) {
          var wrappedFn = function(t3) {
            if (t3 === void 0 || t3 === null) {
              return t3;
            }
            if (arguments.length > 1) {
              t3 = Array.prototype.slice.call(arguments);
            }
            return e3(t3);
          };
          if ("conversion" in e3) {
            wrappedFn.conversion = e3.conversion;
          }
          return wrappedFn;
        }
        function wrapRounded(e3) {
          var wrappedFn = function(t3) {
            if (t3 === void 0 || t3 === null) {
              return t3;
            }
            if (arguments.length > 1) {
              t3 = Array.prototype.slice.call(arguments);
            }
            var r3 = e3(t3);
            if (typeof r3 === "object") {
              for (var n2 = r3.length, u2 = 0; u2 < n2; u2++) {
                r3[u2] = Math.round(r3[u2]);
              }
            }
            return r3;
          };
          if ("conversion" in e3) {
            wrappedFn.conversion = e3.conversion;
          }
          return wrappedFn;
        }
        i.forEach(function(e3) {
          o[e3] = {};
          Object.defineProperty(o[e3], "channels", { value: n[e3].channels });
          Object.defineProperty(o[e3], "labels", { value: n[e3].labels });
          var t3 = u(e3);
          var r3 = Object.keys(t3);
          r3.forEach(function(r4) {
            var n2 = t3[r4];
            o[e3][r4] = wrapRounded(n2);
            o[e3][r4].raw = wrapRaw(n2);
          });
        });
        e2.exports = o;
      }, 528: function(e2, t2, r2) {
        var n = r2(117);
        function buildGraph() {
          var e3 = {};
          var t3 = Object.keys(n);
          for (var r3 = t3.length, u = 0; u < r3; u++) {
            e3[t3[u]] = { distance: -1, parent: null };
          }
          return e3;
        }
        function deriveBFS(e3) {
          var t3 = buildGraph();
          var r3 = [e3];
          t3[e3].distance = 0;
          while (r3.length) {
            var u = r3.pop();
            var o = Object.keys(n[u]);
            for (var i = o.length, s = 0; s < i; s++) {
              var a = o[s];
              var l = t3[a];
              if (l.distance === -1) {
                l.distance = t3[u].distance + 1;
                l.parent = u;
                r3.unshift(a);
              }
            }
          }
          return t3;
        }
        function link(e3, t3) {
          return function(r3) {
            return t3(e3(r3));
          };
        }
        function wrapConversion(e3, t3) {
          var r3 = [t3[e3].parent, e3];
          var u = n[t3[e3].parent][e3];
          var o = t3[e3].parent;
          while (t3[o].parent) {
            r3.unshift(t3[o].parent);
            u = link(n[t3[o].parent][o], u);
            o = t3[o].parent;
          }
          u.conversion = r3;
          return u;
        }
        e2.exports = function(e3) {
          var t3 = deriveBFS(e3);
          var r3 = {};
          var n2 = Object.keys(t3);
          for (var u = n2.length, o = 0; o < u; o++) {
            var i = n2[o];
            var s = t3[i];
            if (s.parent === null) {
              continue;
            }
            r3[i] = wrapConversion(i, t3);
          }
          return r3;
        };
      }, 251: function(e2) {
        "use strict";
        e2.exports = { aliceblue: [240, 248, 255], antiquewhite: [250, 235, 215], aqua: [0, 255, 255], aquamarine: [127, 255, 212], azure: [240, 255, 255], beige: [245, 245, 220], bisque: [255, 228, 196], black: [0, 0, 0], blanchedalmond: [255, 235, 205], blue: [0, 0, 255], blueviolet: [138, 43, 226], brown: [165, 42, 42], burlywood: [222, 184, 135], cadetblue: [95, 158, 160], chartreuse: [127, 255, 0], chocolate: [210, 105, 30], coral: [255, 127, 80], cornflowerblue: [100, 149, 237], cornsilk: [255, 248, 220], crimson: [220, 20, 60], cyan: [0, 255, 255], darkblue: [0, 0, 139], darkcyan: [0, 139, 139], darkgoldenrod: [184, 134, 11], darkgray: [169, 169, 169], darkgreen: [0, 100, 0], darkgrey: [169, 169, 169], darkkhaki: [189, 183, 107], darkmagenta: [139, 0, 139], darkolivegreen: [85, 107, 47], darkorange: [255, 140, 0], darkorchid: [153, 50, 204], darkred: [139, 0, 0], darksalmon: [233, 150, 122], darkseagreen: [143, 188, 143], darkslateblue: [72, 61, 139], darkslategray: [47, 79, 79], darkslategrey: [47, 79, 79], darkturquoise: [0, 206, 209], darkviolet: [148, 0, 211], deeppink: [255, 20, 147], deepskyblue: [0, 191, 255], dimgray: [105, 105, 105], dimgrey: [105, 105, 105], dodgerblue: [30, 144, 255], firebrick: [178, 34, 34], floralwhite: [255, 250, 240], forestgreen: [34, 139, 34], fuchsia: [255, 0, 255], gainsboro: [220, 220, 220], ghostwhite: [248, 248, 255], gold: [255, 215, 0], goldenrod: [218, 165, 32], gray: [128, 128, 128], green: [0, 128, 0], greenyellow: [173, 255, 47], grey: [128, 128, 128], honeydew: [240, 255, 240], hotpink: [255, 105, 180], indianred: [205, 92, 92], indigo: [75, 0, 130], ivory: [255, 255, 240], khaki: [240, 230, 140], lavender: [230, 230, 250], lavenderblush: [255, 240, 245], lawngreen: [124, 252, 0], lemonchiffon: [255, 250, 205], lightblue: [173, 216, 230], lightcoral: [240, 128, 128], lightcyan: [224, 255, 255], lightgoldenrodyellow: [250, 250, 210], lightgray: [211, 211, 211], lightgreen: [144, 238, 144], lightgrey: [211, 211, 211], lightpink: [255, 182, 193], lightsalmon: [255, 160, 122], lightseagreen: [32, 178, 170], lightskyblue: [135, 206, 250], lightslategray: [119, 136, 153], lightslategrey: [119, 136, 153], lightsteelblue: [176, 196, 222], lightyellow: [255, 255, 224], lime: [0, 255, 0], limegreen: [50, 205, 50], linen: [250, 240, 230], magenta: [255, 0, 255], maroon: [128, 0, 0], mediumaquamarine: [102, 205, 170], mediumblue: [0, 0, 205], mediumorchid: [186, 85, 211], mediumpurple: [147, 112, 219], mediumseagreen: [60, 179, 113], mediumslateblue: [123, 104, 238], mediumspringgreen: [0, 250, 154], mediumturquoise: [72, 209, 204], mediumvioletred: [199, 21, 133], midnightblue: [25, 25, 112], mintcream: [245, 255, 250], mistyrose: [255, 228, 225], moccasin: [255, 228, 181], navajowhite: [255, 222, 173], navy: [0, 0, 128], oldlace: [253, 245, 230], olive: [128, 128, 0], olivedrab: [107, 142, 35], orange: [255, 165, 0], orangered: [255, 69, 0], orchid: [218, 112, 214], palegoldenrod: [238, 232, 170], palegreen: [152, 251, 152], paleturquoise: [175, 238, 238], palevioletred: [219, 112, 147], papayawhip: [255, 239, 213], peachpuff: [255, 218, 185], peru: [205, 133, 63], pink: [255, 192, 203], plum: [221, 160, 221], powderblue: [176, 224, 230], purple: [128, 0, 128], rebeccapurple: [102, 51, 153], red: [255, 0, 0], rosybrown: [188, 143, 143], royalblue: [65, 105, 225], saddlebrown: [139, 69, 19], salmon: [250, 128, 114], sandybrown: [244, 164, 96], seagreen: [46, 139, 87], seashell: [255, 245, 238], sienna: [160, 82, 45], silver: [192, 192, 192], skyblue: [135, 206, 235], slateblue: [106, 90, 205], slategray: [112, 128, 144], slategrey: [112, 128, 144], snow: [255, 250, 250], springgreen: [0, 255, 127], steelblue: [70, 130, 180], tan: [210, 180, 140], teal: [0, 128, 128], thistle: [216, 191, 216], tomato: [255, 99, 71], turquoise: [64, 224, 208], violet: [238, 130, 238], wheat: [245, 222, 179], white: [255, 255, 255], whitesmoke: [245, 245, 245], yellow: [255, 255, 0], yellowgreen: [154, 205, 50] };
      }, 379: function(e2) {
        "use strict";
        var t2 = /[|\\{}()[\]^$+*?.]/g;
        e2.exports = function(e3) {
          if (typeof e3 !== "string") {
            throw new TypeError("Expected a string");
          }
          return e3.replace(t2, "\\$&");
        };
      }, 343: function(e2) {
        "use strict";
        e2.exports = (e3, t2) => {
          t2 = t2 || process.argv;
          const r2 = e3.startsWith("-") ? "" : e3.length === 1 ? "-" : "--";
          const n = t2.indexOf(r2 + e3);
          const u = t2.indexOf("--");
          return n !== -1 && (u === -1 ? true : n < u);
        };
      }, 874: function(e2, t2) {
        Object.defineProperty(t2, "__esModule", { value: true });
        t2["default"] = /((['"])(?:(?!\2|\\).|\\(?:\r\n|[\s\S]))*(\2)?|`(?:[^`\\$]|\\[\s\S]|\$(?!\{)|\$\{(?:[^{}]|\{[^}]*\}?)*\}?)*(`)?)|(\/\/.*)|(\/\*(?:[^*]|\*(?!\/))*(\*\/)?)|(\/(?!\*)(?:\[(?:(?![\]\\]).|\\.)*\]|(?![\/\]\\]).|\\.)+\/(?:(?!\s*(?:\b|[\u0080-\uFFFF$\\'"~({]|[+\-!](?!=)|\.?\d))|[gmiyus]{1,6}\b(?![\u0080-\uFFFF$\\]|\s*(?:[+\-*%&|^<>!=?({]|\/(?![\/*])))))|(0[xX][\da-fA-F]+|0[oO][0-7]+|0[bB][01]+|(?:\d*\.\d+|\d+\.?)(?:[eE][+-]?\d+)?)|((?!\d)(?:(?!\s)[$\w\u0080-\uFFFF]|\\u[\da-fA-F]{4}|\\u\{[\da-fA-F]+\})+)|(--|\+\+|&&|\|\||=>|\.{3}|(?:[+\-\/%&|^]|\*{1,2}|<{1,2}|>{1,3}|!=?|={1,2})=?|[?~.,:;[\](){}])|(\s+)|(^$|[\s\S])/g;
        t2.matchToToken = function(e3) {
          var t3 = { type: "invalid", value: e3[0], closed: void 0 };
          if (e3[1])
            t3.type = "string", t3.closed = !!(e3[3] || e3[4]);
          else if (e3[5])
            t3.type = "comment";
          else if (e3[6])
            t3.type = "comment", t3.closed = !!e3[7];
          else if (e3[8])
            t3.type = "regex";
          else if (e3[9])
            t3.type = "number";
          else if (e3[10])
            t3.type = "name";
          else if (e3[11])
            t3.type = "punctuator";
          else if (e3[12])
            t3.type = "whitespace";
          return t3;
        };
      }, 306: function(e2, t2, r2) {
        let n = r2(224);
        let u = !("NO_COLOR" in process.env || process.argv.includes("--no-color")) && ("FORCE_COLOR" in process.env || process.argv.includes("--color") || process.platform === "win32" || n.isatty(1) && process.env.TERM !== "dumb" || "CI" in process.env);
        let formatter = (e3, t3, r3 = e3) => (n2) => {
          let u2 = "" + n2;
          let o = u2.indexOf(t3, e3.length);
          return ~o ? e3 + replaceClose(u2, t3, r3, o) + t3 : e3 + u2 + t3;
        };
        let replaceClose = (e3, t3, r3, n2) => {
          let u2 = e3.substring(0, n2) + r3;
          let o = e3.substring(n2 + t3.length);
          let i = o.indexOf(t3);
          return ~i ? u2 + replaceClose(o, t3, r3, i) : u2 + o;
        };
        let createColors = (e3 = u) => ({ isColorSupported: e3, reset: e3 ? (e4) => `\x1B[0m${e4}\x1B[0m` : String, bold: e3 ? formatter("\x1B[1m", "\x1B[22m", "\x1B[22m\x1B[1m") : String, dim: e3 ? formatter("\x1B[2m", "\x1B[22m", "\x1B[22m\x1B[2m") : String, italic: e3 ? formatter("\x1B[3m", "\x1B[23m") : String, underline: e3 ? formatter("\x1B[4m", "\x1B[24m") : String, inverse: e3 ? formatter("\x1B[7m", "\x1B[27m") : String, hidden: e3 ? formatter("\x1B[8m", "\x1B[28m") : String, strikethrough: e3 ? formatter("\x1B[9m", "\x1B[29m") : String, black: e3 ? formatter("\x1B[30m", "\x1B[39m") : String, red: e3 ? formatter("\x1B[31m", "\x1B[39m") : String, green: e3 ? formatter("\x1B[32m", "\x1B[39m") : String, yellow: e3 ? formatter("\x1B[33m", "\x1B[39m") : String, blue: e3 ? formatter("\x1B[34m", "\x1B[39m") : String, magenta: e3 ? formatter("\x1B[35m", "\x1B[39m") : String, cyan: e3 ? formatter("\x1B[36m", "\x1B[39m") : String, white: e3 ? formatter("\x1B[37m", "\x1B[39m") : String, gray: e3 ? formatter("\x1B[90m", "\x1B[39m") : String, bgBlack: e3 ? formatter("\x1B[40m", "\x1B[49m") : String, bgRed: e3 ? formatter("\x1B[41m", "\x1B[49m") : String, bgGreen: e3 ? formatter("\x1B[42m", "\x1B[49m") : String, bgYellow: e3 ? formatter("\x1B[43m", "\x1B[49m") : String, bgBlue: e3 ? formatter("\x1B[44m", "\x1B[49m") : String, bgMagenta: e3 ? formatter("\x1B[45m", "\x1B[49m") : String, bgCyan: e3 ? formatter("\x1B[46m", "\x1B[49m") : String, bgWhite: e3 ? formatter("\x1B[47m", "\x1B[49m") : String });
        e2.exports = createColors();
        e2.exports.createColors = createColors;
      }, 963: function(e2, t2) {
        class ArraySet {
          constructor() {
            this._array = [];
            this._set = /* @__PURE__ */ new Map();
          }
          static fromArray(e3, t3) {
            const r2 = new ArraySet();
            for (let n = 0, u = e3.length; n < u; n++) {
              r2.add(e3[n], t3);
            }
            return r2;
          }
          size() {
            return this._set.size;
          }
          add(e3, t3) {
            const r2 = this.has(e3);
            const n = this._array.length;
            if (!r2 || t3) {
              this._array.push(e3);
            }
            if (!r2) {
              this._set.set(e3, n);
            }
          }
          has(e3) {
            return this._set.has(e3);
          }
          indexOf(e3) {
            const t3 = this._set.get(e3);
            if (t3 >= 0) {
              return t3;
            }
            throw new Error('"' + e3 + '" is not in the set.');
          }
          at(e3) {
            if (e3 >= 0 && e3 < this._array.length) {
              return this._array[e3];
            }
            throw new Error("No element indexed by " + e3);
          }
          toArray() {
            return this._array.slice();
          }
        }
        t2.I = ArraySet;
      }, 344: function(e2, t2, r2) {
        const n = r2(209);
        const u = 5;
        const o = 1 << u;
        const i = o - 1;
        const s = o;
        function toVLQSigned(e3) {
          return e3 < 0 ? (-e3 << 1) + 1 : (e3 << 1) + 0;
        }
        function fromVLQSigned(e3) {
          const t3 = (e3 & 1) === 1;
          const r3 = e3 >> 1;
          return t3 ? -r3 : r3;
        }
        t2.encode = function base64VLQ_encode(e3) {
          let t3 = "";
          let r3;
          let o2 = toVLQSigned(e3);
          do {
            r3 = o2 & i;
            o2 >>>= u;
            if (o2 > 0) {
              r3 |= s;
            }
            t3 += n.encode(r3);
          } while (o2 > 0);
          return t3;
        };
      }, 209: function(e2, t2) {
        const r2 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".split("");
        t2.encode = function(e3) {
          if (0 <= e3 && e3 < r2.length) {
            return r2[e3];
          }
          throw new TypeError("Must be between 0 and 63: " + e3);
        };
      }, 700: function(e2, t2) {
        t2.GREATEST_LOWER_BOUND = 1;
        t2.LEAST_UPPER_BOUND = 2;
        function recursiveSearch(e3, r2, n, u, o, i) {
          const s = Math.floor((r2 - e3) / 2) + e3;
          const a = o(n, u[s], true);
          if (a === 0) {
            return s;
          } else if (a > 0) {
            if (r2 - s > 1) {
              return recursiveSearch(s, r2, n, u, o, i);
            }
            if (i == t2.LEAST_UPPER_BOUND) {
              return r2 < u.length ? r2 : -1;
            }
            return s;
          }
          if (s - e3 > 1) {
            return recursiveSearch(e3, s, n, u, o, i);
          }
          if (i == t2.LEAST_UPPER_BOUND) {
            return s;
          }
          return e3 < 0 ? -1 : e3;
        }
        t2.search = function search(e3, r2, n, u) {
          if (r2.length === 0) {
            return -1;
          }
          let o = recursiveSearch(-1, r2.length, e3, r2, n, u || t2.GREATEST_LOWER_BOUND);
          if (o < 0) {
            return -1;
          }
          while (o - 1 >= 0) {
            if (n(r2[o], r2[o - 1], true) !== 0) {
              break;
            }
            --o;
          }
          return o;
        };
      }, 371: function(e2, t2, r2) {
        const n = r2(354);
        function generatedPositionAfter(e3, t3) {
          const r3 = e3.generatedLine;
          const u = t3.generatedLine;
          const o = e3.generatedColumn;
          const i = t3.generatedColumn;
          return u > r3 || u == r3 && i >= o || n.compareByGeneratedPositionsInflated(e3, t3) <= 0;
        }
        class MappingList {
          constructor() {
            this._array = [];
            this._sorted = true;
            this._last = { generatedLine: -1, generatedColumn: 0 };
          }
          unsortedForEach(e3, t3) {
            this._array.forEach(e3, t3);
          }
          add(e3) {
            if (generatedPositionAfter(this._last, e3)) {
              this._last = e3;
              this._array.push(e3);
            } else {
              this._sorted = false;
              this._array.push(e3);
            }
          }
          toArray() {
            if (!this._sorted) {
              this._array.sort(n.compareByGeneratedPositionsInflated);
              this._sorted = true;
            }
            return this._array;
          }
        }
        t2.H = MappingList;
      }, 799: function(e2, t2, r2) {
        "use strict";
        const n = r2(147);
        const u = r2(17);
        e2.exports = function readWasm() {
          return new Promise((e3, t3) => {
            const u2 = r2.ab + "mappings.wasm";
            n.readFile(r2.ab + "mappings.wasm", null, (r3, n2) => {
              if (r3) {
                t3(r3);
                return;
              }
              e3(n2.buffer);
            });
          });
        };
        e2.exports.initialize = (e3) => {
          console.debug("SourceMapConsumer.initialize is a no-op when running in node.js");
        };
      }, 886: function(e2, t2, r2) {
        var n;
        const u = r2(354);
        const o = r2(700);
        const i = r2(963).I;
        const s = r2(344);
        const a = r2(799);
        const l = r2(776);
        const c = Symbol("smcInternal");
        class SourceMapConsumer {
          constructor(e3, t3) {
            if (e3 == c) {
              return Promise.resolve(this);
            }
            return _factory(e3, t3);
          }
          static initialize(e3) {
            a.initialize(e3["lib/mappings.wasm"]);
          }
          static fromSourceMap(e3, t3) {
            return _factoryBSM(e3, t3);
          }
          static async with(e3, t3, r3) {
            const n2 = await new SourceMapConsumer(e3, t3);
            try {
              return await r3(n2);
            } finally {
              n2.destroy();
            }
          }
          eachMapping(e3, t3, r3) {
            throw new Error("Subclasses must implement eachMapping");
          }
          allGeneratedPositionsFor(e3) {
            throw new Error("Subclasses must implement allGeneratedPositionsFor");
          }
          destroy() {
            throw new Error("Subclasses must implement destroy");
          }
        }
        SourceMapConsumer.prototype._version = 3;
        SourceMapConsumer.GENERATED_ORDER = 1;
        SourceMapConsumer.ORIGINAL_ORDER = 2;
        SourceMapConsumer.GREATEST_LOWER_BOUND = 1;
        SourceMapConsumer.LEAST_UPPER_BOUND = 2;
        t2.SourceMapConsumer = SourceMapConsumer;
        class BasicSourceMapConsumer extends SourceMapConsumer {
          constructor(e3, t3) {
            return super(c).then((r3) => {
              let n2 = e3;
              if (typeof e3 === "string") {
                n2 = u.parseSourceMapInput(e3);
              }
              const o2 = u.getArg(n2, "version");
              const s2 = u.getArg(n2, "sources").map(String);
              const a2 = u.getArg(n2, "names", []);
              const c2 = u.getArg(n2, "sourceRoot", null);
              const f = u.getArg(n2, "sourcesContent", null);
              const p = u.getArg(n2, "mappings");
              const d = u.getArg(n2, "file", null);
              if (o2 != r3._version) {
                throw new Error("Unsupported version: " + o2);
              }
              r3._sourceLookupCache = /* @__PURE__ */ new Map();
              r3._names = i.fromArray(a2.map(String), true);
              r3._sources = i.fromArray(s2, true);
              r3._absoluteSources = i.fromArray(r3._sources.toArray().map(function(e4) {
                return u.computeSourceURL(c2, e4, t3);
              }), true);
              r3.sourceRoot = c2;
              r3.sourcesContent = f;
              r3._mappings = p;
              r3._sourceMapURL = t3;
              r3.file = d;
              r3._computedColumnSpans = false;
              r3._mappingsPtr = 0;
              r3._wasm = null;
              return l().then((e4) => {
                r3._wasm = e4;
                return r3;
              });
            });
          }
          _findSourceIndex(e3) {
            const t3 = this._sourceLookupCache.get(e3);
            if (typeof t3 === "number") {
              return t3;
            }
            const r3 = u.computeSourceURL(null, e3, this._sourceMapURL);
            if (this._absoluteSources.has(r3)) {
              const t4 = this._absoluteSources.indexOf(r3);
              this._sourceLookupCache.set(e3, t4);
              return t4;
            }
            const n2 = u.computeSourceURL(this.sourceRoot, e3, this._sourceMapURL);
            if (this._absoluteSources.has(n2)) {
              const t4 = this._absoluteSources.indexOf(n2);
              this._sourceLookupCache.set(e3, t4);
              return t4;
            }
            return -1;
          }
          static fromSourceMap(e3, t3) {
            return new BasicSourceMapConsumer(e3.toString());
          }
          get sources() {
            return this._absoluteSources.toArray();
          }
          _getMappingsPtr() {
            if (this._mappingsPtr === 0) {
              this._parseMappings();
            }
            return this._mappingsPtr;
          }
          _parseMappings() {
            const e3 = this._mappings;
            const t3 = e3.length;
            const r3 = this._wasm.exports.allocate_mappings(t3);
            const n2 = new Uint8Array(this._wasm.exports.memory.buffer, r3, t3);
            for (let r4 = 0; r4 < t3; r4++) {
              n2[r4] = e3.charCodeAt(r4);
            }
            const u2 = this._wasm.exports.parse_mappings(r3);
            if (!u2) {
              const e4 = this._wasm.exports.get_last_error();
              let t4 = `Error parsing mappings (code ${e4}): `;
              switch (e4) {
                case 1:
                  t4 += "the mappings contained a negative line, column, source index, or name index";
                  break;
                case 2:
                  t4 += "the mappings contained a number larger than 2**32";
                  break;
                case 3:
                  t4 += "reached EOF while in the middle of parsing a VLQ";
                  break;
                case 4:
                  t4 += "invalid base 64 character while parsing a VLQ";
                  break;
                default:
                  t4 += "unknown error code";
                  break;
              }
              throw new Error(t4);
            }
            this._mappingsPtr = u2;
          }
          eachMapping(e3, t3, r3) {
            const n2 = t3 || null;
            const u2 = r3 || SourceMapConsumer.GENERATED_ORDER;
            this._wasm.withMappingCallback((t4) => {
              if (t4.source !== null) {
                t4.source = this._absoluteSources.at(t4.source);
                if (t4.name !== null) {
                  t4.name = this._names.at(t4.name);
                }
              }
              if (this._computedColumnSpans && t4.lastGeneratedColumn === null) {
                t4.lastGeneratedColumn = Infinity;
              }
              e3.call(n2, t4);
            }, () => {
              switch (u2) {
                case SourceMapConsumer.GENERATED_ORDER:
                  this._wasm.exports.by_generated_location(this._getMappingsPtr());
                  break;
                case SourceMapConsumer.ORIGINAL_ORDER:
                  this._wasm.exports.by_original_location(this._getMappingsPtr());
                  break;
                default:
                  throw new Error("Unknown order of iteration.");
              }
            });
          }
          allGeneratedPositionsFor(e3) {
            let t3 = u.getArg(e3, "source");
            const r3 = u.getArg(e3, "line");
            const n2 = e3.column || 0;
            t3 = this._findSourceIndex(t3);
            if (t3 < 0) {
              return [];
            }
            if (r3 < 1) {
              throw new Error("Line numbers must be >= 1");
            }
            if (n2 < 0) {
              throw new Error("Column numbers must be >= 0");
            }
            const o2 = [];
            this._wasm.withMappingCallback((e4) => {
              let t4 = e4.lastGeneratedColumn;
              if (this._computedColumnSpans && t4 === null) {
                t4 = Infinity;
              }
              o2.push({ line: e4.generatedLine, column: e4.generatedColumn, lastColumn: t4 });
            }, () => {
              this._wasm.exports.all_generated_locations_for(this._getMappingsPtr(), t3, r3 - 1, "column" in e3, n2);
            });
            return o2;
          }
          destroy() {
            if (this._mappingsPtr !== 0) {
              this._wasm.exports.free_mappings(this._mappingsPtr);
              this._mappingsPtr = 0;
            }
          }
          computeColumnSpans() {
            if (this._computedColumnSpans) {
              return;
            }
            this._wasm.exports.compute_column_spans(this._getMappingsPtr());
            this._computedColumnSpans = true;
          }
          originalPositionFor(e3) {
            const t3 = { generatedLine: u.getArg(e3, "line"), generatedColumn: u.getArg(e3, "column") };
            if (t3.generatedLine < 1) {
              throw new Error("Line numbers must be >= 1");
            }
            if (t3.generatedColumn < 0) {
              throw new Error("Column numbers must be >= 0");
            }
            let r3 = u.getArg(e3, "bias", SourceMapConsumer.GREATEST_LOWER_BOUND);
            if (r3 == null) {
              r3 = SourceMapConsumer.GREATEST_LOWER_BOUND;
            }
            let n2;
            this._wasm.withMappingCallback((e4) => n2 = e4, () => {
              this._wasm.exports.original_location_for(this._getMappingsPtr(), t3.generatedLine - 1, t3.generatedColumn, r3);
            });
            if (n2) {
              if (n2.generatedLine === t3.generatedLine) {
                let e4 = u.getArg(n2, "source", null);
                if (e4 !== null) {
                  e4 = this._absoluteSources.at(e4);
                }
                let t4 = u.getArg(n2, "name", null);
                if (t4 !== null) {
                  t4 = this._names.at(t4);
                }
                return { source: e4, line: u.getArg(n2, "originalLine", null), column: u.getArg(n2, "originalColumn", null), name: t4 };
              }
            }
            return { source: null, line: null, column: null, name: null };
          }
          hasContentsOfAllSources() {
            if (!this.sourcesContent) {
              return false;
            }
            return this.sourcesContent.length >= this._sources.size() && !this.sourcesContent.some(function(e3) {
              return e3 == null;
            });
          }
          sourceContentFor(e3, t3) {
            if (!this.sourcesContent) {
              return null;
            }
            const r3 = this._findSourceIndex(e3);
            if (r3 >= 0) {
              return this.sourcesContent[r3];
            }
            if (t3) {
              return null;
            }
            throw new Error('"' + e3 + '" is not in the SourceMap.');
          }
          generatedPositionFor(e3) {
            let t3 = u.getArg(e3, "source");
            t3 = this._findSourceIndex(t3);
            if (t3 < 0) {
              return { line: null, column: null, lastColumn: null };
            }
            const r3 = { source: t3, originalLine: u.getArg(e3, "line"), originalColumn: u.getArg(e3, "column") };
            if (r3.originalLine < 1) {
              throw new Error("Line numbers must be >= 1");
            }
            if (r3.originalColumn < 0) {
              throw new Error("Column numbers must be >= 0");
            }
            let n2 = u.getArg(e3, "bias", SourceMapConsumer.GREATEST_LOWER_BOUND);
            if (n2 == null) {
              n2 = SourceMapConsumer.GREATEST_LOWER_BOUND;
            }
            let o2;
            this._wasm.withMappingCallback((e4) => o2 = e4, () => {
              this._wasm.exports.generated_location_for(this._getMappingsPtr(), r3.source, r3.originalLine - 1, r3.originalColumn, n2);
            });
            if (o2) {
              if (o2.source === r3.source) {
                let e4 = o2.lastGeneratedColumn;
                if (this._computedColumnSpans && e4 === null) {
                  e4 = Infinity;
                }
                return { line: u.getArg(o2, "generatedLine", null), column: u.getArg(o2, "generatedColumn", null), lastColumn: e4 };
              }
            }
            return { line: null, column: null, lastColumn: null };
          }
        }
        BasicSourceMapConsumer.prototype.consumer = SourceMapConsumer;
        n = BasicSourceMapConsumer;
        class IndexedSourceMapConsumer extends SourceMapConsumer {
          constructor(e3, t3) {
            return super(c).then((r3) => {
              let n2 = e3;
              if (typeof e3 === "string") {
                n2 = u.parseSourceMapInput(e3);
              }
              const o2 = u.getArg(n2, "version");
              const i2 = u.getArg(n2, "sections");
              if (o2 != r3._version) {
                throw new Error("Unsupported version: " + o2);
              }
              let s2 = { line: -1, column: 0 };
              return Promise.all(i2.map((e4) => {
                if (e4.url) {
                  throw new Error("Support for url field in sections not implemented.");
                }
                const r4 = u.getArg(e4, "offset");
                const n3 = u.getArg(r4, "line");
                const o3 = u.getArg(r4, "column");
                if (n3 < s2.line || n3 === s2.line && o3 < s2.column) {
                  throw new Error("Section offsets must be ordered and non-overlapping.");
                }
                s2 = r4;
                const i3 = new SourceMapConsumer(u.getArg(e4, "map"), t3);
                return i3.then((e5) => ({ generatedOffset: { generatedLine: n3 + 1, generatedColumn: o3 + 1 }, consumer: e5 }));
              })).then((e4) => {
                r3._sections = e4;
                return r3;
              });
            });
          }
          get sources() {
            const e3 = [];
            for (let t3 = 0; t3 < this._sections.length; t3++) {
              for (let r3 = 0; r3 < this._sections[t3].consumer.sources.length; r3++) {
                e3.push(this._sections[t3].consumer.sources[r3]);
              }
            }
            return e3;
          }
          originalPositionFor(e3) {
            const t3 = { generatedLine: u.getArg(e3, "line"), generatedColumn: u.getArg(e3, "column") };
            const r3 = o.search(t3, this._sections, function(e4, t4) {
              const r4 = e4.generatedLine - t4.generatedOffset.generatedLine;
              if (r4) {
                return r4;
              }
              return e4.generatedColumn - t4.generatedOffset.generatedColumn;
            });
            const n2 = this._sections[r3];
            if (!n2) {
              return { source: null, line: null, column: null, name: null };
            }
            return n2.consumer.originalPositionFor({ line: t3.generatedLine - (n2.generatedOffset.generatedLine - 1), column: t3.generatedColumn - (n2.generatedOffset.generatedLine === t3.generatedLine ? n2.generatedOffset.generatedColumn - 1 : 0), bias: e3.bias });
          }
          hasContentsOfAllSources() {
            return this._sections.every(function(e3) {
              return e3.consumer.hasContentsOfAllSources();
            });
          }
          sourceContentFor(e3, t3) {
            for (let t4 = 0; t4 < this._sections.length; t4++) {
              const r3 = this._sections[t4];
              const n2 = r3.consumer.sourceContentFor(e3, true);
              if (n2) {
                return n2;
              }
            }
            if (t3) {
              return null;
            }
            throw new Error('"' + e3 + '" is not in the SourceMap.');
          }
          _findSectionIndex(e3) {
            for (let t3 = 0; t3 < this._sections.length; t3++) {
              const { consumer: r3 } = this._sections[t3];
              if (r3._findSourceIndex(e3) !== -1) {
                return t3;
              }
            }
            return -1;
          }
          generatedPositionFor(e3) {
            const t3 = this._findSectionIndex(u.getArg(e3, "source"));
            const r3 = t3 >= 0 ? this._sections[t3] : null;
            const n2 = t3 >= 0 && t3 + 1 < this._sections.length ? this._sections[t3 + 1] : null;
            const o2 = r3 && r3.consumer.generatedPositionFor(e3);
            if (o2 && o2.line !== null) {
              const e4 = r3.generatedOffset.generatedLine - 1;
              const t4 = r3.generatedOffset.generatedColumn - 1;
              if (o2.line === 1) {
                o2.column += t4;
                if (typeof o2.lastColumn === "number") {
                  o2.lastColumn += t4;
                }
              }
              if (o2.lastColumn === Infinity && n2 && o2.line === n2.generatedOffset.generatedLine) {
                o2.lastColumn = n2.generatedOffset.generatedColumn - 2;
              }
              o2.line += e4;
              return o2;
            }
            return { line: null, column: null, lastColumn: null };
          }
          allGeneratedPositionsFor(e3) {
            const t3 = this._findSectionIndex(u.getArg(e3, "source"));
            const r3 = t3 >= 0 ? this._sections[t3] : null;
            const n2 = t3 >= 0 && t3 + 1 < this._sections.length ? this._sections[t3 + 1] : null;
            if (!r3)
              return [];
            return r3.consumer.allGeneratedPositionsFor(e3).map((e4) => {
              const t4 = r3.generatedOffset.generatedLine - 1;
              const u2 = r3.generatedOffset.generatedColumn - 1;
              if (e4.line === 1) {
                e4.column += u2;
                if (typeof e4.lastColumn === "number") {
                  e4.lastColumn += u2;
                }
              }
              if (e4.lastColumn === Infinity && n2 && e4.line === n2.generatedOffset.generatedLine) {
                e4.lastColumn = n2.generatedOffset.generatedColumn - 2;
              }
              e4.line += t4;
              return e4;
            });
          }
          eachMapping(e3, t3, r3) {
            this._sections.forEach((n2, u2) => {
              const o2 = u2 + 1 < this._sections.length ? this._sections[u2 + 1] : null;
              const { generatedOffset: i2 } = n2;
              const s2 = i2.generatedLine - 1;
              const a2 = i2.generatedColumn - 1;
              n2.consumer.eachMapping(function(t4) {
                if (t4.generatedLine === 1) {
                  t4.generatedColumn += a2;
                  if (typeof t4.lastGeneratedColumn === "number") {
                    t4.lastGeneratedColumn += a2;
                  }
                }
                if (t4.lastGeneratedColumn === Infinity && o2 && t4.generatedLine === o2.generatedOffset.generatedLine) {
                  t4.lastGeneratedColumn = o2.generatedOffset.generatedColumn - 2;
                }
                t4.generatedLine += s2;
                e3.call(this, t4);
              }, t3, r3);
            });
          }
          computeColumnSpans() {
            for (let e3 = 0; e3 < this._sections.length; e3++) {
              this._sections[e3].consumer.computeColumnSpans();
            }
          }
          destroy() {
            for (let e3 = 0; e3 < this._sections.length; e3++) {
              this._sections[e3].consumer.destroy();
            }
          }
        }
        n = IndexedSourceMapConsumer;
        function _factory(e3, t3) {
          let r3 = e3;
          if (typeof e3 === "string") {
            r3 = u.parseSourceMapInput(e3);
          }
          const n2 = r3.sections != null ? new IndexedSourceMapConsumer(r3, t3) : new BasicSourceMapConsumer(r3, t3);
          return Promise.resolve(n2);
        }
        function _factoryBSM(e3, t3) {
          return BasicSourceMapConsumer.fromSourceMap(e3, t3);
        }
      }, 87: function(e2, t2, r2) {
        const n = r2(344);
        const u = r2(354);
        const o = r2(963).I;
        const i = r2(371).H;
        class SourceMapGenerator {
          constructor(e3) {
            if (!e3) {
              e3 = {};
            }
            this._file = u.getArg(e3, "file", null);
            this._sourceRoot = u.getArg(e3, "sourceRoot", null);
            this._skipValidation = u.getArg(e3, "skipValidation", false);
            this._sources = new o();
            this._names = new o();
            this._mappings = new i();
            this._sourcesContents = null;
          }
          static fromSourceMap(e3) {
            const t3 = e3.sourceRoot;
            const r3 = new SourceMapGenerator({ file: e3.file, sourceRoot: t3 });
            e3.eachMapping(function(e4) {
              const n2 = { generated: { line: e4.generatedLine, column: e4.generatedColumn } };
              if (e4.source != null) {
                n2.source = e4.source;
                if (t3 != null) {
                  n2.source = u.relative(t3, n2.source);
                }
                n2.original = { line: e4.originalLine, column: e4.originalColumn };
                if (e4.name != null) {
                  n2.name = e4.name;
                }
              }
              r3.addMapping(n2);
            });
            e3.sources.forEach(function(n2) {
              let o2 = n2;
              if (t3 !== null) {
                o2 = u.relative(t3, n2);
              }
              if (!r3._sources.has(o2)) {
                r3._sources.add(o2);
              }
              const i2 = e3.sourceContentFor(n2);
              if (i2 != null) {
                r3.setSourceContent(n2, i2);
              }
            });
            return r3;
          }
          addMapping(e3) {
            const t3 = u.getArg(e3, "generated");
            const r3 = u.getArg(e3, "original", null);
            let n2 = u.getArg(e3, "source", null);
            let o2 = u.getArg(e3, "name", null);
            if (!this._skipValidation) {
              this._validateMapping(t3, r3, n2, o2);
            }
            if (n2 != null) {
              n2 = String(n2);
              if (!this._sources.has(n2)) {
                this._sources.add(n2);
              }
            }
            if (o2 != null) {
              o2 = String(o2);
              if (!this._names.has(o2)) {
                this._names.add(o2);
              }
            }
            this._mappings.add({ generatedLine: t3.line, generatedColumn: t3.column, originalLine: r3 != null && r3.line, originalColumn: r3 != null && r3.column, source: n2, name: o2 });
          }
          setSourceContent(e3, t3) {
            let r3 = e3;
            if (this._sourceRoot != null) {
              r3 = u.relative(this._sourceRoot, r3);
            }
            if (t3 != null) {
              if (!this._sourcesContents) {
                this._sourcesContents = /* @__PURE__ */ Object.create(null);
              }
              this._sourcesContents[u.toSetString(r3)] = t3;
            } else if (this._sourcesContents) {
              delete this._sourcesContents[u.toSetString(r3)];
              if (Object.keys(this._sourcesContents).length === 0) {
                this._sourcesContents = null;
              }
            }
          }
          applySourceMap(e3, t3, r3) {
            let n2 = t3;
            if (t3 == null) {
              if (e3.file == null) {
                throw new Error(`SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, or the source map's "file" property. Both were omitted.`);
              }
              n2 = e3.file;
            }
            const i2 = this._sourceRoot;
            if (i2 != null) {
              n2 = u.relative(i2, n2);
            }
            const s = this._mappings.toArray().length > 0 ? new o() : this._sources;
            const a = new o();
            this._mappings.unsortedForEach(function(t4) {
              if (t4.source === n2 && t4.originalLine != null) {
                const n3 = e3.originalPositionFor({ line: t4.originalLine, column: t4.originalColumn });
                if (n3.source != null) {
                  t4.source = n3.source;
                  if (r3 != null) {
                    t4.source = u.join(r3, t4.source);
                  }
                  if (i2 != null) {
                    t4.source = u.relative(i2, t4.source);
                  }
                  t4.originalLine = n3.line;
                  t4.originalColumn = n3.column;
                  if (n3.name != null) {
                    t4.name = n3.name;
                  }
                }
              }
              const o2 = t4.source;
              if (o2 != null && !s.has(o2)) {
                s.add(o2);
              }
              const l = t4.name;
              if (l != null && !a.has(l)) {
                a.add(l);
              }
            }, this);
            this._sources = s;
            this._names = a;
            e3.sources.forEach(function(t4) {
              const n3 = e3.sourceContentFor(t4);
              if (n3 != null) {
                if (r3 != null) {
                  t4 = u.join(r3, t4);
                }
                if (i2 != null) {
                  t4 = u.relative(i2, t4);
                }
                this.setSourceContent(t4, n3);
              }
            }, this);
          }
          _validateMapping(e3, t3, r3, n2) {
            if (t3 && typeof t3.line !== "number" && typeof t3.column !== "number") {
              throw new Error("original.line and original.column are not numbers -- you probably meant to omit the original mapping entirely and only map the generated position. If so, pass null for the original mapping instead of an object with empty or null values.");
            }
            if (e3 && "line" in e3 && "column" in e3 && e3.line > 0 && e3.column >= 0 && !t3 && !r3 && !n2) {
            } else if (e3 && "line" in e3 && "column" in e3 && t3 && "line" in t3 && "column" in t3 && e3.line > 0 && e3.column >= 0 && t3.line > 0 && t3.column >= 0 && r3) {
            } else {
              throw new Error("Invalid mapping: " + JSON.stringify({ generated: e3, source: r3, original: t3, name: n2 }));
            }
          }
          _serializeMappings() {
            let e3 = 0;
            let t3 = 1;
            let r3 = 0;
            let o2 = 0;
            let i2 = 0;
            let s = 0;
            let a = "";
            let l;
            let c;
            let f;
            let p;
            const d = this._mappings.toArray();
            for (let g = 0, h = d.length; g < h; g++) {
              c = d[g];
              l = "";
              if (c.generatedLine !== t3) {
                e3 = 0;
                while (c.generatedLine !== t3) {
                  l += ";";
                  t3++;
                }
              } else if (g > 0) {
                if (!u.compareByGeneratedPositionsInflated(c, d[g - 1])) {
                  continue;
                }
                l += ",";
              }
              l += n.encode(c.generatedColumn - e3);
              e3 = c.generatedColumn;
              if (c.source != null) {
                p = this._sources.indexOf(c.source);
                l += n.encode(p - s);
                s = p;
                l += n.encode(c.originalLine - 1 - o2);
                o2 = c.originalLine - 1;
                l += n.encode(c.originalColumn - r3);
                r3 = c.originalColumn;
                if (c.name != null) {
                  f = this._names.indexOf(c.name);
                  l += n.encode(f - i2);
                  i2 = f;
                }
              }
              a += l;
            }
            return a;
          }
          _generateSourcesContent(e3, t3) {
            return e3.map(function(e4) {
              if (!this._sourcesContents) {
                return null;
              }
              if (t3 != null) {
                e4 = u.relative(t3, e4);
              }
              const r3 = u.toSetString(e4);
              return Object.prototype.hasOwnProperty.call(this._sourcesContents, r3) ? this._sourcesContents[r3] : null;
            }, this);
          }
          toJSON() {
            const e3 = { version: this._version, sources: this._sources.toArray(), names: this._names.toArray(), mappings: this._serializeMappings() };
            if (this._file != null) {
              e3.file = this._file;
            }
            if (this._sourceRoot != null) {
              e3.sourceRoot = this._sourceRoot;
            }
            if (this._sourcesContents) {
              e3.sourcesContent = this._generateSourcesContent(e3.sources, e3.sourceRoot);
            }
            return e3;
          }
          toString() {
            return JSON.stringify(this.toJSON());
          }
        }
        SourceMapGenerator.prototype._version = 3;
        t2.SourceMapGenerator = SourceMapGenerator;
      }, 589: function(e2, t2, r2) {
        const n = r2(87).SourceMapGenerator;
        const u = r2(354);
        const o = /(\r?\n)/;
        const i = 10;
        const s = "$$$isSourceNode$$$";
        class SourceNode {
          constructor(e3, t3, r3, n2, u2) {
            this.children = [];
            this.sourceContents = {};
            this.line = e3 == null ? null : e3;
            this.column = t3 == null ? null : t3;
            this.source = r3 == null ? null : r3;
            this.name = u2 == null ? null : u2;
            this[s] = true;
            if (n2 != null)
              this.add(n2);
          }
          static fromStringWithSourceMap(e3, t3, r3) {
            const n2 = new SourceNode();
            const i2 = e3.split(o);
            let s2 = 0;
            const shiftNextLine = function() {
              const e4 = getNextLine();
              const t4 = getNextLine() || "";
              return e4 + t4;
              function getNextLine() {
                return s2 < i2.length ? i2[s2++] : void 0;
              }
            };
            let a = 1, l = 0;
            let c = null;
            let f;
            t3.eachMapping(function(e4) {
              if (c !== null) {
                if (a < e4.generatedLine) {
                  addMappingWithCode(c, shiftNextLine());
                  a++;
                  l = 0;
                } else {
                  f = i2[s2] || "";
                  const t4 = f.substr(0, e4.generatedColumn - l);
                  i2[s2] = f.substr(e4.generatedColumn - l);
                  l = e4.generatedColumn;
                  addMappingWithCode(c, t4);
                  c = e4;
                  return;
                }
              }
              while (a < e4.generatedLine) {
                n2.add(shiftNextLine());
                a++;
              }
              if (l < e4.generatedColumn) {
                f = i2[s2] || "";
                n2.add(f.substr(0, e4.generatedColumn));
                i2[s2] = f.substr(e4.generatedColumn);
                l = e4.generatedColumn;
              }
              c = e4;
            }, this);
            if (s2 < i2.length) {
              if (c) {
                addMappingWithCode(c, shiftNextLine());
              }
              n2.add(i2.splice(s2).join(""));
            }
            t3.sources.forEach(function(e4) {
              const o2 = t3.sourceContentFor(e4);
              if (o2 != null) {
                if (r3 != null) {
                  e4 = u.join(r3, e4);
                }
                n2.setSourceContent(e4, o2);
              }
            });
            return n2;
            function addMappingWithCode(e4, t4) {
              if (e4 === null || e4.source === void 0) {
                n2.add(t4);
              } else {
                const o2 = r3 ? u.join(r3, e4.source) : e4.source;
                n2.add(new SourceNode(e4.originalLine, e4.originalColumn, o2, t4, e4.name));
              }
            }
          }
          add(e3) {
            if (Array.isArray(e3)) {
              e3.forEach(function(e4) {
                this.add(e4);
              }, this);
            } else if (e3[s] || typeof e3 === "string") {
              if (e3) {
                this.children.push(e3);
              }
            } else {
              throw new TypeError("Expected a SourceNode, string, or an array of SourceNodes and strings. Got " + e3);
            }
            return this;
          }
          prepend(e3) {
            if (Array.isArray(e3)) {
              for (let t3 = e3.length - 1; t3 >= 0; t3--) {
                this.prepend(e3[t3]);
              }
            } else if (e3[s] || typeof e3 === "string") {
              this.children.unshift(e3);
            } else {
              throw new TypeError("Expected a SourceNode, string, or an array of SourceNodes and strings. Got " + e3);
            }
            return this;
          }
          walk(e3) {
            let t3;
            for (let r3 = 0, n2 = this.children.length; r3 < n2; r3++) {
              t3 = this.children[r3];
              if (t3[s]) {
                t3.walk(e3);
              } else if (t3 !== "") {
                e3(t3, { source: this.source, line: this.line, column: this.column, name: this.name });
              }
            }
          }
          join(e3) {
            let t3;
            let r3;
            const n2 = this.children.length;
            if (n2 > 0) {
              t3 = [];
              for (r3 = 0; r3 < n2 - 1; r3++) {
                t3.push(this.children[r3]);
                t3.push(e3);
              }
              t3.push(this.children[r3]);
              this.children = t3;
            }
            return this;
          }
          replaceRight(e3, t3) {
            const r3 = this.children[this.children.length - 1];
            if (r3[s]) {
              r3.replaceRight(e3, t3);
            } else if (typeof r3 === "string") {
              this.children[this.children.length - 1] = r3.replace(e3, t3);
            } else {
              this.children.push("".replace(e3, t3));
            }
            return this;
          }
          setSourceContent(e3, t3) {
            this.sourceContents[u.toSetString(e3)] = t3;
          }
          walkSourceContents(e3) {
            for (let t4 = 0, r3 = this.children.length; t4 < r3; t4++) {
              if (this.children[t4][s]) {
                this.children[t4].walkSourceContents(e3);
              }
            }
            const t3 = Object.keys(this.sourceContents);
            for (let r3 = 0, n2 = t3.length; r3 < n2; r3++) {
              e3(u.fromSetString(t3[r3]), this.sourceContents[t3[r3]]);
            }
          }
          toString() {
            let e3 = "";
            this.walk(function(t3) {
              e3 += t3;
            });
            return e3;
          }
          toStringWithSourceMap(e3) {
            const t3 = { code: "", line: 1, column: 0 };
            const r3 = new n(e3);
            let u2 = false;
            let o2 = null;
            let s2 = null;
            let a = null;
            let l = null;
            this.walk(function(e4, n2) {
              t3.code += e4;
              if (n2.source !== null && n2.line !== null && n2.column !== null) {
                if (o2 !== n2.source || s2 !== n2.line || a !== n2.column || l !== n2.name) {
                  r3.addMapping({ source: n2.source, original: { line: n2.line, column: n2.column }, generated: { line: t3.line, column: t3.column }, name: n2.name });
                }
                o2 = n2.source;
                s2 = n2.line;
                a = n2.column;
                l = n2.name;
                u2 = true;
              } else if (u2) {
                r3.addMapping({ generated: { line: t3.line, column: t3.column } });
                o2 = null;
                u2 = false;
              }
              for (let s3 = 0, a2 = e4.length; s3 < a2; s3++) {
                if (e4.charCodeAt(s3) === i) {
                  t3.line++;
                  t3.column = 0;
                  if (s3 + 1 === a2) {
                    o2 = null;
                    u2 = false;
                  } else if (u2) {
                    r3.addMapping({ source: n2.source, original: { line: n2.line, column: n2.column }, generated: { line: t3.line, column: t3.column }, name: n2.name });
                  }
                } else {
                  t3.column++;
                }
              }
            });
            this.walkSourceContents(function(e4, t4) {
              r3.setSourceContent(e4, t4);
            });
            return { code: t3.code, map: r3 };
          }
        }
        t2.SourceNode = SourceNode;
      }, 869: function(e2, t2, r2) {
        "use strict";
        e2.exports = typeof URL === "function" ? URL : r2(310).URL;
      }, 354: function(e2, t2, r2) {
        const n = r2(869);
        function getArg(e3, t3, r3) {
          if (t3 in e3) {
            return e3[t3];
          } else if (arguments.length === 3) {
            return r3;
          }
          throw new Error('"' + t3 + '" is a required argument.');
        }
        t2.getArg = getArg;
        const u = function() {
          const e3 = /* @__PURE__ */ Object.create(null);
          return !("__proto__" in e3);
        }();
        function identity(e3) {
          return e3;
        }
        function toSetString(e3) {
          if (isProtoString(e3)) {
            return "$" + e3;
          }
          return e3;
        }
        t2.toSetString = u ? identity : toSetString;
        function fromSetString(e3) {
          if (isProtoString(e3)) {
            return e3.slice(1);
          }
          return e3;
        }
        t2.fromSetString = u ? identity : fromSetString;
        function isProtoString(e3) {
          if (!e3) {
            return false;
          }
          const t3 = e3.length;
          if (t3 < 9) {
            return false;
          }
          if (e3.charCodeAt(t3 - 1) !== 95 || e3.charCodeAt(t3 - 2) !== 95 || e3.charCodeAt(t3 - 3) !== 111 || e3.charCodeAt(t3 - 4) !== 116 || e3.charCodeAt(t3 - 5) !== 111 || e3.charCodeAt(t3 - 6) !== 114 || e3.charCodeAt(t3 - 7) !== 112 || e3.charCodeAt(t3 - 8) !== 95 || e3.charCodeAt(t3 - 9) !== 95) {
            return false;
          }
          for (let r3 = t3 - 10; r3 >= 0; r3--) {
            if (e3.charCodeAt(r3) !== 36) {
              return false;
            }
          }
          return true;
        }
        function strcmp(e3, t3) {
          if (e3 === t3) {
            return 0;
          }
          if (e3 === null) {
            return 1;
          }
          if (t3 === null) {
            return -1;
          }
          if (e3 > t3) {
            return 1;
          }
          return -1;
        }
        function compareByGeneratedPositionsInflated(e3, t3) {
          let r3 = e3.generatedLine - t3.generatedLine;
          if (r3 !== 0) {
            return r3;
          }
          r3 = e3.generatedColumn - t3.generatedColumn;
          if (r3 !== 0) {
            return r3;
          }
          r3 = strcmp(e3.source, t3.source);
          if (r3 !== 0) {
            return r3;
          }
          r3 = e3.originalLine - t3.originalLine;
          if (r3 !== 0) {
            return r3;
          }
          r3 = e3.originalColumn - t3.originalColumn;
          if (r3 !== 0) {
            return r3;
          }
          return strcmp(e3.name, t3.name);
        }
        t2.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;
        function parseSourceMapInput(e3) {
          return JSON.parse(e3.replace(/^\)]}'[^\n]*\n/, ""));
        }
        t2.parseSourceMapInput = parseSourceMapInput;
        const o = "http:";
        const i = `${o}//host`;
        function createSafeHandler(e3) {
          return (t3) => {
            const r3 = getURLType(t3);
            const u2 = buildSafeBase(t3);
            const s2 = new n(t3, u2);
            e3(s2);
            const a2 = s2.toString();
            if (r3 === "absolute") {
              return a2;
            } else if (r3 === "scheme-relative") {
              return a2.slice(o.length);
            } else if (r3 === "path-absolute") {
              return a2.slice(i.length);
            }
            return computeRelativeURL(u2, a2);
          };
        }
        function withBase(e3, t3) {
          return new n(e3, t3).toString();
        }
        function buildUniqueSegment(e3, t3) {
          let r3 = 0;
          do {
            const n2 = e3 + r3++;
            if (t3.indexOf(n2) === -1)
              return n2;
          } while (true);
        }
        function buildSafeBase(e3) {
          const t3 = e3.split("..").length - 1;
          const r3 = buildUniqueSegment("p", e3);
          let n2 = `${i}/`;
          for (let e4 = 0; e4 < t3; e4++) {
            n2 += `${r3}/`;
          }
          return n2;
        }
        const s = /^[A-Za-z0-9\+\-\.]+:/;
        function getURLType(e3) {
          if (e3[0] === "/") {
            if (e3[1] === "/")
              return "scheme-relative";
            return "path-absolute";
          }
          return s.test(e3) ? "absolute" : "path-relative";
        }
        function computeRelativeURL(e3, t3) {
          if (typeof e3 === "string")
            e3 = new n(e3);
          if (typeof t3 === "string")
            t3 = new n(t3);
          const r3 = t3.pathname.split("/");
          const u2 = e3.pathname.split("/");
          if (u2.length > 0 && !u2[u2.length - 1]) {
            u2.pop();
          }
          while (r3.length > 0 && u2.length > 0 && r3[0] === u2[0]) {
            r3.shift();
            u2.shift();
          }
          const o2 = u2.map(() => "..").concat(r3).join("/");
          return o2 + t3.search + t3.hash;
        }
        const a = createSafeHandler((e3) => {
          e3.pathname = e3.pathname.replace(/\/?$/, "/");
        });
        const l = createSafeHandler((e3) => {
          e3.href = new n(".", e3.toString()).toString();
        });
        const c = createSafeHandler((e3) => {
        });
        t2.normalize = c;
        function join(e3, t3) {
          const r3 = getURLType(t3);
          const n2 = getURLType(e3);
          e3 = a(e3);
          if (r3 === "absolute") {
            return withBase(t3, void 0);
          }
          if (n2 === "absolute") {
            return withBase(t3, e3);
          }
          if (r3 === "scheme-relative") {
            return c(t3);
          }
          if (n2 === "scheme-relative") {
            return withBase(t3, withBase(e3, i)).slice(o.length);
          }
          if (r3 === "path-absolute") {
            return c(t3);
          }
          if (n2 === "path-absolute") {
            return withBase(t3, withBase(e3, i)).slice(i.length);
          }
          const u2 = buildSafeBase(t3 + e3);
          const s2 = withBase(t3, withBase(e3, u2));
          return computeRelativeURL(u2, s2);
        }
        t2.join = join;
        function relative(e3, t3) {
          const r3 = relativeIfPossible(e3, t3);
          return typeof r3 === "string" ? r3 : c(t3);
        }
        t2.relative = relative;
        function relativeIfPossible(e3, t3) {
          const r3 = getURLType(e3);
          if (r3 !== getURLType(t3)) {
            return null;
          }
          const u2 = buildSafeBase(e3 + t3);
          const o2 = new n(e3, u2);
          const i2 = new n(t3, u2);
          try {
            new n("", i2.toString());
          } catch (e4) {
            return null;
          }
          if (i2.protocol !== o2.protocol || i2.user !== o2.user || i2.password !== o2.password || i2.hostname !== o2.hostname || i2.port !== o2.port) {
            return null;
          }
          return computeRelativeURL(o2, i2);
        }
        function computeSourceURL(e3, t3, r3) {
          if (e3 && getURLType(t3) === "path-absolute") {
            t3 = t3.replace(/^\//, "");
          }
          let n2 = c(t3 || "");
          if (e3)
            n2 = join(e3, n2);
          if (r3)
            n2 = join(l(r3), n2);
          return n2;
        }
        t2.computeSourceURL = computeSourceURL;
      }, 776: function(e2, t2, r2) {
        const n = r2(799);
        function Mapping() {
          this.generatedLine = 0;
          this.generatedColumn = 0;
          this.lastGeneratedColumn = null;
          this.source = null;
          this.originalLine = null;
          this.originalColumn = null;
          this.name = null;
        }
        let u = null;
        e2.exports = function wasm() {
          if (u) {
            return u;
          }
          const e3 = [];
          u = n().then((t3) => WebAssembly.instantiate(t3, { env: { mapping_callback(t4, r3, n2, u2, o, i, s, a, l, c) {
            const f = new Mapping();
            f.generatedLine = t4 + 1;
            f.generatedColumn = r3;
            if (n2) {
              f.lastGeneratedColumn = u2 - 1;
            }
            if (o) {
              f.source = i;
              f.originalLine = s + 1;
              f.originalColumn = a;
              if (l) {
                f.name = c;
              }
            }
            e3[e3.length - 1](f);
          }, start_all_generated_locations_for() {
            console.time("all_generated_locations_for");
          }, end_all_generated_locations_for() {
            console.timeEnd("all_generated_locations_for");
          }, start_compute_column_spans() {
            console.time("compute_column_spans");
          }, end_compute_column_spans() {
            console.timeEnd("compute_column_spans");
          }, start_generated_location_for() {
            console.time("generated_location_for");
          }, end_generated_location_for() {
            console.timeEnd("generated_location_for");
          }, start_original_location_for() {
            console.time("original_location_for");
          }, end_original_location_for() {
            console.timeEnd("original_location_for");
          }, start_parse_mappings() {
            console.time("parse_mappings");
          }, end_parse_mappings() {
            console.timeEnd("parse_mappings");
          }, start_sort_by_generated_location() {
            console.time("sort_by_generated_location");
          }, end_sort_by_generated_location() {
            console.timeEnd("sort_by_generated_location");
          }, start_sort_by_original_location() {
            console.time("sort_by_original_location");
          }, end_sort_by_original_location() {
            console.timeEnd("sort_by_original_location");
          } } })).then((t3) => ({ exports: t3.instance.exports, withMappingCallback: (t4, r3) => {
            e3.push(t4);
            try {
              r3();
            } finally {
              e3.pop();
            }
          } })).then(null, (e4) => {
            u = null;
            throw e4;
          });
          return u;
        };
      }, 135: function(e2, t2, r2) {
        t2.SourceMapGenerator = r2(87).SourceMapGenerator;
        t2.SourceMapConsumer = r2(886).SourceMapConsumer;
        t2.SourceNode = r2(589).SourceNode;
      }, 220: function(e2, t2, r2) {
        "use strict";
        const n = r2(37);
        const u = r2(343);
        const o = process.env;
        let i;
        if (u("no-color") || u("no-colors") || u("color=false")) {
          i = false;
        } else if (u("color") || u("colors") || u("color=true") || u("color=always")) {
          i = true;
        }
        if ("FORCE_COLOR" in o) {
          i = o.FORCE_COLOR.length === 0 || parseInt(o.FORCE_COLOR, 10) !== 0;
        }
        function translateLevel(e3) {
          if (e3 === 0) {
            return false;
          }
          return { level: e3, hasBasic: true, has256: e3 >= 2, has16m: e3 >= 3 };
        }
        function supportsColor(e3) {
          if (i === false) {
            return 0;
          }
          if (u("color=16m") || u("color=full") || u("color=truecolor")) {
            return 3;
          }
          if (u("color=256")) {
            return 2;
          }
          if (e3 && !e3.isTTY && i !== true) {
            return 0;
          }
          const t3 = i ? 1 : 0;
          if (process.platform === "win32") {
            const e4 = n.release().split(".");
            if (Number(process.versions.node.split(".")[0]) >= 8 && Number(e4[0]) >= 10 && Number(e4[2]) >= 10586) {
              return Number(e4[2]) >= 14931 ? 3 : 2;
            }
            return 1;
          }
          if ("CI" in o) {
            if (["TRAVIS", "CIRCLECI", "APPVEYOR", "GITLAB_CI"].some((e4) => e4 in o) || o.CI_NAME === "codeship") {
              return 1;
            }
            return t3;
          }
          if ("TEAMCITY_VERSION" in o) {
            return /^(9\.(0*[1-9]\d*)\.|\d{2,}\.)/.test(o.TEAMCITY_VERSION) ? 1 : 0;
          }
          if (o.COLORTERM === "truecolor") {
            return 3;
          }
          if ("TERM_PROGRAM" in o) {
            const e4 = parseInt((o.TERM_PROGRAM_VERSION || "").split(".")[0], 10);
            switch (o.TERM_PROGRAM) {
              case "iTerm.app":
                return e4 >= 3 ? 3 : 2;
              case "Apple_Terminal":
                return 2;
            }
          }
          if (/-256(color)?$/i.test(o.TERM)) {
            return 2;
          }
          if (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(o.TERM)) {
            return 1;
          }
          if ("COLORTERM" in o) {
            return 1;
          }
          if (o.TERM === "dumb") {
            return t3;
          }
          return t3;
        }
        function getSupportLevel(e3) {
          const t3 = supportsColor(e3);
          return translateLevel(t3);
        }
        e2.exports = { supportsColor: getSupportLevel, stdout: getSupportLevel(process.stdout), stderr: getSupportLevel(process.stderr) };
      }, 321: function(e2, t2, r2) {
        "use strict";
        var n = this && this.__importDefault || function(e3) {
          return e3 && e3.__esModule ? e3 : { default: e3 };
        };
        Object.defineProperty(t2, "__esModule", { value: true });
        t2.getRawSourceMap = void 0;
        const u = n(r2(175));
        const o = r2(8);
        function getRawSourceMap(e3) {
          const t3 = (0, o.getSourceMapUrl)(e3);
          if (!(t3 == null ? void 0 : t3.startsWith("data:"))) {
            return null;
          }
          let r3;
          try {
            r3 = (0, u.default)(t3);
          } catch (e4) {
            console.error("Failed to parse source map URL:", e4);
            return null;
          }
          if (r3.type !== "application/json") {
            console.error(`Unknown source map type: ${r3.typeFull}.`);
            return null;
          }
          try {
            return JSON.parse(r3.toString());
          } catch {
            console.error("Failed to parse source map.");
            return null;
          }
        }
        t2.getRawSourceMap = getRawSourceMap;
      }, 8: function(e2, t2) {
        "use strict";
        Object.defineProperty(t2, "__esModule", { value: true });
        t2.getSourceMapUrl = void 0;
        function getSourceMapUrl(e3) {
          const t3 = /\/\/[#@] ?sourceMappingURL=([^\s'"]+)\s*$/gm;
          let r2 = null;
          for (; ; ) {
            let n = t3.exec(e3);
            if (n == null) {
              break;
            }
            r2 = n;
          }
          if (!(r2 && r2[1])) {
            return null;
          }
          return r2[1].toString();
        }
        t2.getSourceMapUrl = getSourceMapUrl;
      }, 259: function(e2, t2, r2) {
        "use strict";
        var n = this && this.__importDefault || function(e3) {
          return e3 && e3.__esModule ? e3 : { default: e3 };
        };
        Object.defineProperty(t2, "__esModule", { value: true });
        t2.launchEditor = void 0;
        const u = n(r2(306));
        const o = n(r2(81));
        const i = n(r2(147));
        const s = n(r2(37));
        const a = n(r2(17));
        const l = n(r2(938));
        function isTerminalEditor(e3) {
          switch (e3) {
            case "vi":
            case "vim":
            case "emacs":
            case "nano": {
              return true;
            }
            default: {
            }
          }
          return false;
        }
        const c = { "/Applications/Atom.app/Contents/MacOS/Atom": "atom", "/Applications/Atom Beta.app/Contents/MacOS/Atom Beta": "/Applications/Atom Beta.app/Contents/MacOS/Atom Beta", "/Applications/Brackets.app/Contents/MacOS/Brackets": "brackets", "/Applications/Sublime Text.app/Contents/MacOS/Sublime Text": "/Applications/Sublime Text.app/Contents/SharedSupport/bin/subl", "/Applications/Sublime Text Dev.app/Contents/MacOS/Sublime Text": "/Applications/Sublime Text Dev.app/Contents/SharedSupport/bin/subl", "/Applications/Sublime Text 2.app/Contents/MacOS/Sublime Text 2": "/Applications/Sublime Text 2.app/Contents/SharedSupport/bin/subl", "/Applications/Visual Studio Code.app/Contents/MacOS/Electron": "/Applications/Visual Studio Code.app/Contents/Resources/app/bin/code", "/Applications/Visual Studio Code - Insiders.app/Contents/MacOS/Electron": "/Applications/Visual Studio Code - Insiders.app/Contents/Resources/app/bin/code", "/Applications/VSCodium.app/Contents/MacOS/Electron": "/Applications/VSCodium.app/Contents/Resources/app/bin/code", "/Applications/AppCode.app/Contents/MacOS/appcode": "/Applications/AppCode.app/Contents/MacOS/appcode", "/Applications/CLion.app/Contents/MacOS/clion": "/Applications/CLion.app/Contents/MacOS/clion", "/Applications/IntelliJ IDEA.app/Contents/MacOS/idea": "/Applications/IntelliJ IDEA.app/Contents/MacOS/idea", "/Applications/PhpStorm.app/Contents/MacOS/phpstorm": "/Applications/PhpStorm.app/Contents/MacOS/phpstorm", "/Applications/PyCharm.app/Contents/MacOS/pycharm": "/Applications/PyCharm.app/Contents/MacOS/pycharm", "/Applications/PyCharm CE.app/Contents/MacOS/pycharm": "/Applications/PyCharm CE.app/Contents/MacOS/pycharm", "/Applications/RubyMine.app/Contents/MacOS/rubymine": "/Applications/RubyMine.app/Contents/MacOS/rubymine", "/Applications/WebStorm.app/Contents/MacOS/webstorm": "/Applications/WebStorm.app/Contents/MacOS/webstorm", "/Applications/MacVim.app/Contents/MacOS/MacVim": "mvim", "/Applications/GoLand.app/Contents/MacOS/goland": "/Applications/GoLand.app/Contents/MacOS/goland", "/Applications/Rider.app/Contents/MacOS/rider": "/Applications/Rider.app/Contents/MacOS/rider" };
        const f = { atom: "atom", Brackets: "brackets", code: "code", "code-insiders": "code-insiders", vscodium: "vscodium", emacs: "emacs", gvim: "gvim", "idea.sh": "idea", "phpstorm.sh": "phpstorm", "pycharm.sh": "pycharm", "rubymine.sh": "rubymine", sublime_text: "sublime_text", vim: "vim", "webstorm.sh": "webstorm", "goland.sh": "goland", "rider.sh": "rider" };
        const p = ["Brackets.exe", "Code.exe", "Code - Insiders.exe", "VSCodium.exe", "atom.exe", "sublime_text.exe", "notepad++.exe", "clion.exe", "clion64.exe", "idea.exe", "idea64.exe", "phpstorm.exe", "phpstorm64.exe", "pycharm.exe", "pycharm64.exe", "rubymine.exe", "rubymine64.exe", "webstorm.exe", "webstorm64.exe", "goland.exe", "goland64.exe", "rider.exe", "rider64.exe"];
        const d = /^([A-Za-z]:[/\\])?(?:[\x2D-9A-Z\\_a-z\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0560-\u0588\u05D0-\u05EA\u05EF-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u0860-\u086A\u08A0-\u08B4\u08B6-\u08BD\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u09FC\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16F1-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1878\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1C90-\u1CBA\u1CBD-\u1CBF\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2183\u2184\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005\u3006\u3031-\u3035\u303B\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312F\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FEF\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6E5\uA717-\uA71F\uA722-\uA788\uA78B-\uA7B9\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA8FE\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF2D-\uDF40\uDF42-\uDF49\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF]|\uD801[\uDC00-\uDC9D\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE35\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2\uDD00-\uDD23\uDF00-\uDF1C\uDF27\uDF30-\uDF45]|\uD804[\uDC03-\uDC37\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD44\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDF00-\uDF1A]|\uD806[\uDC00-\uDC2B\uDCA0-\uDCDF\uDCFF\uDE00\uDE0B-\uDE32\uDE3A\uDE50\uDE5C-\uDE83\uDE86-\uDE89\uDE9D\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC72-\uDC8F\uDD00-\uDD06\uDD08\uDD09\uDD0B-\uDD30\uDD46\uDD60-\uDD65\uDD67\uDD68\uDD6A-\uDD89\uDD98\uDEE0-\uDEF2]|\uD808[\uDC00-\uDF99]|\uD809[\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872\uD874-\uD879][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDE40-\uDE7F\uDF00-\uDF44\uDF50\uDF93-\uDF9F\uDFE0\uDFE1]|\uD821[\uDC00-\uDFF1]|\uD822[\uDC00-\uDEF2]|\uD82C[\uDC00-\uDD1E\uDD70-\uDEFB]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD83A[\uDC00-\uDCC4\uDD00-\uDD43]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1\uDEB0-\uDFFF]|\uD87A[\uDC00-\uDFE0]|\uD87E[\uDC00-\uDE1D])+$/;
        function getArgumentsForLineNumber(e3, t3, r3, n2) {
          const u2 = a.default.basename(e3).replace(/\.(exe|cmd|bat)$/i, "");
          switch (u2) {
            case "atom":
            case "Atom":
            case "Atom Beta":
            case "subl":
            case "sublime":
            case "sublime_text": {
              return [t3 + ":" + r3 + ":" + n2];
            }
            case "wstorm":
            case "charm": {
              return [t3 + ":" + r3];
            }
            case "notepad++": {
              return ["-n" + r3, "-c" + n2, t3];
            }
            case "vim":
            case "mvim":
            case "joe":
            case "gvim": {
              return ["+" + r3, t3];
            }
            case "emacs":
            case "emacsclient": {
              return ["+" + r3 + ":" + n2, t3];
            }
            case "rmate":
            case "mate":
            case "mine": {
              return ["--line", r3.toString(), t3];
            }
            case "code":
            case "Code":
            case "code-insiders":
            case "Code - Insiders":
            case "vscodium":
            case "VSCodium": {
              return ["-g", t3 + ":" + r3 + ":" + n2];
            }
            case "appcode":
            case "clion":
            case "clion64":
            case "idea":
            case "idea64":
            case "phpstorm":
            case "phpstorm64":
            case "pycharm":
            case "pycharm64":
            case "rubymine":
            case "rubymine64":
            case "webstorm":
            case "webstorm64":
            case "goland":
            case "goland64":
            case "rider":
            case "rider64": {
              return ["--line", r3.toString(), t3];
            }
            default: {
              return [t3];
            }
          }
        }
        function guessEditor() {
          if (process.env.REACT_EDITOR) {
            return l.default.parse(process.env.REACT_EDITOR);
          }
          try {
            if (process.platform === "darwin") {
              const e3 = o.default.execSync("ps x").toString();
              const t3 = Object.keys(c);
              for (let r3 = 0; r3 < t3.length; r3++) {
                const n2 = t3[r3];
                if (e3.includes(n2)) {
                  return [c[n2]];
                }
              }
            } else if (process.platform === "win32") {
              const e3 = o.default.execSync('wmic process where "executablepath is not null" get executablepath').toString();
              const t3 = e3.split("\r\n");
              for (let e4 = 0; e4 < t3.length; e4++) {
                const r3 = t3[e4].trim();
                const n2 = a.default.basename(r3);
                if (p.includes(n2)) {
                  return [r3];
                }
              }
            } else if (process.platform === "linux") {
              const e3 = o.default.execSync("ps x --no-heading -o comm --sort=comm").toString();
              const t3 = Object.keys(f);
              for (let r3 = 0; r3 < t3.length; r3++) {
                const n2 = t3[r3];
                if (e3.includes(n2)) {
                  return [f[n2]];
                }
              }
            }
          } catch (e3) {
          }
          if (process.env.VISUAL) {
            return [process.env.VISUAL];
          } else if (process.env.EDITOR) {
            return [process.env.EDITOR];
          }
          return [];
        }
        function printInstructions(e3, t3) {
          console.log();
          console.log(u.default.red("Could not open " + a.default.basename(e3) + " in the editor."));
          if (t3) {
            if (t3[t3.length - 1] !== ".") {
              t3 += ".";
            }
            console.log(u.default.red("The editor process exited with an error: " + t3));
          }
          console.log();
          console.log("To set up the editor integration, add something like " + u.default.cyan("REACT_EDITOR=atom") + " to the " + u.default.green(".env.local") + " file in your project folder and restart the development server.");
          console.log();
        }
        function launchEditor(e3, t3, r3) {
          if (!i.default.existsSync(e3)) {
            return;
          }
          if (!(Number.isInteger(t3) && t3 > 0)) {
            return;
          }
          if (!(Number.isInteger(r3) && r3 > 0)) {
            r3 = 1;
          }
          let [n2, ...c2] = guessEditor();
          if (!n2) {
            printInstructions(e3, null);
            return;
          }
          if (n2.toLowerCase() === "none") {
            return;
          }
          if (process.platform === "linux" && e3.startsWith("/mnt/") && /Microsoft/i.test(s.default.release())) {
            e3 = a.default.relative("", e3);
          }
          if (process.platform === "win32" && !d.test(e3.trim())) {
            console.log();
            console.log(u.default.red("Could not open " + a.default.basename(e3) + " in the editor."));
            console.log();
            console.log("When running on Windows, file names are checked against an access list to protect against remote code execution attacks. File names may consist only of alphanumeric characters (all languages), periods, dashes, slashes, and underscores.");
            console.log();
            return;
          }
          if (t3) {
            c2 = c2.concat(getArgumentsForLineNumber(n2, e3, t3, r3));
          } else {
            c2.push(e3);
          }
          let f2 = void 0;
          if (process.platform === "win32") {
            f2 = o.default.spawn("cmd.exe", ["/C", n2].concat(c2), { stdio: "inherit", detached: true });
          } else if (isTerminalEditor(n2)) {
            if (process.platform === "darwin") {
              f2 = o.default.spawn("osascript", ["-e", `tell application "Terminal" to do script "${l.default.quote([n2, ...c2])}"`], { stdio: "ignore" });
            } else {
              printInstructions(e3, "Terminal editors can only be used on macOS.");
            }
          } else {
            f2 = o.default.spawn(n2, c2, { stdio: "inherit" });
          }
          if (f2) {
            f2.on("exit", function(t4) {
              if (t4) {
                printInstructions(e3, "(code " + t4 + ")");
              }
            });
            f2.on("error", function(t4) {
              printInstructions(e3, t4.message);
            });
          }
        }
        t2.launchEditor = launchEditor;
      }, 233: function(e2, t2, r2) {
        "use strict";
        Object.defineProperty(t2, "__esModule", { value: true });
        t2.getServerError = t2.decorateServerError = t2.getErrorSource = t2.getFilesystemFrame = void 0;
        const n = r2(974);
        function getFilesystemFrame(e3) {
          const t3 = { ...e3 };
          if (typeof t3.file === "string") {
            if (t3.file.startsWith("/") || /^[a-z]:\\/i.test(t3.file) || t3.file.startsWith("\\\\")) {
              t3.file = `file://${t3.file}`;
            }
          }
          return t3;
        }
        t2.getFilesystemFrame = getFilesystemFrame;
        const u = Symbol("NextjsError");
        function getErrorSource(e3) {
          return e3[u] || null;
        }
        t2.getErrorSource = getErrorSource;
        function decorateServerError(e3, t3) {
          Object.defineProperty(e3, u, { writable: false, enumerable: false, configurable: false, value: t3 });
        }
        t2.decorateServerError = decorateServerError;
        function getServerError(e3, t3) {
          let r3;
          try {
            throw new Error(e3.message);
          } catch (e4) {
            r3 = e4;
          }
          r3.name = e3.name;
          try {
            r3.stack = `${r3.toString()}
${(0, n.parse)(e3.stack).map(getFilesystemFrame).map((e4) => {
              let t4 = `    at ${e4.methodName}`;
              if (e4.file) {
                let r4 = e4.file;
                if (e4.lineNumber) {
                  r4 += `:${e4.lineNumber}`;
                  if (e4.column) {
                    r4 += `:${e4.column}`;
                  }
                }
                t4 += ` (${r4})`;
              }
              return t4;
            }).join("\n")}`;
          } catch {
            r3.stack = e3.stack;
          }
          decorateServerError(r3, t3);
          return r3;
        }
        t2.getServerError = getServerError;
      }, 636: function(e2, t2, r2) {
        "use strict";
        Object.defineProperty(t2, "__esModule", { value: true });
        t2.parseStack = void 0;
        const n = r2(974);
        const u = /\/_next(\/static\/.+)/;
        function parseStack(e3) {
          const t3 = (0, n.parse)(e3);
          return t3.map((e4) => {
            var _a, _b;
            try {
              const t4 = new URL(e4.file);
              const r3 = u.exec(t4.pathname);
              if (r3) {
                const t5 = (_b = (_a = process.env.__NEXT_DIST_DIR) == null ? void 0 : _a.replace(/\\/g, "/")) == null ? void 0 : _b.replace(/\/$/, "");
                if (t5) {
                  e4.file = "file://" + t5.concat(r3.pop());
                }
              }
            } catch {
            }
            return e4;
          });
        }
        t2.parseStack = parseStack;
      }, 601: function(e2, t2, r2) {
        "use strict";
        var n = this && this.__importDefault || function(e3) {
          return e3 && e3.__esModule ? e3 : { default: e3 };
        };
        Object.defineProperty(t2, "__esModule", { value: true });
        t2.getOverlayMiddleware = t2.getSourceById = t2.createOriginalStackFrame = t2.parseStack = t2.getServerError = t2.decorateServerError = t2.getErrorSource = void 0;
        const u = r2(430);
        const o = r2(147);
        const i = n(r2(17));
        const s = r2(135);
        const a = n(r2(310));
        const l = r2(321);
        const c = r2(259);
        var f = r2(233);
        Object.defineProperty(t2, "getErrorSource", { enumerable: true, get: function() {
          return f.getErrorSource;
        } });
        var p = r2(233);
        Object.defineProperty(t2, "decorateServerError", { enumerable: true, get: function() {
          return p.decorateServerError;
        } });
        Object.defineProperty(t2, "getServerError", { enumerable: true, get: function() {
          return p.getServerError;
        } });
        var d = r2(636);
        Object.defineProperty(t2, "parseStack", { enumerable: true, get: function() {
          return d.parseStack;
        } });
        function getModuleId(e3, t3) {
          return e3.chunkGraph.getModuleId(t3);
        }
        function getModuleById(e3, t3) {
          return [...t3.modules].find((r3) => {
            const n2 = getModuleId(t3, r3);
            return n2 === e3;
          });
        }
        function findModuleNotFoundFromError(e3) {
          const t3 = e3 == null ? void 0 : e3.match(/'([^']+)' module/);
          return t3 && t3[1];
        }
        function getModuleSource(e3, t3) {
          var _a;
          return (t3 && ((_a = e3.codeGenerationResults.get(t3)) == null ? void 0 : _a.sources.get("javascript"))) ?? null;
        }
        function getSourcePath(e3) {
          if (e3.startsWith("webpack:///")) {
            return e3.substring(11);
          }
          if (e3.startsWith("webpack://_N_E/")) {
            return e3.substring(15);
          }
          if (e3.startsWith("webpack://")) {
            return e3.substring(10);
          }
          return e3;
        }
        async function findOriginalSourcePositionAndContent(e3, t3) {
          const r3 = await new s.SourceMapConsumer(e3.map());
          try {
            const e4 = r3.originalPositionFor({ line: t3.line, column: t3.column ?? 0 });
            if (!e4.source) {
              return null;
            }
            const n2 = r3.sourceContentFor(e4.source, true) ?? null;
            return { sourcePosition: e4, sourceContent: n2 };
          } finally {
            r3.destroy();
          }
        }
        function findOriginalSourcePositionAndContentFromCompilation(e3, t3, r3) {
          var _a, _b;
          const n2 = getModuleById(e3, r3);
          return ((_b = (_a = n2 == null ? void 0 : n2.buildInfo) == null ? void 0 : _a.importLocByPath) == null ? void 0 : _b.get(t3)) ?? null;
        }
        function findCallStackFramePackage(e3, t3) {
          var _a, _b;
          if (!t3) {
            return void 0;
          }
          const r3 = getModuleById(e3, t3);
          return (_b = (_a = r3 == null ? void 0 : r3.resourceResolveData) == null ? void 0 : _a.descriptionFileData) == null ? void 0 : _b.name;
        }
        async function createOriginalStackFrame({ line: e3, column: t3, source: r3, sourcePackage: n2, moduleId: o2, modulePath: s2, rootDirectory: a2, frame: l2, errorMessage: c2, clientCompilation: f2, serverCompilation: p2, edgeCompilation: d2 }) {
          var _a, _b, _c;
          const g = findModuleNotFoundFromError(c2);
          const h = await (async () => {
            if (g) {
              let e4 = null;
              if (f2) {
                e4 = findOriginalSourcePositionAndContentFromCompilation(o2, g, f2);
              }
              if (e4 === null && p2) {
                e4 = findOriginalSourcePositionAndContentFromCompilation(o2, g, p2);
              }
              if (e4 === null && d2) {
                e4 = findOriginalSourcePositionAndContentFromCompilation(o2, g, d2);
              }
              return e4;
            }
            return await findOriginalSourcePositionAndContent(r3, { line: e3, column: t3 });
          })();
          if (h === null) {
            return null;
          }
          const { sourcePosition: m, sourceContent: D } = h;
          if (!m.source) {
            return null;
          }
          const C = i.default.resolve(a2, getSourcePath((m.source.includes("|") ? s2 : m.source) || s2));
          const v = { file: D ? i.default.relative(a2, C) : m.source, lineNumber: m.line, column: m.column, methodName: m.name || ((_b = (_a = l2.methodName) == null ? void 0 : _a.replace("__WEBPACK_DEFAULT_EXPORT__", "default")) == null ? void 0 : _b.replace("__webpack_exports__.", "")), arguments: [] };
          const A = !(((_c = v.file) == null ? void 0 : _c.includes("node_modules")) ?? true) && D && m.line ? (0, u.codeFrameColumns)(D, { start: { line: m.line, column: m.column ?? 0 } }, { forceColor: true }) : null;
          return { originalStackFrame: v, originalCodeFrame: A, sourcePackage: n2 };
        }
        t2.createOriginalStackFrame = createOriginalStackFrame;
        async function getSourceById(e3, t3, r3) {
          if (e3) {
            const e4 = await o.promises.readFile(t3, "utf-8").catch(() => null);
            if (e4 == null) {
              return null;
            }
            const r4 = (0, l.getRawSourceMap)(e4);
            if (r4 == null) {
              return null;
            }
            return { map() {
              return r4;
            } };
          }
          try {
            if (!r3) {
              return null;
            }
            const e4 = getModuleById(t3, r3);
            return getModuleSource(r3, e4);
          } catch (e4) {
            console.error(`Failed to lookup module by ID ("${t3}"):`, e4);
            return null;
          }
        }
        t2.getSourceById = getSourceById;
        function getOverlayMiddleware(e3) {
          return async function(t3, r3, n2) {
            var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j, _k, _l;
            const { pathname: u2, query: s2 } = a.default.parse(t3.url, true);
            if (u2 === "/__nextjs_original-stack-frame") {
              const t4 = s2;
              const n3 = t4.isAppDirectory === "true";
              const u3 = t4.isServer === "true";
              const o2 = t4.isEdgeServer === "true";
              const i2 = !u3 && !o2;
              if (!((((_a = t4.file) == null ? void 0 : _a.startsWith("webpack-internal:///")) || ((_b = t4.file) == null ? void 0 : _b.startsWith("file://")) || ((_c = t4.file) == null ? void 0 : _c.startsWith("webpack:///"))) && Boolean(parseInt(((_d = t4.lineNumber) == null ? void 0 : _d.toString()) ?? "", 10)))) {
                r3.statusCode = 400;
                r3.write("Bad Request");
                return r3.end();
              }
              const a2 = t4.file.replace(/webpack-internal:(\/)+|file:\/\//, "");
              const l2 = t4.file.replace(/webpack-internal:(\/)+|file:\/\/(\(.*\)\/)?/, "");
              let c2 = null;
              let f2 = void 0;
              const p2 = (_e = e3.stats()) == null ? void 0 : _e.compilation;
              const d2 = (_f = e3.serverStats()) == null ? void 0 : _f.compilation;
              const g = (_g = e3.edgeServerStats()) == null ? void 0 : _g.compilation;
              try {
                if (i2 || n3) {
                  c2 = await getSourceById(t4.file.startsWith("file:"), a2, p2);
                  f2 = findCallStackFramePackage(a2, p2);
                }
                if ((u3 || n3) && c2 === null) {
                  c2 = await getSourceById(t4.file.startsWith("file:"), a2, d2);
                  f2 = findCallStackFramePackage(a2, d2);
                }
                if ((o2 || n3) && c2 === null) {
                  c2 = await getSourceById(t4.file.startsWith("file:"), a2, g);
                  f2 = findCallStackFramePackage(a2, g);
                }
              } catch (e4) {
                console.log("Failed to get source map:", e4);
                r3.statusCode = 500;
                r3.write("Internal Server Error");
                return r3.end();
              }
              if (c2 == null) {
                r3.statusCode = 204;
                r3.write("No Content");
                return r3.end();
              }
              const h = parseInt(((_h = t4.lineNumber) == null ? void 0 : _h.toString()) ?? "", 10);
              let m = parseInt(((_i = t4.column) == null ? void 0 : _i.toString()) ?? "", 10);
              if (!m) {
                m = null;
              }
              try {
                const n4 = await createOriginalStackFrame({ line: h, column: m, source: c2, sourcePackage: f2, frame: t4, moduleId: a2, modulePath: l2, rootDirectory: e3.rootDirectory, errorMessage: t4.errorMessage, clientCompilation: i2 ? p2 : void 0, serverCompilation: u3 ? d2 : void 0, edgeCompilation: o2 ? g : void 0 });
                if (n4 === null) {
                  r3.statusCode = 204;
                  r3.write("No Content");
                  return r3.end();
                }
                r3.statusCode = 200;
                r3.setHeader("Content-Type", "application/json");
                r3.write(Buffer.from(JSON.stringify(n4)));
                return r3.end();
              } catch (e4) {
                console.log("Failed to parse source map:", e4);
                r3.statusCode = 500;
                r3.write("Internal Server Error");
                return r3.end();
              }
            } else if (u2 === "/__nextjs_launch-editor") {
              const t4 = s2;
              const n3 = ((_j = t4.file) == null ? void 0 : _j.toString()) || null;
              if (n3 == null) {
                r3.statusCode = 400;
                r3.write("Bad Request");
                return r3.end();
              }
              const u3 = i.default.resolve(e3.rootDirectory, n3.replace(/^\([^)]+\)\//, ""));
              const a2 = await o.promises.access(u3, o.constants.F_OK).then(() => true, () => false);
              if (!a2) {
                r3.statusCode = 204;
                r3.write("No Content");
                return r3.end();
              }
              const l2 = parseInt(((_k = t4.lineNumber) == null ? void 0 : _k.toString()) ?? "", 10) || 1;
              const f2 = parseInt(((_l = t4.column) == null ? void 0 : _l.toString()) ?? "", 10) || 1;
              try {
                await (0, c.launchEditor)(u3, l2, f2);
              } catch (e4) {
                console.log("Failed to launch editor:", e4);
                r3.statusCode = 500;
                r3.write("Internal Server Error");
                return r3.end();
              }
              r3.statusCode = 204;
              return r3.end();
            }
            return n2();
          };
        }
        t2.getOverlayMiddleware = getOverlayMiddleware;
      }, 81: function(e2) {
        "use strict";
        e2.exports = require_child_process();
      }, 147: function(e2) {
        "use strict";
        e2.exports = require_fs();
      }, 175: function(e2) {
        "use strict";
        e2.exports = require_data_uri_to_buffer();
      }, 938: function(e2) {
        "use strict";
        e2.exports = require_shell_quote();
      }, 974: function(e2) {
        "use strict";
        e2.exports = require_stack_trace_parser_cjs();
      }, 37: function(e2) {
        "use strict";
        e2.exports = require_os();
      }, 17: function(e2) {
        "use strict";
        e2.exports = require_path();
      }, 224: function(e2) {
        "use strict";
        e2.exports = require_tty();
      }, 310: function(e2) {
        "use strict";
        e2.exports = require_url();
      }, 430: function(e2, t2, r2) {
        "use strict";
        Object.defineProperty(t2, "__esModule", { value: true });
        t2.codeFrameColumns = codeFrameColumns;
        t2["default"] = _default;
        var n = r2(448);
        let u = false;
        function getDefs(e3) {
          return { gutter: e3.grey, marker: e3.red.bold, message: e3.red.bold };
        }
        const o = /\r\n|[\n\r\u2028\u2029]/;
        function getMarkerLines(e3, t3, r3) {
          const n2 = Object.assign({ column: 0, line: -1 }, e3.start);
          const u2 = Object.assign({}, n2, e3.end);
          const { linesAbove: o2 = 2, linesBelow: i = 3 } = r3 || {};
          const s = n2.line;
          const a = n2.column;
          const l = u2.line;
          const c = u2.column;
          let f = Math.max(s - (o2 + 1), 0);
          let p = Math.min(t3.length, l + i);
          if (s === -1) {
            f = 0;
          }
          if (l === -1) {
            p = t3.length;
          }
          const d = l - s;
          const g = {};
          if (d) {
            for (let e4 = 0; e4 <= d; e4++) {
              const r4 = e4 + s;
              if (!a) {
                g[r4] = true;
              } else if (e4 === 0) {
                const e5 = t3[r4 - 1].length;
                g[r4] = [a, e5 - a + 1];
              } else if (e4 === d) {
                g[r4] = [0, c];
              } else {
                const n3 = t3[r4 - e4].length;
                g[r4] = [0, n3];
              }
            }
          } else {
            if (a === c) {
              if (a) {
                g[s] = [a, 0];
              } else {
                g[s] = true;
              }
            } else {
              g[s] = [a, c - a];
            }
          }
          return { start: f, end: p, markerLines: g };
        }
        function codeFrameColumns(e3, t3, r3 = {}) {
          const u2 = (r3.highlightCode || r3.forceColor) && (0, n.shouldHighlight)(r3);
          const i = (0, n.getChalk)(r3);
          const s = getDefs(i);
          const maybeHighlight = (e4, t4) => u2 ? e4(t4) : t4;
          const a = e3.split(o);
          const { start: l, end: c, markerLines: f } = getMarkerLines(t3, a, r3);
          const p = t3.start && typeof t3.start.column === "number";
          const d = String(c).length;
          const g = u2 ? (0, n.default)(e3, r3) : e3;
          let h = g.split(o, c).slice(l, c).map((e4, t4) => {
            const n2 = l + 1 + t4;
            const u3 = ` ${n2}`.slice(-d);
            const o2 = ` ${u3} |`;
            const i2 = f[n2];
            const a2 = !f[n2 + 1];
            if (i2) {
              let t5 = "";
              if (Array.isArray(i2)) {
                const n3 = e4.slice(0, Math.max(i2[0] - 1, 0)).replace(/[^\t]/g, " ");
                const u4 = i2[1] || 1;
                t5 = ["\n ", maybeHighlight(s.gutter, o2.replace(/\d/g, " ")), " ", n3, maybeHighlight(s.marker, "^").repeat(u4)].join("");
                if (a2 && r3.message) {
                  t5 += " " + maybeHighlight(s.message, r3.message);
                }
              }
              return [maybeHighlight(s.marker, ">"), maybeHighlight(s.gutter, o2), e4.length > 0 ? ` ${e4}` : "", t5].join("");
            } else {
              return ` ${maybeHighlight(s.gutter, o2)}${e4.length > 0 ? ` ${e4}` : ""}`;
            }
          }).join("\n");
          if (r3.message && !p) {
            h = `${" ".repeat(d + 1)}${r3.message}
${h}`;
          }
          if (u2) {
            return i.reset(h);
          } else {
            return h;
          }
        }
        function _default(e3, t3, r3, n2 = {}) {
          if (!u) {
            u = true;
            const e4 = "Passing lineNumber and colNumber is deprecated to @babel/code-frame. Please use `codeFrameColumns`.";
            if (process.emitWarning) {
              process.emitWarning(e4, "DeprecationWarning");
            } else {
              const t4 = new Error(e4);
              t4.name = "DeprecationWarning";
              console.warn(new Error(e4));
            }
          }
          r3 = Math.max(r3, 0);
          const o2 = { start: { column: r3, line: t3 } };
          return codeFrameColumns(e3, o2, n2);
        }
      }, 387: function(e2, t2) {
        "use strict";
        Object.defineProperty(t2, "__esModule", { value: true });
        t2.isIdentifierChar = isIdentifierChar;
        t2.isIdentifierName = isIdentifierName;
        t2.isIdentifierStart = isIdentifierStart;
        let r2 = "ªµºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮͰ-ʹͶͷͺ-ͽͿΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁҊ-ԯԱ-Ֆՙՠ-ֈא-תׯ-ײؠ-يٮٯٱ-ۓەۥۦۮۯۺ-ۼۿܐܒ-ܯݍ-ޥޱߊ-ߪߴߵߺࠀ-ࠕࠚࠤࠨࡀ-ࡘࡠ-ࡪࡰ-ࢇࢉ-ࢎࢠ-ࣉऄ-हऽॐक़-ॡॱ-ঀঅ-ঌএঐও-নপ-রলশ-হঽৎড়ঢ়য়-ৡৰৱৼਅ-ਊਏਐਓ-ਨਪ-ਰਲਲ਼ਵਸ਼ਸਹਖ਼-ੜਫ਼ੲ-ੴઅ-ઍએ-ઑઓ-નપ-રલળવ-હઽૐૠૡૹଅ-ଌଏଐଓ-ନପ-ରଲଳଵ-ହଽଡ଼ଢ଼ୟ-ୡୱஃஅ-ஊஎ-ஐஒ-கஙசஜஞடணதந-பம-ஹௐఅ-ఌఎ-ఐఒ-నప-హఽౘ-ౚౝౠౡಀಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹಽೝೞೠೡೱೲഄ-ഌഎ-ഐഒ-ഺഽൎൔ-ൖൟ-ൡൺ-ൿඅ-ඖක-නඳ-රලව-ෆก-ะาำเ-ๆກຂຄຆ-ຊຌ-ຣລວ-ະາຳຽເ-ໄໆໜ-ໟༀཀ-ཇཉ-ཬྈ-ྌက-ဪဿၐ-ၕၚ-ၝၡၥၦၮ-ၰၵ-ႁႎႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚᎀ-ᎏᎠ-Ᏽᏸ-ᏽᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛮ-ᛸᜀ-ᜑᜟ-ᜱᝀ-ᝑᝠ-ᝬᝮ-ᝰក-ឳៗៜᠠ-ᡸᢀ-ᢨᢪᢰ-ᣵᤀ-ᤞᥐ-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉᨀ-ᨖᨠ-ᩔᪧᬅ-ᬳᭅ-ᭌᮃ-ᮠᮮᮯᮺ-ᯥᰀ-ᰣᱍ-ᱏᱚ-ᱽᲀ-ᲈᲐ-ᲺᲽ-Ჿᳩ-ᳬᳮ-ᳳᳵᳶᳺᴀ-ᶿḀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼⁱⁿₐ-ₜℂℇℊ-ℓℕ℘-ℝℤΩℨK-ℹℼ-ℿⅅ-ⅉⅎⅠ-ↈⰀ-ⳤⳫ-ⳮⳲⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞ々-〇〡-〩〱-〵〸-〼ぁ-ゖ゛-ゟァ-ヺー-ヿㄅ-ㄯㄱ-ㆎㆠ-ㆿㇰ-ㇿ㐀-䶿一-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘟꘪꘫꙀ-ꙮꙿ-ꚝꚠ-ꛯꜗ-ꜟꜢ-ꞈꞋ-ꟊꟐꟑꟓꟕ-ꟙꟲ-ꠁꠃ-ꠅꠇ-ꠊꠌ-ꠢꡀ-ꡳꢂ-ꢳꣲ-ꣷꣻꣽꣾꤊ-ꤥꤰ-ꥆꥠ-ꥼꦄ-ꦲꧏꧠ-ꧤꧦ-ꧯꧺ-ꧾꨀ-ꨨꩀ-ꩂꩄ-ꩋꩠ-ꩶꩺꩾ-ꪯꪱꪵꪶꪹ-ꪽꫀꫂꫛ-ꫝꫠ-ꫪꫲ-ꫴꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꬰ-ꭚꭜ-ꭩꭰ-ꯢ가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִײַ-ﬨשׁ-זּטּ-לּמּנּסּףּפּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻﹰ-ﹴﹶ-ﻼＡ-Ｚａ-ｚｦ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ";
        let n = "‌‍·̀-ͯ·҃-֑҇-ׇֽֿׁׂׅׄؐ-ًؚ-٩ٰۖ-ۜ۟-۪ۤۧۨ-ۭ۰-۹ܑܰ-݊ަ-ް߀-߉߫-߽߳ࠖ-࠙ࠛ-ࠣࠥ-ࠧࠩ-࡙࠭-࡛࢘-࢟࣊-ࣣ࣡-ःऺ-़ा-ॏ॑-ॗॢॣ०-९ঁ-ঃ়া-ৄেৈো-্ৗৢৣ০-৯৾ਁ-ਃ਼ਾ-ੂੇੈੋ-੍ੑ੦-ੱੵઁ-ઃ઼ા-ૅે-ૉો-્ૢૣ૦-૯ૺ-૿ଁ-ଃ଼ା-ୄେୈୋ-୍୕-ୗୢୣ୦-୯ஂா-ூெ-ைொ-்ௗ௦-௯ఀ-ఄ఼ా-ౄె-ైొ-్ౕౖౢౣ౦-౯ಁ-ಃ಼ಾ-ೄೆ-ೈೊ-್ೕೖೢೣ೦-೯ೳഀ-ഃ഻഼ാ-ൄെ-ൈൊ-്ൗൢൣ൦-൯ඁ-ඃ්ා-ුූෘ-ෟ෦-෯ෲෳัิ-ฺ็-๎๐-๙ັິ-ຼ່-໎໐-໙༘༙༠-༩༹༵༷༾༿ཱ-྄྆྇ྍ-ྗྙ-ྼ࿆ါ-ှ၀-၉ၖ-ၙၞ-ၠၢ-ၤၧ-ၭၱ-ၴႂ-ႍႏ-ႝ፝-፟፩-፱ᜒ-᜕ᜲ-᜴ᝒᝓᝲᝳ឴-៓៝០-៩᠋-᠍᠏-᠙ᢩᤠ-ᤫᤰ-᤻᥆-᥏᧐-᧚ᨗ-ᨛᩕ-ᩞ᩠-᩿᩼-᪉᪐-᪙᪰-᪽ᪿ-ᫎᬀ-ᬄ᬴-᭄᭐-᭙᭫-᭳ᮀ-ᮂᮡ-ᮭ᮰-᮹᯦-᯳ᰤ-᰷᱀-᱉᱐-᱙᳐-᳔᳒-᳨᳭᳴᳷-᳹᷀-᷿‌‍‿⁀⁔⃐-⃥⃜⃡-⃰⳯-⵿⳱ⷠ-〪ⷿ-゙゚〯・꘠-꘩꙯ꙴ-꙽ꚞꚟ꛰꛱ꠂ꠆ꠋꠣ-ꠧ꠬ꢀꢁꢴ-ꣅ꣐-꣙꣠-꣱ꣿ-꤉ꤦ-꤭ꥇ-꥓ꦀ-ꦃ꦳-꧀꧐-꧙ꧥ꧰-꧹ꨩ-ꨶꩃꩌꩍ꩐-꩙ꩻ-ꩽꪰꪲ-ꪴꪷꪸꪾ꪿꫁ꫫ-ꫯꫵ꫶ꯣ-ꯪ꯬꯭꯰-꯹ﬞ︀-️︠-︯︳︴﹍-﹏０-９＿･";
        const u = new RegExp("[" + r2 + "]");
        const o = new RegExp("[" + r2 + n + "]");
        r2 = n = null;
        const i = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 13, 10, 2, 14, 2, 6, 2, 1, 2, 10, 2, 14, 2, 6, 2, 1, 68, 310, 10, 21, 11, 7, 25, 5, 2, 41, 2, 8, 70, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 349, 41, 7, 1, 79, 28, 11, 0, 9, 21, 43, 17, 47, 20, 28, 22, 13, 52, 58, 1, 3, 0, 14, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 20, 1, 64, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 38, 6, 186, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 19, 72, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 16, 0, 2, 12, 2, 33, 125, 0, 80, 921, 103, 110, 18, 195, 2637, 96, 16, 1071, 18, 5, 4026, 582, 8634, 568, 8, 30, 18, 78, 18, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 43, 8, 8936, 3, 2, 6, 2, 1, 2, 290, 16, 0, 30, 2, 3, 0, 15, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 1845, 30, 7, 5, 262, 61, 147, 44, 11, 6, 17, 0, 322, 29, 19, 43, 485, 27, 757, 6, 2, 3, 2, 1, 2, 14, 2, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42719, 33, 4153, 7, 221, 3, 5761, 15, 7472, 16, 621, 2467, 541, 1507, 4938, 6, 4191];
        const s = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 370, 1, 81, 2, 71, 10, 50, 3, 123, 2, 54, 14, 32, 10, 3, 1, 11, 3, 46, 10, 8, 0, 46, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 3, 0, 158, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 10, 1, 2, 0, 49, 6, 4, 4, 14, 9, 5351, 0, 7, 14, 13835, 9, 87, 9, 39, 4, 60, 6, 26, 9, 1014, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 4706, 45, 3, 22, 543, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 101, 0, 161, 6, 10, 9, 357, 0, 62, 13, 499, 13, 983, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];
        function isInAstralSet(e3, t3) {
          let r3 = 65536;
          for (let n2 = 0, u2 = t3.length; n2 < u2; n2 += 2) {
            r3 += t3[n2];
            if (r3 > e3)
              return false;
            r3 += t3[n2 + 1];
            if (r3 >= e3)
              return true;
          }
          return false;
        }
        function isIdentifierStart(e3) {
          if (e3 < 65)
            return e3 === 36;
          if (e3 <= 90)
            return true;
          if (e3 < 97)
            return e3 === 95;
          if (e3 <= 122)
            return true;
          if (e3 <= 65535) {
            return e3 >= 170 && u.test(String.fromCharCode(e3));
          }
          return isInAstralSet(e3, i);
        }
        function isIdentifierChar(e3) {
          if (e3 < 48)
            return e3 === 36;
          if (e3 < 58)
            return true;
          if (e3 < 65)
            return false;
          if (e3 <= 90)
            return true;
          if (e3 < 97)
            return e3 === 95;
          if (e3 <= 122)
            return true;
          if (e3 <= 65535) {
            return e3 >= 170 && o.test(String.fromCharCode(e3));
          }
          return isInAstralSet(e3, i) || isInAstralSet(e3, s);
        }
        function isIdentifierName(e3) {
          let t3 = true;
          for (let r3 = 0; r3 < e3.length; r3++) {
            let n2 = e3.charCodeAt(r3);
            if ((n2 & 64512) === 55296 && r3 + 1 < e3.length) {
              const t4 = e3.charCodeAt(++r3);
              if ((t4 & 64512) === 56320) {
                n2 = 65536 + ((n2 & 1023) << 10) + (t4 & 1023);
              }
            }
            if (t3) {
              t3 = false;
              if (!isIdentifierStart(n2)) {
                return false;
              }
            } else if (!isIdentifierChar(n2)) {
              return false;
            }
          }
          return !t3;
        }
      }, 975: function(e2, t2, r2) {
        "use strict";
        Object.defineProperty(t2, "__esModule", { value: true });
        Object.defineProperty(t2, "isIdentifierChar", { enumerable: true, get: function() {
          return n.isIdentifierChar;
        } });
        Object.defineProperty(t2, "isIdentifierName", { enumerable: true, get: function() {
          return n.isIdentifierName;
        } });
        Object.defineProperty(t2, "isIdentifierStart", { enumerable: true, get: function() {
          return n.isIdentifierStart;
        } });
        Object.defineProperty(t2, "isKeyword", { enumerable: true, get: function() {
          return u.isKeyword;
        } });
        Object.defineProperty(t2, "isReservedWord", { enumerable: true, get: function() {
          return u.isReservedWord;
        } });
        Object.defineProperty(t2, "isStrictBindOnlyReservedWord", { enumerable: true, get: function() {
          return u.isStrictBindOnlyReservedWord;
        } });
        Object.defineProperty(t2, "isStrictBindReservedWord", { enumerable: true, get: function() {
          return u.isStrictBindReservedWord;
        } });
        Object.defineProperty(t2, "isStrictReservedWord", { enumerable: true, get: function() {
          return u.isStrictReservedWord;
        } });
        var n = r2(387);
        var u = r2(348);
      }, 348: function(e2, t2) {
        "use strict";
        Object.defineProperty(t2, "__esModule", { value: true });
        t2.isKeyword = isKeyword;
        t2.isReservedWord = isReservedWord;
        t2.isStrictBindOnlyReservedWord = isStrictBindOnlyReservedWord;
        t2.isStrictBindReservedWord = isStrictBindReservedWord;
        t2.isStrictReservedWord = isStrictReservedWord;
        const r2 = { keyword: ["break", "case", "catch", "continue", "debugger", "default", "do", "else", "finally", "for", "function", "if", "return", "switch", "throw", "try", "var", "const", "while", "with", "new", "this", "super", "class", "extends", "export", "import", "null", "true", "false", "in", "instanceof", "typeof", "void", "delete"], strict: ["implements", "interface", "let", "package", "private", "protected", "public", "static", "yield"], strictBind: ["eval", "arguments"] };
        const n = new Set(r2.keyword);
        const u = new Set(r2.strict);
        const o = new Set(r2.strictBind);
        function isReservedWord(e3, t3) {
          return t3 && e3 === "await" || e3 === "enum";
        }
        function isStrictReservedWord(e3, t3) {
          return isReservedWord(e3, t3) || u.has(e3);
        }
        function isStrictBindOnlyReservedWord(e3) {
          return o.has(e3);
        }
        function isStrictBindReservedWord(e3, t3) {
          return isStrictReservedWord(e3, t3) || isStrictBindOnlyReservedWord(e3);
        }
        function isKeyword(e3) {
          return n.has(e3);
        }
      }, 448: function(e2, t2, r2) {
        "use strict";
        Object.defineProperty(t2, "__esModule", { value: true });
        t2["default"] = highlight;
        t2.shouldHighlight = shouldHighlight;
        var n = r2(874);
        var u = r2(975);
        var o = _interopRequireWildcard(r2(148), true);
        function _getRequireWildcardCache(e3) {
          if (typeof WeakMap !== "function")
            return null;
          var t3 = /* @__PURE__ */ new WeakMap();
          var r3 = /* @__PURE__ */ new WeakMap();
          return (_getRequireWildcardCache = function(e4) {
            return e4 ? r3 : t3;
          })(e3);
        }
        function _interopRequireWildcard(e3, t3) {
          if (!t3 && e3 && e3.__esModule) {
            return e3;
          }
          if (e3 === null || typeof e3 !== "object" && typeof e3 !== "function") {
            return { default: e3 };
          }
          var r3 = _getRequireWildcardCache(t3);
          if (r3 && r3.has(e3)) {
            return r3.get(e3);
          }
          var n2 = {};
          var u2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
          for (var o2 in e3) {
            if (o2 !== "default" && Object.prototype.hasOwnProperty.call(e3, o2)) {
              var i2 = u2 ? Object.getOwnPropertyDescriptor(e3, o2) : null;
              if (i2 && (i2.get || i2.set)) {
                Object.defineProperty(n2, o2, i2);
              } else {
                n2[o2] = e3[o2];
              }
            }
          }
          n2.default = e3;
          if (r3) {
            r3.set(e3, n2);
          }
          return n2;
        }
        const i = /* @__PURE__ */ new Set(["as", "async", "from", "get", "of", "set"]);
        function getDefs(e3) {
          return { keyword: e3.cyan, capitalized: e3.yellow, jsxIdentifier: e3.yellow, punctuator: e3.yellow, number: e3.magenta, string: e3.green, regex: e3.magenta, comment: e3.grey, invalid: e3.white.bgRed.bold };
        }
        const s = /\r\n|[\n\r\u2028\u2029]/;
        const a = /^[()[\]{}]$/;
        let l;
        {
          const e3 = /^[a-z][\w-]*$/i;
          const getTokenType = function(t3, r3, n2) {
            if (t3.type === "name") {
              if ((0, u.isKeyword)(t3.value) || (0, u.isStrictReservedWord)(t3.value, true) || i.has(t3.value)) {
                return "keyword";
              }
              if (e3.test(t3.value) && (n2[r3 - 1] === "<" || n2.slice(r3 - 2, r3) == "</")) {
                return "jsxIdentifier";
              }
              if (t3.value[0] !== t3.value[0].toLowerCase()) {
                return "capitalized";
              }
            }
            if (t3.type === "punctuator" && a.test(t3.value)) {
              return "bracket";
            }
            if (t3.type === "invalid" && (t3.value === "@" || t3.value === "#")) {
              return "punctuator";
            }
            return t3.type;
          };
          l = function* (e4) {
            let t3;
            while (t3 = n.default.exec(e4)) {
              const r3 = n.matchToToken(t3);
              yield { type: getTokenType(r3, t3.index, e4), value: r3.value };
            }
          };
        }
        function highlightTokens(e3, t3) {
          let r3 = "";
          for (const { type: n2, value: u2 } of l(t3)) {
            const t4 = e3[n2];
            if (t4) {
              r3 += u2.split(s).map((e4) => t4(e4)).join("\n");
            } else {
              r3 += u2;
            }
          }
          return r3;
        }
        function shouldHighlight(e3) {
          return o.default.level > 0 || e3.forceColor;
        }
        let c = void 0;
        function getChalk(e3) {
          if (e3) {
            var t3;
            (t3 = c) != null ? t3 : c = new o.default.constructor({ enabled: true, level: 1 });
            return c;
          }
          return o.default;
        }
        {
          t2.getChalk = (e3) => getChalk(e3.forceColor);
        }
        function highlight(e3, t3 = {}) {
          if (e3 !== "" && shouldHighlight(t3)) {
            const r3 = getDefs(getChalk(t3.forceColor));
            return highlightTokens(r3, e3);
          } else {
            return e3;
          }
        }
      } };
      var t = {};
      function __nccwpck_require__2(r2) {
        var n = t[r2];
        if (n !== void 0) {
          return n.exports;
        }
        var u = t[r2] = { id: r2, loaded: false, exports: {} };
        var o = true;
        try {
          e[r2].call(u.exports, u, u.exports, __nccwpck_require__2);
          o = false;
        } finally {
          if (o)
            delete t[r2];
        }
        u.loaded = true;
        return u.exports;
      }
      !function() {
        __nccwpck_require__2.nmd = function(e2) {
          e2.paths = [];
          if (!e2.children)
            e2.children = [];
          return e2;
        };
      }();
      if (typeof __nccwpck_require__2 !== "undefined")
        __nccwpck_require__2.ab = __dirname + "/";
      var r = __nccwpck_require__2(601);
      module2.exports = r;
    })();
  }
});

// ../../../node_modules/next/dist/server/web/sandbox/context.js
var require_context = __commonJS({
  "../../../node_modules/next/dist/server/web/sandbox/context.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name2 in all)
        Object.defineProperty(target, name2, {
          enumerable: true,
          get: all[name2]
        });
    }
    _export(exports2, {
      clearModuleContext: function() {
        return clearModuleContext;
      },
      getModuleContext: function() {
        return getModuleContext;
      }
    });
    var _async_hooks = require_async_hooks();
    var _constants = require_constants2();
    var _edgeruntime = require_edge_runtime();
    var _fs = require_fs();
    var _utils = require_utils3();
    var _pick = require_pick();
    var _fetchinlineassets = require_fetch_inline_assets();
    var _vm = require_vm();
    var _nodebuffer = _interop_require_default(require_node_buffer());
    var _nodeevents = _interop_require_default(require_node_events());
    var _nodeassert = _interop_require_default(require_node_assert());
    var _nodeutil = _interop_require_default(require_node_util());
    var _nodeasync_hooks = _interop_require_default(require_node_async_hooks());
    var _resourcemanagers = require_resource_managers();
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    var getServerError;
    var decorateServerError;
    if (true) {
      const middleware = require_middleware();
      getServerError = middleware.getServerError;
      decorateServerError = middleware.decorateServerError;
    } else {
      getServerError = (error, _) => error;
      decorateServerError = (error, _) => error;
    }
    var moduleContexts = /* @__PURE__ */ new Map();
    var pendingModuleCaches = /* @__PURE__ */ new Map();
    async function clearModuleContext(path2) {
      _resourcemanagers.intervalsManager.removeAll();
      _resourcemanagers.timeoutsManager.removeAll();
      const handleContext = (key, cache, context) => {
        if (cache == null ? void 0 : cache.paths.has(path2)) {
          context.delete(key);
        }
      };
      for (const [key, cache] of moduleContexts) {
        handleContext(key, cache, moduleContexts);
      }
      for (const [key, cache] of pendingModuleCaches) {
        handleContext(key, await cache, pendingModuleCaches);
      }
    }
    async function loadWasm(wasm) {
      const modules = {};
      await Promise.all(wasm.map(async (binding) => {
        const module1 = await WebAssembly.compile(await _fs.promises.readFile(binding.filePath));
        modules[binding.name] = module1;
      }));
      return modules;
    }
    function buildEnvironmentVariablesFrom() {
      const pairs = Object.keys(process.env).map((key) => [
        key,
        process.env[key]
      ]);
      const env = Object.fromEntries(pairs);
      env.NEXT_RUNTIME = "edge";
      return env;
    }
    function throwUnsupportedAPIError(name2) {
      const error = new Error(`A Node.js API is used (${name2}) which is not supported in the Edge Runtime.
Learn more: https://nextjs.org/docs/api-reference/edge-runtime`);
      decorateServerError(error, _constants.COMPILER_NAMES.edgeServer);
      throw error;
    }
    function createProcessPolyfill() {
      const processPolyfill = {
        env: buildEnvironmentVariablesFrom()
      };
      const overridenValue = {};
      for (const key of Object.keys(process)) {
        if (key === "env")
          continue;
        Object.defineProperty(processPolyfill, key, {
          get() {
            if (overridenValue[key] !== void 0) {
              return overridenValue[key];
            }
            if (typeof process[key] === "function") {
              return () => throwUnsupportedAPIError(`process.${key}`);
            }
            return void 0;
          },
          set(value) {
            overridenValue[key] = value;
          },
          enumerable: false
        });
      }
      return processPolyfill;
    }
    function addStub(context, name2) {
      Object.defineProperty(context, name2, {
        get() {
          return function() {
            throwUnsupportedAPIError(name2);
          };
        },
        enumerable: false
      });
    }
    function getDecorateUnhandledError(runtime) {
      const EdgeRuntimeError = runtime.evaluate(`Error`);
      return (error) => {
        if (error instanceof EdgeRuntimeError) {
          decorateServerError(error, _constants.COMPILER_NAMES.edgeServer);
        }
      };
    }
    function getDecorateUnhandledRejection(runtime) {
      const EdgeRuntimeError = runtime.evaluate(`Error`);
      return (rejected) => {
        if (rejected.reason instanceof EdgeRuntimeError) {
          decorateServerError(rejected.reason, _constants.COMPILER_NAMES.edgeServer);
        }
      };
    }
    var NativeModuleMap = (() => {
      const mods = {
        "node:buffer": (0, _pick.pick)(_nodebuffer.default, [
          "constants",
          "kMaxLength",
          "kStringMaxLength",
          "Buffer",
          "SlowBuffer"
        ]),
        "node:events": (0, _pick.pick)(_nodeevents.default, [
          "EventEmitter",
          "captureRejectionSymbol",
          "defaultMaxListeners",
          "errorMonitor",
          "listenerCount",
          "on",
          "once"
        ]),
        "node:async_hooks": (0, _pick.pick)(_nodeasync_hooks.default, [
          "AsyncLocalStorage",
          "AsyncResource"
        ]),
        "node:assert": (0, _pick.pick)(_nodeassert.default, [
          "AssertionError",
          "deepEqual",
          "deepStrictEqual",
          "doesNotMatch",
          "doesNotReject",
          "doesNotThrow",
          "equal",
          "fail",
          "ifError",
          "match",
          "notDeepEqual",
          "notDeepStrictEqual",
          "notEqual",
          "notStrictEqual",
          "ok",
          "rejects",
          "strict",
          "strictEqual",
          "throws"
        ]),
        "node:util": (0, _pick.pick)(_nodeutil.default, [
          "_extend",
          "callbackify",
          "format",
          "inherits",
          "promisify",
          "types"
        ])
      };
      return new Map(Object.entries(mods));
    })();
    async function createModuleContext(options) {
      const warnedEvals = /* @__PURE__ */ new Set();
      const warnedWasmCodegens = /* @__PURE__ */ new Set();
      const wasm = await loadWasm(options.edgeFunctionEntry.wasm ?? []);
      const runtime = new _edgeruntime.EdgeRuntime({
        codeGeneration: true ? {
          strings: true,
          wasm: true
        } : void 0,
        extend: (context) => {
          context.process = createProcessPolyfill();
          Object.defineProperty(context, "require", {
            enumerable: false,
            value: (id) => {
              const value = NativeModuleMap.get(id);
              if (!value) {
                throw TypeError("Native module not found: " + id);
              }
              return value;
            }
          });
          context.__next_eval__ = function __next_eval__(fn) {
            const key = fn.toString();
            if (!warnedEvals.has(key)) {
              const warning = getServerError(new Error(`Dynamic Code Evaluation (e. g. 'eval', 'new Function') not allowed in Edge Runtime
Learn More: https://nextjs.org/docs/messages/edge-dynamic-code-evaluation`), _constants.COMPILER_NAMES.edgeServer);
              warning.name = "DynamicCodeEvaluationWarning";
              Error.captureStackTrace(warning, __next_eval__);
              warnedEvals.add(key);
              options.onWarning(warning);
            }
            return fn();
          };
          context.__next_webassembly_compile__ = function __next_webassembly_compile__(fn) {
            const key = fn.toString();
            if (!warnedWasmCodegens.has(key)) {
              const warning = getServerError(new Error(`Dynamic WASM code generation (e. g. 'WebAssembly.compile') not allowed in Edge Runtime.
Learn More: https://nextjs.org/docs/messages/edge-dynamic-code-evaluation`), _constants.COMPILER_NAMES.edgeServer);
              warning.name = "DynamicWasmCodeGenerationWarning";
              Error.captureStackTrace(warning, __next_webassembly_compile__);
              warnedWasmCodegens.add(key);
              options.onWarning(warning);
            }
            return fn();
          };
          context.__next_webassembly_instantiate__ = async function __next_webassembly_instantiate__(fn) {
            const result = await fn();
            const instantiatedFromBuffer = result.hasOwnProperty("module");
            const key = fn.toString();
            if (instantiatedFromBuffer && !warnedWasmCodegens.has(key)) {
              const warning = getServerError(new Error(`Dynamic WASM code generation ('WebAssembly.instantiate' with a buffer parameter) not allowed in Edge Runtime.
Learn More: https://nextjs.org/docs/messages/edge-dynamic-code-evaluation`), _constants.COMPILER_NAMES.edgeServer);
              warning.name = "DynamicWasmCodeGenerationWarning";
              Error.captureStackTrace(warning, __next_webassembly_instantiate__);
              warnedWasmCodegens.add(key);
              options.onWarning(warning);
            }
            return result;
          };
          const __fetch = context.fetch;
          context.fetch = async (input, init = {}) => {
            var _init_headers_get;
            const callingError = new Error("[internal]");
            const assetResponse = await (0, _fetchinlineassets.fetchInlineAsset)({
              input,
              assets: options.edgeFunctionEntry.assets,
              distDir: options.distDir,
              context
            });
            if (assetResponse) {
              return assetResponse;
            }
            init.headers = new Headers(init.headers ?? {});
            const prevs = ((_init_headers_get = init.headers.get(`x-middleware-subrequest`)) == null ? void 0 : _init_headers_get.split(":")) || [];
            const value = prevs.concat(options.moduleName).join(":");
            init.headers.set("x-middleware-subrequest", value);
            if (!init.headers.has("user-agent")) {
              init.headers.set(`user-agent`, `Next.js Middleware`);
            }
            const response = typeof input === "object" && "url" in input ? __fetch(input.url, {
              ...(0, _pick.pick)(input, [
                "method",
                "body",
                "cache",
                "credentials",
                "integrity",
                "keepalive",
                "mode",
                "redirect",
                "referrer",
                "referrerPolicy",
                "signal"
              ]),
              ...init,
              headers: {
                ...Object.fromEntries(input.headers),
                ...Object.fromEntries(init.headers)
              }
            }) : __fetch(String(input), init);
            return await response.catch((err) => {
              callingError.message = err.message;
              err.stack = callingError.stack;
              throw err;
            });
          };
          const __Request = context.Request;
          context.Request = class extends __Request {
            constructor(input, init) {
              const url = typeof input !== "string" && "url" in input ? input.url : String(input);
              (0, _utils.validateURL)(url);
              super(url, init);
              this.next = init == null ? void 0 : init.next;
            }
          };
          const __redirect = context.Response.redirect.bind(context.Response);
          context.Response.redirect = (...args) => {
            (0, _utils.validateURL)(args[0]);
            return __redirect(...args);
          };
          for (const name2 of _constants.EDGE_UNSUPPORTED_NODE_APIS) {
            addStub(context, name2);
          }
          Object.assign(context, wasm);
          context.performance = performance;
          context.AsyncLocalStorage = _async_hooks.AsyncLocalStorage;
          context.setInterval = (...args) => _resourcemanagers.intervalsManager.add(args);
          context.clearInterval = (interval) => _resourcemanagers.intervalsManager.remove(interval);
          context.setTimeout = (...args) => _resourcemanagers.timeoutsManager.add(args);
          context.clearTimeout = (timeout) => _resourcemanagers.timeoutsManager.remove(timeout);
          return context;
        }
      });
      const decorateUnhandledError = getDecorateUnhandledError(runtime);
      runtime.context.addEventListener("error", decorateUnhandledError);
      const decorateUnhandledRejection = getDecorateUnhandledRejection(runtime);
      runtime.context.addEventListener("unhandledrejection", decorateUnhandledRejection);
      return {
        runtime,
        paths: /* @__PURE__ */ new Map(),
        warnedEvals: /* @__PURE__ */ new Set()
      };
    }
    function getModuleContextShared(options) {
      let deferredModuleContext = pendingModuleCaches.get(options.moduleName);
      if (!deferredModuleContext) {
        deferredModuleContext = createModuleContext(options);
        pendingModuleCaches.set(options.moduleName, deferredModuleContext);
      }
      return deferredModuleContext;
    }
    async function getModuleContext(options) {
      let lazyModuleContext;
      if (options.useCache) {
        lazyModuleContext = moduleContexts.get(options.moduleName) || await getModuleContextShared(options);
      }
      if (!lazyModuleContext) {
        lazyModuleContext = await createModuleContext(options);
        moduleContexts.set(options.moduleName, lazyModuleContext);
      }
      const moduleContext = lazyModuleContext;
      const evaluateInContext = (filepath) => {
        if (!moduleContext.paths.has(filepath)) {
          const content = (0, _fs.readFileSync)(filepath, "utf-8");
          try {
            (0, _vm.runInContext)(content, moduleContext.runtime.context, {
              filename: filepath
            });
            moduleContext.paths.set(filepath, content);
          } catch (error) {
            if (options.useCache) {
              moduleContext == null ? void 0 : moduleContext.paths.delete(filepath);
            }
            throw error;
          }
        }
      };
      return {
        ...moduleContext,
        evaluateInContext
      };
    }
  }
});

// ../../../node_modules/next/dist/client/components/app-router-headers.js
var require_app_router_headers = __commonJS({
  "../../../node_modules/next/dist/client/components/app-router-headers.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name2 in all)
        Object.defineProperty(target, name2, {
          enumerable: true,
          get: all[name2]
        });
    }
    _export(exports2, {
      RSC_HEADER: function() {
        return RSC_HEADER;
      },
      ACTION: function() {
        return ACTION;
      },
      NEXT_ROUTER_STATE_TREE: function() {
        return NEXT_ROUTER_STATE_TREE;
      },
      NEXT_ROUTER_PREFETCH_HEADER: function() {
        return NEXT_ROUTER_PREFETCH_HEADER;
      },
      NEXT_URL: function() {
        return NEXT_URL;
      },
      RSC_CONTENT_TYPE_HEADER: function() {
        return RSC_CONTENT_TYPE_HEADER;
      },
      RSC_VARY_HEADER: function() {
        return RSC_VARY_HEADER;
      },
      FLIGHT_PARAMETERS: function() {
        return FLIGHT_PARAMETERS;
      },
      NEXT_RSC_UNION_QUERY: function() {
        return NEXT_RSC_UNION_QUERY;
      },
      NEXT_DID_POSTPONE_HEADER: function() {
        return NEXT_DID_POSTPONE_HEADER;
      }
    });
    var RSC_HEADER = "RSC";
    var ACTION = "Next-Action";
    var NEXT_ROUTER_STATE_TREE = "Next-Router-State-Tree";
    var NEXT_ROUTER_PREFETCH_HEADER = "Next-Router-Prefetch";
    var NEXT_URL = "Next-Url";
    var RSC_CONTENT_TYPE_HEADER = "text/x-component";
    var RSC_VARY_HEADER = RSC_HEADER + ", " + NEXT_ROUTER_STATE_TREE + ", " + NEXT_ROUTER_PREFETCH_HEADER + ", " + NEXT_URL;
    var FLIGHT_PARAMETERS = [
      [
        RSC_HEADER
      ],
      [
        NEXT_ROUTER_STATE_TREE
      ],
      [
        NEXT_ROUTER_PREFETCH_HEADER
      ]
    ];
    var NEXT_RSC_UNION_QUERY = "_rsc";
    var NEXT_DID_POSTPONE_HEADER = "x-nextjs-postponed";
    if ((typeof exports2.default === "function" || typeof exports2.default === "object" && exports2.default !== null) && typeof exports2.default.__esModule === "undefined") {
      Object.defineProperty(exports2.default, "__esModule", { value: true });
      Object.assign(exports2.default, exports2);
      module2.exports = exports2.default;
    }
  }
});

// ../../../node_modules/next/dist/server/web/sandbox/sandbox.js
var require_sandbox = __commonJS({
  "../../../node_modules/next/dist/server/web/sandbox/sandbox.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name2 in all)
        Object.defineProperty(target, name2, {
          enumerable: true,
          get: all[name2]
        });
    }
    _export(exports2, {
      ErrorSource: function() {
        return ErrorSource;
      },
      getRuntimeContext: function() {
        return getRuntimeContext;
      },
      run: function() {
        return run;
      }
    });
    var _context = require_context();
    var _bodystreams = require_body_streams();
    var _approuterheaders = require_app_router_headers();
    var ErrorSource = Symbol("SandboxError");
    var FORBIDDEN_HEADERS = [
      "content-length",
      "content-encoding",
      "transfer-encoding"
    ];
    function withTaggedErrors(fn) {
      if (true) {
        const { getServerError } = require_middleware();
        return (params2) => fn(params2).then((result) => {
          var _result_waitUntil;
          return {
            ...result,
            waitUntil: result == null ? void 0 : (_result_waitUntil = result.waitUntil) == null ? void 0 : _result_waitUntil.catch((error) => {
              throw getServerError(error, "edge-server");
            })
          };
        }).catch((error) => {
          throw getServerError(error, "edge-server");
        });
      }
      return fn;
    }
    async function getRuntimeContext(params2) {
      const { runtime, evaluateInContext } = await (0, _context.getModuleContext)({
        moduleName: params2.name,
        onWarning: params2.onWarning ?? (() => {
        }),
        useCache: params2.useCache !== false,
        edgeFunctionEntry: params2.edgeFunctionEntry,
        distDir: params2.distDir
      });
      if (params2.incrementalCache) {
        runtime.context.globalThis.__incrementalCache = params2.incrementalCache;
      }
      for (const paramPath of params2.paths) {
        evaluateInContext(paramPath);
      }
      return runtime;
    }
    var run = withTaggedErrors(async function runWithTaggedErrors(params2) {
      var _params_request_body;
      const runtime = await getRuntimeContext(params2);
      const subreq = params2.request.headers[`x-middleware-subrequest`];
      const subrequests = typeof subreq === "string" ? subreq.split(":") : [];
      if (subrequests.includes(params2.name)) {
        return {
          waitUntil: Promise.resolve(),
          response: new runtime.context.Response(null, {
            headers: {
              "x-middleware-next": "1"
            }
          })
        };
      }
      const edgeFunction = runtime.context._ENTRIES[`middleware_${params2.name}`].default;
      const cloned = ![
        "HEAD",
        "GET"
      ].includes(params2.request.method) ? (_params_request_body = params2.request.body) == null ? void 0 : _params_request_body.cloneBodyStream() : void 0;
      const KUint8Array = runtime.evaluate("Uint8Array");
      const urlInstance = new URL(params2.request.url);
      urlInstance.searchParams.delete(_approuterheaders.NEXT_RSC_UNION_QUERY);
      params2.request.url = urlInstance.toString();
      try {
        const result = await edgeFunction({
          request: {
            ...params2.request,
            body: cloned && (0, _bodystreams.requestToBodyStream)(runtime.context, KUint8Array, cloned)
          }
        });
        for (const headerName of FORBIDDEN_HEADERS) {
          result.response.headers.delete(headerName);
        }
        return result;
      } finally {
        var _params_request_body1;
        await ((_params_request_body1 = params2.request.body) == null ? void 0 : _params_request_body1.finalize());
      }
    });
  }
});

// ../../../node_modules/next/dist/server/web/sandbox/index.js
var require_sandbox2 = __commonJS({
  "../../../node_modules/next/dist/server/web/sandbox/index.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    Object.defineProperty(exports2, "clearModuleContext", {
      enumerable: true,
      get: function() {
        return _context.clearModuleContext;
      }
    });
    _export_star(require_sandbox(), exports2);
    var _context = require_context();
    function _export_star(from, to) {
      Object.keys(from).forEach(function(k) {
        if (k !== "default" && !Object.prototype.hasOwnProperty.call(to, k)) {
          Object.defineProperty(to, k, {
            enumerable: true,
            get: function() {
              return from[k];
            }
          });
        }
      });
      return from;
    }
  }
});

// ../../../node_modules/next/dist/lib/client-reference.js
var require_client_reference = __commonJS({
  "../../../node_modules/next/dist/lib/client-reference.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    Object.defineProperty(exports2, "isClientReference", {
      enumerable: true,
      get: function() {
        return isClientReference;
      }
    });
    function isClientReference(reference) {
      return (reference == null ? void 0 : reference.$$typeof) === Symbol.for("react.client.reference");
    }
  }
});

// ../../../node_modules/next/dist/server/async-storage/static-generation-async-storage-wrapper.js
var require_static_generation_async_storage_wrapper = __commonJS({
  "../../../node_modules/next/dist/server/async-storage/static-generation-async-storage-wrapper.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    Object.defineProperty(exports2, "StaticGenerationAsyncStorageWrapper", {
      enumerable: true,
      get: function() {
        return StaticGenerationAsyncStorageWrapper;
      }
    });
    var StaticGenerationAsyncStorageWrapper = {
      wrap(storage, { urlPathname, renderOpts, postpone }, callback) {
        const isStaticGeneration = !renderOpts.supportsDynamicHTML && !renderOpts.isDraftMode && !renderOpts.isServerAction;
        const store = {
          isStaticGeneration,
          urlPathname,
          pagePath: renderOpts.originalPathname,
          incrementalCache: (
            // we fallback to a global incremental cache for edge-runtime locally
            // so that it can access the fs cache without mocks
            renderOpts.incrementalCache || globalThis.__incrementalCache
          ),
          isRevalidate: renderOpts.isRevalidate,
          isPrerendering: renderOpts.nextExport,
          fetchCache: renderOpts.fetchCache,
          isOnDemandRevalidate: renderOpts.isOnDemandRevalidate,
          isDraftMode: renderOpts.isDraftMode,
          postpone: (
            // If we aren't performing a static generation or we aren't using PPR then
            // we don't need to postpone.
            isStaticGeneration && renderOpts.experimental.ppr && postpone ? (reason) => {
              store.postponeWasTriggered = true;
              return postpone(`This page needs to bail out of prerendering at this point because it used ${reason}. React throws this special object to indicate where. It should not be caught by your own try/catch. Learn more: https://nextjs.org/docs/messages/ppr-caught-error`);
            } : void 0
          )
        };
        renderOpts.store = store;
        return storage.run(store, callback, store);
      }
    };
  }
});

// ../../../node_modules/next/dist/server/lib/incremental-cache/fetch-cache.js
var require_fetch_cache = __commonJS({
  "../../../node_modules/next/dist/server/lib/incremental-cache/fetch-cache.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    Object.defineProperty(exports2, "default", {
      enumerable: true,
      get: function() {
        return FetchCache;
      }
    });
    var _lrucache = _interop_require_default(require_lru_cache());
    var _constants = require_constants();
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    var rateLimitedUntil = 0;
    var memoryCache;
    var CACHE_TAGS_HEADER = "x-vercel-cache-tags";
    var CACHE_HEADERS_HEADER = "x-vercel-sc-headers";
    var CACHE_STATE_HEADER = "x-vercel-cache-state";
    var CACHE_REVALIDATE_HEADER = "x-vercel-revalidate";
    var CACHE_FETCH_URL_HEADER = "x-vercel-cache-item-name";
    var CACHE_CONTROL_VALUE_HEADER = "x-vercel-cache-control";
    var FetchCache = class {
      static isAvailable(ctx2) {
        return !!(ctx2._requestHeaders["x-vercel-sc-host"] || process.env.SUSPENSE_CACHE_URL);
      }
      constructor(ctx2) {
        this.debug = !!process.env.NEXT_PRIVATE_DEBUG_CACHE;
        this.headers = {};
        this.headers["Content-Type"] = "application/json";
        if (CACHE_HEADERS_HEADER in ctx2._requestHeaders) {
          const newHeaders = JSON.parse(ctx2._requestHeaders[CACHE_HEADERS_HEADER]);
          for (const k in newHeaders) {
            this.headers[k] = newHeaders[k];
          }
          delete ctx2._requestHeaders[CACHE_HEADERS_HEADER];
        }
        const scHost = ctx2._requestHeaders["x-vercel-sc-host"] || process.env.SUSPENSE_CACHE_URL;
        const scBasePath = ctx2._requestHeaders["x-vercel-sc-basepath"] || process.env.SUSPENSE_CACHE_BASEPATH;
        if (process.env.SUSPENSE_CACHE_AUTH_TOKEN) {
          this.headers["Authorization"] = `Bearer ${process.env.SUSPENSE_CACHE_AUTH_TOKEN}`;
        }
        if (scHost) {
          this.cacheEndpoint = `https://${scHost}${scBasePath || ""}`;
          if (this.debug) {
            console.log("using cache endpoint", this.cacheEndpoint);
          }
        } else if (this.debug) {
          console.log("no cache endpoint available");
        }
        if (ctx2.maxMemoryCacheSize) {
          if (!memoryCache) {
            if (this.debug) {
              console.log("using memory store for fetch cache");
            }
            memoryCache = new _lrucache.default({
              max: ctx2.maxMemoryCacheSize,
              length({ value }) {
                var _JSON_stringify;
                if (!value) {
                  return 25;
                } else if (value.kind === "REDIRECT") {
                  return JSON.stringify(value.props).length;
                } else if (value.kind === "IMAGE") {
                  throw new Error("invariant image should not be incremental-cache");
                } else if (value.kind === "FETCH") {
                  return JSON.stringify(value.data || "").length;
                } else if (value.kind === "ROUTE") {
                  return value.body.length;
                }
                return value.html.length + (((_JSON_stringify = JSON.stringify(value.pageData)) == null ? void 0 : _JSON_stringify.length) || 0);
              }
            });
          }
        } else {
          if (this.debug) {
            console.log("not using memory store for fetch cache");
          }
        }
      }
      resetRequestCache() {
        memoryCache == null ? void 0 : memoryCache.reset();
      }
      async revalidateTag(tag) {
        if (this.debug) {
          console.log("revalidateTag", tag);
        }
        if (Date.now() < rateLimitedUntil) {
          if (this.debug) {
            console.log("rate limited ", rateLimitedUntil);
          }
          return;
        }
        try {
          const res = await fetch(`${this.cacheEndpoint}/v1/suspense-cache/revalidate?tags=${tag}`, {
            method: "POST",
            headers: this.headers,
            // @ts-expect-error not on public type
            next: {
              internal: true
            }
          });
          if (res.status === 429) {
            const retryAfter = res.headers.get("retry-after") || "60000";
            rateLimitedUntil = Date.now() + parseInt(retryAfter);
          }
          if (!res.ok) {
            throw new Error(`Request failed with status ${res.status}.`);
          }
        } catch (err) {
          console.warn(`Failed to revalidate tag ${tag}`, err);
        }
      }
      async get(...args) {
        const [key, ctx2 = {}] = args;
        const { tags, softTags, kindHint, fetchIdx, fetchUrl } = ctx2;
        if (kindHint !== "fetch") {
          return null;
        }
        if (Date.now() < rateLimitedUntil) {
          if (this.debug) {
            console.log("rate limited");
          }
          return null;
        }
        let data2 = memoryCache == null ? void 0 : memoryCache.get(key);
        if (!data2 && this.cacheEndpoint) {
          try {
            const start = Date.now();
            const fetchParams = {
              internal: true,
              fetchType: "cache-get",
              fetchUrl,
              fetchIdx
            };
            const res = await fetch(`${this.cacheEndpoint}/v1/suspense-cache/${key}`, {
              method: "GET",
              headers: {
                ...this.headers,
                [CACHE_FETCH_URL_HEADER]: fetchUrl,
                [CACHE_TAGS_HEADER]: (tags == null ? void 0 : tags.join(",")) || "",
                [_constants.NEXT_CACHE_SOFT_TAGS_HEADER]: (softTags == null ? void 0 : softTags.join(",")) || ""
              },
              next: fetchParams
            });
            if (res.status === 429) {
              const retryAfter = res.headers.get("retry-after") || "60000";
              rateLimitedUntil = Date.now() + parseInt(retryAfter);
            }
            if (res.status === 404) {
              if (this.debug) {
                console.log(`no fetch cache entry for ${key}, duration: ${Date.now() - start}ms`);
              }
              return null;
            }
            if (!res.ok) {
              console.error(await res.text());
              throw new Error(`invalid response from cache ${res.status}`);
            }
            const cached = await res.json();
            if (!cached || cached.kind !== "FETCH") {
              this.debug && console.log({
                cached
              });
              throw new Error(`invalid cache value`);
            }
            const cacheState = res.headers.get(CACHE_STATE_HEADER);
            const age = res.headers.get("age");
            data2 = {
              value: cached,
              // if it's already stale set it to a time in the past
              // if not derive last modified from age
              lastModified: cacheState !== "fresh" ? Date.now() - _constants.CACHE_ONE_YEAR : Date.now() - parseInt(age || "0", 10) * 1e3
            };
            if (this.debug) {
              console.log(`got fetch cache entry for ${key}, duration: ${Date.now() - start}ms, size: ${Object.keys(cached).length}, cache-state: ${cacheState} tags: ${tags == null ? void 0 : tags.join(",")} softTags: ${softTags == null ? void 0 : softTags.join(",")}`);
            }
            if (data2) {
              memoryCache == null ? void 0 : memoryCache.set(key, data2);
            }
          } catch (err) {
            if (this.debug) {
              console.error(`Failed to get from fetch-cache`, err);
            }
          }
        }
        return data2 || null;
      }
      async set(...args) {
        const [key, data2, ctx2] = args;
        const { fetchCache, fetchIdx, fetchUrl, tags } = ctx2;
        if (!fetchCache)
          return;
        if (Date.now() < rateLimitedUntil) {
          if (this.debug) {
            console.log("rate limited");
          }
          return;
        }
        memoryCache == null ? void 0 : memoryCache.set(key, {
          value: data2,
          lastModified: Date.now()
        });
        if (this.cacheEndpoint) {
          try {
            const start = Date.now();
            if (data2 !== null && "revalidate" in data2) {
              this.headers[CACHE_REVALIDATE_HEADER] = data2.revalidate.toString();
            }
            if (!this.headers[CACHE_REVALIDATE_HEADER] && data2 !== null && "data" in data2) {
              this.headers[CACHE_CONTROL_VALUE_HEADER] = data2.data.headers["cache-control"];
            }
            const body = JSON.stringify({
              ...data2,
              // we send the tags in the header instead
              // of in the body here
              tags: void 0
            });
            if (this.debug) {
              console.log("set cache", key);
            }
            const fetchParams = {
              internal: true,
              fetchType: "cache-set",
              fetchUrl,
              fetchIdx
            };
            const res = await fetch(`${this.cacheEndpoint}/v1/suspense-cache/${key}`, {
              method: "POST",
              headers: {
                ...this.headers,
                [CACHE_FETCH_URL_HEADER]: fetchUrl || "",
                [CACHE_TAGS_HEADER]: (tags == null ? void 0 : tags.join(",")) || ""
              },
              body,
              next: fetchParams
            });
            if (res.status === 429) {
              const retryAfter = res.headers.get("retry-after") || "60000";
              rateLimitedUntil = Date.now() + parseInt(retryAfter);
            }
            if (!res.ok) {
              this.debug && console.log(await res.text());
              throw new Error(`invalid response ${res.status}`);
            }
            if (this.debug) {
              console.log(`successfully set to fetch-cache for ${key}, duration: ${Date.now() - start}ms, size: ${body.length}`);
            }
          } catch (err) {
            if (this.debug) {
              console.error(`Failed to update fetch cache`, err);
            }
          }
        }
        return;
      }
    };
  }
});

// ../../../node_modules/next/dist/server/lib/incremental-cache/file-system-cache.js
var require_file_system_cache = __commonJS({
  "../../../node_modules/next/dist/server/lib/incremental-cache/file-system-cache.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    Object.defineProperty(exports2, "default", {
      enumerable: true,
      get: function() {
        return FileSystemCache;
      }
    });
    var _lrucache = _interop_require_default(require_lru_cache());
    var _path = _interop_require_default(require_path2());
    var _constants = require_constants();
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    var memoryCache;
    var tagsManifest;
    var FileSystemCache = class {
      constructor(ctx2) {
        this.fs = ctx2.fs;
        this.flushToDisk = ctx2.flushToDisk;
        this.serverDistDir = ctx2.serverDistDir;
        this.appDir = !!ctx2._appDir;
        this.pagesDir = !!ctx2._pagesDir;
        this.revalidatedTags = ctx2.revalidatedTags;
        this.experimental = ctx2.experimental;
        this.debug = !!process.env.NEXT_PRIVATE_DEBUG_CACHE;
        if (ctx2.maxMemoryCacheSize && !memoryCache) {
          if (this.debug) {
            console.log("using memory store for fetch cache");
          }
          memoryCache = new _lrucache.default({
            max: ctx2.maxMemoryCacheSize,
            length({ value }) {
              var _JSON_stringify;
              if (!value) {
                return 25;
              } else if (value.kind === "REDIRECT") {
                return JSON.stringify(value.props).length;
              } else if (value.kind === "IMAGE") {
                throw new Error("invariant image should not be incremental-cache");
              } else if (value.kind === "FETCH") {
                return JSON.stringify(value.data || "").length;
              } else if (value.kind === "ROUTE") {
                return value.body.length;
              }
              return value.html.length + (((_JSON_stringify = JSON.stringify(value.pageData)) == null ? void 0 : _JSON_stringify.length) || 0);
            }
          });
        } else if (this.debug) {
          console.log("not using memory store for fetch cache");
        }
        if (this.serverDistDir && this.fs) {
          this.tagsManifestPath = _path.default.join(this.serverDistDir, "..", "cache", "fetch-cache", "tags-manifest.json");
          this.loadTagsManifest();
        }
      }
      resetRequestCache() {
      }
      loadTagsManifest() {
        if (!this.tagsManifestPath || !this.fs || tagsManifest)
          return;
        try {
          tagsManifest = JSON.parse(this.fs.readFileSync(this.tagsManifestPath, "utf8"));
        } catch (err) {
          tagsManifest = {
            version: 1,
            items: {}
          };
        }
        if (this.debug)
          console.log("loadTagsManifest", tagsManifest);
      }
      async revalidateTag(tag) {
        if (this.debug) {
          console.log("revalidateTag", tag);
        }
        this.loadTagsManifest();
        if (!tagsManifest || !this.tagsManifestPath) {
          return;
        }
        const data2 = tagsManifest.items[tag] || {};
        data2.revalidatedAt = Date.now();
        tagsManifest.items[tag] = data2;
        try {
          await this.fs.mkdir(_path.default.dirname(this.tagsManifestPath));
          await this.fs.writeFile(this.tagsManifestPath, JSON.stringify(tagsManifest || {}));
          if (this.debug) {
            console.log("Updated tags manifest", tagsManifest);
          }
        } catch (err) {
          console.warn("Failed to update tags manifest.", err);
        }
      }
      async get(...args) {
        var _data_value, _data_value1;
        const [key, ctx2 = {}] = args;
        const { tags, softTags, kindHint } = ctx2;
        let data2 = memoryCache == null ? void 0 : memoryCache.get(key);
        if (this.debug) {
          console.log("get", key, tags, kindHint, !!data2);
        }
        if (!data2 && process.env.NEXT_RUNTIME !== "edge") {
          try {
            const filePath = this.getFilePath(`${key}.body`, "app");
            const fileData = await this.fs.readFile(filePath);
            const { mtime } = await this.fs.stat(filePath);
            const meta = JSON.parse(await this.fs.readFile(filePath.replace(/\.body$/, _constants.NEXT_META_SUFFIX), "utf8"));
            const cacheEntry = {
              lastModified: mtime.getTime(),
              value: {
                kind: "ROUTE",
                body: fileData,
                headers: meta.headers,
                status: meta.status
              }
            };
            return cacheEntry;
          } catch (_) {
          }
          try {
            let kind = kindHint;
            if (!kind) {
              kind = this.detectFileKind(`${key}.html`);
            }
            const isAppPath = kind === "app";
            const filePath = this.getFilePath(kind === "fetch" ? key : `${key}.html`, kind);
            const fileData = await this.fs.readFile(filePath, "utf8");
            const { mtime } = await this.fs.stat(filePath);
            if (kind === "fetch" && this.flushToDisk) {
              var _data_value2;
              const lastModified = mtime.getTime();
              const parsedData = JSON.parse(fileData);
              data2 = {
                lastModified,
                value: parsedData
              };
              if (((_data_value2 = data2.value) == null ? void 0 : _data_value2.kind) === "FETCH") {
                var _data_value3;
                const storedTags = (_data_value3 = data2.value) == null ? void 0 : _data_value3.tags;
                if (!(tags == null ? void 0 : tags.every((tag) => storedTags == null ? void 0 : storedTags.includes(tag)))) {
                  if (this.debug) {
                    console.log("tags vs storedTags mismatch", tags, storedTags);
                  }
                  await this.set(key, data2.value, {
                    tags
                  });
                }
              }
            } else {
              const pageData = isAppPath ? await this.fs.readFile(this.getFilePath(`${key}${this.experimental.ppr ? _constants.RSC_PREFETCH_SUFFIX : _constants.RSC_SUFFIX}`, "app"), "utf8") : JSON.parse(await this.fs.readFile(this.getFilePath(`${key}${_constants.NEXT_DATA_SUFFIX}`, "pages"), "utf8"));
              let meta;
              if (isAppPath) {
                try {
                  meta = JSON.parse(await this.fs.readFile(filePath.replace(/\.html$/, _constants.NEXT_META_SUFFIX), "utf8"));
                } catch {
                }
              }
              data2 = {
                lastModified: mtime.getTime(),
                value: {
                  kind: "PAGE",
                  html: fileData,
                  pageData,
                  postponed: meta == null ? void 0 : meta.postponed,
                  headers: meta == null ? void 0 : meta.headers,
                  status: meta == null ? void 0 : meta.status
                }
              };
            }
            if (data2) {
              memoryCache == null ? void 0 : memoryCache.set(key, data2);
            }
          } catch (_) {
          }
        }
        if ((data2 == null ? void 0 : (_data_value = data2.value) == null ? void 0 : _data_value.kind) === "PAGE") {
          var _data_value_headers;
          let cacheTags;
          const tagsHeader = (_data_value_headers = data2.value.headers) == null ? void 0 : _data_value_headers[_constants.NEXT_CACHE_TAGS_HEADER];
          if (typeof tagsHeader === "string") {
            cacheTags = tagsHeader.split(",");
          }
          if (cacheTags == null ? void 0 : cacheTags.length) {
            this.loadTagsManifest();
            const isStale = cacheTags.some((tag) => {
              var _tagsManifest_items_tag;
              return (tagsManifest == null ? void 0 : (_tagsManifest_items_tag = tagsManifest.items[tag]) == null ? void 0 : _tagsManifest_items_tag.revalidatedAt) && (tagsManifest == null ? void 0 : tagsManifest.items[tag].revalidatedAt) >= ((data2 == null ? void 0 : data2.lastModified) || Date.now());
            });
            if (isStale) {
              data2 = void 0;
            }
          }
        }
        if (data2 && (data2 == null ? void 0 : (_data_value1 = data2.value) == null ? void 0 : _data_value1.kind) === "FETCH") {
          this.loadTagsManifest();
          const combinedTags = [
            ...tags || [],
            ...softTags || []
          ];
          const wasRevalidated = combinedTags.some((tag) => {
            var _tagsManifest_items_tag;
            if (this.revalidatedTags.includes(tag)) {
              return true;
            }
            return (tagsManifest == null ? void 0 : (_tagsManifest_items_tag = tagsManifest.items[tag]) == null ? void 0 : _tagsManifest_items_tag.revalidatedAt) && (tagsManifest == null ? void 0 : tagsManifest.items[tag].revalidatedAt) >= ((data2 == null ? void 0 : data2.lastModified) || Date.now());
          });
          if (wasRevalidated) {
            data2 = void 0;
          }
        }
        return data2 ?? null;
      }
      async set(...args) {
        const [key, data2, ctx2] = args;
        memoryCache == null ? void 0 : memoryCache.set(key, {
          value: data2,
          lastModified: Date.now()
        });
        if (this.debug) {
          console.log("set", key);
        }
        if (!this.flushToDisk)
          return;
        if ((data2 == null ? void 0 : data2.kind) === "ROUTE") {
          const filePath = this.getFilePath(`${key}.body`, "app");
          await this.fs.mkdir(_path.default.dirname(filePath));
          await this.fs.writeFile(filePath, data2.body);
          const meta = {
            headers: data2.headers,
            status: data2.status,
            postponed: void 0
          };
          await this.fs.writeFile(filePath.replace(/\.body$/, _constants.NEXT_META_SUFFIX), JSON.stringify(meta, null, 2));
          return;
        }
        if ((data2 == null ? void 0 : data2.kind) === "PAGE") {
          const isAppPath = typeof data2.pageData === "string";
          const htmlPath = this.getFilePath(`${key}.html`, isAppPath ? "app" : "pages");
          await this.fs.mkdir(_path.default.dirname(htmlPath));
          await this.fs.writeFile(htmlPath, data2.html);
          await this.fs.writeFile(this.getFilePath(`${key}${isAppPath ? this.experimental.ppr ? _constants.RSC_PREFETCH_SUFFIX : _constants.RSC_SUFFIX : _constants.NEXT_DATA_SUFFIX}`, isAppPath ? "app" : "pages"), isAppPath ? data2.pageData : JSON.stringify(data2.pageData));
          if (data2.headers || data2.status) {
            const meta = {
              headers: data2.headers,
              status: data2.status,
              postponed: data2.postponed
            };
            await this.fs.writeFile(htmlPath.replace(/\.html$/, _constants.NEXT_META_SUFFIX), JSON.stringify(meta));
          }
        } else if ((data2 == null ? void 0 : data2.kind) === "FETCH") {
          const filePath = this.getFilePath(key, "fetch");
          await this.fs.mkdir(_path.default.dirname(filePath));
          await this.fs.writeFile(filePath, JSON.stringify({
            ...data2,
            tags: ctx2.tags
          }));
        }
      }
      detectFileKind(pathname) {
        if (!this.appDir && !this.pagesDir) {
          throw new Error("Invariant: Can't determine file path kind, no page directory enabled");
        }
        if (!this.appDir && this.pagesDir) {
          return "pages";
        } else if (this.appDir && !this.pagesDir) {
          return "app";
        }
        let filePath = this.getFilePath(pathname, "pages");
        if (this.fs.existsSync(filePath)) {
          return "pages";
        }
        filePath = this.getFilePath(pathname, "app");
        if (this.fs.existsSync(filePath)) {
          return "app";
        }
        throw new Error(`Invariant: Unable to determine file path kind for ${pathname}`);
      }
      getFilePath(pathname, kind) {
        switch (kind) {
          case "fetch":
            return _path.default.join(this.serverDistDir, "..", "cache", "fetch-cache", pathname);
          case "pages":
            return _path.default.join(this.serverDistDir, "pages", pathname);
          case "app":
            return _path.default.join(this.serverDistDir, "app", pathname);
          default:
            throw new Error("Invariant: Can't determine file path kind");
        }
      }
    };
  }
});

// ../../../node_modules/next/dist/server/lib/server-ipc/utils.js
var require_utils4 = __commonJS({
  "../../../node_modules/next/dist/server/lib/server-ipc/utils.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name2 in all)
        Object.defineProperty(target, name2, {
          enumerable: true,
          get: all[name2]
        });
    }
    _export(exports2, {
      ipcForbiddenHeaders: function() {
        return ipcForbiddenHeaders;
      },
      actionsForbiddenHeaders: function() {
        return actionsForbiddenHeaders;
      },
      filterReqHeaders: function() {
        return filterReqHeaders;
      }
    });
    var ipcForbiddenHeaders = [
      "accept-encoding",
      "keepalive",
      "keep-alive",
      "content-encoding",
      "transfer-encoding",
      // https://github.com/nodejs/undici/issues/1470
      "connection",
      // marked as unsupported by undici: https://github.com/nodejs/undici/blob/c83b084879fa0bb8e0469d31ec61428ac68160d5/lib/core/request.js#L354
      "expect"
    ];
    var actionsForbiddenHeaders = [
      ...ipcForbiddenHeaders,
      "content-length"
    ];
    var filterReqHeaders = (headers, forbiddenHeaders) => {
      if (headers["content-length"] && headers["content-length"] === "0") {
        delete headers["content-length"];
      }
      for (const [key, value] of Object.entries(headers)) {
        if (forbiddenHeaders.includes(key) || !(Array.isArray(value) || typeof value === "string")) {
          delete headers[key];
        }
      }
      return headers;
    };
  }
});

// ../../../node_modules/next/dist/server/lib/server-ipc/invoke-request.js
var require_invoke_request = __commonJS({
  "../../../node_modules/next/dist/server/lib/server-ipc/invoke-request.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    Object.defineProperty(exports2, "invokeRequest", {
      enumerable: true,
      get: function() {
        return invokeRequest;
      }
    });
    var _utils = require_utils4();
    var invokeRequest = async (targetUrl, requestInit, readableBody) => {
      const invokeHeaders = (0, _utils.filterReqHeaders)({
        "cache-control": "",
        ...requestInit.headers
      }, _utils.ipcForbiddenHeaders);
      return await fetch(targetUrl, {
        headers: invokeHeaders,
        method: requestInit.method,
        redirect: "manual",
        signal: requestInit.signal,
        ...requestInit.method !== "GET" && requestInit.method !== "HEAD" && readableBody ? {
          body: readableBody,
          duplex: "half"
        } : {},
        next: {
          // @ts-ignore
          internal: true
        }
      });
    };
  }
});

// ../../../node_modules/next/dist/server/lib/server-ipc/request-utils.js
var require_request_utils = __commonJS({
  "../../../node_modules/next/dist/server/lib/server-ipc/request-utils.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name2 in all)
        Object.defineProperty(target, name2, {
          enumerable: true,
          get: all[name2]
        });
    }
    _export(exports2, {
      deserializeErr: function() {
        return deserializeErr;
      },
      invokeIpcMethod: function() {
        return invokeIpcMethod;
      }
    });
    var _utils = require_utils();
    var _invokerequest = require_invoke_request();
    var deserializeErr = (serializedErr) => {
      if (!serializedErr || typeof serializedErr !== "object" || !serializedErr.stack) {
        return serializedErr;
      }
      let ErrorType = Error;
      if (serializedErr.name === "PageNotFoundError") {
        ErrorType = _utils.PageNotFoundError;
      }
      const err = new ErrorType(serializedErr.message);
      err.stack = serializedErr.stack;
      err.name = serializedErr.name;
      err.digest = serializedErr.digest;
      if (process.env.NEXT_RUNTIME !== "edge") {
        const { decorateServerError } = require_middleware();
        decorateServerError(err, serializedErr.source || "server");
      }
      return err;
    };
    async function invokeIpcMethod({ fetchHostname = "localhost", method, args, ipcPort, ipcKey }) {
      if (ipcPort) {
        const res = await (0, _invokerequest.invokeRequest)(`http://${fetchHostname}:${ipcPort}?key=${ipcKey}&method=${method}&args=${encodeURIComponent(JSON.stringify(args))}`, {
          method: "GET",
          headers: {}
        });
        const body = await res.text();
        if (body.startsWith("{") && body.endsWith("}")) {
          const parsedBody = JSON.parse(body);
          if (parsedBody && typeof parsedBody === "object" && "err" in parsedBody && "stack" in parsedBody.err) {
            throw deserializeErr(parsedBody.err);
          }
          return parsedBody;
        }
      }
    }
  }
});

// ../../../node_modules/next/dist/server/lib/incremental-cache/index.js
var require_incremental_cache = __commonJS({
  "../../../node_modules/next/dist/server/lib/incremental-cache/index.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name2 in all)
        Object.defineProperty(target, name2, {
          enumerable: true,
          get: all[name2]
        });
    }
    _export(exports2, {
      CacheHandler: function() {
        return CacheHandler;
      },
      IncrementalCache: function() {
        return IncrementalCache;
      }
    });
    var _fetchcache = _interop_require_default(require_fetch_cache());
    var _filesystemcache = _interop_require_default(require_file_system_cache());
    var _path = _interop_require_default(require_path2());
    var _normalizepagepath = require_normalize_page_path();
    var _constants = require_constants();
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function toRoute(pathname) {
      return pathname.replace(/\/$/, "").replace(/\/index$/, "") || "/";
    }
    var CacheHandler = class {
      // eslint-disable-next-line
      constructor(_ctx) {
      }
      async get(..._args) {
        return {};
      }
      async set(..._args) {
      }
      async revalidateTag(_tag) {
      }
      resetRequestCache() {
      }
    };
    var IncrementalCache = class {
      constructor({ fs: fs2, dev, appDir, pagesDir, flushToDisk, fetchCache, minimalMode, serverDistDir, requestHeaders, requestProtocol, maxMemoryCacheSize, getPrerenderManifest, fetchCacheKeyPrefix, CurCacheHandler, allowedRevalidateHeaderKeys, experimental }) {
        var _this_prerenderManifest_preview, _this_prerenderManifest, _this_prerenderManifest_preview1, _this_prerenderManifest1;
        this.locks = /* @__PURE__ */ new Map();
        this.unlocks = /* @__PURE__ */ new Map();
        const debug = !!process.env.NEXT_PRIVATE_DEBUG_CACHE;
        this.hasCustomCacheHandler = Boolean(CurCacheHandler);
        if (!CurCacheHandler) {
          if (fs2 && serverDistDir) {
            if (debug) {
              console.log("using filesystem cache handler");
            }
            CurCacheHandler = _filesystemcache.default;
          }
          if (_fetchcache.default.isAvailable({
            _requestHeaders: requestHeaders
          }) && minimalMode && fetchCache) {
            if (debug) {
              console.log("using fetch cache handler");
            }
            CurCacheHandler = _fetchcache.default;
          }
        } else if (debug) {
          console.log("using custom cache handler", CurCacheHandler.name);
        }
        if (process.env.__NEXT_TEST_MAX_ISR_CACHE) {
          maxMemoryCacheSize = parseInt(process.env.__NEXT_TEST_MAX_ISR_CACHE, 10);
        }
        this.dev = dev;
        const minimalModeKey = "minimalMode";
        this[minimalModeKey] = minimalMode;
        this.requestHeaders = requestHeaders;
        this.requestProtocol = requestProtocol;
        this.allowedRevalidateHeaderKeys = allowedRevalidateHeaderKeys;
        this.prerenderManifest = getPrerenderManifest();
        this.fetchCacheKeyPrefix = fetchCacheKeyPrefix;
        let revalidatedTags = [];
        if (requestHeaders[_constants.PRERENDER_REVALIDATE_HEADER] === ((_this_prerenderManifest = this.prerenderManifest) == null ? void 0 : (_this_prerenderManifest_preview = _this_prerenderManifest.preview) == null ? void 0 : _this_prerenderManifest_preview.previewModeId)) {
          this.isOnDemandRevalidate = true;
        }
        if (minimalMode && typeof requestHeaders[_constants.NEXT_CACHE_REVALIDATED_TAGS_HEADER] === "string" && requestHeaders[_constants.NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER] === ((_this_prerenderManifest1 = this.prerenderManifest) == null ? void 0 : (_this_prerenderManifest_preview1 = _this_prerenderManifest1.preview) == null ? void 0 : _this_prerenderManifest_preview1.previewModeId)) {
          revalidatedTags = requestHeaders[_constants.NEXT_CACHE_REVALIDATED_TAGS_HEADER].split(",");
        }
        if (CurCacheHandler) {
          this.cacheHandler = new CurCacheHandler({
            dev,
            fs: fs2,
            flushToDisk,
            serverDistDir,
            revalidatedTags,
            maxMemoryCacheSize,
            _pagesDir: !!pagesDir,
            _appDir: !!appDir,
            _requestHeaders: requestHeaders,
            fetchCacheKeyPrefix,
            experimental
          });
        }
      }
      calculateRevalidate(pathname, fromTime, dev) {
        if (dev)
          return (/* @__PURE__ */ new Date()).getTime() - 1e3;
        const { initialRevalidateSeconds } = this.prerenderManifest.routes[toRoute(pathname)] || {
          initialRevalidateSeconds: 1
        };
        const revalidateAfter = typeof initialRevalidateSeconds === "number" ? initialRevalidateSeconds * 1e3 + fromTime : initialRevalidateSeconds;
        return revalidateAfter;
      }
      _getPathname(pathname, fetchCache) {
        return fetchCache ? pathname : (0, _normalizepagepath.normalizePagePath)(pathname);
      }
      resetRequestCache() {
        var _this_cacheHandler_resetRequestCache, _this_cacheHandler;
        (_this_cacheHandler = this.cacheHandler) == null ? void 0 : (_this_cacheHandler_resetRequestCache = _this_cacheHandler.resetRequestCache) == null ? void 0 : _this_cacheHandler_resetRequestCache.call(_this_cacheHandler);
      }
      async unlock(cacheKey) {
        const unlock = this.unlocks.get(cacheKey);
        if (unlock) {
          unlock();
          this.locks.delete(cacheKey);
          this.unlocks.delete(cacheKey);
        }
      }
      async lock(cacheKey) {
        if (process.env.__NEXT_INCREMENTAL_CACHE_IPC_PORT && process.env.__NEXT_INCREMENTAL_CACHE_IPC_KEY && process.env.NEXT_RUNTIME !== "edge") {
          const invokeIpcMethod = require_request_utils().invokeIpcMethod;
          await invokeIpcMethod({
            method: "lock",
            ipcPort: process.env.__NEXT_INCREMENTAL_CACHE_IPC_PORT,
            ipcKey: process.env.__NEXT_INCREMENTAL_CACHE_IPC_KEY,
            args: [
              cacheKey
            ]
          });
          return async () => {
            await invokeIpcMethod({
              method: "unlock",
              ipcPort: process.env.__NEXT_INCREMENTAL_CACHE_IPC_PORT,
              ipcKey: process.env.__NEXT_INCREMENTAL_CACHE_IPC_KEY,
              args: [
                cacheKey
              ]
            });
          };
        }
        let unlockNext = () => Promise.resolve();
        const existingLock = this.locks.get(cacheKey);
        if (existingLock) {
          await existingLock;
        } else {
          const newLock = new Promise((resolve) => {
            unlockNext = async () => {
              resolve();
            };
          });
          this.locks.set(cacheKey, newLock);
          this.unlocks.set(cacheKey, unlockNext);
        }
        return unlockNext;
      }
      async revalidateTag(tag) {
        var _this_cacheHandler_revalidateTag, _this_cacheHandler;
        if (process.env.__NEXT_INCREMENTAL_CACHE_IPC_PORT && process.env.__NEXT_INCREMENTAL_CACHE_IPC_KEY && process.env.NEXT_RUNTIME !== "edge") {
          const invokeIpcMethod = require_request_utils().invokeIpcMethod;
          return invokeIpcMethod({
            method: "revalidateTag",
            ipcPort: process.env.__NEXT_INCREMENTAL_CACHE_IPC_PORT,
            ipcKey: process.env.__NEXT_INCREMENTAL_CACHE_IPC_KEY,
            args: [
              ...arguments
            ]
          });
        }
        return (_this_cacheHandler = this.cacheHandler) == null ? void 0 : (_this_cacheHandler_revalidateTag = _this_cacheHandler.revalidateTag) == null ? void 0 : _this_cacheHandler_revalidateTag.call(_this_cacheHandler, tag);
      }
      // x-ref: https://github.com/facebook/react/blob/2655c9354d8e1c54ba888444220f63e836925caa/packages/react/src/ReactFetch.js#L23
      async fetchCacheKey(url, init = {}) {
        const MAIN_KEY_PREFIX = "v3";
        const bodyChunks = [];
        const encoder = new TextEncoder();
        const decoder = new TextDecoder();
        if (init.body) {
          if (typeof init.body.getReader === "function") {
            const readableBody = init.body;
            const chunks = [];
            try {
              await readableBody.pipeTo(new WritableStream({
                write(chunk) {
                  if (typeof chunk === "string") {
                    chunks.push(encoder.encode(chunk));
                    bodyChunks.push(chunk);
                  } else {
                    chunks.push(chunk);
                    bodyChunks.push(decoder.decode(chunk, {
                      stream: true
                    }));
                  }
                }
              }));
              bodyChunks.push(decoder.decode());
              const length = chunks.reduce((total, arr) => total + arr.length, 0);
              const arrayBuffer = new Uint8Array(length);
              let offset = 0;
              for (const chunk of chunks) {
                arrayBuffer.set(chunk, offset);
                offset += chunk.length;
              }
              init._ogBody = arrayBuffer;
            } catch (err) {
              console.error("Problem reading body", err);
            }
          } else if (typeof init.body.keys === "function") {
            const formData = init.body;
            init._ogBody = init.body;
            for (const key of /* @__PURE__ */ new Set([
              ...formData.keys()
            ])) {
              const values = formData.getAll(key);
              bodyChunks.push(`${key}=${(await Promise.all(values.map(async (val) => {
                if (typeof val === "string") {
                  return val;
                } else {
                  return await val.text();
                }
              }))).join(",")}`);
            }
          } else if (typeof init.body.arrayBuffer === "function") {
            const blob = init.body;
            const arrayBuffer = await blob.arrayBuffer();
            bodyChunks.push(await blob.text());
            init._ogBody = new Blob([
              arrayBuffer
            ], {
              type: blob.type
            });
          } else if (typeof init.body === "string") {
            bodyChunks.push(init.body);
            init._ogBody = init.body;
          }
        }
        const cacheString = JSON.stringify([
          MAIN_KEY_PREFIX,
          this.fetchCacheKeyPrefix || "",
          url,
          init.method,
          typeof (init.headers || {}).keys === "function" ? Object.fromEntries(init.headers) : init.headers,
          init.mode,
          init.redirect,
          init.credentials,
          init.referrer,
          init.referrerPolicy,
          init.integrity,
          init.cache,
          bodyChunks
        ]);
        if (process.env.NEXT_RUNTIME === "edge") {
          let bufferToHex = function(buffer2) {
            return Array.prototype.map.call(new Uint8Array(buffer2), (b) => b.toString(16).padStart(2, "0")).join("");
          };
          const buffer = encoder.encode(cacheString);
          return bufferToHex(await crypto.subtle.digest("SHA-256", buffer));
        } else {
          const crypto1 = require_crypto();
          return crypto1.createHash("sha256").update(cacheString).digest("hex");
        }
      }
      // get data from cache if available
      async get(cacheKey, ctx2 = {}) {
        var _this_cacheHandler, _cacheData_value, _this_prerenderManifest_routes_toRoute;
        if (process.env.__NEXT_INCREMENTAL_CACHE_IPC_PORT && process.env.__NEXT_INCREMENTAL_CACHE_IPC_KEY && process.env.NEXT_RUNTIME !== "edge") {
          const invokeIpcMethod = require_request_utils().invokeIpcMethod;
          return invokeIpcMethod({
            method: "get",
            ipcPort: process.env.__NEXT_INCREMENTAL_CACHE_IPC_PORT,
            ipcKey: process.env.__NEXT_INCREMENTAL_CACHE_IPC_KEY,
            args: [
              ...arguments
            ]
          });
        }
        if (this.dev && (ctx2.kindHint !== "fetch" || this.requestHeaders["cache-control"] === "no-cache")) {
          return null;
        }
        cacheKey = this._getPathname(cacheKey, ctx2.kindHint === "fetch");
        let entry = null;
        let revalidate = ctx2.revalidate;
        const cacheData = await ((_this_cacheHandler = this.cacheHandler) == null ? void 0 : _this_cacheHandler.get(cacheKey, ctx2));
        if ((cacheData == null ? void 0 : (_cacheData_value = cacheData.value) == null ? void 0 : _cacheData_value.kind) === "FETCH") {
          const combinedTags = [
            ...ctx2.tags || [],
            ...ctx2.softTags || []
          ];
          if (combinedTags.some((tag) => {
            var _this_revalidatedTags;
            return (_this_revalidatedTags = this.revalidatedTags) == null ? void 0 : _this_revalidatedTags.includes(tag);
          })) {
            return null;
          }
          revalidate = revalidate || cacheData.value.revalidate;
          const age = (Date.now() - (cacheData.lastModified || 0)) / 1e3;
          const isStale2 = age > revalidate;
          const data2 = cacheData.value.data;
          return {
            isStale: isStale2,
            value: {
              kind: "FETCH",
              data: data2,
              revalidate
            },
            revalidateAfter: Date.now() + revalidate * 1e3
          };
        }
        const curRevalidate = (_this_prerenderManifest_routes_toRoute = this.prerenderManifest.routes[toRoute(cacheKey)]) == null ? void 0 : _this_prerenderManifest_routes_toRoute.initialRevalidateSeconds;
        let isStale;
        let revalidateAfter;
        if ((cacheData == null ? void 0 : cacheData.lastModified) === -1) {
          isStale = -1;
          revalidateAfter = -1 * _constants.CACHE_ONE_YEAR;
        } else {
          revalidateAfter = this.calculateRevalidate(cacheKey, (cacheData == null ? void 0 : cacheData.lastModified) || Date.now(), this.dev && ctx2.kindHint !== "fetch");
          isStale = revalidateAfter !== false && revalidateAfter < Date.now() ? true : void 0;
        }
        if (cacheData) {
          entry = {
            isStale,
            curRevalidate,
            revalidateAfter,
            value: cacheData.value
          };
        }
        if (!cacheData && this.prerenderManifest.notFoundRoutes.includes(cacheKey)) {
          entry = {
            isStale,
            value: null,
            curRevalidate,
            revalidateAfter
          };
          this.set(cacheKey, entry.value, ctx2);
        }
        return entry;
      }
      // populate the incremental cache with new data
      async set(pathname, data2, ctx2) {
        if (process.env.__NEXT_INCREMENTAL_CACHE_IPC_PORT && process.env.__NEXT_INCREMENTAL_CACHE_IPC_KEY && process.env.NEXT_RUNTIME !== "edge") {
          const invokeIpcMethod = require_request_utils().invokeIpcMethod;
          return invokeIpcMethod({
            method: "set",
            ipcPort: process.env.__NEXT_INCREMENTAL_CACHE_IPC_PORT,
            ipcKey: process.env.__NEXT_INCREMENTAL_CACHE_IPC_KEY,
            args: [
              ...arguments
            ]
          });
        }
        if (this.dev && !ctx2.fetchCache)
          return;
        if (ctx2.fetchCache && // we don't show this error/warning when a custom cache handler is being used
        // as it might not have this limit
        !this.hasCustomCacheHandler && JSON.stringify(data2).length > 2 * 1024 * 1024) {
          if (this.dev) {
            throw new Error(`fetch for over 2MB of data can not be cached`);
          }
          return;
        }
        pathname = this._getPathname(pathname, ctx2.fetchCache);
        try {
          var _this_cacheHandler;
          if (typeof ctx2.revalidate !== "undefined" && !ctx2.fetchCache) {
            this.prerenderManifest.routes[pathname] = {
              experimentalPPR: void 0,
              dataRoute: _path.default.posix.join("/_next/data", `${(0, _normalizepagepath.normalizePagePath)(pathname)}.json`),
              srcRoute: null,
              initialRevalidateSeconds: ctx2.revalidate,
              // Pages routes do not have a prefetch data route.
              prefetchDataRoute: void 0
            };
          }
          await ((_this_cacheHandler = this.cacheHandler) == null ? void 0 : _this_cacheHandler.set(pathname, data2, ctx2));
        } catch (error) {
          console.warn("Failed to update prerender cache for", pathname, error);
        }
      }
    };
  }
});

// ../../../node_modules/next/dist/server/lib/node-fs-methods.js
var require_node_fs_methods = __commonJS({
  "../../../node_modules/next/dist/server/lib/node-fs-methods.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    Object.defineProperty(exports2, "nodeFs", {
      enumerable: true,
      get: function() {
        return nodeFs;
      }
    });
    var _fs = _interop_require_default(require_fs());
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    var nodeFs = {
      existsSync: _fs.default.existsSync,
      readFile: _fs.default.promises.readFile,
      readFileSync: _fs.default.readFileSync,
      writeFile: (f, d) => _fs.default.promises.writeFile(f, d),
      mkdir: (dir) => _fs.default.promises.mkdir(dir, {
        recursive: true
      }),
      stat: (f) => _fs.default.promises.stat(f)
    };
  }
});

// ../../../node_modules/next/dist/compiled/ci-info/index.js
var require_ci_info = __commonJS({
  "../../../node_modules/next/dist/compiled/ci-info/index.js"(exports2, module2) {
    (() => {
      "use strict";
      var n = { 741: (n2, e2, a2) => {
        var t = a2(107);
        var r = process.env;
        Object.defineProperty(e2, "_vendors", { value: t.map(function(n3) {
          return n3.constant;
        }) });
        e2.name = null;
        e2.isPR = null;
        t.forEach(function(n3) {
          var a3 = Array.isArray(n3.env) ? n3.env : [n3.env];
          var t2 = a3.every(function(n4) {
            return checkEnv(n4);
          });
          e2[n3.constant] = t2;
          if (t2) {
            e2.name = n3.name;
            switch (typeof n3.pr) {
              case "string":
                e2.isPR = !!r[n3.pr];
                break;
              case "object":
                if ("env" in n3.pr) {
                  e2.isPR = n3.pr.env in r && r[n3.pr.env] !== n3.pr.ne;
                } else if ("any" in n3.pr) {
                  e2.isPR = n3.pr.any.some(function(n4) {
                    return !!r[n4];
                  });
                } else {
                  e2.isPR = checkEnv(n3.pr);
                }
                break;
              default:
                e2.isPR = null;
            }
          }
        });
        e2.isCI = !!(r.CI || r.CONTINUOUS_INTEGRATION || r.BUILD_NUMBER || r.RUN_ID || e2.name || false);
        function checkEnv(n3) {
          if (typeof n3 === "string")
            return !!r[n3];
          return Object.keys(n3).every(function(e3) {
            return r[e3] === n3[e3];
          });
        }
      }, 107: (n2) => {
        n2.exports = JSON.parse('[{"name":"AppVeyor","constant":"APPVEYOR","env":"APPVEYOR","pr":"APPVEYOR_PULL_REQUEST_NUMBER"},{"name":"Azure Pipelines","constant":"AZURE_PIPELINES","env":"SYSTEM_TEAMFOUNDATIONCOLLECTIONURI","pr":"SYSTEM_PULLREQUEST_PULLREQUESTID"},{"name":"Bamboo","constant":"BAMBOO","env":"bamboo_planKey"},{"name":"Bitbucket Pipelines","constant":"BITBUCKET","env":"BITBUCKET_COMMIT","pr":"BITBUCKET_PR_ID"},{"name":"Bitrise","constant":"BITRISE","env":"BITRISE_IO","pr":"BITRISE_PULL_REQUEST"},{"name":"Buddy","constant":"BUDDY","env":"BUDDY_WORKSPACE_ID","pr":"BUDDY_EXECUTION_PULL_REQUEST_ID"},{"name":"Buildkite","constant":"BUILDKITE","env":"BUILDKITE","pr":{"env":"BUILDKITE_PULL_REQUEST","ne":"false"}},{"name":"CircleCI","constant":"CIRCLE","env":"CIRCLECI","pr":"CIRCLE_PULL_REQUEST"},{"name":"Cirrus CI","constant":"CIRRUS","env":"CIRRUS_CI","pr":"CIRRUS_PR"},{"name":"AWS CodeBuild","constant":"CODEBUILD","env":"CODEBUILD_BUILD_ARN"},{"name":"Codeship","constant":"CODESHIP","env":{"CI_NAME":"codeship"}},{"name":"Drone","constant":"DRONE","env":"DRONE","pr":{"DRONE_BUILD_EVENT":"pull_request"}},{"name":"dsari","constant":"DSARI","env":"DSARI"},{"name":"GitHub Actions","constant":"GITHUB_ACTIONS","env":"GITHUB_ACTIONS","pr":{"GITHUB_EVENT_NAME":"pull_request"}},{"name":"GitLab CI","constant":"GITLAB","env":"GITLAB_CI"},{"name":"GoCD","constant":"GOCD","env":"GO_PIPELINE_LABEL"},{"name":"Hudson","constant":"HUDSON","env":"HUDSON_URL"},{"name":"Jenkins","constant":"JENKINS","env":["JENKINS_URL","BUILD_ID"],"pr":{"any":["ghprbPullId","CHANGE_ID"]}},{"name":"ZEIT Now","constant":"ZEIT_NOW","env":"NOW_BUILDER"},{"name":"Magnum CI","constant":"MAGNUM","env":"MAGNUM"},{"name":"Netlify CI","constant":"NETLIFY","env":"NETLIFY","pr":{"env":"PULL_REQUEST","ne":"false"}},{"name":"Nevercode","constant":"NEVERCODE","env":"NEVERCODE","pr":{"env":"NEVERCODE_PULL_REQUEST","ne":"false"}},{"name":"Render","constant":"RENDER","env":"RENDER","pr":{"IS_PULL_REQUEST":"true"}},{"name":"Sail CI","constant":"SAIL","env":"SAILCI","pr":"SAIL_PULL_REQUEST_NUMBER"},{"name":"Semaphore","constant":"SEMAPHORE","env":"SEMAPHORE","pr":"PULL_REQUEST_NUMBER"},{"name":"Shippable","constant":"SHIPPABLE","env":"SHIPPABLE","pr":{"IS_PULL_REQUEST":"true"}},{"name":"Solano CI","constant":"SOLANO","env":"TDDIUM","pr":"TDDIUM_PR_ID"},{"name":"Strider CD","constant":"STRIDER","env":"STRIDER"},{"name":"TaskCluster","constant":"TASKCLUSTER","env":["TASK_ID","RUN_ID"]},{"name":"TeamCity","constant":"TEAMCITY","env":"TEAMCITY_VERSION"},{"name":"Travis CI","constant":"TRAVIS","env":"TRAVIS","pr":{"env":"TRAVIS_PULL_REQUEST","ne":"false"}}]');
      } };
      var e = {};
      function __nccwpck_require__2(a2) {
        var t = e[a2];
        if (t !== void 0) {
          return t.exports;
        }
        var r = e[a2] = { exports: {} };
        var E = true;
        try {
          n[a2](r, r.exports, __nccwpck_require__2);
          E = false;
        } finally {
          if (E)
            delete e[a2];
        }
        return r.exports;
      }
      if (typeof __nccwpck_require__2 !== "undefined")
        __nccwpck_require__2.ab = __dirname + "/";
      var a = __nccwpck_require__2(741);
      module2.exports = a;
    })();
  }
});

// ../../../node_modules/next/dist/telemetry/ci-info.js
var require_ci_info2 = __commonJS({
  "../../../node_modules/next/dist/telemetry/ci-info.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name3 in all)
        Object.defineProperty(target, name3, {
          enumerable: true,
          get: all[name3]
        });
    }
    _export(exports2, {
      isCI: function() {
        return isCI;
      },
      name: function() {
        return name2;
      },
      hasNextSupport: function() {
        return hasNextSupport;
      }
    });
    var _ciinfo = _interop_require_default(require_ci_info());
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    var { isCI: _isCI, name: _name } = _ciinfo.default;
    var isZeitNow = !!process.env.NOW_BUILDER;
    var envStack = process.env.STACK;
    var isHeroku = typeof envStack === "string" && envStack.toLowerCase().includes("heroku");
    var isCI = isZeitNow || isHeroku || _isCI;
    var name2 = isZeitNow ? "ZEIT Now" : isHeroku ? "Heroku" : _name;
    var hasNextSupport = Boolean(isZeitNow);
  }
});

// ../../../node_modules/next/dist/shared/lib/page-path/denormalize-app-path.js
var require_denormalize_app_path = __commonJS({
  "../../../node_modules/next/dist/shared/lib/page-path/denormalize-app-path.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    Object.defineProperty(exports2, "denormalizeAppPagePath", {
      enumerable: true,
      get: function() {
        return denormalizeAppPagePath;
      }
    });
    function denormalizeAppPagePath(page) {
      if (page === "/index") {
        return "/";
      }
      return page;
    }
  }
});

// ../../../node_modules/next/dist/server/future/route-kind.js
var require_route_kind = __commonJS({
  "../../../node_modules/next/dist/server/future/route-kind.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    Object.defineProperty(exports2, "RouteKind", {
      enumerable: true,
      get: function() {
        return RouteKind;
      }
    });
    var RouteKind;
    (function(RouteKind2) {
      RouteKind2[
        /**
        * `PAGES` represents all the React pages that are under `pages/`.
        */
        "PAGES"
      ] = "PAGES";
      RouteKind2[
        /**
        * `PAGES_API` represents all the API routes under `pages/api/`.
        */
        "PAGES_API"
      ] = "PAGES_API";
      RouteKind2[
        /**
        * `APP_PAGE` represents all the React pages that are under `app/` with the
        * filename of `page.{j,t}s{,x}`.
        */
        "APP_PAGE"
      ] = "APP_PAGE";
      RouteKind2[
        /**
        * `APP_ROUTE` represents all the API routes and metadata routes that are under `app/` with the
        * filename of `route.{j,t}s{,x}`.
        */
        "APP_ROUTE"
      ] = "APP_ROUTE";
    })(RouteKind || (RouteKind = {}));
  }
});

// ../../../node_modules/next/dist/server/future/route-modules/checks.js
var require_checks = __commonJS({
  "../../../node_modules/next/dist/server/future/route-modules/checks.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name2 in all)
        Object.defineProperty(target, name2, {
          enumerable: true,
          get: all[name2]
        });
    }
    _export(exports2, {
      isAppRouteRouteModule: function() {
        return isAppRouteRouteModule;
      },
      isAppPageRouteModule: function() {
        return isAppPageRouteModule;
      },
      isPagesRouteModule: function() {
        return isPagesRouteModule;
      },
      isPagesAPIRouteModule: function() {
        return isPagesAPIRouteModule;
      }
    });
    var _routekind = require_route_kind();
    function isAppRouteRouteModule(routeModule) {
      return routeModule.definition.kind === _routekind.RouteKind.APP_ROUTE;
    }
    function isAppPageRouteModule(routeModule) {
      return routeModule.definition.kind === _routekind.RouteKind.APP_PAGE;
    }
    function isPagesRouteModule(routeModule) {
      return routeModule.definition.kind === _routekind.RouteKind.PAGES;
    }
    function isPagesAPIRouteModule(routeModule) {
      return routeModule.definition.kind === _routekind.RouteKind.PAGES_API;
    }
  }
});

// ../../../node_modules/next/dist/lib/format-dynamic-import-path.js
var require_format_dynamic_import_path = __commonJS({
  "../../../node_modules/next/dist/lib/format-dynamic-import-path.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    Object.defineProperty(exports2, "formatDynamicImportPath", {
      enumerable: true,
      get: function() {
        return formatDynamicImportPath;
      }
    });
    var _path = _interop_require_default(require_path());
    var _url = require_url();
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    var formatDynamicImportPath = (dir, filePath) => {
      const absoluteFilePath = _path.default.isAbsolute(filePath) ? filePath : _path.default.join(dir, filePath);
      const formattedFilePath = (0, _url.pathToFileURL)(absoluteFilePath).toString();
      return formattedFilePath;
    };
  }
});

// ../../../node_modules/next/dist/shared/lib/runtime-config.external.js
var require_runtime_config_external = __commonJS({
  "../../../node_modules/next/dist/shared/lib/runtime-config.external.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name2 in all)
        Object.defineProperty(target, name2, {
          enumerable: true,
          get: all[name2]
        });
    }
    _export(exports2, {
      default: function() {
        return _default;
      },
      setConfig: function() {
        return setConfig;
      }
    });
    var runtimeConfig;
    var _default = () => {
      return runtimeConfig;
    };
    function setConfig(configValue) {
      runtimeConfig = configValue;
    }
  }
});

// ../../../node_modules/next/dist/build/utils.js
var require_utils5 = __commonJS({
  "../../../node_modules/next/dist/build/utils.js"(exports2) {
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name2 in all)
        Object.defineProperty(target, name2, {
          enumerable: true,
          get: all[name2]
        });
    }
    _export(exports2, {
      unique: function() {
        return unique;
      },
      difference: function() {
        return difference;
      },
      computeFromManifest: function() {
        return computeFromManifest;
      },
      isMiddlewareFilename: function() {
        return isMiddlewareFilename;
      },
      isInstrumentationHookFilename: function() {
        return isInstrumentationHookFilename;
      },
      serializePageInfos: function() {
        return serializePageInfos;
      },
      deserializePageInfos: function() {
        return deserializePageInfos;
      },
      printTreeView: function() {
        return printTreeView;
      },
      printCustomRoutes: function() {
        return printCustomRoutes;
      },
      getJsPageSizeInKb: function() {
        return getJsPageSizeInKb;
      },
      buildStaticPaths: function() {
        return buildStaticPaths;
      },
      collectAppConfig: function() {
        return collectAppConfig;
      },
      collectGenerateParams: function() {
        return collectGenerateParams;
      },
      buildAppStaticPaths: function() {
        return buildAppStaticPaths;
      },
      isPageStatic: function() {
        return isPageStatic;
      },
      hasCustomGetInitialProps: function() {
        return hasCustomGetInitialProps;
      },
      getDefinedNamedExports: function() {
        return getDefinedNamedExports;
      },
      detectConflictingPaths: function() {
        return detectConflictingPaths;
      },
      copyTracedFiles: function() {
        return copyTracedFiles;
      },
      isReservedPage: function() {
        return isReservedPage;
      },
      isAppBuiltinNotFoundPage: function() {
        return isAppBuiltinNotFoundPage;
      },
      isCustomErrorPage: function() {
        return isCustomErrorPage;
      },
      isMiddlewareFile: function() {
        return isMiddlewareFile;
      },
      isInstrumentationHookFile: function() {
        return isInstrumentationHookFile;
      },
      getPossibleInstrumentationHookFilenames: function() {
        return getPossibleInstrumentationHookFilenames;
      },
      getPossibleMiddlewareFilenames: function() {
        return getPossibleMiddlewareFilenames;
      },
      NestedMiddlewareError: function() {
        return NestedMiddlewareError;
      },
      getSupportedBrowsers: function() {
        return getSupportedBrowsers;
      },
      isWebpackServerLayer: function() {
        return isWebpackServerLayer;
      },
      isWebpackDefaultLayer: function() {
        return isWebpackDefaultLayer;
      },
      isWebpackAppLayer: function() {
        return isWebpackAppLayer;
      }
    });
    require_require_hook();
    require_node_polyfill_crypto();
    require_node_environment();
    var _picocolors = require_picocolors();
    var _gzipsize = _interop_require_default(require_gzip_size());
    var _texttable = _interop_require_default(require_text_table());
    var _path = _interop_require_default(require_path());
    var _fs = require_fs();
    var _reactis = require_react_is();
    var _stripansi = _interop_require_default(require_strip_ansi());
    var _browserslist = _interop_require_default(require_browserslist());
    var _constants = require_constants();
    var _constants1 = require_constants2();
    var _prettybytes = _interop_require_default(require_pretty_bytes());
    var _routeregex = require_route_regex();
    var _routematcher = require_route_matcher();
    var _isdynamic = require_is_dynamic();
    var _escapepathdelimiters = _interop_require_default(require_escape_path_delimiters());
    var _findpagefile = require_find_page_file();
    var _removetrailingslash = require_remove_trailing_slash();
    var _isedgeruntime = require_is_edge_runtime();
    var _normalizelocalepath = require_normalize_locale_path();
    var _log = _interop_require_wildcard(require_log());
    var _loadcomponents = require_load_components();
    var _trace = require_trace2();
    var _setuphttpagentenv = require_setup_http_agent_env();
    var _asyncsema = require_async_sema();
    var _denormalizepagepath = require_denormalize_page_path();
    var _normalizepagepath = require_normalize_page_path();
    var _sandbox = require_sandbox2();
    var _clientreference = require_client_reference();
    var _staticgenerationasyncstoragewrapper = require_static_generation_async_storage_wrapper();
    var _incrementalcache = require_incremental_cache();
    var _nodefsmethods = require_node_fs_methods();
    var _ciinfo = _interop_require_wildcard(require_ci_info2());
    var _apppaths = require_app_paths();
    var _denormalizeapppath = require_denormalize_app_path();
    var _routekind = require_route_kind();
    var _checks = require_checks();
    var _interopdefault = require_interop_default();
    var _formatdynamicimportpath = require_format_dynamic_import_path();
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interop_require_wildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
          default: obj
        };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj.default = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    var print = console.log;
    var RESERVED_PAGE = /^\/(_app|_error|_document|api(\/|$))/;
    var fileGzipStats = {};
    var fsStatGzip = (file) => {
      const cached = fileGzipStats[file];
      if (cached)
        return cached;
      return fileGzipStats[file] = _gzipsize.default.file(file);
    };
    var fileSize = async (file) => (await _fs.promises.stat(file)).size;
    var fileStats = {};
    var fsStat = (file) => {
      const cached = fileStats[file];
      if (cached)
        return cached;
      return fileStats[file] = fileSize(file);
    };
    function unique(main, sub) {
      return [
        .../* @__PURE__ */ new Set([
          ...main,
          ...sub
        ])
      ];
    }
    function difference(main, sub) {
      const a = new Set(main);
      const b = new Set(sub);
      return [
        ...a
      ].filter((x) => !b.has(x));
    }
    function intersect(main, sub) {
      const a = new Set(main);
      const b = new Set(sub);
      return [
        ...new Set([
          ...a
        ].filter((x) => b.has(x)))
      ];
    }
    function sum(a) {
      return a.reduce((size, stat) => size + stat, 0);
    }
    var cachedBuildManifest;
    var cachedAppBuildManifest;
    var lastCompute;
    var lastComputePageInfo;
    async function computeFromManifest(manifests, distPath, gzipSize = true, pageInfos) {
      var _manifests_app, _files_app;
      if (Object.is(cachedBuildManifest, manifests.build) && lastComputePageInfo === !!pageInfos && Object.is(cachedAppBuildManifest, manifests.app)) {
        return lastCompute;
      }
      const countBuildFiles = (map, key, manifest) => {
        for (const file of manifest[key]) {
          if (key === "/_app") {
            map.set(file, Infinity);
          } else if (map.has(file)) {
            map.set(file, map.get(file) + 1);
          } else {
            map.set(file, 1);
          }
        }
      };
      const files = {
        pages: {
          each: /* @__PURE__ */ new Map(),
          expected: 0
        }
      };
      for (const key in manifests.build.pages) {
        if (pageInfos) {
          const pageInfo = pageInfos.get(key);
          if (pageInfo == null ? void 0 : pageInfo.isHybridAmp) {
            continue;
          }
        }
        files.pages.expected++;
        countBuildFiles(files.pages.each, key, manifests.build.pages);
      }
      if ((_manifests_app = manifests.app) == null ? void 0 : _manifests_app.pages) {
        files.app = {
          each: /* @__PURE__ */ new Map(),
          expected: 0
        };
        for (const key in manifests.app.pages) {
          files.app.expected++;
          countBuildFiles(files.app.each, key, manifests.app.pages);
        }
      }
      const getSize = gzipSize ? fsStatGzip : fsStat;
      const stats2 = /* @__PURE__ */ new Map();
      await Promise.all([
        .../* @__PURE__ */ new Set([
          ...files.pages.each.keys(),
          ...((_files_app = files.app) == null ? void 0 : _files_app.each.keys()) ?? []
        ])
      ].map(async (f) => {
        try {
          stats2.set(f, await getSize(_path.default.join(distPath, f)));
        } catch {
        }
      }));
      const groupFiles = async (listing) => {
        const entries = [
          ...listing.each.entries()
        ];
        const shapeGroup = (group) => group.reduce((acc, [f]) => {
          acc.files.push(f);
          const size = stats2.get(f);
          if (typeof size === "number") {
            acc.size.total += size;
          }
          return acc;
        }, {
          files: [],
          size: {
            total: 0
          }
        });
        return {
          unique: shapeGroup(entries.filter(([, len]) => len === 1)),
          common: shapeGroup(entries.filter(([, len]) => len === listing.expected || len === Infinity))
        };
      };
      lastCompute = {
        router: {
          pages: await groupFiles(files.pages),
          app: files.app ? await groupFiles(files.app) : void 0
        },
        sizes: stats2
      };
      cachedBuildManifest = manifests.build;
      cachedAppBuildManifest = manifests.app;
      lastComputePageInfo = !!pageInfos;
      return lastCompute;
    }
    function isMiddlewareFilename(file) {
      return file === _constants.MIDDLEWARE_FILENAME || file === `src/${_constants.MIDDLEWARE_FILENAME}`;
    }
    function isInstrumentationHookFilename(file) {
      return file === _constants.INSTRUMENTATION_HOOK_FILENAME || file === `src/${_constants.INSTRUMENTATION_HOOK_FILENAME}`;
    }
    var filterAndSortList = (list, routeType, hasCustomApp) => {
      let pages;
      if (routeType === "app") {
        pages = list.filter((e) => e !== "/favicon.ico");
      } else {
        pages = list.slice().filter((e) => !(e === "/_document" || e === "/_error" || !hasCustomApp && e === "/_app"));
      }
      return pages.sort((a, b) => a.localeCompare(b));
    };
    function serializePageInfos(input) {
      return Array.from(input.entries());
    }
    function deserializePageInfos(input) {
      return new Map(input);
    }
    async function printTreeView(lists, pageInfos, { distPath, buildId, pagesDir, pageExtensions, buildManifest, appBuildManifest, middlewareManifest, useStaticPages404, gzipSize = true }) {
      var _lists_app, _middlewareManifest_middleware;
      const getPrettySize = (_size) => {
        const size = (0, _prettybytes.default)(_size);
        return (0, _picocolors.white)((0, _picocolors.bold)(size));
      };
      const MIN_DURATION = 300;
      const getPrettyDuration = (_duration) => {
        const duration = `${_duration} ms`;
        if (_duration < 1e3)
          return (0, _picocolors.green)(duration);
        if (_duration < 2e3)
          return (0, _picocolors.yellow)(duration);
        return (0, _picocolors.red)((0, _picocolors.bold)(duration));
      };
      const getCleanName = (fileName) => fileName.replace(/^static\//, "").replace(/^<buildId>/, "static").replace(/(?:^|[.-])([0-9a-z]{6})[0-9a-z]{14}(?=\.)/, ".$1");
      const hasCustomApp = !!(pagesDir && await (0, _findpagefile.findPageFile)(pagesDir, "/_app", pageExtensions, false));
      const usedSymbols = /* @__PURE__ */ new Set();
      const messages = [];
      const stats2 = await computeFromManifest({
        build: buildManifest,
        app: appBuildManifest
      }, distPath, gzipSize, pageInfos);
      const printFileTree = async ({ list, routerType }) => {
        var _stats_router_routerType, _stats_router_routerType1;
        const filteredPages = filterAndSortList(list, routerType, hasCustomApp);
        if (filteredPages.length === 0) {
          return;
        }
        messages.push([
          routerType === "app" ? "Route (app)" : "Route (pages)",
          "Size",
          "First Load JS"
        ].map((entry) => (0, _picocolors.underline)(entry)));
        filteredPages.forEach((item2, i, arr) => {
          var _pageInfo_ssgPageDurations, _buildManifest_pages_item, _pageInfo_ssgPageRoutes;
          const border = i === 0 ? arr.length === 1 ? "─" : "┌" : i === arr.length - 1 ? "└" : "├";
          const pageInfo = pageInfos.get(item2);
          const ampFirst = buildManifest.ampFirstPages.includes(item2);
          const totalDuration = ((pageInfo == null ? void 0 : pageInfo.pageDuration) || 0) + ((pageInfo == null ? void 0 : (_pageInfo_ssgPageDurations = pageInfo.ssgPageDurations) == null ? void 0 : _pageInfo_ssgPageDurations.reduce((a, b) => a + (b || 0), 0)) || 0);
          let symbol;
          if (item2 === "/_app" || item2 === "/_app.server") {
            symbol = " ";
          } else if ((0, _isedgeruntime.isEdgeRuntime)(pageInfo == null ? void 0 : pageInfo.runtime)) {
            symbol = "ℇ";
          } else if (pageInfo == null ? void 0 : pageInfo.isPPR) {
            if (
              // If the page has an empty prelude, then it's equivalent to a dynamic page
              (pageInfo == null ? void 0 : pageInfo.hasEmptyPrelude) || // ensure we don't mark dynamic paths that postponed as being dynamic
              // since in this case we're able to partially prerender it
              pageInfo.isDynamicAppRoute && !pageInfo.hasPostponed
            ) {
              symbol = "λ";
            } else if (!(pageInfo == null ? void 0 : pageInfo.hasPostponed)) {
              symbol = "○";
            } else {
              symbol = "◐";
            }
          } else if (pageInfo == null ? void 0 : pageInfo.isStatic) {
            symbol = "○";
          } else if (pageInfo == null ? void 0 : pageInfo.isSSG) {
            symbol = "●";
          } else {
            symbol = "λ";
          }
          usedSymbols.add(symbol);
          if (pageInfo == null ? void 0 : pageInfo.initialRevalidateSeconds)
            usedSymbols.add("ISR");
          messages.push([
            `${border} ${symbol} ${(pageInfo == null ? void 0 : pageInfo.initialRevalidateSeconds) ? `${item2} (ISR: ${pageInfo == null ? void 0 : pageInfo.initialRevalidateSeconds} Seconds)` : item2}${totalDuration > MIN_DURATION ? ` (${getPrettyDuration(totalDuration)})` : ""}`,
            pageInfo ? ampFirst ? (0, _picocolors.cyan)("AMP") : pageInfo.size >= 0 ? (0, _prettybytes.default)(pageInfo.size) : "" : "",
            pageInfo ? ampFirst ? (0, _picocolors.cyan)("AMP") : pageInfo.size >= 0 ? getPrettySize(pageInfo.totalSize) : "" : ""
          ]);
          const uniqueCssFiles = ((_buildManifest_pages_item = buildManifest.pages[item2]) == null ? void 0 : _buildManifest_pages_item.filter((file) => {
            var _stats_router_routerType2;
            return file.endsWith(".css") && ((_stats_router_routerType2 = stats2.router[routerType]) == null ? void 0 : _stats_router_routerType2.unique.files.includes(file));
          })) || [];
          if (uniqueCssFiles.length > 0) {
            const contSymbol = i === arr.length - 1 ? " " : "├";
            uniqueCssFiles.forEach((file, index, { length }) => {
              const innerSymbol = index === length - 1 ? "└" : "├";
              const size = stats2.sizes.get(file);
              messages.push([
                `${contSymbol}   ${innerSymbol} ${getCleanName(file)}`,
                typeof size === "number" ? (0, _prettybytes.default)(size) : "",
                ""
              ]);
            });
          }
          if (pageInfo == null ? void 0 : (_pageInfo_ssgPageRoutes = pageInfo.ssgPageRoutes) == null ? void 0 : _pageInfo_ssgPageRoutes.length) {
            const totalRoutes = pageInfo.ssgPageRoutes.length;
            const contSymbol = i === arr.length - 1 ? " " : "├";
            let routes;
            if (pageInfo.ssgPageDurations && pageInfo.ssgPageDurations.some((d) => d > MIN_DURATION)) {
              const previewPages = totalRoutes === 8 ? 8 : Math.min(totalRoutes, 7);
              const routesWithDuration = pageInfo.ssgPageRoutes.map((route, idx) => ({
                route,
                duration: pageInfo.ssgPageDurations[idx] || 0
              })).sort(({ duration: a }, { duration: b }) => (
                // Sort by duration
                // keep too small durations in original order at the end
                a <= MIN_DURATION && b <= MIN_DURATION ? 0 : b - a
              ));
              routes = routesWithDuration.slice(0, previewPages);
              const remainingRoutes = routesWithDuration.slice(previewPages);
              if (remainingRoutes.length) {
                const remaining = remainingRoutes.length;
                const avgDuration = Math.round(remainingRoutes.reduce((total, { duration }) => total + duration, 0) / remainingRoutes.length);
                routes.push({
                  route: `[+${remaining} more paths]`,
                  duration: 0,
                  avgDuration
                });
              }
            } else {
              const previewPages = totalRoutes === 4 ? 4 : Math.min(totalRoutes, 3);
              routes = pageInfo.ssgPageRoutes.slice(0, previewPages).map((route) => ({
                route,
                duration: 0
              }));
              if (totalRoutes > previewPages) {
                const remaining = totalRoutes - previewPages;
                routes.push({
                  route: `[+${remaining} more paths]`,
                  duration: 0
                });
              }
            }
            routes.forEach(({ route, duration, avgDuration }, index, { length }) => {
              const innerSymbol = index === length - 1 ? "└" : "├";
              messages.push([
                `${contSymbol}   ${innerSymbol} ${route}${duration > MIN_DURATION ? ` (${getPrettyDuration(duration)})` : ""}${avgDuration && avgDuration > MIN_DURATION ? ` (avg ${getPrettyDuration(avgDuration)})` : ""}`,
                "",
                ""
              ]);
            });
          }
        });
        const sharedFilesSize = (_stats_router_routerType = stats2.router[routerType]) == null ? void 0 : _stats_router_routerType.common.size.total;
        const sharedFiles = ((_stats_router_routerType1 = stats2.router[routerType]) == null ? void 0 : _stats_router_routerType1.common.files) ?? [];
        messages.push([
          "+ First Load JS shared by all",
          typeof sharedFilesSize === "number" ? getPrettySize(sharedFilesSize) : "",
          ""
        ]);
        const sharedCssFiles = [];
        const sharedJsChunks = [
          ...sharedFiles.filter((file) => {
            if (file.endsWith(".css")) {
              sharedCssFiles.push(file);
              return false;
            }
            return true;
          }).map((e) => e.replace(buildId, "<buildId>")).sort(),
          ...sharedCssFiles.map((e) => e.replace(buildId, "<buildId>")).sort()
        ];
        const tenKbLimit = 10 * 1e3;
        let restChunkSize = 0;
        let restChunkCount = 0;
        sharedJsChunks.forEach((fileName, index, { length }) => {
          const innerSymbol = index + restChunkCount === length - 1 ? "└" : "├";
          const originalName = fileName.replace("<buildId>", buildId);
          const cleanName = getCleanName(fileName);
          const size = stats2.sizes.get(originalName);
          if (!size || size < tenKbLimit) {
            restChunkCount++;
            restChunkSize += size || 0;
            return;
          }
          messages.push([
            `  ${innerSymbol} ${cleanName}`,
            (0, _prettybytes.default)(size),
            ""
          ]);
        });
        if (restChunkCount > 0) {
          messages.push([
            `  └ other shared chunks (total)`,
            (0, _prettybytes.default)(restChunkSize),
            ""
          ]);
        }
      };
      if (lists.app && stats2.router.app) {
        await printFileTree({
          routerType: "app",
          list: lists.app
        });
        messages.push([
          "",
          "",
          ""
        ]);
      }
      pageInfos.set("/404", {
        ...pageInfos.get("/404") || pageInfos.get("/_error"),
        isStatic: useStaticPages404
      });
      if (!lists.pages.includes("/404") && !((_lists_app = lists.app) == null ? void 0 : _lists_app.includes("/_not-found"))) {
        lists.pages = [
          ...lists.pages,
          "/404"
        ];
      }
      await printFileTree({
        routerType: "pages",
        list: lists.pages
      });
      const middlewareInfo = (_middlewareManifest_middleware = middlewareManifest.middleware) == null ? void 0 : _middlewareManifest_middleware["/"];
      if ((middlewareInfo == null ? void 0 : middlewareInfo.files.length) > 0) {
        const middlewareSizes = await Promise.all(middlewareInfo.files.map((dep) => `${distPath}/${dep}`).map(gzipSize ? fsStatGzip : fsStat));
        messages.push([
          "",
          "",
          ""
        ]);
        messages.push([
          "ƒ Middleware",
          getPrettySize(sum(middlewareSizes)),
          ""
        ]);
      }
      print((0, _texttable.default)(messages, {
        align: [
          "l",
          "l",
          "r"
        ],
        stringLength: (str) => (0, _stripansi.default)(str).length
      }));
      print();
      print((0, _texttable.default)([
        usedSymbols.has("○") && [
          "○",
          "(Static)",
          "prerendered as static content"
        ],
        usedSymbols.has("●") && [
          "●",
          "(SSG)",
          `prerendered as static HTML (uses ${(0, _picocolors.cyan)("getStaticProps")})`
        ],
        usedSymbols.has("ISR") && [
          "",
          "(ISR)",
          `incremental static regeneration (uses revalidate in ${(0, _picocolors.cyan)("getStaticProps")})`
        ],
        usedSymbols.has("◐") && [
          "◐",
          "(Partial Prerender)",
          "prerendered as static HTML with dynamic server-streamed content"
        ],
        usedSymbols.has("λ") && [
          "λ",
          "(Dynamic)",
          `server-rendered on demand using Node.js`
        ],
        usedSymbols.has("ℇ") && [
          "ℇ",
          "(Edge Runtime)",
          `server-rendered on demand using the Edge Runtime`
        ]
      ].filter((x) => x), {
        align: [
          "l",
          "l",
          "l"
        ],
        stringLength: (str) => (0, _stripansi.default)(str).length
      }));
      print();
    }
    function printCustomRoutes({ redirects, rewrites, headers }) {
      const printRoutes = (routes, type) => {
        const isRedirects = type === "Redirects";
        const isHeaders = type === "Headers";
        print((0, _picocolors.underline)(type));
        print();
        const routesStr = routes.map((route) => {
          let routeStr = `┌ source: ${route.source}
`;
          if (!isHeaders) {
            const r = route;
            routeStr += `${isRedirects ? "├" : "└"} destination: ${r.destination}
`;
          }
          if (isRedirects) {
            const r = route;
            routeStr += `└ ${r.statusCode ? `status: ${r.statusCode}` : `permanent: ${r.permanent}`}
`;
          }
          if (isHeaders) {
            const r = route;
            routeStr += `└ headers:
`;
            for (let i = 0; i < r.headers.length; i++) {
              const header = r.headers[i];
              const last = i === headers.length - 1;
              routeStr += `  ${last ? "└" : "├"} ${header.key}: ${header.value}
`;
            }
          }
          return routeStr;
        }).join("\n");
        print(routesStr, "\n");
      };
      if (redirects.length) {
        printRoutes(redirects, "Redirects");
      }
      if (headers.length) {
        printRoutes(headers, "Headers");
      }
      const combinedRewrites = [
        ...rewrites.beforeFiles,
        ...rewrites.afterFiles,
        ...rewrites.fallback
      ];
      if (combinedRewrites.length) {
        printRoutes(combinedRewrites, "Rewrites");
      }
    }
    async function getJsPageSizeInKb(routerType, page, distPath, buildManifest, appBuildManifest, gzipSize = true, cachedStats) {
      const pageManifest = routerType === "pages" ? buildManifest : appBuildManifest;
      if (!pageManifest) {
        throw new Error('expected appBuildManifest with an "app" pageType');
      }
      if (routerType === "app") {
        pageManifest.pages = Object.entries(pageManifest.pages).reduce((acc, [key, value]) => {
          const newKey = (0, _apppaths.normalizeAppPath)(key);
          acc[newKey] = value;
          return acc;
        }, {});
      }
      const stats2 = cachedStats ?? await computeFromManifest({
        build: buildManifest,
        app: appBuildManifest
      }, distPath, gzipSize);
      const pageData = stats2.router[routerType];
      if (!pageData) {
        throw new Error('expected "app" manifest data with an "app" pageType');
      }
      const pagePath = routerType === "pages" ? (0, _denormalizepagepath.denormalizePagePath)(page) : (0, _denormalizeapppath.denormalizeAppPagePath)(page);
      const fnFilterJs = (entry) => entry.endsWith(".js");
      const pageFiles = (pageManifest.pages[pagePath] ?? []).filter(fnFilterJs);
      const appFiles = (pageManifest.pages["/_app"] ?? []).filter(fnFilterJs);
      const fnMapRealPath = (dep) => `${distPath}/${dep}`;
      const allFilesReal = unique(pageFiles, appFiles).map(fnMapRealPath);
      const selfFilesReal = difference(
        // Find the files shared by the pages files and the unique files...
        intersect(pageFiles, pageData.unique.files),
        // but without the common files.
        pageData.common.files
      ).map(fnMapRealPath);
      const getSize = gzipSize ? fsStatGzip : fsStat;
      const getCachedSize = async (file) => {
        const key = file.slice(distPath.length + 1);
        const size = stats2.sizes.get(key);
        if (typeof size !== "number") {
          return getSize(file);
        }
        return size;
      };
      try {
        const allFilesSize = sum(await Promise.all(allFilesReal.map(getCachedSize)));
        const selfFilesSize = sum(await Promise.all(selfFilesReal.map(getCachedSize)));
        return [
          selfFilesSize,
          allFilesSize
        ];
      } catch {
      }
      return [
        -1,
        -1
      ];
    }
    async function buildStaticPaths({ page, getStaticPaths, staticPathsResult, configFileName, locales, defaultLocale, appDir }) {
      const prerenderPaths = /* @__PURE__ */ new Set();
      const encodedPrerenderPaths = /* @__PURE__ */ new Set();
      const _routeRegex = (0, _routeregex.getRouteRegex)(page);
      const _routeMatcher = (0, _routematcher.getRouteMatcher)(_routeRegex);
      const _validParamKeys = Object.keys(_routeMatcher(page));
      if (!staticPathsResult) {
        if (getStaticPaths) {
          staticPathsResult = await getStaticPaths({
            locales,
            defaultLocale
          });
        } else {
          throw new Error(`invariant: attempted to buildStaticPaths without "staticPathsResult" or "getStaticPaths" ${page}`);
        }
      }
      const expectedReturnVal = `Expected: { paths: [], fallback: boolean }
See here for more info: https://nextjs.org/docs/messages/invalid-getstaticpaths-value`;
      if (!staticPathsResult || typeof staticPathsResult !== "object" || Array.isArray(staticPathsResult)) {
        throw new Error(`Invalid value returned from getStaticPaths in ${page}. Received ${typeof staticPathsResult} ${expectedReturnVal}`);
      }
      const invalidStaticPathKeys = Object.keys(staticPathsResult).filter((key) => !(key === "paths" || key === "fallback"));
      if (invalidStaticPathKeys.length > 0) {
        throw new Error(`Extra keys returned from getStaticPaths in ${page} (${invalidStaticPathKeys.join(", ")}) ${expectedReturnVal}`);
      }
      if (!(typeof staticPathsResult.fallback === "boolean" || staticPathsResult.fallback === "blocking")) {
        throw new Error(`The \`fallback\` key must be returned from getStaticPaths in ${page}.
` + expectedReturnVal);
      }
      const toPrerender = staticPathsResult.paths;
      if (!Array.isArray(toPrerender)) {
        throw new Error(`Invalid \`paths\` value returned from getStaticPaths in ${page}.
\`paths\` must be an array of strings or objects of shape { params: [key: string]: string }`);
      }
      toPrerender.forEach((entry) => {
        if (typeof entry === "string") {
          entry = (0, _removetrailingslash.removeTrailingSlash)(entry);
          const localePathResult = (0, _normalizelocalepath.normalizeLocalePath)(entry, locales);
          let cleanedEntry = entry;
          if (localePathResult.detectedLocale) {
            cleanedEntry = entry.slice(localePathResult.detectedLocale.length + 1);
          } else if (defaultLocale) {
            entry = `/${defaultLocale}${entry}`;
          }
          const result = _routeMatcher(cleanedEntry);
          if (!result) {
            throw new Error(`The provided path \`${cleanedEntry}\` does not match the page: \`${page}\`.`);
          }
          prerenderPaths.add(entry.split("/").map((segment) => (0, _escapepathdelimiters.default)(decodeURIComponent(segment), true)).join("/"));
          encodedPrerenderPaths.add(entry);
        } else {
          const invalidKeys = Object.keys(entry).filter((key) => key !== "params" && key !== "locale");
          if (invalidKeys.length) {
            throw new Error(`Additional keys were returned from \`getStaticPaths\` in page "${page}". URL Parameters intended for this dynamic route must be nested under the \`params\` key, i.e.:

	return { params: { ${_validParamKeys.map((k) => `${k}: ...`).join(", ")} } }

Keys that need to be moved: ${invalidKeys.join(", ")}.
`);
          }
          const { params: params2 = {} } = entry;
          let builtPage = page;
          let encodedBuiltPage = page;
          _validParamKeys.forEach((validParamKey) => {
            const { repeat, optional } = _routeRegex.groups[validParamKey];
            let paramValue = params2[validParamKey];
            if (optional && params2.hasOwnProperty(validParamKey) && (paramValue === null || paramValue === void 0 || paramValue === false)) {
              paramValue = [];
            }
            if (repeat && !Array.isArray(paramValue) || !repeat && typeof paramValue !== "string") {
              if (appDir && typeof paramValue === "undefined") {
                builtPage = "";
                encodedBuiltPage = "";
                return;
              }
              throw new Error(`A required parameter (${validParamKey}) was not provided as ${repeat ? "an array" : "a string"} received ${typeof paramValue} in ${appDir ? "generateStaticParams" : "getStaticPaths"} for ${page}`);
            }
            let replaced = `[${repeat ? "..." : ""}${validParamKey}]`;
            if (optional) {
              replaced = `[${replaced}]`;
            }
            builtPage = builtPage.replace(replaced, repeat ? paramValue.map((segment) => (0, _escapepathdelimiters.default)(segment, true)).join("/") : (0, _escapepathdelimiters.default)(paramValue, true)).replace(/\\/g, "/").replace(/(?!^)\/$/, "");
            encodedBuiltPage = encodedBuiltPage.replace(replaced, repeat ? paramValue.map(encodeURIComponent).join("/") : encodeURIComponent(paramValue)).replace(/\\/g, "/").replace(/(?!^)\/$/, "");
          });
          if (!builtPage && !encodedBuiltPage) {
            return;
          }
          if (entry.locale && !(locales == null ? void 0 : locales.includes(entry.locale))) {
            throw new Error(`Invalid locale returned from getStaticPaths for ${page}, the locale ${entry.locale} is not specified in ${configFileName}`);
          }
          const curLocale = entry.locale || defaultLocale || "";
          prerenderPaths.add(`${curLocale ? `/${curLocale}` : ""}${curLocale && builtPage === "/" ? "" : builtPage}`);
          encodedPrerenderPaths.add(`${curLocale ? `/${curLocale}` : ""}${curLocale && encodedBuiltPage === "/" ? "" : encodedBuiltPage}`);
        }
      });
      return {
        paths: [
          ...prerenderPaths
        ],
        fallback: staticPathsResult.fallback,
        encodedPaths: [
          ...encodedPrerenderPaths
        ]
      };
    }
    var collectAppConfig = (mod) => {
      let hasConfig = false;
      const config = {};
      if (typeof (mod == null ? void 0 : mod.revalidate) !== "undefined") {
        config.revalidate = mod.revalidate;
        hasConfig = true;
      }
      if (typeof (mod == null ? void 0 : mod.dynamicParams) !== "undefined") {
        config.dynamicParams = mod.dynamicParams;
        hasConfig = true;
      }
      if (typeof (mod == null ? void 0 : mod.dynamic) !== "undefined") {
        config.dynamic = mod.dynamic;
        hasConfig = true;
      }
      if (typeof (mod == null ? void 0 : mod.fetchCache) !== "undefined") {
        config.fetchCache = mod.fetchCache;
        hasConfig = true;
      }
      if (typeof (mod == null ? void 0 : mod.preferredRegion) !== "undefined") {
        config.preferredRegion = mod.preferredRegion;
        hasConfig = true;
      }
      return hasConfig ? config : void 0;
    };
    async function collectGenerateParams(tree) {
      const generateParams = [];
      const parentSegments = [];
      let currentLoaderTree = tree;
      while (currentLoaderTree) {
        var _components_layout_, _components_layout, _components_page_, _components_page;
        const [
          // TODO: check if this is ever undefined
          page = "",
          parallelRoutes,
          components
        ] = currentLoaderTree;
        if (!components)
          continue;
        const isLayout = !!components.layout;
        const mod = await (isLayout ? (_components_layout = components.layout) == null ? void 0 : (_components_layout_ = _components_layout[0]) == null ? void 0 : _components_layout_.call(_components_layout) : (_components_page = components.page) == null ? void 0 : (_components_page_ = _components_page[0]) == null ? void 0 : _components_page_.call(_components_page));
        if (page) {
          parentSegments.push(page);
        }
        const config = mod ? collectAppConfig(mod) : void 0;
        const isClientComponent = (0, _clientreference.isClientReference)(mod);
        const isDynamicSegment = /^\[.+\]$/.test(page);
        const { generateStaticParams, getStaticPaths } = mod || {};
        if (isDynamicSegment && isClientComponent && generateStaticParams) {
          throw new Error(`Page "${page}" cannot export "generateStaticParams()" because it is a client component`);
        }
        const segmentPath = `/${parentSegments.join("/")}${page && parentSegments.length > 0 ? "/" : ""}${page}`;
        const result = {
          isLayout,
          isDynamicSegment,
          segmentPath,
          config,
          getStaticPaths: !isClientComponent ? getStaticPaths : void 0,
          generateStaticParams: !isClientComponent ? generateStaticParams : void 0
        };
        if (result.config || result.generateStaticParams || result.getStaticPaths || isDynamicSegment) {
          generateParams.push(result);
        }
        currentLoaderTree = parallelRoutes.children;
      }
      return generateParams;
    }
    async function buildAppStaticPaths({ dir, page, distDir, configFileName, generateParams, isrFlushToDisk, cacheHandler, requestHeaders, maxMemoryCacheSize, fetchCacheKeyPrefix, ppr, ComponentMod }) {
      ComponentMod.patchFetch();
      let CacheHandler;
      if (cacheHandler) {
        CacheHandler = (0, _interopdefault.interopDefault)(await import((0, _formatdynamicimportpath.formatDynamicImportPath)(dir, cacheHandler)).then((mod) => mod.default || mod));
      }
      const incrementalCache = new _incrementalcache.IncrementalCache({
        fs: _nodefsmethods.nodeFs,
        dev: true,
        // Enabled both for build as we're only writing this cache, not reading it.
        pagesDir: true,
        appDir: true,
        flushToDisk: isrFlushToDisk,
        serverDistDir: _path.default.join(distDir, "server"),
        fetchCacheKeyPrefix,
        maxMemoryCacheSize,
        getPrerenderManifest: () => ({
          version: -1,
          routes: {},
          dynamicRoutes: {},
          notFoundRoutes: [],
          preview: null
        }),
        CurCacheHandler: CacheHandler,
        requestHeaders,
        minimalMode: _ciinfo.hasNextSupport,
        experimental: {
          ppr
        }
      });
      return _staticgenerationasyncstoragewrapper.StaticGenerationAsyncStorageWrapper.wrap(ComponentMod.staticGenerationAsyncStorage, {
        urlPathname: page,
        renderOpts: {
          originalPathname: page,
          incrementalCache,
          supportsDynamicHTML: true,
          isRevalidate: false,
          isBot: false,
          // building static paths should never postpone
          experimental: {
            ppr: false
          }
        }
      }, async () => {
        const pageEntry = generateParams[generateParams.length - 1];
        if (typeof (pageEntry == null ? void 0 : pageEntry.getStaticPaths) === "function") {
          return buildStaticPaths({
            page,
            configFileName,
            getStaticPaths: pageEntry.getStaticPaths
          });
        } else {
          let hadAllParamsGenerated = false;
          const buildParams = async (paramsItems = [
            {}
          ], idx = 0) => {
            const curGenerate = generateParams[idx];
            if (idx === generateParams.length) {
              return paramsItems;
            }
            if (typeof curGenerate.generateStaticParams !== "function" && idx < generateParams.length) {
              if (curGenerate.isDynamicSegment) {
                hadAllParamsGenerated = false;
              }
              return buildParams(paramsItems, idx + 1);
            }
            hadAllParamsGenerated = true;
            const newParams = [];
            if (curGenerate.generateStaticParams) {
              for (const params2 of paramsItems) {
                const result = await curGenerate.generateStaticParams({
                  params: params2
                });
                for (const item2 of result) {
                  newParams.push({
                    ...params2,
                    ...item2
                  });
                }
              }
            }
            if (idx < generateParams.length) {
              return buildParams(newParams, idx + 1);
            }
            return newParams;
          };
          const builtParams = await buildParams();
          const fallback = !generateParams.some(
            // TODO: dynamic params should be allowed
            // to be granular per segment but we need
            // additional information stored/leveraged in
            // the prerender-manifest to allow this behavior
            (generate) => {
              var _generate_config;
              return ((_generate_config = generate.config) == null ? void 0 : _generate_config.dynamicParams) === false;
            }
          );
          if (!hadAllParamsGenerated) {
            return {
              paths: void 0,
              fallback: false ? true : void 0,
              encodedPaths: void 0
            };
          }
          return buildStaticPaths({
            staticPathsResult: {
              fallback,
              paths: builtParams.map((params2) => ({
                params: params2
              }))
            },
            page,
            configFileName,
            appDir: true
          });
        }
      });
    }
    async function isPageStatic({ dir, page, distDir, configFileName, runtimeEnvConfig, httpAgentOptions, locales, defaultLocale, parentId, pageRuntime, edgeInfo, pageType, originalAppPath, isrFlushToDisk, maxMemoryCacheSize, cacheHandler, ppr }) {
      const isPageStaticSpan = (0, _trace.trace)("is-page-static-utils", parentId);
      return isPageStaticSpan.traceAsyncFn(async () => {
        var _componentsResult_ComponentMod;
        require_runtime_config_external().setConfig(runtimeEnvConfig);
        (0, _setuphttpagentenv.setHttpClientAndAgentOptions)({
          httpAgentOptions
        });
        let componentsResult;
        let prerenderRoutes;
        let encodedPrerenderRoutes;
        let prerenderFallback;
        let appConfig = {};
        let isClientComponent = false;
        const pathIsEdgeRuntime = (0, _isedgeruntime.isEdgeRuntime)(pageRuntime);
        if (pathIsEdgeRuntime) {
          const runtime = await (0, _sandbox.getRuntimeContext)({
            paths: edgeInfo.files.map((file) => _path.default.join(distDir, file)),
            edgeFunctionEntry: {
              ...edgeInfo,
              wasm: (edgeInfo.wasm ?? []).map((binding) => ({
                ...binding,
                filePath: _path.default.join(distDir, binding.filePath)
              }))
            },
            name: edgeInfo.name,
            useCache: true,
            distDir
          });
          const mod = runtime.context._ENTRIES[`middleware_${edgeInfo.name}`].ComponentMod;
          isClientComponent = (0, _clientreference.isClientReference)(mod);
          componentsResult = {
            Component: mod.default,
            ComponentMod: mod,
            pageConfig: mod.config || {},
            // @ts-expect-error this is not needed during require
            buildManifest: {},
            reactLoadableManifest: {},
            getServerSideProps: mod.getServerSideProps,
            getStaticPaths: mod.getStaticPaths,
            getStaticProps: mod.getStaticProps
          };
        } else {
          componentsResult = await (0, _loadcomponents.loadComponents)({
            distDir,
            page: originalAppPath || page,
            isAppPath: pageType === "app"
          });
        }
        const Comp = componentsResult.Component;
        let staticPathsResult;
        const routeModule = (_componentsResult_ComponentMod = componentsResult.ComponentMod) == null ? void 0 : _componentsResult_ComponentMod.routeModule;
        if (pageType === "app") {
          const ComponentMod = componentsResult.ComponentMod;
          isClientComponent = (0, _clientreference.isClientReference)(componentsResult.ComponentMod);
          const { tree } = ComponentMod;
          const generateParams = routeModule && (0, _checks.isAppRouteRouteModule)(routeModule) ? [
            {
              config: {
                revalidate: routeModule.userland.revalidate,
                dynamic: routeModule.userland.dynamic,
                dynamicParams: routeModule.userland.dynamicParams
              },
              generateStaticParams: routeModule.userland.generateStaticParams,
              segmentPath: page
            }
          ] : await collectGenerateParams(tree);
          appConfig = generateParams.reduce((builtConfig, curGenParams) => {
            const { dynamic, fetchCache, preferredRegion, revalidate: curRevalidate } = (curGenParams == null ? void 0 : curGenParams.config) || {};
            if (typeof builtConfig.preferredRegion === "undefined") {
              builtConfig.preferredRegion = preferredRegion;
            }
            if (typeof builtConfig.dynamic === "undefined") {
              builtConfig.dynamic = dynamic;
            }
            if (typeof builtConfig.fetchCache === "undefined") {
              builtConfig.fetchCache = fetchCache;
            }
            if (typeof builtConfig.revalidate === "undefined") {
              builtConfig.revalidate = curRevalidate;
            }
            if (typeof curRevalidate === "number" && (typeof builtConfig.revalidate !== "number" || curRevalidate < builtConfig.revalidate)) {
              builtConfig.revalidate = curRevalidate;
            }
            return builtConfig;
          }, {});
          if (appConfig.dynamic === "force-static" && pathIsEdgeRuntime) {
            _log.warn(`Page "${page}" is using runtime = 'edge' which is currently incompatible with dynamic = 'force-static'. Please remove either "runtime" or "force-static" for correct behavior`);
          }
          if (appConfig.dynamic === "force-dynamic" && !ppr) {
            appConfig.revalidate = 0;
          }
          if ((0, _isdynamic.isDynamicRoute)(page)) {
            ({ paths: prerenderRoutes, fallback: prerenderFallback, encodedPaths: encodedPrerenderRoutes } = await buildAppStaticPaths({
              dir,
              page,
              configFileName,
              generateParams,
              distDir,
              requestHeaders: {},
              isrFlushToDisk,
              maxMemoryCacheSize,
              cacheHandler,
              ppr,
              ComponentMod
            }));
          }
        } else {
          if (!Comp || !(0, _reactis.isValidElementType)(Comp) || typeof Comp === "string") {
            throw new Error("INVALID_DEFAULT_EXPORT");
          }
        }
        const hasGetInitialProps = !!(Comp == null ? void 0 : Comp.getInitialProps);
        const hasStaticProps = !!componentsResult.getStaticProps;
        const hasStaticPaths = !!componentsResult.getStaticPaths;
        const hasServerProps = !!componentsResult.getServerSideProps;
        if (hasGetInitialProps && hasStaticProps) {
          throw new Error(_constants.SSG_GET_INITIAL_PROPS_CONFLICT);
        }
        if (hasGetInitialProps && hasServerProps) {
          throw new Error(_constants.SERVER_PROPS_GET_INIT_PROPS_CONFLICT);
        }
        if (hasStaticProps && hasServerProps) {
          throw new Error(_constants.SERVER_PROPS_SSG_CONFLICT);
        }
        const pageIsDynamic = (0, _isdynamic.isDynamicRoute)(page);
        if (hasStaticProps && hasStaticPaths && !pageIsDynamic) {
          throw new Error(`getStaticPaths can only be used with dynamic pages, not '${page}'.
Learn more: https://nextjs.org/docs/routing/dynamic-routes`);
        }
        if (hasStaticProps && pageIsDynamic && !hasStaticPaths) {
          throw new Error(`getStaticPaths is required for dynamic SSG pages and is missing for '${page}'.
Read more: https://nextjs.org/docs/messages/invalid-getstaticpaths-value`);
        }
        if (hasStaticProps && hasStaticPaths || staticPathsResult) {
          ({ paths: prerenderRoutes, fallback: prerenderFallback, encodedPaths: encodedPrerenderRoutes } = await buildStaticPaths({
            page,
            locales,
            defaultLocale,
            configFileName,
            staticPathsResult,
            getStaticPaths: componentsResult.getStaticPaths
          }));
        }
        const isNextImageImported = globalThis.__NEXT_IMAGE_IMPORTED;
        const config = isClientComponent ? {} : componentsResult.pageConfig;
        if (config.unstable_includeFiles || config.unstable_excludeFiles) {
          _log.warn(`unstable_includeFiles/unstable_excludeFiles has been removed in favor of the option in next.config.js.
See more info here: https://nextjs.org/docs/advanced-features/output-file-tracing#caveats`);
        }
        let isStatic = false;
        if (!hasStaticProps && !hasGetInitialProps && !hasServerProps) {
          isStatic = true;
        }
        let isPPR = false;
        if (ppr && routeModule.definition.kind === _routekind.RouteKind.APP_PAGE) {
          isPPR = true;
          isStatic = true;
        }
        return {
          isStatic,
          isPPR,
          isHybridAmp: config.amp === "hybrid",
          isAmpOnly: config.amp === true,
          prerenderRoutes,
          prerenderFallback,
          encodedPrerenderRoutes,
          hasStaticProps,
          hasServerProps,
          isNextImageImported,
          appConfig
        };
      }).catch((err) => {
        if (err.message === "INVALID_DEFAULT_EXPORT") {
          throw err;
        }
        console.error(err);
        throw new Error(`Failed to collect page data for ${page}`);
      });
    }
    async function hasCustomGetInitialProps(page, distDir, runtimeEnvConfig, checkingApp) {
      require_runtime_config_external().setConfig(runtimeEnvConfig);
      const components = await (0, _loadcomponents.loadComponents)({
        distDir,
        page,
        isAppPath: false
      });
      let mod = components.ComponentMod;
      if (checkingApp) {
        mod = await mod._app || mod.default || mod;
      } else {
        mod = mod.default || mod;
      }
      mod = await mod;
      return mod.getInitialProps !== mod.origGetInitialProps;
    }
    async function getDefinedNamedExports(page, distDir, runtimeEnvConfig) {
      require_runtime_config_external().setConfig(runtimeEnvConfig);
      const components = await (0, _loadcomponents.loadComponents)({
        distDir,
        page,
        isAppPath: false
      });
      return Object.keys(components.ComponentMod).filter((key) => {
        return typeof components.ComponentMod[key] !== "undefined";
      });
    }
    function detectConflictingPaths(combinedPages, ssgPages, additionalSsgPaths) {
      const conflictingPaths = /* @__PURE__ */ new Map();
      const dynamicSsgPages = [
        ...ssgPages
      ].filter((page) => (0, _isdynamic.isDynamicRoute)(page));
      const additionalSsgPathsByPath = {};
      additionalSsgPaths.forEach((paths, pathsPage) => {
        additionalSsgPathsByPath[pathsPage] || (additionalSsgPathsByPath[pathsPage] = {});
        paths.forEach((curPath) => {
          const currentPath = curPath.toLowerCase();
          additionalSsgPathsByPath[pathsPage][currentPath] = curPath;
        });
      });
      additionalSsgPaths.forEach((paths, pathsPage) => {
        paths.forEach((curPath) => {
          const lowerPath = curPath.toLowerCase();
          let conflictingPage = combinedPages.find((page) => page.toLowerCase() === lowerPath);
          if (conflictingPage) {
            conflictingPaths.set(lowerPath, [
              {
                path: curPath,
                page: pathsPage
              },
              {
                path: conflictingPage,
                page: conflictingPage
              }
            ]);
          } else {
            let conflictingPath;
            conflictingPage = dynamicSsgPages.find((page) => {
              if (page === pathsPage)
                return false;
              conflictingPath = additionalSsgPaths.get(page) == null ? void 0 : additionalSsgPathsByPath[page][lowerPath];
              return conflictingPath;
            });
            if (conflictingPage && conflictingPath) {
              conflictingPaths.set(lowerPath, [
                {
                  path: curPath,
                  page: pathsPage
                },
                {
                  path: conflictingPath,
                  page: conflictingPage
                }
              ]);
            }
          }
        });
      });
      if (conflictingPaths.size > 0) {
        let conflictingPathsOutput = "";
        conflictingPaths.forEach((pathItems) => {
          pathItems.forEach((pathItem, idx) => {
            const isDynamic = pathItem.page !== pathItem.path;
            if (idx > 0) {
              conflictingPathsOutput += "conflicts with ";
            }
            conflictingPathsOutput += `path: "${pathItem.path}"${isDynamic ? ` from page: "${pathItem.page}" ` : " "}`;
          });
          conflictingPathsOutput += "\n";
        });
        _log.error("Conflicting paths returned from getStaticPaths, paths must be unique per page.\nSee more info here: https://nextjs.org/docs/messages/conflicting-ssg-paths\n\n" + conflictingPathsOutput);
        process.exit(1);
      }
    }
    async function copyTracedFiles(dir, distDir, pageKeys, appPageKeys, tracingRoot, serverConfig, middlewareManifest, hasInstrumentationHook, staticPages) {
      const outputPath = _path.default.join(distDir, "standalone");
      let moduleType = false;
      const nextConfig = {
        ...serverConfig,
        distDir: `./${_path.default.relative(dir, distDir)}`
      };
      try {
        const packageJsonPath = _path.default.join(distDir, "../package.json");
        const packageJson = JSON.parse(await _fs.promises.readFile(packageJsonPath, "utf8"));
        moduleType = packageJson.type === "module";
      } catch {
      }
      const copiedFiles = /* @__PURE__ */ new Set();
      await _fs.promises.rm(outputPath, {
        recursive: true,
        force: true
      });
      async function handleTraceFiles(traceFilePath) {
        const traceData = JSON.parse(await _fs.promises.readFile(traceFilePath, "utf8"));
        const copySema = new _asyncsema.Sema(10, {
          capacity: traceData.files.length
        });
        const traceFileDir = _path.default.dirname(traceFilePath);
        await Promise.all(traceData.files.map(async (relativeFile) => {
          await copySema.acquire();
          const tracedFilePath = _path.default.join(traceFileDir, relativeFile);
          const fileOutputPath = _path.default.join(outputPath, _path.default.relative(tracingRoot, tracedFilePath));
          if (!copiedFiles.has(fileOutputPath)) {
            copiedFiles.add(fileOutputPath);
            await _fs.promises.mkdir(_path.default.dirname(fileOutputPath), {
              recursive: true
            });
            const symlink = await _fs.promises.readlink(tracedFilePath).catch(() => null);
            if (symlink) {
              try {
                await _fs.promises.symlink(symlink, fileOutputPath);
              } catch (e) {
                if (e.code !== "EEXIST") {
                  throw e;
                }
              }
            } else {
              await _fs.promises.copyFile(tracedFilePath, fileOutputPath);
            }
          }
          await copySema.release();
        }));
      }
      async function handleEdgeFunction(page) {
        var _page_wasm, _page_assets;
        async function handleFile(file) {
          const originalPath = _path.default.join(distDir, file);
          const fileOutputPath = _path.default.join(outputPath, _path.default.relative(tracingRoot, distDir), file);
          await _fs.promises.mkdir(_path.default.dirname(fileOutputPath), {
            recursive: true
          });
          await _fs.promises.copyFile(originalPath, fileOutputPath);
        }
        await Promise.all([
          page.files.map(handleFile),
          (_page_wasm = page.wasm) == null ? void 0 : _page_wasm.map((file) => handleFile(file.filePath)),
          (_page_assets = page.assets) == null ? void 0 : _page_assets.map((file) => handleFile(file.filePath))
        ]);
      }
      const edgeFunctionHandlers = [];
      for (const middleware of Object.values(middlewareManifest.middleware)) {
        if (isMiddlewareFilename(middleware.name)) {
          edgeFunctionHandlers.push(handleEdgeFunction(middleware));
        }
      }
      for (const page of Object.values(middlewareManifest.functions)) {
        edgeFunctionHandlers.push(handleEdgeFunction(page));
      }
      await Promise.all(edgeFunctionHandlers);
      for (const page of pageKeys) {
        if (middlewareManifest.functions.hasOwnProperty(page)) {
          continue;
        }
        const route = (0, _normalizepagepath.normalizePagePath)(page);
        if (staticPages.has(route)) {
          continue;
        }
        const pageFile = _path.default.join(distDir, "server", "pages", `${(0, _normalizepagepath.normalizePagePath)(page)}.js`);
        const pageTraceFile = `${pageFile}.nft.json`;
        await handleTraceFiles(pageTraceFile).catch((err) => {
          if (err.code !== "ENOENT" || page !== "/404" && page !== "/500") {
            _log.warn(`Failed to copy traced files for ${pageFile}`, err);
          }
        });
      }
      if (appPageKeys) {
        for (const page of appPageKeys) {
          if (middlewareManifest.functions.hasOwnProperty(page)) {
            continue;
          }
          const pageFile = _path.default.join(distDir, "server", "app", `${page}.js`);
          const pageTraceFile = `${pageFile}.nft.json`;
          await handleTraceFiles(pageTraceFile).catch((err) => {
            _log.warn(`Failed to copy traced files for ${pageFile}`, err);
          });
        }
      }
      if (hasInstrumentationHook) {
        await handleTraceFiles(_path.default.join(distDir, "server", "instrumentation.js.nft.json"));
      }
      await handleTraceFiles(_path.default.join(distDir, "next-server.js.nft.json"));
      const serverOutputPath = _path.default.join(outputPath, _path.default.relative(tracingRoot, dir), "server.js");
      await _fs.promises.mkdir(_path.default.dirname(serverOutputPath), {
        recursive: true
      });
      await _fs.promises.writeFile(serverOutputPath, `${moduleType ? `performance.mark('next-start');
import path from 'path'
import { fileURLToPath } from 'url'
import module from 'module'
const require = module.createRequire(import.meta.url)
const __dirname = fileURLToPath(new URL('.', import.meta.url))
` : `const path = require('path')`}

const dir = path.join(__dirname)

process.env.NODE_ENV = 'production'
process.chdir(__dirname)

const currentPort = parseInt(process.env.PORT, 10) || 3000
const hostname = process.env.HOSTNAME || '0.0.0.0'

let keepAliveTimeout = parseInt(process.env.KEEP_ALIVE_TIMEOUT, 10)
const nextConfig = ${JSON.stringify(nextConfig)}

process.env.__NEXT_PRIVATE_STANDALONE_CONFIG = JSON.stringify(nextConfig)

require('next')
const { startServer } = require('next/dist/server/lib/start-server')

if (
  Number.isNaN(keepAliveTimeout) ||
  !Number.isFinite(keepAliveTimeout) ||
  keepAliveTimeout < 0
) {
  keepAliveTimeout = undefined
}

startServer({
  dir,
  isDev: false,
  config: nextConfig,
  hostname,
  port: currentPort,
  allowRetry: false,
  keepAliveTimeout,
}).catch((err) => {
  console.error(err);
  process.exit(1);
});`);
    }
    function isReservedPage(page) {
      return RESERVED_PAGE.test(page);
    }
    function isAppBuiltinNotFoundPage(page) {
      return /next[\\/]dist[\\/]client[\\/]components[\\/]not-found-error/.test(page);
    }
    function isCustomErrorPage(page) {
      return page === "/404" || page === "/500";
    }
    function isMiddlewareFile(file) {
      return file === `/${_constants.MIDDLEWARE_FILENAME}` || file === `/src/${_constants.MIDDLEWARE_FILENAME}`;
    }
    function isInstrumentationHookFile(file) {
      return file === `/${_constants.INSTRUMENTATION_HOOK_FILENAME}` || file === `/src/${_constants.INSTRUMENTATION_HOOK_FILENAME}`;
    }
    function getPossibleInstrumentationHookFilenames(folder, extensions) {
      const files = [];
      for (const extension of extensions) {
        files.push(_path.default.join(folder, `${_constants.INSTRUMENTATION_HOOK_FILENAME}.${extension}`), _path.default.join(folder, `src`, `${_constants.INSTRUMENTATION_HOOK_FILENAME}.${extension}`));
      }
      return files;
    }
    function getPossibleMiddlewareFilenames(folder, extensions) {
      return extensions.map((extension) => _path.default.join(folder, `${_constants.MIDDLEWARE_FILENAME}.${extension}`));
    }
    var NestedMiddlewareError = class extends Error {
      constructor(nestedFileNames, mainDir, pagesOrAppDir) {
        super(`Nested Middleware is not allowed, found:
${nestedFileNames.map((file) => `pages${file}`).join("\n")}
Please move your code to a single file at ${_path.default.join(_path.default.posix.sep, _path.default.relative(mainDir, _path.default.resolve(pagesOrAppDir, "..")), "middleware")} instead.
Read More - https://nextjs.org/docs/messages/nested-middleware`);
      }
    };
    function getSupportedBrowsers(dir, isDevelopment) {
      let browsers;
      try {
        const browsersListConfig = _browserslist.default.loadConfig({
          path: dir,
          env: isDevelopment ? "development" : "production"
        });
        if (browsersListConfig && browsersListConfig.length > 0) {
          browsers = (0, _browserslist.default)(browsersListConfig);
        }
      } catch {
      }
      if (browsers && browsers.length > 0) {
        return browsers;
      }
      return _constants1.MODERN_BROWSERSLIST_TARGET;
    }
    function isWebpackServerLayer(layer) {
      return Boolean(layer && _constants.WEBPACK_LAYERS.GROUP.server.includes(layer));
    }
    function isWebpackDefaultLayer(layer) {
      return layer === null || layer === void 0;
    }
    function isWebpackAppLayer(layer) {
      return Boolean(layer && _constants.WEBPACK_LAYERS.GROUP.app.includes(layer));
    }
  }
});
export default require_utils5();
/*! Bundled license information:

next/dist/compiled/react-is/cjs/react-is.development.js:
  (**
   * @license React
   * react-is.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)
*/
//# sourceMappingURL=next_dist_build_utils.js.map
